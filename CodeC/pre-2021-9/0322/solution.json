["t = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    (e, o) = (0, 0)\n    for i in l:\n        if i % 2 == 0:\n            e = e + 1\n        else:\n            o = o + 1\n    (ne, no) = (0, 0)\n    if n % 2 == 0:\n        ne = n // 2\n        no = n // 2\n    else:\n        ne = n // 2\n        no = n // 2 + 1\n    print(min(ne, o) + min(no, e))", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even_count = 0\n    odd_count = 0\n    even = 0\n    odd = 0\n    count = 1\n    for i in arr:\n        if i % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n        if count % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n        count += 1\n    e = min(odd_count, even)\n    o = min(even_count, odd)\n    print(o + e)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    even = n // 2\n    odd = n - even\n    print(min(odd, count) + min(even, n - count))", "t = int(input())\nfor uifdshg in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = [0] * n\n    odd = 0\n    even = 0\n    for i in arr:\n        if i % 2:\n            odd += 1\n        else:\n            even += 1\n    if n % 2 == 0:\n        oh = n // 2\n        eh = n // 2\n    else:\n        oh = n // 2 + 1\n        eh = n // 2\n    o = min(even, oh)\n    e = min(odd, eh)\n    print(o + e)", "i = int(input())\nlistk = []\nfor _ in range(i):\n    p = int(input())\n    st = input().split()\n    st2 = []\n    for ele in st:\n        st2.append(int(ele))\n    ev = len(st2) // 2\n    if len(st2) % 2 == 1:\n        ev = (len(st2) - 1) // 2\n    od = len(st2) - ev\n    dic1 = {}\n    dic1['eve'] = 0\n    dic1['odo'] = 0\n    for ele in st2:\n        if ele % 2 == 0:\n            dic1['eve'] = dic1['eve'] + 1\n        else:\n            dic1['odo'] = dic1['odo'] + 1\n    listk.append(min(od, dic1['eve']) + min(dic1['odo'], ev))\nfor ele in listk:\n    print(ele)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = 0\n    d = 0\n    for i in b:\n        if i % 2 == 0:\n            c += 1\n        else:\n            d += 1\n    if a % 2 == 0:\n        e = a // 2\n        f = a // 2\n    else:\n        e = a // 2 + 1\n        f = a // 2\n    k = min(c, e)\n    l = min(d, f)\n    print(k + l)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o_c = 0\n    e_c = 0\n    for i in a:\n        if i % 2 == 0:\n            e_c += 1\n        else:\n            o_c += 1\n    if n % 2 == 0:\n        odd = n // 2\n        even = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    res = min(e_c + even, o_c + odd)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (o, e) = (0, 0)\n    for i in a:\n        if i % 2:\n            o += 1\n        else:\n            e += 1\n    ne = n // 2\n    no = n - ne\n    print(min(no, e) + min(ne, o))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(sorted(map(int, input().split())))\n    e_pos = n // 2\n    if n % 2 == 0:\n        o_pos = n // 2\n    else:\n        o_pos = n // 2 + 1\n    o_nums = 0\n    e_nums = 0\n    for i in range(len(l)):\n        if l[i] % 2 != 0:\n            o_nums += 1\n        else:\n            e_nums += 1\n    print(min(o_pos, e_nums) + min(e_pos, o_nums))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for j in A:\n        if j % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    maxsum = 0\n    if N % 2 == 0:\n        maxsum += min(even, N // 2)\n        maxsum += min(odd, N // 2)\n    else:\n        maxsum += min(even, N // 2 + 1)\n        maxsum += min(odd, N // 2)\n    print(maxsum)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for j in A:\n        if j % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    maxsum = 0\n    if N % 2 == 0:\n        maxsum += min(even, N // 2)\n        maxsum += min(odd, N // 2)\n    else:\n        maxsum += min(even, N // 2 + 1)\n        maxsum += min(odd, N // 2)\n    print(maxsum)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    even = 0\n    odd = 0\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    odd_pos = 0\n    even_pos = 0\n    if n % 2 == 0:\n        odd_pos = n // 2\n        even_pos = n // 2\n    else:\n        even_pos = n // 2\n        odd_pos = n // 2 + 1\n    ans = min(even, odd_pos) + min(odd, even_pos)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    seq = list(map(int, input().split()))\n\n    def count(list1):\n        sum1 = 0\n        sum2 = 0\n        for i in list1:\n            if i % 2 == 0:\n                sum1 = sum1 + 1\n            else:\n                sum2 = sum2 + 1\n        return [sum1, sum2]\n    list1 = count(seq)\n    sum1 = list1[0]\n    sum2 = list1[1]\n    l = 0\n    if n % 2 == 0:\n        if sum1 <= n / 2:\n            l = n / 2 + sum1\n        elif sum1 >= n / 2:\n            l = n / 2 + sum2\n    elif sum1 < n // 2 + 1:\n        l = sum1 + n // 2\n    elif sum1 > n // 2 + 1:\n        l = n // 2 + 1 + sum2\n    else:\n        l = n\n    print(int(l))", "for i in range(int(input())):\n    n = int(input())\n    seq = list(map(int, input().split()))\n\n    def count(list1):\n        sum1 = 0\n        sum2 = 0\n        for i in list1:\n            if i % 2 == 0:\n                sum1 = sum1 + 1\n            else:\n                sum2 = sum2 + 1\n        return [sum1, sum2]\n    list1 = count(seq)\n    sum1 = list1[0]\n    sum2 = list1[1]\n    l = 0\n    if n % 2 == 0:\n        if sum1 <= n / 2:\n            l = n / 2 + sum1\n        elif sum1 >= n / 2:\n            l = n / 2 + sum2\n    elif sum1 < n // 2 + 1:\n        l = sum1 + n // 2\n    elif sum1 > n // 2 + 1:\n        l = n // 2 + 1 + sum2\n    else:\n        l = n\n    print(int(l))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    parity = [x % 2 for x in arr]\n    pos_parity = [x % 2 for x in range(1, N + 1)]\n    mismatch = 0\n    type1 = 0\n    type2 = 0\n    for (m, n) in zip(parity, pos_parity):\n        if m != n:\n            mismatch += 1\n        elif m == 0 and n == 0:\n            type1 += 1\n        elif m == 1 and n == 1:\n            type2 += 1\n    print(mismatch + 2 * min(type1, type2))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    parity = [x % 2 for x in arr]\n    pos_parity = [x % 2 for x in range(1, N + 1)]\n    mismatch = 0\n    type1 = 0\n    type2 = 0\n    for (m, n) in zip(parity, pos_parity):\n        if m != n:\n            mismatch += 1\n        elif m == 0 and n == 0:\n            type1 += 1\n        elif m == 1 and n == 1:\n            type2 += 1\n    print(mismatch + 2 * min(type1, type2))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    parity = [x % 2 for x in arr]\n    pos_parity = [x % 2 for x in range(1, N + 1)]\n    mismatch = 0\n    type1 = 0\n    type2 = 0\n    for (m, n) in zip(parity, pos_parity):\n        if m != n:\n            mismatch += 1\n        elif m == 0 and n == 0:\n            type1 += 1\n        elif m == 1 and n == 1:\n            type2 += 1\n    print(mismatch + 2 * min(type1, type2))", "for _ in range(int(input())):\n    p = int(input())\n    a = list(map(int, input().split()))\n    c_o = 0\n    c_e = 0\n    for i in a:\n        if i % 2 == 0:\n            c_e += 1\n        else:\n            c_o += 1\n    even = odd = 0\n    if p % 2 == 0:\n        even = p // 2\n        odd = p // 2\n    else:\n        even = p // 2\n        odd = p // 2 + 1\n    ans = min(c_o + odd, c_e + even)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if even >= odd:\n        temp = even - odd\n        ans = n - temp // 2\n    else:\n        temp = odd - even\n        ans = n - temp // 2 - temp % 2\n    print(ans)", "t = int(input())\nwhile t > 0:\n    x = int(input())\n    l = list(map(int, input().split()))\n    (odd, even, final) = ([], [], [])\n    for i in l:\n        if i % 2 == 0:\n            even.append(i)\n        elif i % 2 != 0:\n            odd.append(i)\n    k = 0\n    while len(final) < len(l):\n        if k < len(even):\n            final.append(even[k])\n        if k < len(odd):\n            final.append(odd[k])\n        k += 1\n    b = []\n    i_value = 1\n    for i in final:\n        b.append((i + i_value) % 2)\n        i_value += 1\n    print(sum(b))\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    even = n // 2\n    odd = n - even\n    print(min(odd, count) + min(even, n - count))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    even = n // 2\n    odd = n - even\n    print(min(odd, count) + min(even, n - count))", "T = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    even = n // 2\n    odd = n - even\n    print(min(odd, count) + min(even, n - count))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (l1, l2) = ([], [])\n    c = 0\n    for x in l:\n        if x % 2 == 0:\n            l1.append(x)\n        else:\n            l2.append(x)\n    epos = int(n / 2)\n    opos = math.ceil(n / 2)\n    if len(l2) >= epos:\n        c += epos\n    else:\n        c += len(l2)\n    if len(l1) >= opos:\n        c += opos\n    else:\n        c += len(l1)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e_c = 0\n    o_c = 0\n    k = 0\n    for i in range(1, n + 1):\n        if l[i - 1] % 2 == 0 and i % 2 == 0:\n            e_c += 1\n        elif l[i - 1] % 2 != 0 and i % 2 != 0:\n            o_c += 1\n        else:\n            k = k + 1\n    print(k + 2 * min(e_c, o_c))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    odd = even = 0\n    for i in range(n):\n        if lst[i] % 2:\n            odd += 1\n        else:\n            even += 1\n    res = [0 for _ in range(n)]\n    for i in range(n):\n        if not i % 2:\n            res[i] = 1 if even > 0 else 0\n            even -= 1\n        else:\n            res[i] = 1 if odd > 0 else 0\n            odd -= 1\n    print(sum(res))", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in A:\n        if i % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n    o = 0\n    e = 0\n    for i in range(N):\n        if i % 2 == 1:\n            o += 1\n        else:\n            e += 1\n    if odd < even:\n        o = odd\n    else:\n        e = even\n    print(o + e)", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in A:\n        if i % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n    o = 0\n    e = 0\n    for i in range(N):\n        if i % 2 == 1:\n            o += 1\n        else:\n            e += 1\n    if odd < even:\n        o = odd\n    else:\n        e = even\n    print(o + e)", "t = int(input(''))\nfor z in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))[:n]\n    e = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n    o = n - e\n    if n % 2 == 0:\n        print(min(o, e) + n // 2)\n    elif e > o:\n        print(min(o, e) + n // 2 + 1)\n    else:\n        print(min(o, e) + n // 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    ans = 0\n    if odd > even:\n        ans = 2 * even + (odd - even) // 2\n    else:\n        ans = 2 * odd + (even - odd + 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (e, o, count) = (0, 0, 0)\n    for i in l:\n        if i & 1 == 1:\n            e += 1\n        else:\n            o += 1\n    if n & 1 == 1:\n        count = min(n // 2 + 1, o)\n        count = count + min(n // 2, e)\n        print(count)\n    else:\n        count = min(n // 2, o)\n        count = count + min(n // 2, e)\n        print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    b = []\n    for j in a:\n        if j % 2 == 0:\n            e.append(j)\n        else:\n            o.append(j)\n    e.sort(reverse=True)\n    o.sort(reverse=True)\n    for j in range(1, n + 1):\n        if j % 2 != 0:\n            if len(e) != 0:\n                res = (e.pop() + j) % 2\n                b.append(res)\n        if j % 2 == 0:\n            if len(o) != 0:\n                res = (o.pop() + j) % 2\n                b.append(res)\n    print(sum(b))", "for _ in range(int(input())):\n    z = int(input())\n    h = list(map(int, input().split()))\n    flag = tmp = 0\n    for i in h:\n        if i % 2 == 1:\n            flag += 1\n        else:\n            tmp += 1\n    tt = min(flag, z // 2) + min(tmp, (z + 1) // 2)\n    print(tt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = []\n    arr2 = []\n    arr3 = []\n    arr4 = []\n    for i in arr:\n        if i % 2 == 0:\n            arr1.append(i)\n        else:\n            arr2.append(i)\n    while len(arr3) < n:\n        if len(arr1) > 0:\n            arr3.append(arr1[0])\n            arr1.pop(0)\n        if len(arr2) > 0:\n            arr3.append(arr2[0])\n            arr2.pop(0)\n    for j in range(n):\n        a = arr3[j] + j + 1\n        arr4.append(a % 2)\n    print(sum(arr4))", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    y = list(map(int, input().split()))\n    (le, lo) = (0, 0)\n    for i in y:\n        if i % 2 == 0:\n            le += 1\n        else:\n            lo += 1\n    ans = 0\n    if lo > le:\n        ans = 2 * le + (lo - le) // 2\n    else:\n        ans = 2 * lo + (le - lo + 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    y = list(map(int, input().split()))\n    (le, lo) = (0, 0)\n    for i in y:\n        if i % 2 == 0:\n            le += 1\n        else:\n            lo += 1\n    ans = 0\n    if lo > le:\n        ans = 2 * le + (lo - le) // 2\n    else:\n        ans = 2 * lo + (le - lo + 1) // 2\n    print(ans)", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    a = input().split()\n    arr = []\n    for x in a:\n        arr.append(int(x))\n    odd = int(n) // 2 + int(n) % 2\n    even = int(n) // 2\n    count = 0\n    for y in range(0, int(n)):\n        if arr[y] % 2 == 1 and even > 0:\n            count = count + 1\n            even = even - 1\n        elif arr[y] % 2 == 0 and odd > 0:\n            count = count + 1\n            odd = odd - 1\n    print(count)", "for x in range(int(input())):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    even = [d for d in a if d % 2 == 0]\n    odd = [d for d in a if d % 2 == 1]\n    (summ, x, rem) = (0, 0, 0)\n    el = len(even)\n    ol = len(odd)\n    if el < ol:\n        x = el\n        rem = 1\n    else:\n        x = ol\n        rem = 0\n    summ += 2 * x\n    (o, e) = (0, 0)\n    for i in range(2 * x + 1, n + 1):\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if rem == 1:\n        summ += e\n    else:\n        summ += o\n    print(summ)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in a:\n        if i % 2:\n            odd += 1\n        else:\n            even += 1\n    sum = 0\n    if even < (n + 1) // 2:\n        sum += even\n    else:\n        sum += (n + 1) // 2\n    if odd < n // 2:\n        sum += odd\n    else:\n        sum += n // 2\n    print(sum)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 != 0:\n        Ehave = int(N // 2) + 1\n    else:\n        Ehave = int(N // 2)\n    Ohave = N - Ehave\n    Ewant = 0\n    Owant = 0\n    for j in A:\n        if j % 2 == 0:\n            Ewant += 1\n        else:\n            Owant += 1\n    sm = min(Ohave, Owant) + min(Ehave, Ewant)\n    print(sm)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))[:n]\n    e = 0\n    o = 0\n    for j in range(n):\n        if a[j] % 2 == 1:\n            o += 1\n        else:\n            e += 1\n    if n % 2 == 1:\n        m = min(o + 1, e)\n        print(m + n // 2)\n    else:\n        m = min(o, e)\n        print(int(m + n / 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))[:n]\n    e = 0\n    o = 0\n    for j in range(n):\n        if a[j] % 2 == 1:\n            o += 1\n        else:\n            e += 1\n    if n % 2 == 1:\n        m = min(o + 1, e)\n        print(m + n // 2)\n    else:\n        m = min(o, e)\n        print(int(m + n / 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    res = min(e, (n + 1) // 2) + min(o, n // 2)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    res = min(e, (n + 1) // 2) + min(o, n // 2)\n    print(res)", "import math\nT = int(input())\nfor j in range(T):\n    N = int(input())\n    ar = list(map(int, input().split()))\n    count_odd = 0\n    count_even = 0\n    for n in ar:\n        if n % 2:\n            count_odd += 1\n        else:\n            count_even += 1\n    n_odd = math.ceil(N / 2)\n    n_even = math.floor(N / 2)\n    maximum_value = min(count_odd, n_even) + min(count_even, n_odd)\n    print(maximum_value)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (odds, evens, nodds, nevens) = (0, 0, 0, 0)\n    for i in range(n):\n        if a[i] % 2 == 0:\n            evens += 1\n        else:\n            odds += 1\n        if i % 2 == 0:\n            nevens += 1\n        else:\n            nodds += 1\n    c1 = min(evens, nevens)\n    c2 = min(odds, nodds)\n    print(c1 + c2)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    even_possibilities = length // 2\n    if length & 1:\n        odd_possibilities = even_possibilities + 1\n    else:\n        odd_possibilities = even_possibilities\n    odd = 0\n    even = 0\n    for j in arr:\n        if j & 1:\n            odd += 1\n        else:\n            even += 1\n    print(min(odd_possibilities, even) + min(even_possibilities, odd))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even_count = 0\n    odd_coount = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even_count += 1\n        else:\n            odd_coount += 1\n    if n % 2 == 1:\n        if even_count >= (n + 1) // 2:\n            print((n + 1) // 2 + odd_coount)\n        else:\n            print(n // 2 + even_count)\n    else:\n        print(n // 2 + min(even_count, odd_coount))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    even = 0\n    odd = 0\n    a = list(map(int, input().split()))\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    ans = min(even, (n + 1) // 2) + min(odd, n // 2)\n    print(ans)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    (odd, even) = (0, 0)\n    for i in range(n):\n        if a[i] % 2:\n            odd += 1\n        else:\n            even += 1\n    (max_odd, max_even) = (0, 0)\n    if n % 2:\n        max_odd = n // 2 + 1\n        max_even = n // 2\n    else:\n        (max_odd, max_even) = (n // 2, n // 2)\n    ans = min(max_odd, even) + min(max_even, odd)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lo = 0\n    for item in l:\n        if item & 1:\n            lo += 1\n    le = n - lo\n    ro = n - n // 2\n    re = n - ro\n    if lo + ro <= n:\n        print(lo + ro)\n    else:\n        print(n + n - lo - ro)", "from math import gcd, sqrt, ceil, floor, log10\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache\nimport sys\nimport time\nimport string\nsys.setrecursionlimit(3000000)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\n\ndef solve(*args, **kwargs):\n    (n, arr) = args\n    odd = even = odd_idx = even_idx = 0\n    for (idx, num) in enumerate(arr, 1):\n        odd += num & 1\n        even += num & 1 == 0\n        odd_idx += idx & 1\n        even_idx += idx & 1 == 0\n    return min(odd, even_idx) + min(even, odd_idx)\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(int)\n        arg2 = inp_vars(int, SPACE)\n        res = solve(*(arg1, arg2))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = temp = 0\n    for i in a:\n        if i % 2 == 1:\n            flag += 1\n        else:\n            temp += 1\n    b = min(flag, n // 2) + min(temp, (n + 1) // 2)\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    (e, o, en, on) = (0, 0, 0, 0)\n    if n % 2 == 0:\n        o = o + n // 2\n        e = e + n // 2\n    else:\n        o = o + n // 2 + 1\n        e = e + n // 2\n    for i in a:\n        if i % 2 == 0:\n            en += 1\n        else:\n            on += 1\n    print(min(e, on) + min(o, en))", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    even_possibilities = length // 2\n    if length & 1:\n        odd_possibilities = even_possibilities + 1\n    else:\n        odd_possibilities = even_possibilities\n    odd = 0\n    even = 0\n    for j in arr:\n        if j & 1:\n            odd += 1\n        else:\n            even += 1\n    print(min(odd_possibilities, even) + min(even_possibilities, odd))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd_places = 0\n    even_places = 0\n    if N % 2 == 0:\n        odd_places += N // 2\n        even_places += N // 2\n    else:\n        odd_places += N // 2 + 1\n        even_places += N // 2\n    odd_nos = 0\n    even_nos = 0\n    for j in range(N):\n        if A[j] % 2 == 0:\n            even_nos += 1\n        else:\n            odd_nos += 1\n    print(min(even_nos, odd_places) + min(odd_nos, even_places))", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    flag = temp = 0\n    for i in l:\n        if i % 2 == 1:\n            flag += 1\n        else:\n            temp += 1\n    b = min(flag, a // 2) + min(temp, (a + 1) // 2)\n    print(b)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    flag = temp = 0\n    for i in l:\n        if i % 2 == 1:\n            flag += 1\n        else:\n            temp += 1\n    b = min(flag, a // 2) + min(temp, (a + 1) // 2)\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = tmp = 0\n    for i in l:\n        if i % 2 == 1:\n            flag += 1\n        else:\n            tmp += 1\n    tt = min(flag, n // 2) + min(tmp, (n + 1) // 2)\n    print(tt)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    want_even = 0\n    want_odd = 0\n    have_even = 0\n    have_odd = 0\n    for j in range(1, n + 1):\n        if j % 2 == 0:\n            want_odd += 1\n        else:\n            want_even += 1\n        if l[j - 1] % 2 == 0:\n            have_even += 1\n        elif l[j - 1] % 2 != 0:\n            have_odd += 1\n    ans = min(want_even, have_even) + min(want_odd, have_odd)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = []\n    l1 = []\n    c1 = 0\n    c2 = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            c1 += 1\n        if i % 2 == 0:\n            c2 += 1\n    l.append(c1)\n    l.append(c2)\n    l1.append(n - c1)\n    l1.append(n - c2)\n    print(min(l) + min(l1))", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = []\n    ce = 0\n    c = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            ce += 1\n        if i % 2 == 0:\n            c += 1\n    b.append(ce)\n    b.append(n - ce)\n    b.append(c)\n    b.append(n - c)\n    print(min(b[0], b[2]) + min(b[1], b[3]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (o, e, s) = (n // 2, n // 2, 0)\n    if n % 2 == 1:\n        o = n // 2 + 1\n    for i in l:\n        if e > 0 and i % 2 == 1:\n            e -= 1\n            s += 1\n        elif o > 0 and i % 2 == 0:\n            o -= 1\n            s += 1\n        elif e == 0 and o == 0:\n            break\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even += 1\n    odd = n - even\n    if odd <= even:\n        print((n + 1) // 2 + odd)\n    else:\n        print(n // 2 + even)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (odd_ind, even_ind) = (0, 0)\n    (c_odd, c_even) = (0, 0)\n    for i in range(n):\n        if i % 2 == 0:\n            even_ind += 1\n        elif i % 2 != 0:\n            odd_ind += 1\n        if l[i] % 2 == 0:\n            c_even += 1\n        elif l[i] % 2 != 0:\n            c_odd += 1\n    ans = min(even_ind, c_even) + min(odd_ind, c_odd)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c_o = 0\n    c_e = 0\n    for i in a:\n        if i % 2 == 0:\n            c_e += 1\n        else:\n            c_o += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    ans = min(c_o + odd, c_e + even)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c_o = 0\n    c_e = 0\n    for i in a:\n        if i % 2 == 0:\n            c_e += 1\n        else:\n            c_o += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    ans = min(c_o + odd, c_e + even)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (even, odd, count) = (0, 0, 0)\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if n % 2 == 0:\n        no_of_even_places = n // 2\n        no_of_odd_places = n // 2\n    else:\n        no_of_even_places = n // 2\n        no_of_odd_places = n // 2 + 1\n    if no_of_odd_places <= even:\n        count += no_of_odd_places\n    else:\n        count += even\n    if no_of_even_places <= odd:\n        count += no_of_even_places\n    else:\n        count += odd\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c_o = 0\n    c_e = 0\n    for i in a:\n        if i % 2 == 0:\n            c_e += 1\n        else:\n            c_o += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    ans = min(c_o + odd, c_e + even)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt_even = cnt_odd = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            cnt_even += 1\n        else:\n            cnt_odd += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    total = min(even + cnt_even, odd + cnt_odd)\n    print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt_even = cnt_odd = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            cnt_even += 1\n        else:\n            cnt_odd += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    total = min(even + cnt_even, odd + cnt_odd)\n    print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt_even = cnt_odd = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            cnt_even += 1\n        else:\n            cnt_odd += 1\n    even = odd = 0\n    if n % 2 == 0:\n        even = n // 2\n        odd = n // 2\n    else:\n        even = n // 2\n        odd = n // 2 + 1\n    total = min(even + cnt_even, odd + cnt_odd)\n    print(total)", "t = int(input())\nwhile t:\n    n = int(input())\n    e1 = n // 2\n    o1 = n - n // 2\n    arr = [int(i) for i in input().split()]\n    e2 = 0\n    for val in arr:\n        if val % 2 == 0:\n            e2 += 1\n    o2 = n - e2\n    ans = min(e1 + e2, o1 + o2)\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    e1 = n // 2\n    o1 = n - n // 2\n    arr = [int(i) for i in input().split()]\n    e2 = 0\n    for val in arr:\n        if val % 2 == 0:\n            e2 += 1\n    o2 = n - e2\n    ans = min(e1 + e2, o1 + o2)\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    odd_places = int(n / 2)\n    even_places = int((n + 1) / 2)\n    even_numbers = 0\n    odd_numbers = 0\n    total = 0\n    for i in numbers:\n        if i % 2 == 0:\n            even_numbers += 1\n        else:\n            odd_numbers += 1\n    if odd_numbers <= odd_places:\n        total += odd_numbers\n    else:\n        total += odd_places\n    if even_numbers <= even_places:\n        total += even_numbers\n    else:\n        total += even_places\n    print(total)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd_places = 0\n    even_places = 0\n    if N % 2 == 0:\n        odd_places += N // 2\n        even_places += N // 2\n    else:\n        odd_places += N // 2 + 1\n        even_places += N // 2\n    odd_nos = 0\n    even_nos = 0\n    for j in range(N):\n        if A[j] % 2 == 0:\n            even_nos += 1\n        else:\n            odd_nos += 1\n    print(min(even_nos, odd_places) + min(odd_nos, even_places))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd_places = 0\n    even_places = 0\n    if N % 2 == 0:\n        odd_places += N // 2\n        even_places += N // 2\n    else:\n        odd_places += N // 2 + 1\n        even_places += N // 2\n    odd_nos = 0\n    even_nos = 0\n    for j in range(N):\n        if A[j] % 2 == 0:\n            even_nos += 1\n        else:\n            odd_nos += 1\n    print(min(even_nos, odd_places) + min(odd_nos, even_places))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    odd_places = 0\n    even_places = 0\n    if N % 2 == 0:\n        odd_places += N // 2\n        even_places += N // 2\n    else:\n        odd_places += N // 2 + 1\n        even_places += N // 2\n    odd_nos = 0\n    even_nos = 0\n    for j in range(N):\n        if A[j] % 2 == 0:\n            even_nos += 1\n        else:\n            odd_nos += 1\n    print(min(even_nos, odd_places) + min(odd_nos, even_places))", "t = int(input())\nfor __ in range(t):\n    n = int(input())\n    (even, odd) = (0, 0)\n    sum = 0\n    a = list(map(int, input().split()))\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    even_pos = n // 2\n    if n % 2 == 1:\n        odd_pos = n // 2 + 1\n    else:\n        odd_pos = n // 2\n    sum += min(even_pos, odd)\n    sum += min(odd_pos, even)\n    print(sum)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = 0\n    for i in range(N):\n        if A[i] % 2:\n            B += 1\n    C = N - B\n    if N % 2:\n        (D, E) = (N // 2, N // 2 + 1)\n        if B > D:\n            print(D + C)\n        elif C > E:\n            print(E + B)\n        else:\n            print(B + C)\n    else:\n        (D, E) = (N // 2, N // 2)\n        if B > D:\n            print(D + C)\n        elif C > E:\n            print(E + B)\n        else:\n            print(B + C)", "def swap(x, y):\n    (arr[x], arr[y]) = (arr[y], arr[x])\ntc = int(input())\nwhile tc != 0:\n    tc -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if arr[i] % 2 == 1 and i % 2 == 0:\n            for j in range(i + 1, n, 2):\n                if arr[j] % 2 == 0:\n                    swap(i, j)\n                    break\n        if arr[i] % 2 == 0 and i % 2 == 1:\n            for j in range(i + 1, n, 2):\n                if arr[j] % 2 == 1:\n                    swap(i, j)\n                    break\n    count = 0\n    for i in range(n):\n        count += (arr[i] + i + 1) % 2\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n % 2 != 0:\n        eh = n // 2 + 1\n    else:\n        eh = n // 2\n    oh = n - eh\n    ow = 0\n    ew = 0\n    for i in l:\n        if i % 2 == 0:\n            ew = ew + 1\n        else:\n            ow = ow + 1\n    print(min(ow, oh) + min(eh, ew))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (c1, c2) = (n + 1 >> 1, n >> 1)\n    (c11, c22) = (0, 0)\n    for i in l:\n        if i % 2 != 0:\n            c11 += 1\n        else:\n            c22 += 1\n    print(min(c1, c22) + min(c2, c11))", "t = int(input())\nfor __ in range(t):\n    n = int(input())\n    (even, odd) = (0, 0)\n    sum = 0\n    a = list(map(int, input().split()))\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    even_pos = n // 2\n    if n % 2 == 1:\n        odd_pos = n // 2 + 1\n    else:\n        odd_pos = n // 2\n    sum += min(even_pos, odd)\n    sum += min(odd_pos, even)\n    print(sum)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    A = list(map(int, input().split()))\n    if n % 2 != 0:\n        Ehave = int(n // 2) + 1\n    else:\n        Ehave = int(n // 2)\n    Ohave = n - Ehave\n    Ewant = 0\n    Owant = 0\n    for j in A:\n        if j % 2 == 0:\n            Ewant += 1\n        else:\n            Owant += 1\n    sm = min(Ohave, Owant) + min(Ehave, Ewant)\n    print(sm)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 != 0:\n        Ehave = int(N // 2) + 1\n    else:\n        Ehave = int(N // 2)\n    Ohave = N - Ehave\n    Ewant = 0\n    Owant = 0\n    for j in A:\n        if j % 2 == 0:\n            Ewant += 1\n        else:\n            Owant += 1\n    sm = min(Ohave, Owant) + min(Ehave, Ewant)\n    print(sm)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 != 0:\n        Ehave = int(N // 2) + 1\n    else:\n        Ehave = int(N // 2)\n    Ohave = N - Ehave\n    Ewant = 0\n    Owant = 0\n    for j in A:\n        if j % 2 == 0:\n            Ewant += 1\n        else:\n            Owant += 1\n    sm = min(Ohave, Owant) + min(Ehave, Ewant)\n    print(sm)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 != 0:\n        Ehave = int(N // 2) + 1\n    else:\n        Ehave = int(N // 2)\n    Ohave = N - Ehave\n    Ewant = 0\n    Owant = 0\n    for j in A:\n        if j % 2 == 0:\n            Ewant += 1\n        else:\n            Owant += 1\n    sm = min(Ohave, Owant) + min(Ehave, Ewant)\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    even = 0\n    odd = 0\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    even_index = n // 2\n    odd_index = n - even_index\n    print(min(even_index, odd) + min(odd_index, even))", "T = int(input())\nif T <= 10000 and T >= 1:\n    for k in range(T):\n        num_of_ints = int(input())\n        str_of_int = list(map(int, input().split()))[:num_of_ints]\n        (index, total, j, odd, even) = (-1, 0, 1, [], [])\n        for i in range(len(str_of_int)):\n            if str_of_int[i] % 2 == 1:\n                odd.append(str_of_int[i])\n            elif str_of_int[i] % 2 == 0:\n                even.append(str_of_int[i])\n        if num_of_ints % 2 == 0:\n            if len(even) <= num_of_ints / 2:\n                total = len(even)\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n            else:\n                total = num_of_ints / 2\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n        elif len(even) <= (num_of_ints + 1) / 2:\n            total = len(even)\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        else:\n            total = (num_of_ints + 1) / 2\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        print(int(total))", "T = int(input())\nif T <= 10000 and T >= 1:\n    for k in range(T):\n        num_of_ints = int(input())\n        str_of_int = list(map(int, input().split()))[:num_of_ints]\n        (index, total, j, odd, even) = (-1, 0, 1, [], [])\n        for i in range(len(str_of_int)):\n            if str_of_int[i] % 2 == 1:\n                odd.append(str_of_int[i])\n            elif str_of_int[i] % 2 == 0:\n                even.append(str_of_int[i])\n        if num_of_ints % 2 == 0:\n            if len(even) <= num_of_ints / 2:\n                total = len(even)\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n            else:\n                total = num_of_ints / 2\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n        elif len(even) <= (num_of_ints + 1) / 2:\n            total = len(even)\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        else:\n            total = (num_of_ints + 1) / 2\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        print(int(total))", "T = int(input())\nif T <= 10000 and T >= 1:\n    for k in range(T):\n        num_of_ints = int(input())\n        str_of_int = list(map(int, input().split()))[:num_of_ints]\n        (index, total, j, odd, even) = (-1, 0, 1, [], [])\n        for i in range(len(str_of_int)):\n            if str_of_int[i] % 2 == 1:\n                odd.append(str_of_int[i])\n            elif str_of_int[i] % 2 == 0:\n                even.append(str_of_int[i])\n        if num_of_ints % 2 == 0:\n            if len(even) <= num_of_ints / 2:\n                total = len(even)\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n            else:\n                total = num_of_ints / 2\n                if len(odd) <= num_of_ints / 2:\n                    total = total + len(odd)\n                else:\n                    total = total + num_of_ints / 2\n        elif len(even) <= (num_of_ints + 1) / 2:\n            total = len(even)\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        else:\n            total = (num_of_ints + 1) / 2\n            if len(odd) <= (num_of_ints - 1) / 2:\n                total = total + len(odd)\n            else:\n                total = total + (num_of_ints - 1) / 2\n        print(int(total))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(a) for a in input().split()]\n    e = 0\n    o = 0\n    for l in arr:\n        if l % 2 == 0:\n            e = e + 1\n        else:\n            o = o + 1\n    if n % 2 == 0:\n        print(min(e, n // 2) + min(o, n // 2))\n    else:\n        print(min(o, n // 2) + min(e, n // 2 + 1))", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    oi = 0\n    ei = 0\n    o = 0\n    e = 0\n    for i in range(0, len(arr)):\n        if arr[i] % 2:\n            o += 1\n        else:\n            e += 1\n        if i % 2:\n            ei += 1\n        else:\n            oi += 1\n    print(min(oi, e) + min(ei, o))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    even = n // 2\n    odd = n - even\n    e = 0\n    o = 0\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    print(min(even, o) + min(odd, e))", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    l = list(map(int, input().split()))\n    sum = 0\n    (e, o) = ([], [])\n    for i in range(k):\n        if l[i] % 2 == 0:\n            e.append(l[i])\n        else:\n            o.append(l[i])\n    sum += min(k // 2, len(o))\n    sum += min(k - k // 2, len(e))\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (o, e, c) = (0, 0, 0)\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    m = n // 2\n    c += min(m, o)\n    c += min(n - m, e)\n    print(c)", "for i in range(int(input())):\n    k = int(input())\n    l = list(map(int, input().split()))\n    sum1 = 0\n    (e, o) = ([], [])\n    for i in range(k):\n        if l[i] % 2 == 0:\n            e.append(l[i])\n        else:\n            o.append(l[i])\n    sum1 += min(k // 2, len(o))\n    sum1 += min(k - k // 2, len(e))\n    print(sum1)", "try:\n    for i in range(int(input())):\n        temp = int(input())\n        arr = list(map(int, input().split()))\n        (fin_arr, a, b, f) = ([], [], [], 0)\n        l = len(arr)\n        for x in arr:\n            if x % 2 == 0:\n                a.append(x)\n            else:\n                b.append(x)\n        q = l // 2\n        p = l - q\n        if len(b) > q:\n            f += q\n        else:\n            f += len(b)\n        if len(a) > p:\n            f += p\n        else:\n            f += len(a)\n        print(f)\nexcept:\n    pass"]