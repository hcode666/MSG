["for _ in range(int(input())):\n    (m, w) = input().split()\n    (m, w) = sorted([m, w], key=len)\n    flag = False\n    for i in range(len(m)):\n        if m[i] not in w:\n            flag = True\n            break\n        else:\n            w = w[w.index(m[i]) + 1:]\n    print('NO' if flag else 'YES')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def sub(m, w):\n    n1 = len(m)\n    n2 = len(w)\n    (i, j) = (0, 0)\n    while i < n1 and j < n2:\n        if m[i] == w[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        print('YES')\n    else:\n        print('NO')\nn = int(input())\nfor i in range(n):\n    list1 = input().split(' ')\n    if len(list1[0]) <= len(list1[1]):\n        sub(list1[0], list1[1])\n    else:\n        sub(list1[1], list1[0])", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (c, d) = map(str, input().split())\n    if len(c) < len(d):\n        a = c\n        b = d\n    else:\n        a = d\n        b = c\n    l = []\n    ll = []\n    s1 = s2 = 0\n    cc = k = j = 0\n    for i in a:\n        l.append(i)\n    for i in b:\n        ll.append(i)\n    while True:\n        if cc == len(l) or k == len(ll):\n            break\n        if l[j] == ll[k]:\n            cc += 1\n            k += 1\n            j += 1\n        elif l[j] != ll[k]:\n            k += 1\n    if cc == len(l):\n        print('YES')\n    else:\n        print('NO')", "def is_subsequence(s, t):\n    i = j = 0\n    while i < len(s) and j < len(t):\n        if s[i] == t[j]:\n            i += 1\n        j += 1\n    return i == len(s)\nt = int(input())\nfor _ in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "def sub(m, w):\n    n1 = len(m)\n    n2 = len(w)\n    (i, j) = (0, 0)\n    while i < n1 and j < n2:\n        if m[i] == w[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        print('YES')\n    else:\n        print('NO')\nn = int(input())\nfor i in range(n):\n    list1 = input().split(' ')\n    if len(list1[0]) < len(list1[1]):\n        sub(list1[0], list1[1])\n    else:\n        sub(list1[1], list1[0])", "def is_subsequence(a, b):\n    i = j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            i += 1\n        j += 1\n    return i == len(a)\nt = int(input())\nfor _ in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "def is_subsequence(a, b):\n    i = j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            i += 1\n        j += 1\n    return i == len(a)\nt = int(input())\nfor _ in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "b = int(input())\nfor i in range(b):\n    a = list(input())\n    c = []\n    d = []\n    o = []\n    k = a.index(' ')\n    if k >= len(a) // 2:\n        c = a[0:k]\n        d = a[k + 1:]\n    else:\n        d = a[0:k]\n        c = a[k + 1:]\n    f = 'YES'\n    i = 0\n    k = 0\n    t = []\n    j = 0\n    for i in c:\n        if j <= len(d) - 1:\n            if i == d[j]:\n                j = j + 1\n        else:\n            break\n    if j == len(d):\n        print('YES')\n    else:\n        print('NO')", "testcases = int(input())\nwhile testcases:\n    [M, W] = list(map(str, input().split()))\n    len_M = len(M)\n    len_W = len(W)\n    i = 0\n    for char_W in W:\n        if i >= len_M - 1:\n            break\n        if M[i] == char_W:\n            i += 1\n    if i + 1 == len_M:\n        print('YES')\n        testcases -= 1\n        continue\n    i = 0\n    for char_M in M:\n        if i >= len_W - 1:\n            break\n        if W[i] == char_M:\n            i += 1\n    if i + 1 == len_W:\n        print('YES')\n        testcases -= 1\n        continue\n    print('NO')\n    testcases -= 1", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def ijoin(array, char=' '):\n    return char.join([str(x) for x in array])\n\ndef solve(m, n):\n    x = 0\n    y = 0\n    while True:\n        if y == len(n):\n            return True\n        elif x == len(m):\n            return False\n        elif m[x] == n[y]:\n            x += 1\n            y += 1\n        else:\n            x += 1\nfor t in range(int(input())):\n    (m, n) = input().split()\n    if len(n) > len(m):\n        (m, n) = (n, m)\n    if solve(m, n):\n        print('YES')\n    else:\n        print('NO')", "def is_subsequence(s, t):\n    i = j = 0\n    while i < len(s) and j < len(t):\n        if s[i] == t[j]:\n            i += 1\n        j += 1\n    return i == len(s)\nt = int(input())\nfor _ in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subsequence(a, b):\n    i = 0\n    j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == len(a):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (m, w) = map(str, input().strip().split())\n    if subsequence(m, w) or subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    l = input().split()\n    l.sort(key=len)\n    m = l[0]\n    n = l[1]\n    k = len(n)\n    kk = len(m)\n    j = 0\n    i = 0\n    while j < kk and i < k:\n        if m[j] == n[i]:\n            j = j + 1\n            i = i + 1\n        else:\n            i = i + 1\n    if j == kk:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    (a, b) = input().strip().split()\n    if a == b:\n        print('YES')\n    elif len(a) == len(b):\n        print('NO')\n    else:\n        if len(a) < len(b):\n            x = a\n            y = b\n        else:\n            x = b\n            y = a\n        j = 0\n        for ltr in y:\n            if x[j] == ltr:\n                j += 1\n            if j == len(x):\n                print('YES')\n                break\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (s1, s2) = list(map(str, input().split()))\n    if len(s1) > len(s2):\n        (l, s) = (s1, s2)\n    else:\n        (l, s) = (s2, s1)\n    result = 'YES'\n    n = 0\n    while n < len(s):\n        char = s[n]\n        if char in l:\n            index = l.index(char)\n            l = l[index + 1:]\n        else:\n            result = 'NO'\n            break\n        n += 1\n    print(result)", "t = int(input())\nres = []\nfor i in range(t):\n    texts = input().split(' ')\n    longTx = []\n    shortTx = []\n    if len(texts[0]) >= len(texts[1]):\n        longTx = list(texts[0])\n        shortTx = list(texts[1])\n    else:\n        shortTx = list(texts[0])\n        longTx = list(texts[1])\n    for k in range(0, len(longTx)):\n        if len(shortTx) < 1:\n            break\n        if longTx[k] == shortTx[0] and len(shortTx) > 0:\n            del shortTx[0]\n    if len(shortTx) > 0:\n        res.append('NO')\n    else:\n        res.append('YES')\nprint('\\n'.join(res))", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def match(a, b):\n    t = 0\n    for i in range(len(b)):\n        if b[i] == a[t]:\n            t += 1\n        if t == len(a):\n            return 1\n    return 0\nfor i in range(int(input())):\n    (a, b) = input().split()\n    print(['NO', 'YES'][match(a, b) or match(b, a)])", "def match(a, b):\n    t = 0\n    for i in range(len(b)):\n        if b[i] == a[t]:\n            t += 1\n        if t == len(a):\n            return 1\n    return 0\nfor i in range(int(input())):\n    (a, b) = input().split()\n    print(['NO', 'YES'][match(a, b) or match(b, a)])", "def helper(A, B):\n    len1 = len(A)\n    len2 = len(B)\n    (i, j) = (0, 0)\n    while i < len1 and j < len2:\n        if A[i] == B[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == len1:\n        return 'YES'\n    else:\n        return 'NO'\nT = int(input())\nwhile T > 0:\n    T -= 1\n    (M, W) = input().split()\n    if len(W) > len(M):\n        print(helper(M, W))\n    else:\n        print(helper(W, M))", "def torf(a, b):\n    t = 0\n    for i in range(len(b)):\n        if b[i] == a[t]:\n            t += 1\n        if t == len(a):\n            return 1\n    return 0\nfor i in range(int(input())):\n    (a, b) = input().split()\n    print(['NO', 'YES'][torf(a, b) or torf(b, a)])", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def is_subsequence(subseq, seq):\n    (i, j) = (0, 0)\n    while i < len(subseq) and j < len(seq):\n        if subseq[i] == seq[j]:\n            i += 1\n        j += 1\n    return i == len(subseq)\nfor _ in range(int(input())):\n    (m, w) = map(str, input().split(' '))\n    a = list(m)\n    b = list(w)\n    if len(a) > len(b):\n        print('YES' if is_subsequence(b, a) else 'NO')\n    else:\n        print('YES' if is_subsequence(a, b) else 'NO')", "def match(a, b):\n    p1 = p2 = 0\n    while p1 < len(a) and p2 < len(b):\n        if a[p1] == b[p2]:\n            p1 += 1\n            p2 += 1\n        else:\n            p2 += 1\n    if p1 == len(a):\n        return True\n    return False\nfor _ in range(int(input())):\n    (M, W) = input().split()\n    flag = match(M, W)\n    if not flag:\n        flag = match(W, M)\n    print('YES' if flag else 'NO')", "def match(a, b):\n    p1 = p2 = 0\n    while p1 < len(a) and p2 < len(b):\n        if a[p1] == b[p2]:\n            p1 += 1\n            p2 += 1\n        else:\n            p2 += 1\n    if p1 == len(a):\n        return True\n    return False\nfor _ in range(int(input())):\n    (M, W) = input().split()\n    flag = match(M, W)\n    if not flag:\n        flag = match(W, M)\n    print('YES' if flag else 'NO')", "def sub(a, b):\n    n = len(a)\n    h = len(b)\n    i = 0\n    j = 0\n    while i < n and j < h:\n        if a[i] == b[j]:\n            i = i + 1\n            j = j + 1\n        else:\n            j = j + 1\n    if i == n:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(0, int(input())):\n    (m, w) = map(str, input().split())\n    if len(m) > len(w):\n        print(sub(w, m))\n    else:\n        print(sub(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "for tc in range(int(input())):\n    arr = input().split()\n    arr = sorted(arr, key=len)\n    count = 0\n    itr = 0\n    if len(arr[0]) != len(arr[1]):\n        M = arr[0]\n        W = arr[1]\n    elif arr[0] == arr[1]:\n        print('YES')\n        continue\n    else:\n        print('NO')\n        continue\n    while itr < len(W):\n        if M[count] == W[itr]:\n            count += 1\n        itr += 1\n        if count == len(M):\n            print('YES')\n            break\n    if count != len(M):\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def sub(a, b):\n    n = len(a)\n    h = len(b)\n    i = 0\n    j = 0\n    while i < n and j < h:\n        if a[i] == b[j]:\n            i = i + 1\n            j = j + 1\n        else:\n            j = j + 1\n    if i == n:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(0, int(input())):\n    (m, w) = map(str, input().split())\n    if len(m) > len(w):\n        print(sub(w, m))\n    else:\n        print(sub(m, w))", "def solve(a, b):\n    i = 0\n    j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == len(a):\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(solve(w, m))\n    else:\n        print(solve(m, w))", "def subsequence(m, w):\n    l1 = len(m)\n    l2 = len(w)\n    i = 0\n    j = 0\n    while i < l1 and j < l2:\n        if m[i] == w[j]:\n            i = i + 1\n            j = j + 1\n        else:\n            j = j + 1\n    if i == l1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    (m, w) = list(map(str, input().split()))\n    l1 = len(m)\n    l2 = len(w)\n    if l1 > l2:\n        subsequence(w, m)\n    else:\n        subsequence(m, w)", "def ans(M, N):\n    t = 0\n    if len(M) < len(N):\n        for i in range(len(N)):\n            if N[i] == M[t]:\n                t += 1\n            if t == len(M) - 1:\n                return 'YES'\n        if t == len(M) - 1:\n            return 'YES'\n        else:\n            return 'NO'\n    else:\n        for i in range(len(M)):\n            if M[i] == N[t]:\n                t += 1\n            if t == len(N) - 1:\n                return 'YES'\n        if t == len(N) - 1:\n            return 'YES'\n        else:\n            return 'NO'\nT = int(input())\nfor i in range(T):\n    (a, b) = input().split(' ')\n    M = list(a)\n    N = list(b)\n    print(ans(M, N))", "def ans(M, N):\n    t = 0\n    if len(M) < len(N):\n        for i in range(len(N)):\n            if N[i] == M[t]:\n                t += 1\n            if t == len(M) - 1:\n                return 'YES'\n            if len(M) - t > len(N) - i - 1:\n                return 'NO'\n        if t == len(M) - 1:\n            return 'YES'\n        else:\n            return 'NO'\n    else:\n        for i in range(len(M)):\n            if M[i] == N[t]:\n                t += 1\n            if t == len(N) - 1:\n                return 'YES'\n            if len(N) - t > len(M) - i - 1:\n                return 'NO'\n        if t == len(N) - 1:\n            return 'YES'\n        else:\n            return 'NO'\nT = int(input())\nfor i in range(T):\n    (a, b) = input().split(' ')\n    M = list(a)\n    N = list(b)\n    print(ans(M, N))", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(str, input().split())\n    alen = len(a)\n    blen = len(b)\n    if alen > blen:\n        (a, b) = (b, a)\n        (alen, blen) = (blen, alen)\n    i = j = 0\n    while i < alen and j < blen:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == alen:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (s1, s2) = map(str, input().split())\n    i = 0\n    j = 0\n    if len(s1) > len(s2):\n        (s1, s2) = (s2, s1)\n    while i < len(s1) and j < len(s2):\n        if s1[i] == s2[j]:\n            i = i + 1\n            j = j + 1\n        else:\n            j = j + 1\n    if i == len(s1):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = input().split()\n    a = len(m)\n    b = len(w)\n    if b > a:\n        (a, b) = (b, a)\n        (m, w) = (w, m)\n    (i, j) = (0, 0)\n    res = ''\n    while i < a and j < b:\n        if m[i] == w[j]:\n            res += m[i]\n            i += 1\n            j += 1\n        else:\n            i += 1\n    if res == m or res == w:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    if len(a) > len(b):\n        (a, b) = (b, a)\n    ans = 'YES'\n    for i in a:\n        try:\n            c = b.index(i)\n            b = b[c + 1:]\n        except:\n            ans = 'NO'\n    print(ans)", "t = int(input())\nfor abc in range(t):\n    (m, w) = map(str, input().split())\n    if len(w) >= len(m):\n        minstr = m\n        maxstr = w\n    else:\n        minstr = w\n        maxstr = m\n    c = 0\n    d = 0\n    ans = 'YES'\n    while c < len(minstr) and d < len(maxstr):\n        if minstr[c] == maxstr[d]:\n            c += 1\n            d += 1\n        else:\n            d += 1\n    if c == len(minstr):\n        print('YES')\n    else:\n        print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (x, y) = map(str, input().split())\n    if len(x) > len(y):\n        print(subseq(y, x))\n    else:\n        print(subseq(x, y))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (x, y) = map(str, input().split())\n    if len(x) > len(y):\n        print(subseq(y, x))\n    else:\n        print(subseq(x, y))", "for _ in range(int(input())):\n    (m, w) = map(str, input().split())\n    if len(m) <= len(w):\n        (a, b) = (m, w)\n    else:\n        (a, b) = (w, m)\n    i = j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            j += 1\n            i += 1\n        else:\n            j += 1\n    if i == len(a):\n        print('YES')\n    else:\n        print('NO')", "def is_subseq(sub, seq):\n    i = 0\n    for char in seq:\n        if char == sub[i]:\n            i += 1\n            if i == len(sub):\n                return True\n    return False\nt = int(input())\nfor _ in range(0, t):\n    (m, w) = input().split()\n    ans = is_subseq(m, w) if len(m) < len(w) else is_subseq(w, m)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (x, y) = input().split(' ')\n    n = len(x)\n    m = len(y)\n    if n < m:\n        (n, m) = (m, n)\n        (x, y) = (y, x)\n    i = 0\n    j = 0\n    ans = ''\n    while i < n and j < m:\n        if x[i] == y[j]:\n            ans += x[i]\n            i += 1\n            j += 1\n        else:\n            i += 1\n    if ans == x or ans == y:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (x, y) = input().split(' ')\n    n = len(x)\n    m = len(y)\n    if n < m:\n        (n, m) = (m, n)\n        (x, y) = (y, x)\n    i = 0\n    j = 0\n    ans = ''\n    while i < n and j < m:\n        if x[i] == y[j]:\n            ans += x[i]\n            i += 1\n            j += 1\n        else:\n            i += 1\n    if ans == x or ans == y:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (cow, cew) = input().split()\n    len_cow = len(cow)\n    len_cew = len(cew)\n    if len_cow > len_cew:\n        tanda = 0\n        poin = 0\n        for i in range(len_cew):\n            skrg = cew[i]\n            for j in range(tanda, len_cow):\n                if cow[j] == skrg:\n                    tanda = j + 1\n                    poin += 1\n                    break\n        if poin == len_cew:\n            print('YES')\n        else:\n            print('NO')\n    elif len_cow <= len_cew:\n        tanda = 0\n        poin = 0\n        for i in range(len_cow):\n            skrg = cow[i]\n            for j in range(tanda, len_cew):\n                if cew[j] == skrg:\n                    tanda = j + 1\n                    poin += 1\n                    break\n        if poin == len_cow:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    l = input().split()\n    (a, b) = (l[0], l[1])\n    if len(a) > len(b):\n        (a, b) = (b, a)\n    (la, lb, j) = (len(a), len(b), 0)\n    res = 'NO'\n    for i in range(lb):\n        if a[j] == b[i]:\n            j += 1\n            if j == la:\n                res = 'YES'\n                break\n        if lb - i < la - j:\n            break\n    print(res)", "for t in range(int(input())):\n    (a, b) = map(str, input().split())\n    first = second = 0\n    while first < len(a) and second < len(b):\n        if a[first] == b[second]:\n            first += 1\n            second += 1\n        else:\n            second += 1\n    if first == len(a):\n        print('YES')\n        continue\n    first = second = 0\n    while first < len(a) and second < len(b):\n        if a[first] == b[second]:\n            first += 1\n            second += 1\n        else:\n            first += 1\n    if second == len(b):\n        print('YES')\n        continue\n    print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def is_subsequence(m, w):\n    i = j = 0\n    while i < len(m) and j < len(w):\n        if m[i] == w[j]:\n            j += 1\n        i += 1\n    return j == len(w)\nt = int(input().strip())\nfor _ in range(t):\n    (m, w) = input().strip().split()\n    print('YES' if is_subsequence(m, w) or is_subsequence(w, m) else 'NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (x, y) = map(str, input().split())\n    if len(x) > len(y):\n        print(subseq(y, x))\n    else:\n        print(subseq(x, y))", "def can_marry(a, b):\n    j = 0\n    i = 0\n    while j < len(b) and i < len(a):\n        if a[i] == b[j]:\n            i = i + 1\n        j = j + 1\n    if i == len(a):\n        return 1\n    else:\n        return 0\nt = int(input())\nfor ni in range(t):\n    (a, b) = input().split()\n    if can_marry(a, b) or can_marry(b, a):\n        print('YES')\n    else:\n        print('NO')", "def is_allowed_to_marry(m, w):\n    i = 0\n    j = 0\n    while i < len(m) and j < len(w):\n        if m[i] == w[j]:\n            i += 1\n        j += 1\n    return i == len(m)\nT = int(input())\nfor _ in range(T):\n    (m, w) = input().split()\n    if is_allowed_to_marry(m, w) or is_allowed_to_marry(w, m):\n        print('YES')\n    else:\n        print('NO')", "def is_subsequence(m, w):\n    (i, j) = (0, 0)\n    while i < len(m) and j < len(w):\n        if m[i] == w[j]:\n            i += 1\n        j += 1\n    return i == len(m)\nT = int(input())\nfor i in range(T):\n    (M, W) = input().split()\n    if is_subsequence(M, W) or is_subsequence(W, M):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = sorted(input().split(), key=len)\n    if a in b:\n        print('YES')\n        continue\n    i = 0\n    for k in b:\n        if k == a[i]:\n            i += 1\n        if i == len(a):\n            print('YES')\n            break\n    else:\n        print('NO')", "def f(s1, s2):\n    j = 0\n    for i in s2:\n        if i == s1[j]:\n            j += 1\n        if j == s1.__len__():\n            return True\n    return False\nfrom sys import stdin, stdout\nt = stdin.readline()\nfor _ in range(int(t)):\n    (m, w) = stdin.readline().split()\n    out = 'YES' if f(m, w) or f(w, m) else 'NO'\n    stdout.write(f'{out}\\n')", "def f(s1, s2):\n    j = 0\n    for i in s2:\n        if i == s1[j]:\n            j += 1\n        if j == s1.__len__():\n            return True\n    return False\nfrom sys import stdin, stdout\nt = int(stdin.readline())\nfor j in range(t):\n    (m, w) = stdin.readline().strip().split()\n    out = 'YES' if f(m, w) or f(w, m) else 'NO'\n    stdout.write(f'{out}\\n')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "for _ in range(int(input())):\n    (m, w) = input().split()\n    k = 0\n    count = 0\n    for j in range(len(m)):\n        s = m[j]\n        while True:\n            if k == len(w):\n                break\n            if w[k] == s:\n                count += 1\n                k += 1\n                break\n            k += 1\n    if count == len(m):\n        print('YES')\n    else:\n        k = 0\n        count = 0\n        for j in range(len(w)):\n            s = w[j]\n            while True:\n                if k == len(m):\n                    break\n                if m[k] == s:\n                    count += 1\n                    k += 1\n                    break\n                k += 1\n        if count == len(w):\n            print('YES')\n        else:\n            print('NO')", "def sub_seq(a, b, la, lb):\n    i = 0\n    j = 0\n    count = 0\n    while i < la and j < lb:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n            count += 1\n        else:\n            i += 1\n    if count == lb:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor x in range(0, t):\n    (m, w) = map(str, input().split(' '))\n    lm = len(m)\n    lw = len(w)\n    if lm > lw:\n        sub_seq(m, w, lm, lw)\n    else:\n        sub_seq(w, m, lw, lm)", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def is_subsequence(a, b):\n    i = 0\n    j = 0\n    while i < len(a) and j < len(b):\n        if a[i] == b[j]:\n            i += 1\n        j += 1\n    return i == len(a)\nt = int(input())\nfor _ in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def is_subsequence(a, b):\n    i = 0\n    for ch in b:\n        if i == len(a):\n            return True\n        if ch == a[i]:\n            i += 1\n    return i == len(a)\nt = int(input())\nfor i in range(t):\n    (m, w) = input().split()\n    if is_subsequence(m, w) or is_subsequence(w, m):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, w) = list(map(str, input().split()))\n    if len(m) >= len(w):\n        (x, y) = (m, w)\n    else:\n        (x, y) = (w, m)\n    if y[0] in x:\n        x = x[1:len(x)]\n        for j in range(1, len(y)):\n            if y[j] not in x:\n                print('NO')\n                break\n            x = x[x.index(y[j]) + 1:len(x)]\n        else:\n            print('YES')\n    else:\n        print('NO')", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))", "for _ in range(int(input())):\n    (x, y) = input().split()\n    if len(x) > len(y):\n        (x, y) = (y, x)\n    i = 0\n    for j in y:\n        if j == x[i]:\n            i += 1\n        if i == len(x):\n            break\n    if i == len(x):\n        print('YES')\n    else:\n        print('NO')", "def get_marraige_possible(m, w):\n    l1 = len(m)\n    l2 = len(w)\n    i = 0\n    j = 0\n    while i < l1 and j < l2:\n        if m[i] == w[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == l1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    (m, w) = map(str, input().split())\n    if len(m) > len(w):\n        get_marraige_possible(w, m)\n    else:\n        get_marraige_possible(m, w)", "def subseq(a, b):\n    n1 = len(a)\n    n2 = len(b)\n    i = 0\n    j = 0\n    while i < n1 and j < n2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            j += 1\n    if i == n1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (w, m) = map(str, input().split())\n    if len(m) > len(w):\n        print(subseq(w, m))\n    else:\n        print(subseq(m, w))"]