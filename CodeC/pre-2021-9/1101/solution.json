["for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    b.sort()\n    xcor = []\n    xcor.append(a[1] - a[0])\n    xcor.append(a[n - 1] - a[n - 2])\n    for i in range(1, n - 1):\n        xcor.append(a[i + 1] - a[i - 1])\n    xcor.sort()\n    ans = 0\n    for i in range(n):\n        ans = ans + xcor[i] * b[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    b.sort()\n    xcor = []\n    xcor.append(a[1] - a[0])\n    xcor.append(a[n - 1] - a[n - 2])\n    for i in range(1, n - 1):\n        xcor.append(a[i + 1] - a[i - 1])\n    xcor.sort()\n    ans = 0\n    for i in range(n):\n        ans = ans + xcor[i] * b[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    b = []\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    b.sort()\n    s = []\n    s.append(a[1] - a[0])\n    s.append(a[n - 1] - a[n - 2])\n    for k in range(1, n - 1):\n        s.append(a[k + 1] - a[k - 1])\n    s.sort()\n    ans = 0\n    for z in range(n):\n        ans += s[z] * b[z]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    b.sort()\n    xcor = []\n    xcor.append(a[1] - a[0])\n    xcor.append(a[n - 1] - a[n - 2])\n    for i in range(1, n - 1):\n        xcor.append(a[i + 1] - a[i - 1])\n    xcor.sort()\n    ans = 0\n    for i in range(n):\n        ans = ans + xcor[i] * b[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    b.sort()\n    xcor = []\n    xcor.append(a[1] - a[0])\n    xcor.append(a[n - 1] - a[n - 2])\n    for i in range(1, n - 1):\n        xcor.append(a[i + 1] - a[i - 1])\n    xcor.sort()\n    ans = 0\n    for i in range(n):\n        ans = ans + xcor[i] * b[i]\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    x = []\n    h = []\n    for i in range(n):\n        (xi, hi) = [int(i) for i in input().split()]\n        x.append(xi)\n        h.append(hi)\n    diff = [x[1] - x[0], x[n - 1] - x[n - 2]]\n    for i in range(1, n - 1):\n        diff.append(x[i + 1] - x[i - 1])\n    diff.sort()\n    h.sort()\n    ans = 0\n    for i in range(n):\n        ans += h[i] * diff[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    xloli = []\n    hloli = []\n    d1 = []\n    d2 = []\n    for i in range(n):\n        (x, h) = (int(x) for x in input().split())\n        xloli.append(x)\n        hloli.append(h)\n    for i in range(1, n):\n        d1.append(xloli[i] - xloli[i - 1])\n    d2.append(d1[0])\n    for i in range(n - 2):\n        d2.append(d1[i + 1] + d1[i])\n    d2.append(d1[-1])\n    kaori = 0\n    hloli.sort()\n    d2.sort()\n    for i in range(n):\n        kaori += hloli[i] * d2[i]\n    print(kaori)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    xl = []\n    hl = []\n    for j in range(n):\n        (x, h) = list(map(int, input().strip().split()))\n        xl.append(x)\n        hl.append(h)\n    a = [0 for j in range(n)]\n    a[0] = xl[1] - xl[0]\n    for j in range(1, n - 1):\n        a[j] = xl[j + 1] - xl[j - 1]\n    a[n - 1] = xl[n - 1] - xl[n - 2]\n    a.sort()\n    hl.sort()\n    sum = 0\n    for j in range(n):\n        sum += a[j] * hl[j]\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "def find(X, H):\n    if len(X) == 2:\n        return (X[1] - X[0]) * sum(H)\n    X = sorted(X)\n    W = []\n    for i in range(1, len(H) - 1):\n        W += [X[i + 1] - X[i - 1]]\n    W += [X[1] - X[0]]\n    W += [X[-1] - X[-2]]\n    W = sorted(W)\n    H = sorted(H)\n    return sum([W[i] * H[i] for i in range(len(W))])\nfor _ in range(int(input())):\n    N = int(input())\n    X = []\n    H = []\n    for i in range(N):\n        (x, h) = list(map(int, input().strip().split()))\n        X += [x]\n        H += [h]\n    print(find(X, H))", "for _ in range(int(input())):\n    n = int(input())\n    X = [0 for i in range(n)]\n    H = [0 for i in range(n)]\n    for i in range(n):\n        (x, h) = map(int, input().split())\n        X[i] = x\n        H[i] = h\n    X1 = [0 for i in range(n)]\n    for i in range(n - 2):\n        X1[i] = X[i + 2] - X[i]\n    (X1[n - 2], X1[n - 1]) = (X[1] - X[0], X[n - 1] - X[n - 2])\n    X1.sort()\n    H.sort()\n    res = 0\n    for i in range(n):\n        res += X1[i] * H[i]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    p = []\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        p.append(b)\n    differences = []\n    for u in range(n - 1, 1, -1):\n        differences.append(x[u] - x[u - 2])\n    differences.append(x[-1] - x[-2])\n    differences.append(x[1] - x[0])\n    differences.sort()\n    p.sort()\n    answer = 0\n    while len(differences) > 0:\n        answer = answer + p.pop() * differences.pop()\n    print(answer)", "for i in range(int(input())):\n    n = int(input())\n    arr1 = []\n    arr2 = []\n    for i in range(n):\n        l = input().split()\n        arr1.append(int(l[0]))\n        arr2.append(int(l[1]))\n    arr1.append(arr1[-1])\n    arr1.insert(0, arr1[0])\n    arr2.sort()\n    base = []\n    for i in range(1, n + 1):\n        base.append(arr1[i + 1] - arr1[i - 1])\n    base.sort()\n    ans = 0\n    for i in range(n):\n        ans += base[i] * arr2[i]\n    print(ans)", "from collections import defaultdict\nfrom heapq import *\nimport itertools, math\n\ndef parse_integer_list():\n    return [int(x) for x in input().split()]\n\ndef handle_input(N, X, H):\n    s = 0\n    X.insert(0, X[0])\n    X.append(X[-1])\n    lengths = []\n    for i in range(1, N + 1):\n        lengths.append(X[i + 1] - X[i - 1])\n    lengths.sort()\n    H.sort()\n    for i in range(N):\n        s += H[i] * lengths[i]\n    return s\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    X = []\n    H = []\n    for i in range(N):\n        (x, h) = parse_integer_list()\n        X.append(x)\n        H.append(h)\n    print(handle_input(N, X, H))", "t = int(input(''))\nfor k in range(t):\n    n = int(input(''))\n    li = []\n    li1 = []\n    li2 = []\n    for i in range(n):\n        (p, q) = input().split()\n        p = int(p)\n        q = int(q)\n        li.append(p)\n        li1.append(q)\n    r = li[1] - li[0]\n    li2.append(r)\n    for i in range(1, n - 1):\n        p = li[i + 1] - li[i - 1]\n        li2.append(p)\n    li2.append(li[n - 1] - li[n - 2])\n    li2.sort()\n    li1.sort()\n    ans = 0\n    for i in range(n):\n        ans = ans + li1[i] * li2[i]\n    print(ans)", "for t in range(int(input())):\n    x = []\n    y = []\n    z = []\n    res = 0\n    n = int(input(''))\n    for i in range(n):\n        (temp1, temp2) = input('').split()\n        x.append(int(temp1))\n        y.append(int(temp2))\n    z.insert(0, x[1] - x[0])\n    z.insert(-1, x[-1] - x[-2])\n    for i in range(1, n - 1):\n        z.insert(i, x[i + 1] - x[i - 1])\n    y.sort(reverse=True)\n    z.sort(reverse=True)\n    for i in range(n):\n        res = res + y[i] * z[i]\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "for _ in range(int(input())):\n    n = int(input())\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    l1 = [x2 - x1]\n    l2 = [h1, h2]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        l1.append(x - x1)\n        l2.append(h)\n        x1 = x2\n        x2 = x\n    l1.append(x2 - x1)\n    l1.sort()\n    l2.sort()\n    a = 0\n    for i in range(n):\n        a += l1[i] * l2[i]\n    print(a)", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    n = int(stdin.readline())\n    diff_prev = 0\n    (d, D) = ([], [])\n    h = [0]\n    (x_prev, h[0]) = [int(x) for x in stdin.readline().split()]\n    for i in range(n - 1):\n        (x, ht) = [int(x) for x in stdin.readline().split()]\n        h.append(ht)\n        d.append(x - x_prev)\n        D.append(diff_prev + d[i])\n        diff_prev = d[i]\n        x_prev = x\n    D.append(d[n - 2])\n    D.sort()\n    h.sort()\n    ans = 0\n    for i in range(n):\n        ans += D[i] * h[i]\n    print(ans)\n    t -= 1", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    n = int(stdin.readline())\n    diff_prev = 0\n    (d, D) = ([], [])\n    h = [0]\n    (x_prev, h[0]) = [int(x) for x in stdin.readline().split()]\n    for i in range(n - 1):\n        (x, ht) = [int(x) for x in stdin.readline().split()]\n        h.append(ht)\n        d.append(x - x_prev)\n        D.append(diff_prev + d[i])\n        diff_prev = d[i]\n        x_prev = x\n    D.append(d[n - 2])\n    D.sort()\n    h.sort()\n    ans = 0\n    for i in range(n):\n        ans += D[i] * h[i]\n    print(ans)\n    t -= 1", "T = int(input())\nt = 0\nwhile t < T:\n    t += 1\n    N = int(input())\n    (h, x) = (list(), list())\n    for i in range(N):\n        (a, b) = map(int, input().split())\n        h.append(b)\n        x.append(a)\n    v = []\n    for i in range(N):\n        v.append(x[min(i + 1, N - 1)] - x[max(i - 1, 0)])\n    h.sort()\n    v.sort()\n    ans = 0\n    for i in range(N):\n        ans += h[i] * v[i]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    height = []\n    d = []\n    prev = 0\n    points = []\n    nex = 0\n    for i in range(n):\n        (x, h) = [int(x) for x in input().split()]\n        height.append(h)\n        points.insert(i, x)\n    for i in range(1, n):\n        diff = points[i] - points[i - 1]\n        d.append(diff)\n    points = []\n    for i in range(n - 1):\n        num = d[i] + prev\n        prev = d[i]\n        points.append(num)\n    points.append(d[n - 2])\n    points.sort(reverse=True)\n    height.sort(reverse=True)\n    s = 0\n    for i in range(n):\n        s += height[i] * points[i]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    g = []\n    h = []\n    I = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    a.append(I[0])\n    a.append(P[0])\n    h.append(I[1])\n    h.append(P[1])\n    g.append(a[1] - a[0])\n    for i in range(2, n):\n        L = list(map(int, input().split()))\n        a.append(L[0])\n        g.append(a[i] - a[i - 2])\n        h.append(L[1])\n    g.append(a[-1] - a[-2])\n    g.sort()\n    h.sort()\n    var = 0\n    for i in range(n):\n        var += h[i] * g[i]\n    print(var)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x, p) = ([], [])\n    for __ in range(n):\n        line = list(map(int, input().split()))\n        x.append(line[0])\n        p.append(line[1])\n    g = []\n    for i in range(n - 1):\n        g.append(x[i + 1] - x[i])\n    bois = []\n    bois.append(g[0])\n    for k in range(n - 2):\n        bois.append(g[k + 1] + g[k])\n    bois.append(g[n - 2])\n    bois.sort()\n    p.sort()\n    ans = 0\n    for i in range(n):\n        ans += p[i] * bois[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x, p) = ([], [])\n    for __ in range(n):\n        line = list(map(int, input().split()))\n        x.append(line[0])\n        p.append(line[1])\n    g = []\n    for i in range(n - 1):\n        g.append(x[i + 1] - x[i])\n    bois = []\n    bois.append(g[0])\n    for k in range(n - 2):\n        bois.append(g[k + 1] + g[k])\n    bois.append(g[n - 2])\n    bois.sort()\n    p.sort()\n    ans = 0\n    for i in range(n):\n        ans += p[i] * bois[i]\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    height = []\n    d = []\n    final = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        arr.append(x)\n        height.append(y)\n    for x in range(1, n):\n        d.append(arr[x] - arr[x - 1])\n    final.append(d[0])\n    for i in range(len(d) - 1):\n        final.append(d[i] + d[i + 1])\n    final.append(d[-1])\n    height.sort()\n    final.sort()\n    ans = 0\n    for x in range(n):\n        ans += final[x] * height[x]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x_arr = []\n    h_arr = []\n    d = []\n    D = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        x_arr.append(x)\n        h_arr.append(y)\n    for x in range(1, n):\n        d.append(x_arr[x] - x_arr[x - 1])\n    D.append(d[0])\n    for i in range(len(d) - 1):\n        D.append(d[i] + d[i + 1])\n    D.append(d[-1])\n    h_arr.sort()\n    D.sort()\n    ans = 0\n    for x in range(n):\n        ans += D[x] * h_arr[x]\n    print(ans)", "t = int(input())\nwhile t:\n    dd = []\n    l = []\n    h = []\n    pr = 0\n    d = []\n    n = int(input())\n    for i in range(n):\n        (x, hi) = map(int, input().split())\n        l.append(x)\n        h.append(hi)\n    l.sort()\n    for i in range(1, n):\n        dd.append(l[i] - l[i - 1])\n    d.append(dd[0])\n    for i in range(1, n - 1):\n        d.append(dd[i] + dd[i - 1])\n    d.append(dd[-1])\n    d.sort()\n    h.sort()\n    pr = 0\n    for i in range(n):\n        pr += d[i] * h[i]\n    print(pr)\n    t -= 1", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    X = []\n    H = []\n    for i in range(n):\n        (x, h) = [int(x) for x in input().split()]\n        X.append(x)\n        H.append(h)\n    H.sort(reverse=True)\n    mapping = [[x, 0, 0] for x in X]\n    mapping[0][1] = X[1] - X[0]\n    mapping[-1][1] = X[-1] - X[-2]\n    for i in range(1, n - 1):\n        mapping[i][1] = X[i + 1] - X[i - 1]\n    mapping.sort(key=lambda x: x[1], reverse=True)\n    for i in range(n):\n        mapping[i][2] = H[i]\n    mapping.sort(key=lambda x: x[0])\n    answer = 0\n    for i in range(1, n):\n        answer += (mapping[i][0] - mapping[i - 1][0]) * (mapping[i][2] + mapping[i - 1][2])\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    x_arr = []\n    h_arr = []\n    d = []\n    D = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        x_arr.append(x)\n        h_arr.append(y)\n    for x in range(1, n):\n        d.append(x_arr[x] - x_arr[x - 1])\n    D.append(d[0])\n    for i in range(len(d) - 1):\n        D.append(d[i] + d[i + 1])\n    D.append(d[-1])\n    h_arr.sort()\n    D.sort()\n    ans = 0\n    for x in range(n):\n        ans += D[x] * h_arr[x]\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    (hght, points) = ([], [])\n    for i in range(n):\n        (x, h) = map(int, input().split())\n        hght.append(h)\n        points.append(x)\n    points.sort()\n    diff = []\n    for i in range(1, n):\n        diff.append(points[i] - points[i - 1])\n    new_arr = [diff[0]]\n    for i in range(1, n - 1):\n        new_arr.append(diff[i - 1] + diff[i])\n    new_arr.append(diff[-1])\n    new_arr.sort()\n    hght.sort()\n    ans = 0\n    for i in range(n):\n        ans += new_arr[i] * hght[i]\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    (hght, points) = ([], [])\n    for i in range(n):\n        (x, h) = map(int, input().split())\n        hght.append(h)\n        points.append(x)\n    points.sort()\n    diff = []\n    for i in range(1, n):\n        diff.append(points[i] - points[i - 1])\n    new_arr = [diff[0]]\n    for i in range(1, n - 1):\n        new_arr.append(diff[i - 1] + diff[i])\n    new_arr.append(diff[-1])\n    new_arr.sort()\n    hght.sort()\n    ans = 0\n    for i in range(n):\n        ans += new_arr[i] * hght[i]\n    print(ans)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    X = []\n    H = []\n    for i in range(n):\n        (x, h) = [int(x) for x in input().split()]\n        X.append(x)\n        H.append(h)\n    H.sort(reverse=True)\n    mapping = [[x, 0, 0] for x in X]\n    mapping[0][1] = X[1] - X[0]\n    mapping[-1][1] = X[-1] - X[-2]\n    for i in range(1, n - 1):\n        mapping[i][1] = X[i + 1] - X[i - 1]\n    mapping.sort(key=lambda x: x[1], reverse=True)\n    for i in range(n):\n        mapping[i][2] = H[i]\n    mapping.sort(key=lambda x: x[0])\n    answer = 0\n    for i in range(1, n):\n        answer += (mapping[i][0] - mapping[i - 1][0]) * (mapping[i][2] + mapping[i - 1][2])\n    print(answer)", "for t in range(int(input())):\n    n = int(input())\n    h = []\n    x = []\n    for i in range(n):\n        (a, b) = [int(j) for j in input().split()]\n        h.append(b)\n        x.append(a)\n    last = x[0]\n    y = [x[1] - x[0], x[n - 1] - x[n - 2]]\n    for i in range(1, n - 1):\n        y.append(-x[i - 1] + x[i + 1])\n    y.sort()\n    h.sort()\n    ans = 0\n    for i in range(n):\n        ans += h[i] * y[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (X, H) = ([0] * n, [0] * n)\n    for i in range(n):\n        (X[i], H[i]) = map(int, input().split())\n    H.sort(reverse=True)\n    L = [X[1] - X[0], X[n - 1] - X[n - 2]]\n    for i in range(1, n - 1):\n        L.append(X[i + 1] - X[i] + (X[i] - X[i - 1]))\n    L.sort(reverse=True)\n    area = 0\n    for i in range(n):\n        area += H[i] * L[i]\n    print(area)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    p = None\n    for _ in range(n):\n        (x, h) = map(int, input().split())\n        if p is not None:\n            a.append(x - p)\n        p = x\n        b.append(h)\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    u = v = None\n    for _ in range(n):\n        (x, h) = map(int, input().split())\n        if v is None:\n            v = x\n        if u is not None:\n            a.append(x - u)\n        u = v\n        v = x\n        b.append(h)\n    a.append(x - u)\n    print(sum((x * y for (x, y) in zip(sorted(a), sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    p = None\n    for _ in range(n):\n        (x, h) = map(int, input().split())\n        if p is not None:\n            a.append(x - p)\n        p = x\n        b.append(h)\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "for _ in range(int(input())):\n    n = int(input())\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    xi = [x2 - x1]\n    hi = [h2, h1]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        xi.append(x - x1)\n        hi.append(h)\n        x1 = x2\n        x2 = x\n    xi.append(x2 - x1)\n    xi.sort()\n    hi.sort()\n    ans = 0\n    for i in range(n):\n        ans += xi[i] * hi[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    l1 = [x2 - x1]\n    l2 = [h1, h2]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        l1.append(x - x1)\n        l2.append(h)\n        x1 = x2\n        x2 = x\n    l1.append(x2 - x1)\n    l1.sort()\n    l2.sort()\n    a = 0\n    for i in range(n):\n        a += l1[i] * l2[i]\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    (l1, l2) = ([], [])\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    l1 = [x2 - x1]\n    l2 = [h1, h2]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        l1.append(x - x1)\n        l2.append(h)\n        x1 = x2\n        x2 = x\n    l1.append(x2 - x1)\n    l1.sort()\n    l2.sort()\n    a = 0\n    for i in range(n):\n        a += l1[i] * l2[i]\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    (l1, l2) = ([], [])\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    l1 = [x2 - x1]\n    l2 = [h1, h2]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        l1.append(x - x1)\n        l2.append(h)\n        x1 = x2\n        x2 = x\n    l1.append(x2 - x1)\n    l1.sort()\n    l2.sort()\n    a = 0\n    for i in range(n):\n        a += l1[i] * l2[i]\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    (l1, l2) = ([], [])\n    (x1, h1) = map(int, input().split())\n    (x2, h2) = map(int, input().split())\n    l1 = [x2 - x1]\n    l2 = [h1, h2]\n    for i in range(2, n):\n        (x, h) = map(int, input().split())\n        l1.append(x - x1)\n        l2.append(h)\n        x1 = x2\n        x2 = x\n    l1.append(x2 - x1)\n    l1.sort()\n    l2.sort()\n    a = 0\n    for i in range(n):\n        a += l1[i] * l2[i]\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = input().split()\n        a.append(int(x))\n        b.append(int(h))\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = map(int, input().split())\n        a.append(x)\n        b.append(h)\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor op in range(t):\n    n = int(input())\n    x = []\n    h = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        h.append(b)\n    x.sort()\n    x_diff = []\n    for i in range(0, n - 2):\n        x_diff.append(x[i + 2] - x[i])\n    x_diff.append(x[1] - x[0])\n    x_diff.append(x[n - 1] - x[n - 2])\n    x_diff.sort()\n    h.sort()\n    area = 0\n    for i in range(0, n):\n        area += h[i] * x_diff[i]\n    print(area)", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(chain.from_iterable((map(int, input().split()) for _ in range(n))))\n    b = [y - x for (x, y) in zip(a[::2], a[2::2])]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted(a[1::2])\n    print(sum((x * y for (x, y) in zip(b, c))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [tuple(map(int, input().split())) for _ in range(n)]\n    b = [y[0] - x[0] for (x, y) in zip(a, a[1:])]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted((h for (x, h) in a))\n    print(sum((x * y for (x, y) in zip(b, c))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [tuple(map(int, input().split())) for _ in range(n)]\n    b = [y[0] - x[0] for (x, y) in zip(a, a[1:])]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted((h for (x, h) in a))\n    print(sum((x * y for (x, y) in zip(b, c))))", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    h = []\n    gaps = []\n    bois = []\n    ans = 0\n    for __ in range(n):\n        q = list(map(int, input().split()))\n        x.append(q[0])\n        h.append(q[1])\n    for i in range(1, n):\n        gaps.append(x[i] - x[i - 1])\n    bois.append(gaps[0])\n    for i in range(1, n - 1):\n        bois.append(gaps[i] + gaps[i - 1])\n    bois.append(gaps[n - 2])\n    bois.sort()\n    h.sort()\n    for i in range(n):\n        ans += h[i] * bois[i]\n    print(ans)", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, h) = map(int, input().split())\n        a.append(x)\n        b.append(h)\n    a = [y - x for (x, y) in zip(a, a[1:])]\n    a = sorted((x + y for (x, y) in zip([0] + a, a + [0])))\n    print(sum((x * y for (x, y) in zip(a, sorted(b)))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (_x, _y) = map(int, input().split())\n        x.append(_x)\n        y.append(_y)\n    x.sort()\n    y.sort()\n    ans = 0\n    if n > 2:\n        inc_sum = [x[1] - x[0]]\n        for i in range(1, n - 1):\n            inc_sum.append(x[i + 1] - x[i - 1])\n        inc_sum.append(x[n - 1] - x[n - 2])\n        ind = list(range(n))\n        ind.sort(key=lambda x: inc_sum[x])\n        for i in range(n):\n            ans += y[i] * inc_sum[ind[i]]\n    else:\n        ans = (y[0] + y[1]) * (x[1] - x[0])\n    print(ans)", "(t, ans) = (int(input()), [])\nfor u in range(t):\n    n = int(input())\n    (x, h, gap) = ([], [], [])\n    for i in range(n):\n        l = list(map(int, input().split()))\n        x.append(l[0])\n        h.append(l[1])\n        if i == 1:\n            gap.append(x[1] - x[0])\n        elif i > 1:\n            gap.append(x[i] - x[i - 2])\n    gap.append(x[n - 1] - x[n - 2])\n    gap.sort()\n    h.sort()\n    ans.append(0)\n    for j in range(n):\n        ans[u] += h[j] * gap[j]\nfor a in ans:\n    print(a)", "t = int(input())\nans = []\nfor u in range(t):\n    n = int(input())\n    (x, h, gap) = ([], [], [])\n    for i in range(n):\n        l = list(map(int, input().split()))\n        x.append(l[0])\n        h.append(l[1])\n        if i == 1:\n            gap.append(x[1] - x[0])\n        elif i > 1:\n            gap.append(x[i] - x[i - 2])\n    gap.append(x[n - 1] - x[n - 2])\n    gap.sort()\n    h.sort()\n    ans.append(0)\n    for j in range(n):\n        ans[u] += h[j] * gap[j]\nfor a in ans:\n    print(a)", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(chain.from_iterable((map(int, input().split()) for _ in range(n))))\n    b = [y - x for (x, y) in zip(a[::2], a[2::2])]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted(a[1::2])\n    print(sum((x * y for (x, y) in zip(b, c))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = []\n    p = []\n    for __ in range(n):\n        line = list(map(int, input().split()))\n        x.append(line[0])\n        p.append(line[1])\n    g = []\n    for i in range(n - 1):\n        g.append(x[i + 1] - x[i])\n    bois = []\n    bois.append(g[0])\n    for k in range(n - 2):\n        bois.append(g[k + 1] + g[k])\n    bois.append(g[n - 2])\n    bois.sort()\n    p.sort()\n    ans = 0\n    for i in range(n):\n        ans += p[i] * bois[i]\n    print(ans)", "from itertools import chain, islice\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(chain.from_iterable((map(int, input().split()) for _ in range(n))))\n    b = [y - x for (x, y) in zip(islice(a, 0, 2 * n, 2), islice(a, 2, 2 * n, 2))]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted(islice(a, 1, 2 * n, 2))\n    print(sum((x * y for (x, y) in zip(b, c))))", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(chain.from_iterable((map(int, input().split()) for _ in range(n))))\n    b = [y - x for (x, y) in zip(a[::2], a[2::2])]\n    b = sorted((x + y for (x, y) in zip([0] + b, b + [0])))\n    c = sorted(a[1::2])\n    print(sum((x * y for (x, y) in zip(b, c))))", "for i in range(int(input())):\n    x = int(input())\n    lb = []\n    la = [0]\n    h = []\n    for j in range(x):\n        (a, b) = map(int, input().split())\n        lb.append(b)\n        la.append(a)\n        h.append(la[j + 1] - la[j])\n    h.pop(0)\n    la.pop(0)\n    hnew = []\n    for j in range(x - 2):\n        hnew.append(h[j] + h[j + 1])\n    hnew.append(la[1] - la[0])\n    hnew.append(la[-1] - la[-2])\n    hnew.sort()\n    lb.sort()\n    s = 0\n    for j in range(x):\n        s += lb[j] * hnew[j]\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    X = []\n    H = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        X.append(x)\n        H.append(y)\n    H = sorted(H)\n    a = []\n    for i in range(1, n):\n        a.append(X[i] - X[i - 1])\n    b = []\n    b.append(a[0])\n    b.append(a[n - 2])\n    for i in range(0, n - 2):\n        b.append(a[i] + a[i + 1])\n    b = sorted(b)\n    ans = 0\n    for i in range(n):\n        ans += H[i] * b[i]\n    print(ans)", "II = lambda : [int(x) for x in input().split()]\n\ndef get_weights(Xs):\n    W = []\n    for i in range(len(Xs)):\n        x0 = Xs[i - 1] if i > 0 else Xs[i]\n        x1 = Xs[i]\n        x2 = Xs[i + 1] if i + 1 < len(Xs) else Xs[i]\n        W.append(x1 - x0 + x2 - x1)\n    return W\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    points = [II() for _ in range(N)]\n    Xs = [x for (x, y) in points]\n    Ys = [y for (x, y) in points]\n    Ws = get_weights(Xs)\n    Ys.sort()\n    Ws.sort()\n    S = sum(map(lambda a: a[0] * a[1], zip(Ys, Ws)))\n    print(S)", "testCase = int(input())\nfor t in range(testCase):\n    n = int(input())\n    xArray = []\n    hArray = []\n    for i in range(n):\n        (x, h) = [int(y) for y in input().split()]\n        xArray.append(x)\n        hArray.append(h)\n    wArray = []\n    for i in range(1, len(xArray), 1):\n        wArray.append(xArray[i] - xArray[i - 1])\n    finalWArray = []\n    finalWArray.append(wArray[0])\n    for i in range(1, len(wArray), 1):\n        finalWArray.append(wArray[i] + wArray[i - 1])\n    finalWArray.append(wArray[len(wArray) - 1])\n    finalWArray.sort(reverse=True)\n    hArray.sort(reverse=True)\n    area = 0\n    for i in range(len(finalWArray)):\n        area = area + hArray[i] * finalWArray[i]\n    print(area)", "testCase = int(input())\nfor t in range(testCase):\n    n = int(input())\n    xArray = []\n    hArray = []\n    for i in range(n):\n        (x, h) = [int(y) for y in input().split()]\n        xArray.append(x)\n        hArray.append(h)\n    wArray = []\n    for i in range(1, len(xArray), 1):\n        wArray.append(xArray[i] - xArray[i - 1])\n    finalWArray = []\n    finalWArray.append(wArray[0])\n    for i in range(1, len(wArray), 1):\n        finalWArray.append(wArray[i] + wArray[i - 1])\n    finalWArray.append(wArray[len(wArray) - 1])\n    finalWArray.sort(reverse=True)\n    hArray.sort(reverse=True)\n    area = 0\n    for i in range(len(finalWArray)):\n        area = area + hArray[i] * finalWArray[i]\n    print(area)", "for _ in range(int(input())):\n    n = int(input())\n    X = []\n    A = []\n    Y = []\n    Z = []\n    for j in range(n):\n        (x, a) = map(int, input().split())\n        X.append(x)\n        A.append(a)\n    for j in range(n - 1):\n        Y.append(X[j + 1] - X[j])\n    A.sort()\n    Z.append(Y[0])\n    for j in range(n - 2):\n        Z.append(Y[j] + Y[j + 1])\n    Z.append(Y[-1])\n    Z.sort()\n    r = 0\n    for i in range(n):\n        r += Z[i] * A[i]\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    cols = []\n    heights = []\n    for i in range(n):\n        (xi, hi) = list(map(int, input().split()))\n        heights.append(hi)\n        cols.append(xi)\n    diff = [cols[1] - cols[0], cols[n - 1] - cols[n - 2]]\n    for j in range(n - 2):\n        diff.append(cols[j + 2] - cols[j])\n    diff.sort()\n    heights.sort()\n    total = 0\n    for j in range(n):\n        total += diff[j] * heights[j]\n    print(total)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    xs = [0 for a in range(n)]\n    hs = [0 for a in range(n)]\n    for y in range(n):\n        (xs[y], hs[y]) = map(int, input().split())\n    xs.sort()\n    hs.sort()\n    curr = 2\n    diffs = [xs[1] - xs[0], xs[n - 1] - xs[n - 2]]\n    while curr < n:\n        diffs.append(xs[curr] - xs[curr - 2])\n        curr += 1\n    diffs.sort()\n    tot = 0\n    for a in range(n):\n        tot += diffs[a] * hs[a]\n    print(tot)"]