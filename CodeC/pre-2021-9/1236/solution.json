["t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 1:\n        print('Boo')\n    else:\n        l = list(range(1, n))\n        mat = []\n        for i in range(n):\n            mat.append([0] * n)\n        for i in range(1, n):\n            mat[0][i] = l[i - 1]\n            mat[i][0] = l[i - 1] + n - 1\n        k = 1\n        for i in range(1, n):\n            c = (k + 1) % (n - 1)\n            mat[i][n - 1] = l[k % (n - 1)]\n            mat[n - 1][i] = mat[i][n - 1] + n - 1\n            for j in range(i + 1, n - 1):\n                mat[i][j] = l[c % (n - 1)]\n                mat[j][i] = mat[i][j] + n - 1\n                c = (c + 1) % (n - 1)\n            k = (k + 2) % (n - 1)\n        print('Hooray')\n        for i in range(n):\n            for j in range(n):\n                if i == j:\n                    print(2 * n - 1, end=' ')\n                else:\n                    print(mat[i][j], end=' ')\n            print()\n    t -= 1", "from collections import deque\n\ndef round_robin(n):\n    d = deque(range(n))\n    l = []\n    for i in range(n - 1):\n        temp = []\n        for j in range(n // 2):\n            temp.append([d[j], d[-j - 1]])\n        l.append(temp)\n        (d[0], d[-1]) = (d[-1], d[0])\n        d.rotate()\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n & 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        l = round_robin(n)\n        tem1 = 2 * n - 1\n        mat = [[tem1 for i in range(n)] for j in range(n)]\n        tem1 = 1\n        tem2 = 2\n        for i in l:\n            for j in i:\n                (r, c) = (j[0], j[1])\n                mat[r][c] = tem1\n                mat[c][r] = tem2\n            tem1 += 2\n            tem2 += 2\n        for row in mat:\n            print(*row)", "from collections import deque\n\ndef round_robin_even(d, n):\n    for i in range(n - 1):\n        yield [[d[j], d[-j - 1]] for j in range(n // 2)]\n        (d[0], d[-1]) = (d[-1], d[0])\n        d.rotate()\n\ndef round_robin(n):\n    d = deque(range(n))\n    return list(round_robin_even(d, n))\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n & 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        l = round_robin(n)\n        tem1 = 2 * n - 1\n        mat = [[tem1 for i in range(n)] for j in range(n)]\n        tem1 = 1\n        tem2 = 2\n        for i in l:\n            for j in i:\n                (left, right) = (j[0], j[1])\n                mat[left][right] = tem1\n                mat[right][left] = tem2\n            tem1 += 2\n            tem2 += 2\n        for i in range(n):\n            for j in range(n):\n                print(mat[i][j], end=' ')\n            print()", "import math\nfrom collections import deque\n\ndef print_matrix(mat):\n    for i in range(n):\n        for j in range(n):\n            print(f'{str(mat[i][j]).ljust(3)}', end=' ')\n        print()\nt = int(input())\nfor c in range(t):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print('1')\n    elif n % 2 == 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        sup = [i for i in range(1, n + 1)]\n        mat = [[0 for i in range(n)] for j in range(n)]\n        for i in range(1, n):\n            mat[0][i] = i\n        index = 1\n        for i in range(1, n - 1):\n            mat[i][n - 1] = sup[index]\n            index = (index + 2) % (n - 1)\n        for i in range(1, n - 1):\n            index = mat[i][n - 1]\n            for j in range(i + 1, n - 1):\n                mat[i][j] = sup[index]\n                index = (index + 1) % (n - 1)\n        for i in range(1, n):\n            for j in range(0, i):\n                mat[i][j] = mat[j][i] + n - 1\n        for i in range(n):\n            for j in range(n):\n                if i == j:\n                    mat[i][j] = 2 * n - 1\n        print_matrix(mat)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print('1')\n    elif n % 2 == 1:\n        print('Boo')\n    elif n == 2:\n        print('Hooray')\n        print('3 1')\n        print('2 3')\n    else:\n        a = []\n        for i in range(n):\n            a.append([0] * n)\n        b = list(range(1, n))\n        k = 1\n        for i in range(1, n):\n            a[0][i] = b[i - 1]\n        for i in range(1, n):\n            temp = k\n            a[i][n - 1] = b[temp]\n            if temp == n - 2:\n                temp = 0\n            else:\n                temp += 1\n            for j in range(i + 1, n - 1):\n                a[i][j] = b[temp]\n                if temp == n - 2:\n                    temp = 0\n                else:\n                    temp += 1\n            if k == n - 2:\n                k = 1\n            elif k == n - 3:\n                k = 0\n            else:\n                k += 2\n        for i in range(n):\n            for j in range(i + 1):\n                if i != j:\n                    a[i][j] = a[j][i] + n - 1\n                else:\n                    a[i][j] = 2 * n - 1\n        print('Hooray')\n        for i in range(n):\n            print(*a[i])\n    t = t - 1", "def prin(Arr):\n    l = len(Arr)\n    for i in range(l):\n        for j in range(l):\n            print(Arr[i][j], end=' ')\n        print()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        a = [[0] * n for i in range(n)]\n        li1 = list(range(1, n))\n        li2 = list(range(n, 2 * n))\n        for i in range(n):\n            a[i][i] = 2 * n - 1\n        for i in range(1, n):\n            a[0][i] = i\n            a[i][0] = n + i - 1\n        for i in range(1, n - 1):\n            ind = (2 * i - 1) % (n - 1)\n            for j in range(i + 1, n):\n                In = (ind + j - i) % (n - 1)\n                a[i][j] = li1[In]\n                a[j][i] = li2[In]\n            a[i][n - 1] = li1[ind]\n            a[n - 1][i] = li2[ind]\n        prin(a)", "import sys\nfrom collections import defaultdict\nmod = 1000000007\nT = 1\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    if n == 1:\n        sys.stdout.write('Hooray\\n')\n        sys.stdout.write('1\\n')\n        continue\n    if n & 1:\n        sys.stdout.write('Boo\\n')\n    else:\n        a = [[0 for i in range(n)] for j in range(n)]\n        x = (n << 1) - 1\n        l = []\n        for i in range(n):\n            a[i][i] = x\n            if i > 0:\n                a[0][i] = i\n                l.append(i)\n        k = 1\n        nn = n - 1\n        for i in range(1, n - 1):\n            a[i][nn] = l[k]\n            t = 1\n            for j in range(i + 1, n - 1):\n                a[i][j] = l[(k + t) % nn]\n                t += 1\n            k = (k + 2) % nn\n        for i in range(1, n):\n            for j in range(i):\n                a[i][j] = x - a[j][i]\n        sys.stdout.write('Hooray\\n')\n        for i in range(n):\n            for j in range(n):\n                sys.stdout.write(str(a[i][j]) + ' ')\n            sys.stdout.write('\\n')", "import sys\nfrom collections import defaultdict\nmod = 1000000007\nT = 1\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    if n == 1:\n        print('Hooray')\n        print('1')\n        continue\n    if n & 1:\n        print('Boo')\n    else:\n        a = [[0 for i in range(n)] for j in range(n)]\n        x = (n << 1) - 1\n        l = []\n        for i in range(n):\n            a[i][i] = x\n            if i > 0:\n                a[0][i] = i\n                l.append(i)\n        k = 1\n        nn = n - 1\n        for i in range(1, n - 1):\n            a[i][nn] = l[k]\n            t = 1\n            for j in range(i + 1, n - 1):\n                a[i][j] = l[(k + t) % nn]\n                t += 1\n            k = (k + 2) % nn\n        for i in range(1, n):\n            for j in range(i):\n                a[i][j] = x - a[j][i]\n        print('Hooray')\n        for i in range(n):\n            for j in range(n):\n                print(a[i][j], end=' ')\n            print()", "import sys\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    mat = [[0] * n for i in range(n)]\n    if n == 1:\n        print('Hooray')\n        print(1)\n        continue\n    if n % 2 == 1:\n        print('Boo')\n        continue\n    for i in range(n):\n        mat[i][i] = 2 * n - 1\n    h1 = list(range(1, n))\n    h2 = list(range(n, 2 * n - 1))\n    for i in range(1, n):\n        mat[0][i] = h1[i - 1]\n        mat[i][0] = h2[i - 1]\n    (p1, p2) = (0, 0)\n    ls1 = [i for i in range(1, n)] * 3\n    ls2 = [i for i in range(n, 2 * n - 1)] * 3\n    for i in range(1, n):\n        p1 += 2\n        p2 += 2\n        select1 = {key: False for key in range(1, n)}\n        for j in range(n):\n            select1[mat[j][i]] = True\n        temp = p1\n        for k in range(i + 1, n):\n            while select1[ls1[temp]]:\n                temp += 1\n            if not select1[ls1[temp]]:\n                mat[i][k] = ls1[temp]\n            temp += 1\n        select2 = {key: False for key in range(n, 2 * n - 1)}\n        for j in range(n):\n            select2[mat[i][j]] = True\n        temp = p2\n        for k in range(i + 1, n):\n            while select2[ls2[temp]]:\n                temp += 1\n            if not select2[ls2[temp]]:\n                mat[k][i] = ls2[temp]\n            temp += 1\n        tt = 0\n        for z in range(20):\n            tt += 1\n    print('Hooray')\n    for row in mat:\n        print(' '.join([str(i) for i in row]))", "import os\nimport functools\nimport sys\nimport collections\nimport statistics\nimport math as mt\nfor _ in range(int(input())):\n    n = int(input())\n    a = [[0 for col in range(n)] for row in range(n)]\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 0:\n        print('Hooray')\n        for i in range(0, n):\n            for j in range(0, n):\n                if i < j:\n                    if i + j + 2 >= n + 2:\n                        a[i][j] = 2 * n + 1 - (i + j + 2)\n                    if i + j + 2 <= n + 1:\n                        a[i][j] = 2 + n - (i + j + 2)\n                elif i > j:\n                    if i + j + 2 > n:\n                        a[i][j] = i + j + 1\n                    if i + j + 2 <= n:\n                        a[i][j] = i + j + n\n                else:\n                    a[i][j] = 2 * n - 1\n        if n >= 4:\n            x = n - 2\n            for i in range(1, n // 2):\n                a[i][n - 1] = x\n                x -= 2\n            x = n - 1\n            for i in range(n // 2, n - 1):\n                a[i][n - 1] = x\n                x -= 2\n            x = n + 2\n            for i in range(1, n // 2):\n                a[i][0] = x\n                x += 2\n            x = n + 1\n            for i in range(n // 2, n - 1):\n                a[i][0] = x\n                x += 2\n        for i in range(n):\n            for j in range(n):\n                print(a[i][j], end=' ')\n            print()\n    else:\n        print('Boo')", "for _ in range(int(input())):\n    n = int(input())\n    maatrix = [[0 for col in range(n)] for row in range(n)]\n    if n == 1:\n        print('Hooray\\n1')\n    elif n % 2 == 0:\n        print('Hooray')\n        for i in range(0, n):\n            for j in range(0, n):\n                if i < j:\n                    if i + j + 2 >= n + 2:\n                        maatrix[i][j] = 2 * n + 1 - (i + j + 2)\n                    elif 6 < 2:\n                        you_are_noob = 1\n                    if i + j + 2 <= n + 1:\n                        maatrix[i][j] = 2 + n - (i + j + 2)\n                    elif 6 == 9:\n                        dick = -1\n                elif i > j:\n                    if i + j + 2 > n:\n                        maatrix[i][j] = i + j + 1\n                    if i + j + 2 <= n:\n                        maatrix[i][j] = i + j + n\n                    elif 6 < 2:\n                        you_are_cyak = 1\n                    elif 6 < 2:\n                        you_are_fuckingbishhh = 1\n                else:\n                    maatrix[i][j] = 2 * n - 1\n                    chutiya = 3\n        if n >= 4:\n            vr = n - 2\n            for i in range(1, n // 2):\n                maatrix[i][n - 1] = vr\n                vr -= 2\n            vr = n - 1\n            for i in range(n // 2, n - 1):\n                maatrix[i][n - 1] = vr\n                vr -= 2\n            vr = n + 2\n            for i in range(1, n // 2):\n                maatrix[i][0] = vr\n                vr += 2\n            vr = n + 1\n            for i in range(n // 2, n - 1):\n                maatrix[i][0] = vr\n                vr += 2\n        elif 3 < 2:\n            fuck_you = -1\n        else:\n            fuck_you = 1\n        for i in range(n):\n            for j in range(n):\n                print(maatrix[i][j], end=' ')\n            print()\n    else:\n        print('Boo')", "import os\nimport sys\nimport collections\n\ndef display(n):\n    a = [[0 for col in range(n)] for row in range(n)]\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 0:\n        print('Hooray')\n        for i in range(0, n):\n            for j in range(0, n):\n                if i < j:\n                    if i + j + 2 >= n + 2:\n                        a[i][j] = 2 * n + 1 - (i + j + 2)\n                    if i + j + 2 <= n + 1:\n                        a[i][j] = 2 + n - (i + j + 2)\n                elif i > j:\n                    if i + j + 2 > n:\n                        a[i][j] = i + j + 1\n                    if i + j + 2 <= n:\n                        a[i][j] = i + j + n\n                else:\n                    a[i][j] = 2 * n - 1\n        if n >= 4:\n            x = n - 2\n            for i in range(1, n // 2):\n                a[i][n - 1] = x\n                x -= 2\n            x = n - 1\n            for i in range(n // 2, n - 1):\n                a[i][n - 1] = x\n                x -= 2\n            x = n + 2\n            for i in range(1, n // 2):\n                a[i][0] = x\n                x += 2\n            x = n + 1\n            for i in range(n // 2, n - 1):\n                a[i][0] = x\n                x += 2\n        for i in range(n):\n            for j in range(n):\n                print(a[i][j], end=' ')\n            print()\n    else:\n        print('Boo')\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    display(n)", "from collections import deque\n\ndef round_robin_even(d, n):\n    for i in range(n - 1):\n        yield [[d[j], d[-j - 1]] for j in range(n // 2)]\n        (d[0], d[-1]) = (d[-1], d[0])\n        d.rotate()\n\ndef round_robin(n):\n    d = deque(range(n))\n    return list(round_robin_even(d, n))\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n & 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        l = round_robin(n)\n        tem1 = 2 * n - 1\n        mat = [[tem1 for i in range(n)] for j in range(n)]\n        tem1 = 1\n        tem2 = 2\n        for i in l:\n            for j in i:\n                (left, right) = (j[0], j[1])\n                mat[left][right] = tem1\n                mat[right][left] = tem2\n            tem1 += 2\n            tem2 += 2\n        for i in range(n):\n            for j in range(n):\n                print(mat[i][j], end=' ')\n            print()", "for _ in range(int(input())):\n    n = int(input())\n    array_matrix = [[0 for col in range(n)] for row in range(n)]\n    if n == 1:\n        print('Hooray\\n1')\n    elif n % 2 == 0:\n        print('Hooray')\n        for i in range(0, n):\n            for j in range(0, n):\n                if i < j:\n                    if i + j + 2 >= n + 2:\n                        array_matrix[i][j] = 2 * n + 1 - (i + j + 2)\n                    if i + j + 2 <= n + 1:\n                        array_matrix[i][j] = 2 + n - (i + j + 2)\n                elif i > j:\n                    if i + j + 2 > n:\n                        array_matrix[i][j] = i + j + 1\n                    if i + j + 2 <= n:\n                        array_matrix[i][j] = i + j + n\n                else:\n                    array_matrix[i][j] = 2 * n - 1\n                    fuck_you = 0\n        if n >= 4:\n            varrr = n - 2\n            for i in range(1, n // 2):\n                array_matrix[i][n - 1] = varrr\n                varrr -= 2\n            varrr = n - 1\n            for i in range(n // 2, n - 1):\n                array_matrix[i][n - 1] = varrr\n                varrr -= 2\n            varrr = n + 2\n            for i in range(1, n // 2):\n                array_matrix[i][0] = varrr\n                varrr += 2\n            varrr = n + 1\n            for i in range(n // 2, n - 1):\n                array_matrix[i][0] = varrr\n                varrr += 2\n        elif 3 < 2:\n            fuck_you = -1\n        else:\n            fuck_you = 1\n        for i in range(n):\n            for j in range(n):\n                print(array_matrix[i][j], end=' ')\n            print()\n    else:\n        print('Boo')", "for _ in range(int(input())):\n    n = int(input())\n    a = [[0 for col in range(n)] for row in range(n)]\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 0:\n        print('Hooray')\n        for i in range(0, n):\n            for j in range(0, n):\n                if i < j:\n                    if i + j + 2 >= n + 2:\n                        a[i][j] = 2 * n + 1 - (i + j + 2)\n                    if i + j + 2 <= n + 1:\n                        a[i][j] = 2 + n - (i + j + 2)\n                elif i > j:\n                    if i + j + 2 > n:\n                        a[i][j] = i + j + 1\n                    if i + j + 2 <= n:\n                        a[i][j] = i + j + n\n                else:\n                    a[i][j] = 2 * n - 1\n        if n >= 4:\n            x = n - 2\n            for i in range(1, n // 2):\n                a[i][n - 1] = x\n                x -= 2\n            x = n - 1\n            for i in range(n // 2, n - 1):\n                a[i][n - 1] = x\n                x -= 2\n            x = n + 2\n            for i in range(1, n // 2):\n                a[i][0] = x\n                x += 2\n            x = n + 1\n            for i in range(n // 2, n - 1):\n                a[i][0] = x\n                x += 2\n        for i in range(n):\n            for j in range(n):\n                print(a[i][j], end=' ')\n            print()\n    else:\n        print('Boo')", "def func(n):\n    teams = [_ for _ in range(1, n + 1)]\n    n = n // 2\n    stages = []\n    for i in range(len(teams) - 1):\n        t = teams[:1] + teams[-i:] + teams[1:-i] if i else teams\n        stages.append(list(zip(t[:n], reversed(t[n:]))))\n    return stages\n\ndef getMatrix(n):\n    a = [[0 for _ in range(0, n + 1)] for _ in range(0, n + 1)]\n    d = 2 * n - 1\n    for i in range(1, n + 1):\n        a[i][i] = d\n    return a\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n & 1 and n > 1:\n        print('Boo')\n        continue\n    print('Hooray')\n    a = getMatrix(n)\n    stages = func(n)\n    cnt = 1\n    for x in stages:\n        for y in x:\n            a[y[0]][y[1]] = cnt\n            a[y[1]][y[0]] = cnt + 1\n        cnt += 2\n    for x in a[1:]:\n        for i in range(1, n + 1):\n            print(x[i], end=' ')\n        print()", "from itertools import *\nfrom collections import *\nfrom sys import *\n\ndef input():\n    return stdin.readline()\n\ndef two(n1):\n    chess = [[0 for i in range(n1)] for i in range(n1)]\n    teams = [i for i in range(1, n1 + 1)]\n    n = int(len(teams) / 2)\n    stages = []\n    c = 1\n    for i in range(len(teams) - 1):\n        t = teams[:1] + teams[-i:] + teams[1:-i] if i else teams\n        for j in list(zip(t[:n], reversed(t[n:]))):\n            chess[j[0] - 1][j[1] - 1] = c\n            chess[j[1] - 1][j[0] - 1] = c + (n1 - 1)\n        c += 1\n    for i in range(n1):\n        chess[i][i] = 2 * n1 - 1\n    for i in chess:\n        print(*i)\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 and n != 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        two(n)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 1:\n        print('Boo')\n    elif n == 2:\n        print('Hooray')\n        print('3 1')\n        print('2 3')\n    else:\n        a = []\n        for i in range(n):\n            a.append([0] * n)\n        l = list(range(1, n))\n        for j in range(1, n):\n            a[0][j] = l[j - 1]\n        k = 1\n        for i in range(1, n):\n            temp = k\n            a[i][n - 1] = l[temp]\n            if temp == n - 2:\n                temp = 0\n            else:\n                temp += 1\n            for j in range(i + 1, n - 1):\n                a[i][j] = l[temp]\n                if temp == n - 2:\n                    temp = 0\n                else:\n                    temp += 1\n            if k == n - 2:\n                k = 1\n            elif k == n - 3:\n                k = 0\n            else:\n                k += 2\n        for i in range(n):\n            for j in range(0, i + 1):\n                if i == j:\n                    a[i][j] = 2 * n - 1\n                else:\n                    a[i][j] = a[j][i] + n - 1\n        print('Hooray')\n        for i in range(n):\n            print(*a[i])", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray\\n1')\n    elif n % 2:\n        print('Boo')\n    else:\n        end = 2 * n - 1\n        print('Hooray')\n        l = [[end for i in range(n)] for i in range(n)]\n        t = 2 * n - 2\n        for i in range(1, n):\n            (s, la) = (i, i)\n            l[i - 1][n - 1] = i\n            l[n - 1][i - 1] = t\n            for j in range(n // 2 - 1):\n                s -= 1\n                la += 1\n                if s < 1:\n                    s = n - 1\n                la = la % (n - 1)\n                if la == 0:\n                    la = n - 1\n                l[min(s, la) - 1][max(s, la) - 1] = i\n                l[max(s, la) - 1][min(s, la) - 1] = t\n            t -= 1\n        for i in l:\n            print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray\\n1')\n    elif n % 2:\n        print('Boo')\n    else:\n        end = 2 * n - 1\n        print('Hooray')\n        l = [[end for i in range(n)] for i in range(n)]\n        t = 2 * n - 2\n        for i in range(1, n):\n            (s, la) = (i, i)\n            l[i - 1][n - 1] = i\n            l[n - 1][i - 1] = t\n            for j in range(n // 2 - 1):\n                s -= 1\n                la += 1\n                if s < 1:\n                    s = n - 1\n                la = la % (n - 1)\n                if la == 0:\n                    la = n - 1\n                l[min(s, la) - 1][max(s, la) - 1] = i\n                l[max(s, la) - 1][min(s, la) - 1] = t\n            t -= 1\n        for i in l:\n            print(*i)", "import copy\nimport sys\nfor _ in range(int(input())):\n    n = int(input())\n    mat = [[0] * n for i in range(n)]\n    if n == 1:\n        print('Hooray')\n        print(1)\n        continue\n    if (n * n - n) % (2 * n - 2):\n        print('Boo')\n        continue\n    for i in range(n):\n        mat[i][i] = 2 * n - 1\n    h1 = list(range(1, n))\n    h2 = list(range(n, 2 * n - 1))\n    for i in range(1, n):\n        mat[0][i] = h1[i - 1]\n        mat[i][0] = h2[i - 1]\n    p1 = 0\n    p2 = 0\n    ls1 = [i for i in range(1, n)] * 3\n    ls2 = [i for i in range(n, 2 * n - 1)] * 3\n    for i in range(1, n):\n        p1 += 2\n        p2 += 2\n        check1 = {key: False for key in range(1, n)}\n        for j in range(n):\n            check1[mat[j][i]] = True\n        tm = p1\n        for k in range(i + 1, n):\n            while check1[ls1[tm]]:\n                tm += 1\n            if not check1[ls1[tm]]:\n                mat[i][k] = ls1[tm]\n            tm += 1\n        check2 = {key: False for key in range(n, 2 * n - 1)}\n        for j in range(n):\n            check2[mat[i][j]] = True\n        tm = p2\n        for k in range(i + 1, n):\n            while check2[ls2[tm]]:\n                tm += 1\n            if not check2[ls2[tm]]:\n                mat[k][i] = ls2[tm]\n            tm += 1\n    print('Hooray')\n    for row in mat:\n        print(' '.join([str(i) for i in row]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        arr = []\n        for i in range(n):\n            ok = [0] * (n + 2)\n            arr.append(ok)\n        for i in range(1, n):\n            next = i + 1\n            if next == n:\n                next = 1\n            prev = i - 1\n            if prev == 0:\n                prev = n - 1\n            arr[i - 1][n - 1] = i\n            cnt = 0\n            while cnt != n / 2 - 1:\n                arr[min(next, prev) - 1][max(next, prev) - 1] = i\n                next += 1\n                if next == n:\n                    next = 1\n                prev -= 1\n                if prev == 0:\n                    prev = n - 1\n                cnt += 1\n        for i in range(n):\n            arr[i][i] = 2 * n - 1\n        for i in range(n):\n            for j in range(i + 1, n):\n                arr[j][i] = arr[i][j] + n - 1\n        for i in range(n):\n            for j in range(n):\n                print(arr[i][j], end=' ')\n            print()", "def solve(n):\n    a = [[0 for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        a[i][i] = 2 * n - 1\n    for k in range(1, n):\n        a[k - 1][n - 1] = k\n        a[n - 1][k - 1] = k + n - 1\n        (i, j) = (k, k)\n        for _ in range(n // 2 - 1):\n            i += 1\n            if i == n:\n                i = 1\n            j -= 1\n            if j == 0:\n                j = n - 1\n            if i < j:\n                a[i - 1][j - 1] = k\n                a[j - 1][i - 1] = k + n - 1\n            else:\n                a[j - 1][i - 1] = k\n                a[i - 1][j - 1] = k + n - 1\n    for i in range(n):\n        print(*a[i])\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('Hooray')\n        print(1)\n    elif n % 2 == 1:\n        print('Boo')\n    else:\n        print('Hooray')\n        solve(n)", "from math import factorial as fac\nimport sys, math\nf = None\ntry:\n    f = open('q1.input', 'r')\nexcept IOError:\n    f = sys.stdin\n\ndef read_int():\n    return int(f.readline())\n\ndef read_int_array():\n    return [int(x) for x in f.readline().split(' ')]\n\ndef rns():\n    a = [x for x in f.readline().split(' ')]\n    return (int(a[0]), a[1].strip())\n\ndef read_string():\n    return list(f.readline())\nNUMBER = 10 ** 9 + 7\n\ndef factorial(n):\n    M = 1000000007\n    f = 1\n    for i in range(1, n + 1):\n        f = f * i % M\n    return f\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        (g, y, x) = egcd(b % a, a)\n        return (g, x - b // a * y, y)\n\ndef modinv(a, m):\n    (g, x, y) = egcd(a, m)\n    if g != 1:\n        raise Exception('modular inverse does not exist')\n    else:\n        return x % m\nfrom collections import defaultdict\n\ndef is_valid(x, d):\n    for y in d:\n        if y == x:\n            if 0 not in d or y == 0:\n                if d[x] != 2:\n                    return False\n                continue\n            if d[0] != d[y] - 2:\n                return False\n            continue\n        if x - y not in d:\n            return False\n        if d[x - y] != d[y]:\n            return False\n    return True\n\ndef solution(N):\n    if N > 1 and N % 2:\n        print('Boo')\n        return\n    print('Hooray')\n    A = [[0 for i in range(N)] for j in range(N)]\n    for i in range(N):\n        A[i][i] = 2 * N - 1\n    for i in range(N - 1):\n        shunned = (N - 1 + i) // 2 if i % 2 else i // 2\n        for j in range(N - 1):\n            if j == shunned:\n                continue\n            couple = (j, (i - j) % (N - 1))\n            A[couple[0]][couple[1]] = 2 * i + 1\n            A[couple[1]][couple[0]] = 2 * i + 2\n        A[N - 1][shunned] = 2 * i + 1\n        A[shunned][N - 1] = 2 * i + 2\n    for i in range(N):\n        print(' '.join(map(str, A[i])))\n    return\n\ndef main():\n    T = read_int()\n    for i in range(T):\n        N = read_int()\n        solution(N)\nmain()", "from math import factorial as fac\nimport sys, math\nf = None\ntry:\n    f = open('q1.input', 'r')\nexcept IOError:\n    f = sys.stdin\n\ndef read_int():\n    return int(f.readline())\n\ndef read_int_array():\n    return [int(x) for x in f.readline().split(' ')]\n\ndef rns():\n    a = [x for x in f.readline().split(' ')]\n    return (int(a[0]), a[1].strip())\n\ndef read_string():\n    return list(f.readline())\nNUMBER = 10 ** 9 + 7\n\ndef factorial(n):\n    M = 1000000007\n    f = 1\n    for i in range(1, n + 1):\n        f = f * i % M\n    return f\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        (g, y, x) = egcd(b % a, a)\n        return (g, x - b // a * y, y)\n\ndef modinv(a, m):\n    (g, x, y) = egcd(a, m)\n    if g != 1:\n        raise Exception('modular inverse does not exist')\n    else:\n        return x % m\nfrom collections import defaultdict\n\ndef is_valid(x, d):\n    for y in d:\n        if y == x:\n            if 0 not in d or y == 0:\n                if d[x] != 2:\n                    return False\n                continue\n            if d[0] != d[y] - 2:\n                return False\n            continue\n        if x - y not in d:\n            return False\n        if d[x - y] != d[y]:\n            return False\n    return True\n\ndef solution(N):\n    if N == 1:\n        print('Hooray\\n1')\n        return\n    if N % 2:\n        print('Boo')\n        return\n    print('Hooray')\n    v = tuple(range(N - 1))\n    A = [[0 for i in range(N)] for j in range(N)]\n    for i in range(N):\n        A[i][i] = 2 * N - 1\n    end = N - 2\n    start = 0\n    for i in range(N - 1):\n        if i % 2:\n            shunned = (N - 1 + i) // 2\n        else:\n            shunned = i // 2\n        s = set()\n        for j in range(N - 1):\n            if j == shunned:\n                continue\n            couple = (j, (i - j) % (N - 1))\n            A[couple[0]][couple[1]] = 2 * i + 1\n            A[couple[1]][couple[0]] = 2 * i + 1 + 1\n        A[N - 1][shunned] = 2 * i + 1\n        A[shunned][N - 1] = 2 * i + 1 + 1\n    for i in range(N):\n        print(' '.join(map(str, A[i])))\n    return\n\ndef main():\n    T = read_int()\n    for i in range(T):\n        N = read_int()\n        solution(N)\nmain()", "def p(arr):\n    if arr is None:\n        print('Boo')\n        return\n    print('Hooray')\n    for row in arr:\n        print(' '.join(list(map(str, row))))\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    if n == 1:\n        arr = [[1]]\n        p(arr)\n        continue\n    if n & 1:\n        p(None)\n        continue\n    if n == 2:\n        arr = [[3, 1], [2, 3]]\n        p(arr)\n        continue\n    m = n // 2\n    arr = [[None for i in range(n)] for j in range(n)]\n    l = [2 * i for i in range(1, m)] + [2 * (m - i) - 1 for i in range(m)]\n    for i in range(n - 1):\n        ind = i + 1\n        arr[0][l[-1]] = ind\n        for j in range(m - 1):\n            arr[l[j]][l[2 * (m - 1) - 1 - j]] = ind\n        l = l[1:] + [l[0]]\n    for i in range(n):\n        arr[i][i] = n\n    for i in range(n):\n        for j in range(n):\n            if arr[i][j] is None:\n                arr[i][j] = n + arr[j][i]\n    p(arr)"]