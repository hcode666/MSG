["import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    a = s.split()\n    min_string = min(a, key=len)\n    length = 0\n    sub_str = ''\n    length_sub_str = 0\n    longest_sub_str = ''\n    for i in range(0, len(min_string)):\n        for j in range(i + 1, len(min_string) + 1):\n            sub_str = min_string[i:j]\n            flag = False\n            for ele in a:\n                if sub_str in ele:\n                    flag = True\n                else:\n                    flag = False\n                    break\n            if flag == True:\n                if length_sub_str < len(sub_str):\n                    length_sub_str = len(sub_str)\n                    longest_sub_str = sub_str\n                elif length_sub_str == len(sub_str):\n                    if longest_sub_str > sub_str:\n                        longest_sub_str = sub_str\n    print(longest_sub_str)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    a = s.split()\n    min_string = min(a, key=len)\n    length = 0\n    sub_str = ''\n    length_sub_str = 0\n    longest_sub_str = ''\n    for i in range(0, len(min_string)):\n        for j in range(i + 1, len(min_string) + 1):\n            sub_str = min_string[i:j]\n            flag = False\n            for ele in a:\n                if sub_str in ele:\n                    flag = True\n                else:\n                    flag = False\n                    break\n            if flag == True:\n                if length_sub_str < len(sub_str):\n                    length_sub_str = len(sub_str)\n                    longest_sub_str = sub_str\n                elif length_sub_str == len(sub_str):\n                    if longest_sub_str > sub_str:\n                        longest_sub_str = sub_str\n    print(longest_sub_str)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    a = s.split()\n    min_string = min(a, key=len)\n    length = 0\n    sub_str = ''\n    length_sub_str = 0\n    longest_sub_str = ''\n    for i in range(0, len(min_string)):\n        for j in range(i + 1, len(min_string) + 1):\n            sub_str = min_string[i:j]\n            flag = False\n            for ele in a:\n                if sub_str in ele:\n                    flag = True\n                else:\n                    flag = False\n                    break\n            if flag == True:\n                if length_sub_str < len(sub_str):\n                    length_sub_str = len(sub_str)\n                    longest_sub_str = sub_str\n                elif length_sub_str == len(sub_str):\n                    if longest_sub_str > sub_str:\n                        longest_sub_str = sub_str\n    print(longest_sub_str)", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    w = sys.stdin.readline().strip()\n    words = w.split()\n    shortest_word = min(words, key=len)\n    longest_substr_len = 0\n    longest_substr = ''\n    for i in range(0, len(shortest_word)):\n        for j in range(i + 1, len(shortest_word) + 1):\n            sub_str = shortest_word[i:j]\n            found = True\n            for word in words:\n                if sub_str not in word:\n                    found = False\n                    break\n            if found:\n                if len(sub_str) > longest_substr_len:\n                    longest_substr_len = len(sub_str)\n                    longest_substr = sub_str\n                elif len(sub_str) == longest_substr_len:\n                    if sub_str < longest_substr:\n                        longest_substr_len = len(sub_str)\n                        longest_substr = sub_str\n    print(longest_substr)", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    w = sys.stdin.readline().strip()\n    words = w.split()\n    shortest_word = min(words, key=len)\n    longest_substr_len = 0\n    longest_substr = ''\n    for i in range(0, len(shortest_word)):\n        for j in reversed(range(i + 1, len(shortest_word) + 1)):\n            sub_str = shortest_word[i:j]\n            found = True\n            for word in words:\n                if sub_str not in word:\n                    found = False\n                    break\n            if found:\n                if len(sub_str) > longest_substr_len:\n                    longest_substr_len = len(sub_str)\n                    longest_substr = sub_str\n                elif len(sub_str) == longest_substr_len:\n                    if sub_str < longest_substr:\n                        longest_substr_len = len(sub_str)\n                        longest_substr = sub_str\n    print(longest_substr)", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    w = sys.stdin.readline().strip()\n    words = w.split()\n    shortest_word = min(words, key=len)\n    longest_substr_len = 0\n    longest_substr = ''\n    for i in range(0, len(shortest_word)):\n        for j in reversed(range(i + 1, len(shortest_word) + 1)):\n            sub_str = shortest_word[i:j]\n            found = True\n            for word in words:\n                if sub_str not in word:\n                    found = False\n                    break\n            if found:\n                if len(sub_str) > longest_substr_len:\n                    longest_substr_len = len(sub_str)\n                    longest_substr = sub_str\n                elif len(sub_str) == longest_substr_len:\n                    if sub_str < longest_substr:\n                        longest_substr_len = len(sub_str)\n                        longest_substr = sub_str\n    print(longest_substr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(str, input().split()))\n    for i in range(n):\n        y = l[i]\n        x = list()\n        for j in range(len(y)):\n            for k in range(j + 1, len(y)):\n                x.append(y[j:k + 1])\n        if i == 0:\n            xl = set(x)\n        else:\n            ans = set(x)\n            xl = xl.intersection(ans)\n    xl = list(xl)\n    xl.sort()\n    a = 0\n    s = ''\n    for i in xl:\n        if len(i) > a:\n            a = len(i)\n            s = i\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(str, input().split()))\n    for i in range(n):\n        y = l[i]\n        x = list()\n        for j in range(len(y)):\n            for k in range(j + 1, len(y)):\n                x.append(y[j:k + 1])\n        if i == 0:\n            xl = set(x)\n        else:\n            ans = set(x)\n            xl = xl.intersection(ans)\n    xl = list(xl)\n    xl.sort()\n    a = 0\n    s = ''\n    for i in xl:\n        if len(i) > a:\n            a = len(i)\n            s = i\n    print(s)", "import sys\nimport queue\nt = int(input())\nwhile t:\n    n = int(input())\n    line = input().split()\n    w = [x for x in line]\n    n1 = len(w[0])\n    ans = ''\n    for size in range(1, n1 + 1):\n        for i in range(0, n1 - size + 1):\n            flag = True\n            for k in range(n):\n                if w[0][i:i + size] not in w[k]:\n                    flag = False\n                    break\n            if flag:\n                if ans == '' or size > len(ans):\n                    ans = w[0][i:i + size]\n                elif len(ans) == size:\n                    if w[0][i:i + size] < ans:\n                        ans = w[0][i:i + size]\n    sys.stdout.write(ans + '\\n')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    z = input().strip().split()\n    w = list(z[:n])\n    wlen = [len(aw) for aw in w]\n    mlen = min(wlen)\n    ref = w[wlen.index(mlen)]\n    subs = []\n    for pos in range(mlen):\n        if all((ref[pos] in aw for aw in w)):\n            subs.append(pos)\n    if len(subs) == 0:\n        print()\n        continue\n    tlen = 2\n    while True:\n        nsubs = []\n        for pos in subs:\n            if pos + 1 in subs:\n                if all((ref[pos:pos + tlen] in aw for aw in w)):\n                    nsubs.append(pos)\n        if len(nsubs) == 0:\n            break\n        subs = nsubs\n        tlen += 1\n    tlen -= 1\n    ans = [ref[pos:pos + tlen] for pos in subs]\n    ans.sort()\n    print(ans[0])", "def check(x, l):\n    count = 0\n    for i in range(len(l)):\n        if x in l[i]:\n            count += 1\n    return count\nfor j in range(int(input())):\n    n = int(input())\n    l = input().split(' ')\n    min_len = 30\n    index_min = 0\n    for i in l:\n        if len(i) < min_len:\n            min_len = len(i)\n            index_min = l.index(i)\n    x = l[index_min]\n    i = 0\n    j = len(x) - 1\n    m = n = 0\n    p = 0\n    while i < len(x):\n        j = len(x)\n        while j > -1:\n            c = check(x[i:j], l)\n            if c == len(l):\n                if p < len(x[i:j]):\n                    p = len(x[i:j])\n                    m = i\n                    n = j\n            j -= 1\n        i += 1\n    print(x[m:n])", "def check(x, l):\n    count = 0\n    for i in range(len(l)):\n        if x in l[i]:\n            count += 1\n    return count\nfor j in range(int(input())):\n    n = int(input())\n    l = input().split(' ')\n    min_len = 30\n    index_min = 0\n    for i in l:\n        if len(i) < min_len:\n            min_len = len(i)\n            index_min = l.index(i)\n    x = l[index_min]\n    i = 0\n    j = len(x) - 1\n    m = n = 0\n    p = 0\n    while i < len(x):\n        j = len(x)\n        while j > -1:\n            c = check(x[i:j], l)\n            if c == len(l):\n                if p < len(x[i:j]):\n                    p = len(x[i:j])\n                    m = i\n                    n = j\n            j -= 1\n        i += 1\n    print(x[m:n])", "def check(x, l):\n    count = 0\n    for i in range(len(l)):\n        if x in l[i]:\n            count += 1\n    return count\nfor j in range(int(input())):\n    n = int(input())\n    l = input().split(' ')\n    min_len = 30\n    index_min = 0\n    for i in l:\n        if len(i) < min_len:\n            min_len = len(i)\n            index_min = l.index(i)\n    x = l[index_min]\n    i = 0\n    j = len(x) - 1\n    m = n = 0\n    p = 0\n    while i < len(x):\n        j = len(x)\n        while j > -1:\n            c = check(x[i:j], l)\n            if c == len(l):\n                if p < len(x[i:j]):\n                    p = len(x[i:j])\n                    m = i\n                    n = j\n            j -= 1\n        i += 1\n    print(x[m:n])", "for _ in range(int(input())):\n    n = int(input())\n    s = [s for s in input().split()]\n    s.sort(key=len)\n    s1 = s[0]\n    l = []\n    for i in range(0, len(s1)):\n        for j in range(i + 1, len(s1) + 1):\n            l.append(s1[i:j])\n    ans = ''\n    for ele in l:\n        for words in s:\n            if not ele in words:\n                break\n        else:\n            if len(ele) > len(ans):\n                ans = ele\n            if len(ele) == len(ans):\n                if ele < ans:\n                    ans = ele\n    print(ans)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    string = input().split(' ')\n    string.sort(key=len)\n    subst = ''\n    for j in range(len(string[0])):\n        for k in range(j + 1, len(string[0]) + 1):\n            word = string[0][j:k]\n            value = True\n            for l in string[1:]:\n                if word not in l:\n                    value = False\n                    break\n            if value:\n                if len(word) > len(subst):\n                    subst = word\n                elif len(word) == len(subst) and subst > word:\n                    subst = word\n    print(subst)", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    w = [x for x in input().split()]\n    a = max(w, key=len)\n    l = len(a)\n    candidate = []\n    while l > 0:\n        i = 0\n        while i + l <= len(a):\n            if all((a[i:i + l] in s for s in w)):\n                candidate.append(a[i:i + l])\n                i += 1\n            else:\n                i += 1\n        if not len(candidate) == 0:\n            break\n        l -= 1\n    candidate.sort()\n    print(candidate[0])", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    (w, l) = ([], [])\n    S = input()\n    w = S.split()\n    for j in w:\n        l.append(len(j))\n    ppe = w[l.index(min(l))]\n    w.remove(ppe)\n    (a, b) = (0, len(ppe))\n    ppeTemp = ''\n    while a != len(ppe):\n        test = True\n        for k in w:\n            if not ppe[a:b] in k:\n                test = False\n                break\n        if test and len(ppe[a:b]) > len(ppeTemp):\n            ppeTemp = ppe[a:b]\n        elif b != a:\n            b = b - 1\n        else:\n            a = a + 1\n            b = len(ppe)\n    print(ppeTemp)", "for t in range(int(input())):\n    n = int(input())\n    a = list(input().split(' '))\n    d = ''\n    count = 0\n    max = 0\n    mx = ''\n    for i in range(len(a[0])):\n        count = 0\n        for k in range(i, len(a[0])):\n            d += a[0][k]\n            count = 0\n            for j in a[1:]:\n                if d in j:\n                    count += 1\n            if count == n - 1:\n                if len(d) > max:\n                    max = len(d)\n                    mx = d\n                elif len(d) == max:\n                    mx = min(d, mx)\n        else:\n            d = ''\n    print(mx)", "def producesubstrings(s, x):\n    subs = []\n    for i in range(0, len(s) - x + 1):\n        subs.append(s[i:x + i])\n    return subs\nt = int(input())\nwhile t:\n    answer = []\n    t = t - 1\n    n = int(input())\n    s = input()\n    list = s.split()\n    min = len(list[0])\n    smalleststring = list[0]\n    smallstrings = []\n    for s in list:\n        if len(s) < min:\n            min = len(s)\n            smalleststring = s\n    for s in list:\n        if len(s) == len(smalleststring):\n            smallstrings.append(s)\n    for ss in smallstrings:\n        for i in range(len(ss), 0, -1):\n            flag = 0\n            subs = producesubstrings(ss, i)\n            for s in subs:\n                flag = 0\n                for x in list:\n                    if not s in x:\n                        flag = 1\n                        break\n                if flag == 0:\n                    answer.append(s)\n            if flag == 0:\n                break\n    max = len(answer[0])\n    for a in answer:\n        if len(a) > max:\n            max = len(a)\n    answer1 = []\n    for a in answer:\n        if len(a) == max:\n            answer1.append(a)\n    answer1.sort()\n    print(answer1[0])", "import sys\nt = int(sys.stdin.readline())\nfor it in range(t):\n    n = int(sys.stdin.readline())\n    strs = sys.stdin.readline().split(' ')\n    strs.sort(key=len)\n    start = mxlen = 0\n    stop = 1\n    mxterm = ''\n    while start < len(strs[0]) and stop < len(strs[0]) + 1:\n        temp = strs[0][start:stop]\n        valid = True\n        for ph in strs[1:]:\n            if temp not in ph:\n                valid = False\n                break\n        if not valid:\n            start += 1\n            if stop <= start:\n                stop = start + 1\n        else:\n            if mxlen < len(temp):\n                mxlen = len(temp)\n                mxterm = temp\n            stop += 1\n    print(mxterm)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input().split())\n    mxl = 0\n    mx = ''\n    for i in range(len(a[0])):\n        st = ''\n        for j in range(i, len(a[0])):\n            st += a[0][j]\n            cnt = 0\n            for k in a[1:]:\n                if st in k:\n                    cnt += 1\n            if cnt == n - 1:\n                if len(st) > mxl:\n                    mxl = len(st)\n                    mx = st\n                elif len(st) == mxl:\n                    mx = min(st, mx)\n    print(mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input().split())\n    mxl = 0\n    mx = ''\n    for i in range(len(a[0])):\n        st = ''\n        for j in range(i, len(a[0])):\n            st += a[0][j]\n            cnt = 0\n            for k in a[1:]:\n                if st in k:\n                    cnt += 1\n            if cnt == n - 1:\n                if len(st) > mxl:\n                    mxl = len(st)\n                    mx = st\n                elif len(st) == mxl:\n                    mx = min(st, mx)\n    print(mx)", "def rec(L, index, common):\n    ans = []\n    for i in range(0, len(common)):\n        if L[index].find(common[i], 0, len(L[index])) > -1:\n            ans.append(common[i])\n    return ans\nt = int(input())\nfor deju in range(t):\n    L = []\n    n = int(input())\n    L = input().split()\n    if n == 1:\n        print(L[0])\n        continue\n    common = []\n    for i in range(0, len(L[0])):\n        for j in range(i, len(L[0])):\n            if L[1].find(L[0][i:j + 1], 0, len(L[1])) > -1:\n                common.append(L[0][i:j + 1])\n    for i in range(2, n):\n        common = rec(L, i, common)\n    maxi = 0\n    ans = []\n    for i in range(len(common)):\n        maxi = max(maxi, len(common[i]))\n    for i in range(len(common)):\n        if len(common[i]) == maxi:\n            ans.append(common[i])\n    ans.sort()\n    print(ans[0])", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    u = None\n    for w in input().split():\n        s = set()\n        m = len(w)\n        for l in range(m):\n            for r in range(l + 1, m + 1):\n                s.add(w[l:r])\n        if u is None:\n            u = s\n        else:\n            u &= s\n    print(min(u, key=lambda s: (-len(s), s)))", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    u = None\n    for w in input().split():\n        s = set()\n        m = len(w)\n        for l in range(m):\n            for r in range(l + 1, m + 1):\n                s.add(w[l:r])\n        if u is None:\n            u = s\n        else:\n            u &= s\n    print(max(u, key=lambda s: len(s)))", "import math\nfrom decimal import *\nimport sys\n\ndef ok(word):\n    ans = 1\n    l0 = len(word)\n    for j in range(1, n):\n        fail = 1\n        l = len(S[j])\n        for k in range(0, l - l0 + 1):\n            if S[j][k:k + l0] == word:\n                fail = 0\n        if fail == 1:\n            ans = 0\n    return ans\nT = int(input())\nfor i in range(0, T):\n    n = int(input())\n    S = input().split()\n    l0 = len(S[0])\n    ml = 0\n    L = []\n    for j in range(0, l0):\n        for k in range(j, l0):\n            if ok(S[0][j:k + 1]) == 1:\n                L.append(S[0][j:k + 1])\n                if len(S[0][j:k + 1]) > ml:\n                    ml = len(S[0][j:k + 1])\n    L2 = []\n    for j in L:\n        if len(j) == ml:\n            L2.append(j)\n    L2.sort()\n    if len(L2) == 0:\n        print()\n    else:\n        print(L2[0])", "def smallest_word(arr, n):\n    w = arr[0]\n    length = len(arr[0])\n    for word in arr:\n        if len(word) < length:\n            w = word\n            length = len(word)\n    return w\n\ndef solve(arr, n):\n    w = smallest_word(arr, n)\n    length = 0\n    s = ''\n    for i in range(0, len(w)):\n        for j in range(i + 1, len(w) + 1):\n            substring = w[i:j]\n            if j - i < length:\n                continue\n            flag = True\n            for word in arr:\n                if substring not in word:\n                    flag = False\n                    break\n            if flag and (j - i > len(s) or (substring < s and len(substring) == len(s))):\n                s = substring\n    print(s)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input().split()\n    solve(arr, n)", "import sys\nT = sys.stdin.readline()\nfor i in range(int(T)):\n    root = ''\n    n = sys.stdin.readline()\n    words = sys.stdin.readline().split()\n    for j in range(len(words[0])):\n        for k in range(len(words[0])):\n            pot_root = words[0][j:k + 1]\n            r = True\n            for item in words:\n                if pot_root not in item:\n                    r = False\n            if r == True and len(pot_root) >= len(root):\n                if len(root) == len(pot_root):\n                    if pot_root < root:\n                        root = pot_root\n                else:\n                    root = pot_root\n    print(root)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    words = input().split()\n    L = len(words[0])\n    ans = ''\n    for i in range(L):\n        for j in range(L):\n            s = words[0][j:i + 1]\n            for word in words:\n                if s not in word:\n                    break\n            else:\n                if len(s) > len(ans) or (len(s) == len(ans) and s < ans):\n                    ans = s\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = input().split()\n    r = ''\n    for i in range(len(s[0])):\n        for j in range(i + 1, len(s[0]) + 1):\n            t = s[0][i:j]\n            for p in s:\n                if p.count(t) == 0:\n                    t = ''\n            if (len(t), r) > (len(r), t):\n                r = t\n    print(r)"]