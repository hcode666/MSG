["from math import log2, floor\n\ndef soln(x, k):\n    n = k - (1 << floor(log2(k)))\n    return (2 * n + 1) * x / (1 << floor(log2(k)) + 1)\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    print(soln(x, k))", "from math import log2, floor\n\ndef soln(x, k):\n    n = k - (1 << floor(log2(k)))\n    return (2 * n + 1) * x / (1 << floor(log2(k)) + 1)\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    print(soln(x, k))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (a1, b1) = (2, 1)\n    while a1 <= k:\n        (a1, b1) = (a1 * 2, a1)\n    print(x / a1 * (1 + 2 * (k - b1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (a1, b1) = (2, 1)\n    while a1 <= k:\n        (a1, b1) = (a1 * 2, a1)\n    print(x / a1 * (1 + 2 * (k - b1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "import math\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    a = math.floor(math.log2(k))\n    b = k - math.pow(2, a)\n    c = x / math.pow(2, a + 1) * (2 * b + 1)\n    print(round(c, 10))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = len(str(bin(k))) - 3\n    dd = 2 ** b\n    print((k - dd) * (n / dd) + n / (2 * dd))", "import math\nt = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    y = int(math.log2(k))\n    z = 2 ** y\n    m = k - z\n    ans = (2 * m + 1) * x / 2 ** (y + 1)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    y = int(math.log2(k))\n    z = 2 ** y\n    m = k - z\n    ans = (2 * m + 1) * x / 2 ** (y + 1)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    y = int(math.log2(k))\n    z = 2 ** y\n    m = k - z\n    ans = (2 * m + 1) * x / 2 ** (y + 1)\n    print(ans)", "import math\nfrom decimal import Decimal\nt = int(input())\nfor _ in range(t):\n    (x, k) = list(map(int, input().split()))\n    power_0f_2 = int(math.log(k, 2))\n    diff = Decimal(x) / Decimal(2 ** (power_0f_2 + 1))\n    remaining_points = Decimal(k) - Decimal(2 ** power_0f_2)\n    if remaining_points == 0:\n        print(round(Decimal(diff), 8))\n    else:\n        remaining_points += 1\n        a = diff\n        d = 2 * Decimal(diff)\n        k = remaining_points\n        print(round(Decimal(a) + Decimal(k - 1) * Decimal(d), 6))", "import math\nfrom decimal import Decimal\nt = int(input())\nfor _ in range(t):\n    (x, k) = list(map(int, input().split()))\n    power_0f_2 = int(math.log(k, 2))\n    diff = Decimal(x) / Decimal(2 ** (power_0f_2 + 1))\n    remaining_points = Decimal(k) - Decimal(2 ** power_0f_2)\n    if remaining_points == 0:\n        print(round(Decimal(diff), 10))\n    else:\n        remaining_points += 1\n        a = diff\n        d = 2 * Decimal(diff)\n        k = remaining_points\n        print(round(Decimal(a) + Decimal(k - 1) * Decimal(d), 10))", "import math\nT = int(input())\nfor _ in range(T):\n    (x, k) = map(int, input().split())\n    y = int(math.log2(k))\n    z = 2 ** y\n    m = k - z\n    print((2 * m + 1) * x / 2 ** (y + 1))", "import math\nT = int(input())\nfor _ in range(T):\n    (x, k) = map(int, input().split())\n    y = int(math.log2(k))\n    z = 2 ** y\n    m = k - z\n    print((2 * m + 1) * x / 2 ** (y + 1))", "import math\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    a = math.floor(math.log2(k))\n    b = k - math.pow(2, a)\n    c = x / math.pow(2, a + 1) * (2 * b + 1)\n    print(round(c, 10))", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)) + '\\n')\n\ndef main():\n    for _ in tr():\n        (x, k) = sm()\n        part = 2 ** math.floor(math.log2(k))\n        print(x / part * (0.5 + k - part))\nmain()", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfor i in range(t):\n    (x, k) = map(int, input().split())\n    (x1, y1) = (2, 1)\n    while x1 <= k:\n        (x1, y1) = (x1 * 2, x1)\n    print(x / x1 * (1 + 2 * (k - y1)))", "t = int(input())\nfrom math import log, ceil, floor\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    v = floor(log(k, 2))\n    block = 1 << v + 1\n    print(n / block * (1 + (k - 2 ** v) * 2))", "T = int(input())\nfor _ in range(T):\n    (X, K) = [int(x) for x in input().split()]\n    (x, y) = (2, 1)\n    while x <= K:\n        (x, y) = (x * 2, x)\n    print(X / x * (1 + 2 * (K - y)))", "from math import log, floor\nT = int(input())\nfor _ in range(T):\n    (X, K) = [int(x) for x in input().split()]\n    k = floor(log(K, 2))\n    x = 2 ** k\n    print(X / x * (0.5 + K - x))", "T = int(input())\nfor _ in range(T):\n    (X, K) = [int(x) for x in input().split()]\n    (k, x, y) = (1, 2, 1)\n    while x <= K:\n        (k, x, y) = (k + 1, x * 2, x)\n    print(X / x + (K - y) * X / y)", "from math import log, floor\nT = int(input())\nfor _ in range(T):\n    (X, K) = [int(x) for x in input().split()]\n    k = floor(log(K, 2))\n    x = 2 ** k\n    print(X / x * (0.5 + K - x))", "T = int(input())\nfor _ in range(T):\n    (X, K) = [int(x) for x in input().split()]\n    (k, x, y) = (1, 2, 1)\n    while x <= K:\n        (k, x, y) = (k + 1, x * 2, x)\n    print(X / x + (K - y) * X / y)", "a = int(input())\nfrom bisect import bisect_right as br\nb = [1]\nfor i in range(41):\n    b.append(b[-1] * 2)\nfor _ in range(a):\n    aa = list(map(int, input().rstrip().split()))\n    c = br(b, aa[1])\n    if b[c] == b[c - 1]:\n        print(aa[0] / b[c])\n    else:\n        print(aa[0] / b[c] + aa[1] % b[c - 1] * (aa[0] / b[c - 1]))", "from math import *\nfor _ in range(int(input())):\n    (x, k) = input().split()\n    (x, k) = (int(x), int(k))\n    temp = int(log2(k)) + 1\n    ans = k % pow(2, temp - 1) * (x / pow(2, temp - 1)) + x / pow(2, temp)\n    print(ans)", "two = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, 4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 549755813888, 1099511627776, 2199023255552, 4398046511104, 8796093022208, 17592186044416]\nfor __ in range(int(input())):\n    (x, k) = input().split()\n    x = int(x)\n    k = int(k)\n    for c in two:\n        if c > k:\n            ours = c\n            break\n    ans = x / ours\n    if k not in two:\n        print('{0:.6f}'.format(ans * ((k - ours // 2) * 2 + 1)))\n    else:\n        print('{0:.6f}'.format(ans))", "import math\nt = int(input())\nwhile t:\n    (x, k) = map(int, str(input()).split())\n    if k == 1:\n        ans = float(x / 2.0)\n        print('%.12f' % ans)\n    else:\n        l = int(math.log(k, 2))\n        pre = int(1 << l)\n        l += 1\n        nex = int(1 << l)\n        d1 = float(x / pre)\n        d2 = float(x / nex)\n        if not k & k - 1:\n            print('%.12f' % d2)\n        else:\n            dist = int(k - pre)\n            ans = float(d2 + dist * d1)\n            print('%.12f' % ans)\n    t -= 1", "import math\nt = int(input())\nfor i in range(0, t):\n    line = input()\n    l = line.split(' ')\n    x = int(l[0])\n    k = int(l[1])\n    q = 0\n    a = 0\n    b = x\n    p = 0\n    lg = math.floor(math.log(k, 2))\n    pw = math.pow(2, lg + 1)\n    temp = x / pw\n    a = temp\n    p = a\n    tw = math.pow(2, lg)\n    temp = x / tw\n    q = int(tw)\n    p = a + (k - q) * 2 * a\n    print('%.10f' % p)", "import sys\nT = input()\nfor inp in sys.stdin:\n    (x, k) = map(int, inp.split())\n    v = 2\n    val = 1\n    while val <= k:\n        val *= v\n    val /= 2\n    ans = x / (val * 2)\n    ans = ans + ans * 2 * (k - val)\n    print('%.8f' % ans)", "def solve():\n    [x, k] = input().split()\n    (x, k) = (float(x), int(k))\n    cnt = 1\n    while cnt < k:\n        (k, cnt) = (k - cnt, cnt * 2)\n    print('%.6f' % (x / (cnt * 2) + (k - 1) * x / cnt))\nfor t in range(0, int(input())):\n    solve()", "def nextpoweroftwo(a):\n    p = 1\n    while p <= a:\n        p = p << 1\n    return p\n\ndef solution(x, k):\n    n = nextpoweroftwo(k)\n    xbyn = x / n\n    nbytwo = n // 2\n    a = k - nbytwo\n    a = 2 * a + 1\n    return a * xbyn\ntstr = input()\nt = int(tstr)\nans = []\nfor i in range(t):\n    xk = input().split(' ')\n    x = int(xk[0])\n    k = int(xk[1])\n    ans.append(solution(x, k))\nfor i in ans:\n    print('%.8f' % i)", "import math\nt = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    cur_den = math.ceil(math.log(y, 2))\n    cur_den = 1 << cur_den\n    next_den = cur_den\n    cur_den = cur_den >> 1\n    if y & y - 1 == 0:\n        next_den = next_den << 1\n        cur_den = cur_den << 1\n    ans = x / next_den\n    if cur_den > 0:\n        ans += (y - cur_den) * x / cur_den\n    print('%.6f' % ans)\n    t -= 1", "from math import *\n\ndef pow2le(n):\n    e = floor(log(n, 2))\n    return 2 ** (e + 1)\n\ndef main():\n    T = eval(input())\n    for t in range(T):\n        (x, k) = [int(z) for z in input().split()]\n        den = pow2le(k)\n        b = den // 2\n        diff = k - b\n        num = (1 + 2 * diff) * x\n        print('%.6f' % (num / den))\nmain()"]