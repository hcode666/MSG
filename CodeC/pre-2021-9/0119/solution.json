["(n1, n2, n3) = map(int, input().split())\nif (n3 - n1) // n2 % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(n1, n2, n3) = map(int, input().split())\nif (n3 - n1) // n2 % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacketCost, sockCost, money) = [int(x) for x in input().split()]\nprint('Unlucky Chef') if (money - jacketCost) // sockCost % 2 else print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nans = (money - jacketCost) // sockCost\nif ans % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacket, socks, money) = map(int, input().split(' '))\nremaining = money - jacket\nif remaining // socks % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nres = (m - j) // s % 2\nprint('Unlucky Chef' if res else 'Lucky Chef')", "(jacket, socks, money) = map(int, input().split(' '))\nremaining = money - jacket\nif remaining // socks % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split(' '))\nn = c - a\nif n // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nt = m - j\nprint('Lucky Chef') if t // s % 2 == 0 else print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nz = z - x\nk = z // y\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nm -= j\nprint('Lucky Chef' if m // s % 2 == 0 else 'Unlucky Chef')", "(x, y, z) = map(int, input().split())\nz = z - x\nk = z // y\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nif z - x > 0:\n    c = z - x\n    d = c // y\n    if d % 2 == 0:\n        print('Lucky Chef')\n    else:\n        print('Unlucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacketcost, sockcost, money) = map(int, input().split())\nleft_money = money - jacketcost\nsock = left_money // sockcost\nprint('Lucky Chef') if sock % 2 == 0 else print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(a, b, c) = map(int, input().split())\nsock_balance = (c - a) // b % 2\nprint('Unlucky Chef' if sock_balance else 'Lucky Chef')", "(j, s, m) = map(int, input().split())\nm = m - j\nm = int(m) // s\nif m % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nif z - x > 0:\n    c = z - x\n    d = c // y\n    if d % 2 == 0:\n        print('Lucky Chef')\n    else:\n        print('Unlucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacket, sock, money) = map(int, input().split())\nif (money - jacket) // sock % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nd = c - a\ne = d // b\nif e % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "import sys\n(life, wife, aim) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (aim - life) // wife % 2 == 0 else 'Unlucky Chef\\n')", "(j, s, m) = map(int, input().split())\nres = (m - j) // s % 2\nprint('Unlucky Chef' if res else 'Lucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(jacketCost, sockCost, money) = map(int, input().split())\nans = (money - jacketCost) // sockCost\nif ans % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nans = (money - jacketCost) // sockCost\nif ans % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nans = (money - jacketCost) // sockCost\nif ans % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jc, sc, m) = map(int, input().split())\nmrem = m - jc\nn = mrem // sc\nif n % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jc, sc, m) = map(int, input().split())\nm = m - jc\nif m // sc % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "x = input().split()\nl = []\nfor i in x:\n    i = int(i)\n    l.append(i)\nc = l[2]\nc = c - l[0]\nc = c // l[1]\nc = int(c)\nif c % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(x, y, z) = map(int, input().split())\nif (z - x) // y % 2:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(x, y, z) = map(int, input().split())\nt = (z - x) // y\nif t % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nm = m - j\nr = m % (2 * s)\nif r < s:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef ')", "(jacketCost, sockCost, money) = map(int, input().split())\ndiff = money - jacketCost\nif diff // sockCost % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nif (z - x) // y % 2 == 0:\n    print('Lucky Chef\\n')\nelse:\n    print('Unlucky Chef\\n')", "(jacket, sock, intial) = map(int, input().split())\nmoney = intial - jacket\ncount = money // sock\nif count % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(j, s, m) = map(int, input().split())\nres = (m - j) // s % 2\nprint('Unlucky Chef' if res else 'Lucky Chef')", "(x, y, z) = map(int, input().split())\nt = z - x\nk = t // y\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nt = z - x\nk = t // y\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nz = m - j\nk = z // s\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nz = m - j\nk = z // s\nif k % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(x, y, z) = map(int, input().split())\nif (z - x) // y % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacket, sock, intial) = map(int, input().split())\nmoney = intial - jacket\ncount = money // sock\nif count % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nremainin_money = money - jacketCost\nnumber_of_socks = remainin_money // sockCost\nif number_of_socks % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "lis = list(map(int, input().split()))\njacket = lis[0]\nsock = lis[1]\nmoney = lis[2] - jacket\nif money % (sock * 2) < sock:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(J, S, M) = [int(x) for x in input('').split()]\nN = M - J\nY = N // S\nif Y % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(J, S, M) = map(int, input().split())\nif (M - J) // S % 2 == 1:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(a, b, c) = map(int, input().split())\nd = c - a\nif d // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "def solve():\n    rem = money - j_cost\n    sock = rem // s_cost\n    if sock % 2 == 0:\n        return 'Lucky Chef'\n    else:\n        return 'Unlucky Chef'\n(j_cost, s_cost, money) = map(int, input().split())\nprint(solve())", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(a, b, c) = map(int, input().split())\nprint('Unlucky Chef' if (c - a) // b % 2 == 1 else 'Lucky Chef')", "(j, s, m) = map(int, input().split())\nr = m - j\np = r // s\nif p % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nr = m - j\np = r // s\nif p % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nx = c - a\nif x // b % 2 == 1:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nprint('Unlucky Chef') if (money - jacketCost) // sockCost % 2 == 1 else print('Lucky Chef')", "(i, j, k) = map(int, input().split())\nk -= i\nval = k // j\nif val % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = list(map(int, input().split()))\nm -= j\nm //= s\nm %= 2\nif m == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nx = (money - jacketCost) // sockCost\nif x == 0:\n    print('Unlucky Chef')\nelif x % 2 == 1:\n    print('Unlucky  Chef')\nelse:\n    print('Lucky Chef')", "(jc, sc, m) = map(int, input().split())\nd = m - jc\nif d // sc % 2 == 1:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(J, S, M) = map(int, input().split())\nM -= J\ncount = M // S\nprint('Unlucky Chef') if count % 2 else print('Lucky Chef')", "(j, s, m) = map(int, input().split())\nr = m - j\nif r <= 0:\n    print('Unlucky Chef')\nelse:\n    res = int(r / s)\n    if res >= 2:\n        if res % 2 == 0:\n            print('Lucky Chef')\n        else:\n            print('Unlucky Chef')\n    else:\n        print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nb = m - j\nn = b // s\nif n % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(j, s, m) = map(int, input().split())\nm = m - j\nif m // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split(' '))\nm -= j\ncount = int(m / s)\nif count % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split(' '))\nm -= j\ncount = int(m / s)\nif count % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split(' '))\nm -= j\ncount = int(m / s)\nif count % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split(' '))\nm -= j\ncount = int(m / s)\nif count % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "a = [int(x) for x in input().split()]\nx = a[2] - a[0]\nx = x // a[1]\nif x % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "import sys\n(j, s, m) = map(int, sys.stdin.readline().split())\nsys.stdout.write('Lucky Chef\\n' if (m - j) // s % 2 == 0 else 'Unlucky Chef\\n')", "(j, s, m) = map(int, input().split())\nso = (m - j) // s\nif so % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nx = (m - j) // s\nprint('Unlucky  Chef') if x % 2 != 0 else print('Lucky Chef')", "(j, s, m) = map(int, input().split())\nk = m - j\nif k // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nremaining_money = money - jacketCost\nno_of_socks = remaining_money // sockCost\nprint('Unlucky Chef' if no_of_socks % 2 == 1 else 'Lucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nif (m - j) // s % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(J, S, M) = (int(item) for item in input().split())\nmoneyLeft = M - J\nnoOfSocks = moneyLeft // S\nif noOfSocks % 2 != 0:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nmoney = money - jacketCost\nsocks = money // sockCost\nif socks % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jacketCost, sockCost, money) = map(int, input().split())\nif (money - jacketCost) // sockCost % 2:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "import math\n(J, S, M) = map(int, input().split(' '))\nM = M - J\nif math.floor(M // S) % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(jC, sC, m) = map(int, input().split())\nprint('Lucky Chef' if (m - jC) // sC % 2 == 0 else 'Unlucky Chef')", "(x, y, z) = map(int, input().split())\nif (z - x) // y % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nm = m - j\nif m // s % 2 == 0 and m > s:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(j, s, m) = map(int, input().split())\nm -= j\nn = m // s % 2\nif n:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(a, b, c) = map(int, input().split())\nif (c - a) // b % 2 == 1:\n    print('Unlucky Chef')\nelse:\n    print('Lucky Chef')", "(JC, SC, M) = map(int, input().split())\nif (M - JC) // SC % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')", "(JC, SC, M) = map(int, input().split())\nif (M - JC) // SC % 2 == 0:\n    print('Lucky Chef')\nelse:\n    print('Unlucky Chef')"]