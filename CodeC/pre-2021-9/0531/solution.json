["import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n):\n        if math.gcd(i, n) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "def hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(2, n, 1):\n        if hcf(n, i) == 1:\n            ans += 1\n    print(ans)", "vec = []\n\ndef precal():\n    ne = 5000\n    is_prime = [True] * (ne + 1)\n    is_prime[0] = is_prime[1] = False\n    p = 2\n    while p * p <= ne:\n        if is_prime[p]:\n            for i in range(p * p, ne + 1, p):\n                is_prime[i] = False\n        p += 1\n    for i in range(2, ne + 1):\n        if is_prime[i]:\n            vec.append(i)\nprecal()\nfor i in range(int(input())):\n    n = int(input())\n    result = n - 1\n    vec2 = [0] * n\n    for v in vec:\n        if v > n // 2:\n            break\n        if n % v == 0:\n            for i in range(v, n, v):\n                vec2[i] = 1\n    suma = 0\n    for v in vec2:\n        suma += v\n    result -= suma\n    print(result)", "def hcfnaive(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcfnaive(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    count = 1\n    for i in range(2, n, 1):\n        if hcfnaive(n, i) == 1:\n            count += 1\n    print(count)", "def hcfnaive(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcfnaive(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    count = 1\n    for i in range(2, n, 1):\n        if hcfnaive(n, i) == 1:\n            count += 1\n    print(count)", "def gcd(a, b):\n    while b > 0:\n        (a, b) = (b, a % b)\n    return a\n\ndef run():\n    n = int(input())\n    i = 1\n    res = 1\n    while i * i <= n:\n        i += 1\n        q = 0\n        while n % i == 0:\n            n //= i\n            q += 1\n        if q > 0:\n            res *= (i - 1) * i ** (q - 1)\n    if n > 1:\n        res *= n - 1\n    print(res)\nt = int(input())\nfor i in range(t):\n    run()"]