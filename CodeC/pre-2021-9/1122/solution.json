["for _ in range(int(input())):\n    n = int(input())\n    (init, *w) = [int(x) for x in input().split()]\n    min_ = 0\n    max_ = init\n    count = 0\n    for (i, x) in enumerate(w):\n        minv = -(i + 1)\n        maxv = x - (i + 1)\n        count += min(max_, minv) - min(min_, minv)\n        count += max(max_, maxv) - max(min_, maxv)\n        min_ = minv\n        max_ = maxv\n    print(count + (max_ - min_))", "for _ in range(int(input())):\n    n = int(input())\n    (init, *w) = [int(x) for x in input().split()]\n    min_ = 0\n    max_ = init\n    count = 0\n    for (i, x) in enumerate(w):\n        minv = -(i + 1)\n        maxv = x - (i + 1)\n        count += min(max_, minv) - min(min_, minv)\n        count += max(max_, maxv) - max(min_, maxv)\n        min_ = minv\n        max_ = maxv\n    print(count + (max_ - min_))", "for t in range(int(input())):\n    n = int(input())\n    grid = [int(i) for i in input().split()][::-1]\n    tocount = grid[:1] + [0 if grid[i + 1] - grid[i] + 1 < 1 else grid[i + 1] - grid[i] + 1 for i in range(n - 1)]\n    print(sum(tocount))", "for t in range(int(input())):\n    n = int(input())\n    grid = [int(i) for i in input().split()][::-1]\n    tocount = grid[:1] + [0 if grid[i + 1] - grid[i] + 1 < 1 else grid[i + 1] - grid[i] + 1 for i in range(n - 1)]\n    print(sum(tocount))", "def solution():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        li = [int(i) for i in input().split(' ')][::-1]\n        count = 0\n        maxx = 1\n        i = 0\n        while i < n:\n            if li[i] > maxx - 1:\n                count += li[i] - (maxx - 1)\n            maxx = li[i]\n            i += 1\n        print(count)\nsolution()", "def solution():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        li = [int(i) for i in input().split(' ')][::-1]\n        count = 0\n        maxx = 1\n        i = 0\n        while i < n:\n            if li[i] > maxx - 1:\n                count += li[i] - (maxx - 1)\n            maxx = li[i]\n            i += 1\n        print(count)\nsolution()", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    w = L()[::-1]\n    ans = w[0]\n    for i in range(1, n):\n        if w[i] > w[i - 1] - 1:\n            ans += w[i] - w[i - 1] + 1\n    print(ans)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    c = 0\n    c = c + arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] >= arr[i + 1]:\n            x = arr[i] - arr[i + 1] + 1\n            c = c + x\n    print(c)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    st = input().split()\n    dx = 0\n    mx = 1\n    r = 0\n    for x in st:\n        n = int(x) - dx\n        r += 1\n        if n > mx:\n            r += n - mx\n        mx = n\n        dx += 1\n    print(r)", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = list(map(int, input().split()))\n        l = l[::-1]\n        res = l[0]\n        for i in range(1, n):\n            if l[i] >= l[i - 1]:\n                res += l[i] - l[i - 1] + 1\n        print(res)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if l[i] >= l[i + 1]:\n            s += 1 + l[i] - l[i + 1]\n    print(s + l[-1])", "for _ in range(int(input())):\n    n = input()\n    l = list(map(int, input().split()))\n    p = c = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] >= p:\n            c += l[i] - p + 1\n        p = l[i]\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    cnt = ls[-1]\n    for i in range(n - 1):\n        if ls[i + 1] <= ls[i]:\n            cnt += ls[i] - ls[i + 1] + 1\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if i == n - 1:\n            req = 0\n        elif arr[i] < arr[i + 1]:\n            req = arr[i]\n        else:\n            req = arr[i + 1] - 1\n        ans = ans + (arr[i] - req)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    t = [int(x) for x in input().split()]\n    s = t[len(t) - 1]\n    for j in range(len(t) - 2, -1, -1):\n        if t[j] > t[j + 1] - 1:\n            s = s + t[j] - t[j + 1] + 1\n    print(s)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    diff = 0\n    for i in range(N - 1, 0, -1):\n        if A[i] > A[i - 1]:\n            diff += A[i] - A[i - 1] - 1\n    ans.append(N + A[0] - 1 + diff)\nfor i in ans:\n    print(i)", "t = int(input())\nfor l in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    count = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        s = arr[i] - arr[i + 1] + 1\n        if s >= 1:\n            count += s\n    print(count)", "try:\n    for t in range(int(input())):\n        n = int(input())\n        ls = list(map(int, input().split()))\n        ls[:] = ls[::-1]\n        c = ls[0]\n        for i in range(1, len(ls)):\n            if ls[i] >= ls[i - 1]:\n                c += ls[i] - (ls[i - 1] - 1)\n        print(c)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[-1]\n    for i in range(n - 2, -1, -1):\n        ma = a[i + 1] - 1\n        if a[i] <= ma:\n            continue\n        ans += a[i] - ma\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = l[::-1]\n    c = l[0]\n    for i in range(1, len(l)):\n        if l[i] >= l[i - 1]:\n            c += l[i] - (l[i - 1] - 1)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[0] + (n - 1)\n    for i in range(1, n):\n        if a[i] - 1 > a[i - 1]:\n            ans += a[i] - 1 - a[i - 1]\n    print(ans)", "t = int(input())\nfor z in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            count += arr[i]\n            continue\n        if arr[i] < arr[i + 1]:\n            continue\n        else:\n            count += arr[i] - (arr[i + 1] - 1)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = w[n - 1]\n    i = n - 2\n    while i >= 0:\n        b = w[i + 1] - 1\n        if w[i] <= b:\n            i -= 1\n            continue\n        a += w[i] - b\n        i -= 1\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[-1]\n    p = a[-1]\n    for i in range(n - 2, -1, -1):\n        if a[i] >= p:\n            ans += a[i] - p + 1\n        p = a[i]\n    print(ans)", "testcases = int(input())\nfor i in range(0, testcases):\n    height = int(input())\n    onesrow = list(map(int, input().split()))\n    onesrow.reverse()\n    steps = onesrow[0]\n    cross = steps - 1\n    for one in onesrow[1:]:\n        if cross < one:\n            steps += one - cross\n        cross = one - 1\n    print(steps)", "t = int(input())\nfor y in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    k = n - 1\n    c = 0\n    p = 0\n    for i in range(n):\n        o = w[k]\n        if p == 0:\n            c = c + o\n        elif o >= p:\n            c = c + (o - p + 1)\n        k = k - 1\n        p = o\n    print(c)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = arr[-1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] >= arr[i + 1]:\n            ans += arr[i] - arr[i + 1] + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sum1 = 0\n    for i in range(n - 1):\n        if l[i] >= l[i + 1]:\n            sum1 += 1 + l[i] - l[i + 1]\n    print(sum1 + l[-1])", "for __ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    for i in range(n - 1):\n        s -= min(arr[i], arr[i + 1] - 1)\n    print(s)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    strt = []\n    for i in range(n - 1):\n        if a[i + 1] <= a[i]:\n            strt.append(a[i] - a[i + 1] + 1)\n        else:\n            strt.append(0)\n    strt.append(a.pop())\n    print(sum(strt))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(arr[0])\n        continue\n    arr = arr[::-1]\n    sum = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > arr[i - 1] - 1:\n            sum += arr[i] + 1 - arr[i - 1]\n    print(sum)", "for _ in range(int(input())):\n    n = input()\n    l = list(map(int, input().split()))\n    p = count = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] >= p:\n            count += l[i] - p + 1\n        p = l[i]\n    print(count)", "i = int(input())\nfor _ in range(i):\n    n = int(input())\n    w = list(map(int, input().split()))\n    steps = w[-1]\n    for j in range(n - 1):\n        if w[j + 1] <= w[j]:\n            steps += w[j] - w[j + 1] + 1\n    print(steps)", "t = int(input())\nfor i in range(0, t):\n    N = int(input())\n    st = input()\n    arr = list(map(int, st.split(' ')))\n    op = 0\n    for j in range(0, len(arr) - 1):\n        if arr[j] >= arr[j + 1]:\n            op = op + arr[j] - arr[j + 1] + 1\n    print(op + arr[N - 1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    steps = a[n - 1]\n    for i in range(n - 1, 0, -1):\n        if a[i] <= a[i - 1]:\n            steps = steps + a[i - 1] - a[i] + 1\n    print(steps)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    count = w[n - 1]\n    n -= 2\n    while n >= 0:\n        maxi = w[n + 1] - 1\n        if maxi < w[n]:\n            count += w[n] - maxi\n        n -= 1\n    print(count)", "def getIntList():\n    return map(int, input().split())\n\ndef getIntArray():\n    return list(getIntList())\n\ndef getInt():\n    return int(input())\nfor _ in range(int(input())):\n    n = getInt()\n    a = getIntArray()[::-1]\n    c = a[0]\n    for (i, v) in enumerate(a[1:]):\n        c += max(0, v - a[i] + 1)\n    print(c)", "try:\n    for t in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        dp = arr[-1]\n        for i in range(n - 2, -1, -1):\n            m = arr[i + 1] - 1\n            if arr[i] <= m:\n                continue\n            dp += arr[i] - m\n        print(dp)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n + a[0] - 1\n    for i in range(n - 1, 0, -1):\n        if a[i] <= a[i - 1]:\n            continue\n        ans += a[i] - a[i - 1] - 1\n    print(ans)", "for ttt in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] <= arr[i + 1] - 1:\n            pass\n        else:\n            ans += arr[i] - (arr[i + 1] - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = l[n - 1]\n    for i in range(len(l) - 2, -1, -1):\n        ma = l[i + 1] - 1\n        if l[i] <= ma:\n            continue\n        count += l[i] - ma\n    print(count)", "for _ in range(int(input())):\n    n = input()\n    l = list(map(int, input().split()))\n    temp = count = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] >= temp:\n            count += l[i] - temp + 1\n        temp = l[i]\n    print(count)", "def solve(N, arr):\n    if N == 1:\n        return arr[0]\n    else:\n        ans = arr[0]\n        for i in range(1, len(arr)):\n            prev = min(arr[i - 1] - 1, arr[i])\n            ans += arr[i] - prev\n        return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().rstrip().split(' ')]\n    arr.reverse()\n    print(solve(n, arr))", "from collections import defaultdict as dd\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    s = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        ans += max(0, w[i] - s)\n        s = w[i] - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ip = input()\n    temp = ip.split()\n    listA = []\n    for i in range(len(temp)):\n        ele = int(temp[i])\n        listA.append(ele)\n    su_m = 0\n    for i in range(n):\n        if i == 0:\n            su_m = su_m + listA[n - 1 - i]\n        elif listA[n - i] > listA[n - i - 1] + 1:\n            continue\n        else:\n            su_m = su_m + listA[n - i - 1] + 1 - listA[n - i]\n    print(su_m)", "for _ in range(int(input())):\n    n = input()\n    l = list(map(int, input().split()))\n    p = count = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] >= p:\n            count += l[i] - p + 1\n        p = l[i]\n    print(count)", "for _ in range(0, int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    steps = arr[n - 1]\n    for i in range(n - 1, 0, -1):\n        if arr[i] <= arr[i - 1]:\n            steps = steps + arr[i - 1] - arr[i] + 1\n    print(steps)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    count = arr[-1]\n    i = n - 2\n    while i >= 0:\n        if arr[i] >= arr[i + 1]:\n            count += arr[i] - (arr[i + 1] - 1)\n        i -= 1\n    print(count)", "for t in range(int(input())):\n    h = int(input())\n    x = list(map(int, input().split(' ')))\n    x.reverse()\n    distinctMarking = 0\n    for i in range(len(x)):\n        if i == 0:\n            distinctMarking += x[i]\n        elif x[i] >= x[i - 1]:\n            distinctMarking += x[i] - x[i - 1] + 1\n    print(distinctMarking)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[::-1]\n    ans = l[0]\n    prev = l[0]\n    for i in range(1, n):\n        prev -= 1\n        if prev > l[i]:\n            prev = l[i]\n            continue\n        elif prev == l[i]:\n            prev = l[i]\n        else:\n            ans += abs(prev - l[i])\n            prev = l[i]\n    print(ans)", "from sys import stdin, stdout\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import *\nfrom random import *\ninput = stdin.readline\nprin = stdout.write\nfrom random import sample\nfrom collections import Counter, deque\nfrom math import sqrt, ceil, log2, gcd\nmod = 10 ** 9 + 7\n\ndef f(arr, i, j, d, dist):\n    if i == j:\n        return\n    nn = max(arr[i:j])\n    for tl in range(i, j):\n        if arr[tl] == nn:\n            dist[tl] = d\n            f(arr, i, tl, d + 1, dist)\n            f(arr, tl + 1, j, d + 1, dist)\n\ndef ps(n):\n    cp = 0\n    lk = 0\n    arr = {}\n    cc = 0\n    ans = 1\n    while n % 2 == 0:\n        n = n // 2\n        lk += 1\n        cc = 1\n    if lk % 2 == 1:\n        ans *= 2\n    for ps in range(3, ceil(sqrt(n)) + 1, 2):\n        lk = 0\n        cc = 0\n        while n % ps == 0:\n            n = n // ps\n            cc = 1\n            lk += 1\n        if lk % 2 == 1:\n            ans *= ps\n    if n != 1:\n        ans *= n\n    return ans\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef factorials(n, r):\n    slr = n\n    dpr = r\n    qlr = 1\n    qs = 1\n    mod = 10 ** 9 + 7\n    for ip in range(n - r + 1, n + 1):\n        qlr = qlr * ip % mod\n    for ij in range(1, r + 1):\n        qs = qs * ij % mod\n    ans = qlr * modInverse(qs) % mod\n    return ans\n\ndef modInverse(b):\n    qr = 10 ** 9 + 7\n    return pow(b, qr - 2, qr)\nfrom types import GeneratorType\n\ndef iterative(f, stack=[]):\n\n    def wrapped_func(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        to = f(*args, **kwargs)\n        while True:\n            if type(to) is GeneratorType:\n                stack.append(to)\n                to = next(to)\n                continue\n            stack.pop()\n            if not stack:\n                break\n            to = stack[-1].send(to)\n        return to\n    return wrapped_func\n\ndef power(arr):\n    listrep = arr\n    subsets = []\n    for i in range(2 ** len(listrep)):\n        subset = []\n        for k in range(len(listrep)):\n            if i & 1 << k:\n                subset.append(listrep[k])\n        subsets.append(subset)\n    return subsets\n\ndef pda(n):\n    list = []\n    for i in range(1, int(sqrt(n) + 1)):\n        if n % i == 0:\n            if n // i == i:\n                list.append(i)\n            else:\n                list.append(n // i)\n                list.append(i)\n    return list\n\ndef dis(xa, ya, xb, yb):\n    return sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n\ndef ii():\n    return int(input())\n\ndef ilist():\n    return [int(x) for x in input().strip().split()]\n\ndef islist():\n    return list(map(str, input().split().rstrip()))\n\ndef inp():\n    return input().strip()\n\ndef google(test, ans):\n    return 'Case #' + str(test) + ': ' + str(ans)\n\ndef overlap(x1, y1, x2, y2):\n    if x2 > y1:\n        return y1 - x2\n    if y1 > y2:\n        return y2 - x2\n    return y1 - x2\nt = int(input())\nfor p in range(t):\n    n = ii()\n    w = ilist()[::-1]\n    ans = w[0]\n    for i in range(1, n):\n        ans += max(0, w[i] + 1 - w[i - 1])\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        if l[i + 1] <= l[i]:\n            c += l[i] - l[i + 1] + 1\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    cols = [int(x) for x in input().split()]\n    ans = cols[-1]\n    for i in reversed(range(0, N - 1)):\n        maxi = cols[i + 1] - 1\n        if cols[i] <= maxi:\n            continue\n        ans += cols[i] - maxi\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.reverse()\n    loops = l[0]\n    cur = l[0] - 1\n    for i in range(1, n):\n        if cur >= l[i]:\n            cur = l[i] - 1\n        elif cur < l[i] and cur != 0:\n            ncur = l[i] - cur\n            cur = l[i] - 1\n            loops += ncur\n        else:\n            loops += l[i]\n            cur = l[i] - 1\n    print(loops)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.reverse()\n    c = l[0]\n    for j in range(1, len(l)):\n        if l[j] >= l[j - 1]:\n            c += l[j] - l[j - 1] + 1\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    p = 0\n    final = 0\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] > p:\n            final += arr[i] - p\n            p = arr[i] - 1\n        else:\n            p = min(arr[i], p) - 1\n    print(final)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    p = 0\n    final = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] > p:\n            final += arr[i] - p\n            p = arr[i] - 1\n        else:\n            p = min(arr[i], p) - 1\n    print(final)", "def answer():\n    (ans, v) = (0, 0)\n    for i in a[::-1]:\n        ans += max(0, i - v)\n        v = i - 1\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    h = [int(s) for s in input().split()]\n    h_pom = [0 for _ in range(n)]\n    res = sum(h)\n    for i in range(n - 1, 0, -1):\n        num = min(max(0, h[i] - 1), h[i - 1])\n        h_pom[i - 1] += num\n        res -= num\n    print(res)", "for _ in range(int(input())):\n    n = input()\n    l = list(map(int, input().split()))\n    p = count = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] >= p:\n            count += l[i] - p + 1\n        p = l[i]\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(j) for j in input().split()]\n    j = 0\n    out = 0\n    while j < n - 1:\n        if A[j] - (A[j + 1] - 1) >= 0:\n            out = out + A[j] - (A[j + 1] - 1)\n        j += 1\n    print(out + A[n - 1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sum1 = 0\n    for i in range(n - 1):\n        if l[i] >= l[i + 1]:\n            sum1 += 1 + l[i] - l[i + 1]\n    print(sum1 + l[-1])", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))[::-1]\n    ans = l[0]\n    for i in range(1, n):\n        ans = ans + l[i] - min(l[i - 1] - 1, l[i])\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    ncons = list(map(int, input().split()))\n    num = ncons[-1]\n    for i in range(len(ncons) - 2, -1, -1):\n        if ncons[i] >= ncons[i + 1]:\n            num += ncons[i] - ncons[i + 1] + 1\n    print(num)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ones = list(map(int, input().split()))\n    steps = ones[n - 1]\n    for i in range(n - 2, -1, -1):\n        if ones[i] >= ones[i + 1]:\n            steps += ones[i] - ones[i + 1] + 1\n    print(steps)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] > p:\n            ans += a[i] - p\n            p = a[i] - 1\n        else:\n            p = min(a[i], p) - 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l1 = [int(i) for i in input().split(' ')]\n    ans = sum(l1)\n    for i in range(n - 1, 0, -1):\n        ans -= min(l1[i] - 1, l1[i - 1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (ans, m) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        ans += max(a[i] - m, 0)\n        m = a[i] - 1\n    print(ans)", "def solve(w, n):\n    ans = w[-1]\n    for i in range(n - 1, 0, -1):\n        ans += max(0, w[i - 1] - w[i] + 1)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    print(solve(w, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    tmp = [1, a[0]]\n    ans = [1]\n    for i in range(1, n):\n        x = i + 1 + a[i]\n        if x == tmp[0] + tmp[1]:\n            continue\n        elif x < tmp[0] + tmp[1]:\n            if len(ans) != 1:\n                ans.append(tmp[1] - a[i] - 1 + 1)\n            else:\n                ans.append(tmp[1] - a[i] - 1)\n            tmp = [i + 1, a[i]]\n        elif x > tmp[0] + tmp[1]:\n            if len(ans) == 1:\n                ans.append(0)\n            elif tmp[1] - (a[i] - (a[i] + i + 1 - sum(tmp))) > 0:\n                ans.append(tmp[1] - (a[i] - (a[i] + i + 1 - sum(tmp))))\n            else:\n                ans.append(tmp[1])\n            tmp = [i + 1, a[i]]\n    if len(ans) == 1:\n        print(a[0])\n    elif len(ans) == 2:\n        print(sum(ans) + sum(tmp))\n    else:\n        print(sum(ans) + tmp[1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = [int(i) for i in input().split(' ')]\n    c = w[n - 1]\n    for i in range(n - 2, -1, -1):\n        c = c + max(0, w[i] - w[i + 1] + 1)\n    print(c)", "def point(w, n):\n    p = 0\n    for i in w:\n        p = p + i\n    s = 0\n    for i in range(n - 1):\n        if w[i] >= w[i + 1]:\n            s += w[i + 1] - 1\n        elif w[i] < w[i + 1]:\n            s += w[i]\n    return p - s\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    print(point(w, n))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        if l[i + 1] > l[i]:\n            pass\n        else:\n            ans = ans + l[i] - l[i + 1] + 1\n    ans = ans + l[n - 1]\n    print(ans)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = [int(x) for x in input().split()] + [0]\n    ar = ar[::-1]\n    ans = 0\n    for i in range(n):\n        ans += max(0, ar[i + 1] - ar[i] + 1)\n    print(ans - 1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    w = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if w[i] >= w[i + 1]:\n            s += w[i] - w[i + 1] + 1\n    s += w[n - 1]\n    print(s)", "def foo(n, k):\n    my_sum = 0\n    last = 0\n    for i in range(n):\n        if i == 0:\n            my_sum = k[n - 1]\n        else:\n            curr = k[n - i - 1]\n            prev = k[n - i]\n            covered = min(prev - 1, k[n - i - 1])\n            my_sum += k[n - 1 - i] - covered\n    return my_sum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    k = [int(x) for x in input().split()]\n    print(foo(n, k))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = arr[-1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] >= arr[i + 1]:\n            count += arr[i] - arr[i + 1] + 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    c = 0\n    for i in range(1, len(w)):\n        if w[i - 1] >= w[i]:\n            c += w[i - 1] - w[i] + 1\n    print(c + w[n - 1])", "def solve(w, n):\n    ans = w[-1]\n    for i in range(n - 1, 0, -1):\n        if w[i] - w[i - 1] == 1:\n            continue\n        ans += max(0, w[i - 1] - w[i] + 1)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    print(solve(w, n))", "def fun(n, arr):\n    ans = arr[-1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] >= arr[i + 1]:\n            ans = ans + (arr[i] - arr[i + 1] + 1)\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(fun(n, arr))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    start = lst[0]\n    value = start\n    for i in range(1, len(lst)):\n        if start >= lst[i]:\n            value += 1\n        elif start < lst[i]:\n            value += lst[i] - start\n        start = lst[i]\n    print(value)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[::-1]\n    ans = arr[0]\n    for i in range(1, n):\n        if arr[i] >= arr[i - 1]:\n            ans += arr[i] - (arr[i - 1] - 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ops = 0\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] > c:\n            ops = ops + arr[i] - c\n        c = arr[i] - 1\n    print(ops)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    line = input()\n    W = [int(x) for x in line.split()]\n    count = W[0]\n    for j in range(1, N):\n        count = count + max(1, W[j] - W[j - 1])\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    ls = [int(x) for x in input().split()]\n    ls.reverse()\n    s = ls[0]\n    for j in range(1, n):\n        if ls[j] > ls[j - 1] - 1:\n            s += ls[j] - ls[j - 1] + 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    count = w[-1]\n    for i in range(n - 1):\n        c = max(w[i] - w[i + 1] + 1, 0)\n        count += c\n    print(count)", "def solve():\n    N = int(input())\n    w = [int(x) for x in input().split()]\n    max_val = w[0] - 1\n    count = w[0] + N - 1\n    for i in range(N):\n        if w[i] - i - 1 > max_val:\n            count += w[i] - i - 1 - max_val\n        max_val = w[i] - i - 1\n    print(count)\n\ndef main():\n    tc = int(input())\n    while tc > 0:\n        solve()\n        tc -= 1\nmain()", "def sol():\n    import math\n    n = int(input())\n    w = list(map(int, input().split()))\n    count = 0\n    for i in range(n - 1):\n        if w[i + 1] <= w[i]:\n            count += w[i] - w[i + 1] + 1\n        elif w[i + 1] > w[i]:\n            pass\n    count += w[-1]\n    return count\ntests = int(input())\nfor _ in range(tests):\n    print(sol())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    s = a[0]\n    for i in range(1, len(a)):\n        s += max(0, a[i] - x - 1) + 1\n        x = a[i]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, l[i] - (l[i + 1] - 1))\n    ans += l[-1]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = a[n - 1]\n    t = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        if t - 1 < a[i]:\n            cnt += a[i] - (t - 1)\n        t = a[i]\n    print(cnt)"]