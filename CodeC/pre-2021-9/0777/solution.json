["t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    lists = {}\n    for i in range(m):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        for c in a:\n            lists[c] = i\n    s = list(map(int, input().split()))\n    for i in range(l):\n        s[i] = lists[s[i]]\n    segs = 0\n    ci = s[0]\n    for j in range(1, l):\n        if s[j] != ci:\n            segs += 1\n            ci = s[j]\n    print(segs + 1)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    lists = {}\n    for i in range(m):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        for c in a:\n            lists[c] = i\n    s = list(map(int, input().split()))\n    for i in range(l):\n        s[i] = lists[s[i]]\n    segs = 0\n    ci = s[0]\n    for j in range(1, l):\n        if s[j] != ci:\n            segs += 1\n            ci = s[j]\n    print(segs + 1)", "for k in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    d = [0] * n\n    for c in range(m):\n        a = [int(k) for k in input().split()]\n        for k in range(1, len(a)):\n            d[a[k] - 1] = c + 1\n    A = [int(k) for k in input().split()]\n    count = 1\n    k = 1\n    while k < l:\n        if d[A[k - 1] - 1] == d[A[k] - 1]:\n            pass\n        else:\n            count += 1\n        k += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    d = {}\n    M = [0] * (n + 1)\n    for i in range(m):\n        N = list(map(int, input().split()))\n        for j in range(1, len(N)):\n            M[N[j]] = i + 1\n    L = list(map(int, input().split()))\n    ans = 1\n    for i in range(1, len(L)):\n        if M[L[i]] == M[L[i - 1]]:\n            pass\n        else:\n            ans += 1\n    print(ans)", "for k in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    d = [0] * n\n    for c in range(m):\n        a = [int(k) for k in input().split()]\n        for k in range(1, len(a)):\n            d[a[k] - 1] = c + 1\n    A = [int(k) for k in input().split()]\n    count = 1\n    k = 1\n    while k < l:\n        if d[A[k - 1] - 1] == d[A[k] - 1]:\n            pass\n        else:\n            count += 1\n        k += 1\n    print(count)", "for k in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    d = [0] * n\n    for c in range(m):\n        a = [int(k) for k in input().split()]\n        for k in range(1, len(a)):\n            d[a[k] - 1] = c + 1\n    A = [int(k) for k in input().split()]\n    count = 1\n    k = 1\n    while k < l:\n        if d[A[k - 1] - 1] == d[A[k] - 1]:\n            pass\n        else:\n            count += 1\n        k += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    n_array = [0 for _ in range(n)]\n    for i in range(m):\n        temp_list = list(map(int, input().split()))\n        for j in temp_list[1:]:\n            n_array[j - 1] = i + 1\n    l_array = map(int, input().split())\n    curr_colour = 0\n    ans = 0\n    for i in l_array:\n        if n_array[i - 1] != curr_colour:\n            curr_colour = n_array[i - 1]\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    n_array = [0 for _ in range(n)]\n    for i in range(m):\n        temp_list = list(map(int, input().split()))\n        for j in temp_list[1:]:\n            n_array[j - 1] = i + 1\n    l_array = map(int, input().split())\n    curr_colour = 0\n    ans = 0\n    for i in l_array:\n        if n_array[i - 1] != curr_colour:\n            curr_colour = n_array[i - 1]\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    (a, numlist, b) = input().split()\n    list_of_lists = {}\n    for i in range(0, int(numlist)):\n        input_list = input().split()[1:]\n        for j in input_list:\n            list_of_lists[j] = i\n    Colors = input().split()\n    c = list_of_lists[Colors[0]]\n    countStrips = 1\n    for i in Colors:\n        if list_of_lists[i] != c:\n            countStrips += 1\n        c = list_of_lists[i]\n    print(countStrips)", "for t in range(int(input())):\n    (a, numlist, c) = input().split()\n    list_of_lists = {}\n    for i in range(0, int(numlist)):\n        input_list = input().split()[1:]\n        for j in input_list:\n            list_of_lists[j] = i\n    stripColors = input().split()\n    current = list_of_lists[stripColors[0]]\n    countStrips = 1\n    for i in stripColors:\n        if list_of_lists[i] != current:\n            countStrips += 1\n        current = list_of_lists[i]\n    print(countStrips)", "def func():\n    (n, m, l) = map(int, input().split(' '))\n    A = [0 for i in range(n + 1)]\n    for i in range(1, m + 1):\n        arr = list(input().split(' '))\n        k = int(arr[0])\n        for j in range(1, k + 1):\n            color = int(arr[j])\n            A[color] = i\n    L = input().split(' ')\n    cnt = 1\n    for i in range(len(L)):\n        temp = int(L[i])\n        L[i] = A[temp]\n    for i in range(len(L) - 1):\n        if L[i] != L[i + 1]:\n            cnt += 1\n    print(cnt)\nt = int(input())\nwhile t:\n    func()\n    t -= 1", "for t in range(int(input())):\n    (a, number_of_lists, c) = input().split()\n    list_of_lists = {}\n    for i in range(0, int(number_of_lists)):\n        input_list = input().split()[1:]\n        for ii in input_list:\n            list_of_lists[ii] = i\n    stripColors = input().split()\n    current = list_of_lists[stripColors[0]]\n    countStrips = 1\n    for i in stripColors:\n        if list_of_lists[i] != current:\n            countStrips += 1\n        current = list_of_lists[i]\n    print(countStrips)", "for t in range(int(input())):\n    (a, number_of_lists, c) = input().split()\n    list_of_lists = {}\n    for i in range(0, int(number_of_lists)):\n        input_list = input().split()[1:]\n        for ii in input_list:\n            list_of_lists[ii] = i\n    stripColors = input().split()\n    current = list_of_lists[stripColors[0]]\n    countStrips = 1\n    for i in stripColors:\n        if list_of_lists[i] != current:\n            countStrips += 1\n        current = list_of_lists[i]\n    print(countStrips)", "for t in range(int(input())):\n    (a, number_of_lists, c) = input().split()\n    list_of_lists = {}\n    for i in range(0, int(number_of_lists)):\n        input_list = input().split()[1:]\n        for ii in input_list:\n            list_of_lists[ii] = i\n    stripColors = input().split()\n    current = list_of_lists[stripColors[0]]\n    countStrips = 1\n    for i in stripColors:\n        if list_of_lists[i] != current:\n            countStrips += 1\n        current = list_of_lists[i]\n    print(countStrips)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = [0] * n\n    for i in range(m):\n        x = list(map(int, input().split()[1:]))\n        for j in x:\n            arr[j - 1] = i\n    strip = list(map(int, input().split()))\n    count = 1\n    for i in range(1, len(strip)):\n        if arr[strip[i] - 1] != arr[strip[i - 1] - 1]:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = [0] * n\n    for i in range(m):\n        x = list(map(int, input().split()[1:]))\n        for j in x:\n            arr[j - 1] = i\n    strip = list(map(int, input().split()))\n    count = 1\n    for i in range(1, len(strip)):\n        if arr[strip[i] - 1] != arr[strip[i - 1] - 1]:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    d = {}\n    for __ in range(m):\n        ls = list(map(int, input().split()))\n        for i in range(len(ls)):\n            d[ls[i]] = __ + 1\n    lst = list(map(int, input().split()))\n    prev = d[lst[0]]\n    (curr, c) = (0, 1)\n    for i in range(1, l):\n        curr = d[lst[i]]\n        if prev != curr:\n            c += 1\n        prev = curr\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    a = [0] * (n + 1)\n    for j in range(m):\n        b = list(map(int, input().split()))\n        x = b[0]\n        del b[0]\n        for k in range(x):\n            a[b[k]] = j + 1\n    s = list(map(int, input().split()))\n    c = 0\n    d = 0\n    for z in range(l):\n        if a[s[z]] == d:\n            continue\n        else:\n            c += 1\n        d = a[s[z]]\n    print(c)", "n_test = int(input())\nassert n_test >= 1 and n_test <= 10\nfor i in range(n_test):\n    array = input()\n    array = array.split()\n    array = list(map(int, array))\n    n = array[0]\n    assert n >= 1 and n <= pow(10, 5)\n    m = array[1]\n    assert m >= 1 and m <= pow(10, 5)\n    assert m >= 1 and m <= n\n    l = array[2]\n    assert l >= 1 and l <= pow(10, 5)\n    d = {}\n    for i in range(m):\n        array = input()\n        array = array.split()\n        array = list(map(int, array))\n        k = array[0]\n        for j in range(k):\n            d[array[j + 1]] = i + 1\n    s = 1\n    sequence = input()\n    sequence = sequence.split()\n    sequence = list(map(int, sequence))\n    for i in range(l - 1):\n        if d[sequence[i]] != d[sequence[i + 1]]:\n            s = s + 1\n    print(s)", "for _ in range(int(input())):\n    (N, M, L) = map(int, input().split())\n    dictColors = {}\n    for i in range(M):\n        A = list(map(int, input().split()))\n        for j in range(A.pop(0)):\n            dictColors[A[j]] = i\n    L = list(map(int, input().split()))\n    cont = 1\n    for i in range(len(L) - 1):\n        if dictColors[L[i]] != dictColors[L[i + 1]]:\n            cont += 1\n    print(cont)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().strip().split())\n    d = dict()\n    for lists in range(m):\n        li = [int(i) for i in input().split()]\n        k = li.pop(0)\n        for i in range(len(li)):\n            d[li[i]] = lists\n    strips = [int(i) for i in input().split()]\n    count = 1\n    for i in range(1, len(strips)):\n        if d[strips[i]] != d[strips[i - 1]]:\n            count += 1\n    print(count)", "ans = ''\nfor _ in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    d = {}\n    for i in range(m):\n        inp = list(map(int, input().split()))\n        for j in range(1, len(inp)):\n            d[inp[j]] = i\n    inp = list(map(int, input().split()))\n    prev = d[inp[0]]\n    cnt = 1\n    for num in inp:\n        if d[num] != prev:\n            cnt += 1\n            prev = d[num]\n    ans += str(cnt) + '\\n'\nprint(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    d = [0] * (n + 1)\n    for i in range(m):\n        foo = list(map(int, input().split()))\n        x = foo[0]\n        del foo[0]\n        for j in range(x):\n            d[foo[j]] = i + 1\n    strip = list(map(int, input().split()))\n    cnt = 0\n    prev = -1\n    for i in range(l):\n        if d[strip[i]] == prev:\n            continue\n        else:\n            cnt += 1\n        prev = d[strip[i]]\n    print(cnt)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    mapping = {}\n    for i in range(m):\n        a = list(map(int, input().split()))\n        for j in range(1, a[0] + 1):\n            mapping[a[j]] = i\n    s = list(map(int, input().split()))\n    (i, g) = (0, 0)\n    while i < l:\n        x = mapping[s[i]]\n        while i < l and mapping[s[i]] == x:\n            i += 1\n        g += 1\n    print(g)", "tc = int(input())\nfor _ in range(tc):\n    (n, m, l) = map(int, input().split())\n    dic = {}\n    for j in range(m):\n        x = tuple(map(int, input().split()))\n        for i in range(1, x[0] + 1):\n            dic[x[i]] = j\n    L = tuple(map(int, input().split()))\n    count = 1\n    for i in range(1, l):\n        if dic[L[i]] != dic[L[i - 1]]:\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    list_m = [[]] * (m + 1)\n    list_id = [0] * (n + 1)\n    for j in range(1, m + 1):\n        list_m[j] = list(map(int, input().split()))\n        for k in range(1, len(list_m[j])):\n            list_id[list_m[j][k]] = j\n    list_l = list(map(int, input().split()))\n    count = 0\n    id = list_id[list_l[0]]\n    for j in range(1, len(list_l)):\n        if id != list_id[list_l[j]]:\n            count += 1\n        id = list_id[list_l[j]]\n    print(count + 1)", "T = int(input())\nfor i in range(1, T + 1):\n    (N, M, L) = map(int, input().split())\n    arr = [0] * N\n    for i in range(M):\n        k = list(map(int, input().split()[1:]))\n        for j in k:\n            arr[j - 1] = i\n    strip = list(map(int, input().split()))\n    c = 1\n    for i in range(1, len(strip)):\n        if arr[strip[i] - 1] != arr[strip[i - 1] - 1]:\n            c = c + 1\n    print(c)", "dic = {}\nt = int(input())\nfor tc in range(t):\n    segments = 1\n    strip = []\n    (n, m, l) = tuple(map(int, input().split(' ')))\n    for strip_no in range(1, m + 1):\n        inp = map(int, input().split(' '))\n        for color_id in inp:\n            dic[color_id] = strip_no\n    strip = list(map(int, input().split(' ')))\n    for index in range(len(strip) - 1):\n        if dic[strip[index]] != dic[strip[index + 1]]:\n            segments += 1\n        else:\n            pass\n    print(segments)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = [0] * n\n    for i in range(m):\n        x = list(map(int, input().split()[1:]))\n        for j in x:\n            arr[j - 1] = i\n    strip = list(map(int, input().split()))\n    ans = 1\n    for i in range(1, len(strip)):\n        if arr[strip[i] - 1] != arr[strip[i - 1] - 1]:\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, m, l) = map(int, input().split(' '))\n    col = [0] * (n + 1)\n    for j in range(m):\n        x = list(map(int, input().split(' ')))\n        for i in range(1, x[0] + 1):\n            col[x[i]] = j + 1\n    a = list(map(int, input().split(' ')))\n    seg = 1\n    i = 1\n    while i < l:\n        if col[a[i]] != col[a[i - 1]]:\n            seg += 1\n        i += 1\n    print(seg)\n    t -= 1", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = [0] * n\n    for i in range(m):\n        x = list(map(int, input().split()[1:]))\n        for j in x:\n            arr[j - 1] = i\n    strip = list(map(int, input().split()))\n    ans = 1\n    for i in range(1, len(strip)):\n        if arr[strip[i] - 1] != arr[strip[i - 1] - 1]:\n            ans += 1\n    print(ans)", "t = int(input())\nfor test in range(t):\n    (n, m, l) = [int(x) for x in input().split()]\n    colorList = []\n    group = []\n    for i in range(n):\n        group.append(0)\n    for i in range(m):\n        colorInput = [int(x) for x in input().split()]\n        actualColors = colorInput[1:]\n        for j in range(len(actualColors)):\n            group[actualColors[j] - 1] = i\n        colorList.append(actualColors)\n    strip = [int(x) for x in input().split()]\n    count = 1\n    for i in range(1, l):\n        if group[strip[i] - 1] != group[strip[i - 1] - 1]:\n            count += 1\n    print(count)", "t = int(input())\nfor test in range(t):\n    (n, m, l) = [int(x) for x in input().split()]\n    colorList = []\n    group = []\n    for i in range(n):\n        group.append(0)\n    for i in range(m):\n        colorInput = [int(x) for x in input().split()]\n        actualColors = colorInput[1:]\n        for j in range(len(actualColors)):\n            group[actualColors[j] - 1] = i\n        colorList.append(actualColors)\n    strip = [int(x) for x in input().split()]\n    count = 1\n    for i in range(1, l):\n        if group[strip[i] - 1] != group[strip[i - 1] - 1]:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = [int(x) for x in input().split()]\n    d = dict()\n    for i in range(m):\n        a = [int(x) for x in input().split()]\n        for j in a[1:]:\n            d[j] = i\n    a = [int(x) for x in input().split()]\n    c = 1\n    for i in range(1, l):\n        if d[a[i]] != d[a[i - 1]]:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    a = [0] * (n + 1)\n    for i in range(m):\n        b = [int(x) for x in input().split()]\n        k = b[0]\n        b = b[1:]\n        for j in range(k):\n            a[b[j]] = i + 1\n    c = 0\n    z = [0]\n    s = [int(x) for x in input().split()]\n    for i in range(l):\n        z.append(a[s[i]])\n        pre = z[i]\n        cur = z[i + 1]\n        if pre != cur:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    a = [0] * (n + 1)\n    for i in range(m):\n        b = [int(x) for x in input().split()]\n        k = b[0]\n        b = b[1:]\n        for j in range(k):\n            a[b[j]] = i + 1\n    c = 0\n    z = [0]\n    s = [int(x) for x in input().split()]\n    for i in range(l):\n        z.append(a[s[i]])\n        pre = z[i]\n        cur = z[i + 1]\n        if pre != cur:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    a = [0 for x in range(n + 1)]\n    count = 1\n    for i in range(m):\n        k = list(map(int, input().split()))\n        for j in k[1:]:\n            a[j] = i\n    l1 = list(map(int, input().split()))\n    for x in range(1, l):\n        if a[l1[x]] != a[l1[x - 1]]:\n            count += 1\n    print(count)", "t = int(input())\nfrom collections import Counter\nfor _ in range(t):\n    c = Counter([])\n    (n, m, l) = list(map(int, input().split()))\n    arr = []\n    for q in range(m):\n        z = list(map(int, input().split()))\n        arr.append(z)\n    col = list(map(int, input().split()))\n    for i in range(len(arr)):\n        for j in range(1, len(arr[i])):\n            c[arr[i][j]] = i + 1\n    col = [c[item] for item in col]\n    k = col[0]\n    ans = 0\n    for i in range(len(col)):\n        if col[i] == k:\n            continue\n        else:\n            ans += 1\n            k = col[i]\n    ans += 1\n    print(ans)", "def A():\n    for _ in range(int(input())):\n        (R1, W1, C1) = [int(x) for x in input().split()]\n        (R2, W2, C2) = [int(x) for x in input().split()]\n        (A, B) = (0, 0)\n        if R1 > R2:\n            A += 1\n        else:\n            B += 1\n        if W1 > W2:\n            A += 1\n        else:\n            B += 1\n        if C1 > C2:\n            A += 1\n        else:\n            B += 1\n        print('A' if A > B else 'B')\n\ndef B():\n    for _ in range(int(input())):\n        (X, Y) = [int(x) for x in input().split()]\n        s = X + Y\n        if s >= 6:\n            print(0)\n        else:\n            print((6 - s) / 6)\n\ndef C():\n    for _ in range(int(input())):\n        (N, M, L) = [int(x) for x in input().split()]\n        A = [[int(x) for x in input().split()] for i in range(M)]\n        S = [int(x) for x in input().split()]\n        colors = [0] * (N + 1)\n        for i in range(M):\n            for color in A[i][1:]:\n                colors[color] = i\n        segments = 1\n        for i in range(1, L):\n            if colors[S[i - 1]] != colors[S[i]]:\n                segments += 1\n        print(segments)\nC()", "t = int(input())\nfor _ in range(t):\n    count = 0\n    (n, m, l) = map(int, input().split())\n    lis1 = [0] * (n + 1)\n    for i in range(1, m + 1):\n        a = list(map(int, input().split()))\n        q = a[1:]\n        for p in q:\n            lis1[p] = i\n    s = list(map(int, input().split()))\n    rr = 1\n    while rr < len(s):\n        if lis1[s[rr]] != lis1[s[rr - 1]]:\n            count += 1\n            rr += 1\n        else:\n            rr += 1\n    print(count + 1)", "test_case = int(input())\nfor i in range(test_case):\n    (n, m, l) = map(int, input().split())\n    arr = [0] * (n + 1)\n    for j in range(1, m + 1):\n        x = list(map(int, input().split()))\n        for k in x[1:]:\n            arr[k] = j\n    l_arr = list(map(int, input().split()))\n    for colors in range(l):\n        l_arr[colors] = arr[l_arr[colors]]\n    count = 1\n    for element in range(1, l):\n        if l_arr[element] != l_arr[element - 1]:\n            count += 1\n    print(count)", "for t in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    m_list = [0 for i in range(n + 1)]\n    for i in range(1, m + 1):\n        val = list(map(int, input().split()))\n        for j in val[1:]:\n            m_list[j] = i\n    strip = list(map(int, input().split()))\n    p = -1\n    store = 0\n    for k in strip:\n        if m_list[k] != p:\n            p = m_list[k]\n            store += 1\n    print(store)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    lm = {}\n    I = [0 for j in range(n)]\n    for j in range(m):\n        lm[j] = list(map(int, input().split()))\n        temp = lm[j]\n        lm[j] = temp[1:]\n        for k in lm[j]:\n            I[k - 1] = j + 2\n    ll = list(map(int, input().split()))\n    prev = None\n    seg = 0\n    for j in range(len(ll)):\n        curr = I[ll[j] - 1]\n        if prev is None:\n            prev = curr\n        elif prev != curr:\n            prev = curr\n            seg += 1\n    seg += 1\n    print(seg)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    lm = {}\n    I = [0 for j in range(n)]\n    for j in range(m):\n        lm[j] = list(map(int, input().split()))\n        temp = lm[j]\n        lm[j] = temp[1:]\n        for k in lm[j]:\n            I[k - 1] = j + 1\n    ll = list(map(int, input().split()))\n    prev = None\n    seg = 0\n    for j in range(len(ll)):\n        curr = I[ll[j] - 1]\n        if prev is None:\n            prev = curr\n        elif prev != curr:\n            prev = curr\n            seg += 1\n    seg += 1\n    print(seg)", "t = int(input())\nfor i in range(t):\n    ip = input()\n    (sn, sl, sm) = ip.split(' ')\n    (n, l, m) = (int(sn), int(sl), int(sm))\n    arr = [0] * (n + 1)\n    for j in range(1, l + 1):\n        ip = input()\n        (sli, li) = ([], [])\n        sli = ip.split(' ')\n        li = list(map(int, sli))\n        lt = li[0]\n        for k in range(1, lt + 1):\n            pos = li[k]\n            arr[pos] = j\n    istrip = input()\n    strip = []\n    strip = istrip.split(' ')\n    strip = list(map(int, strip))\n    elem = strip[0]\n    pos = arr[elem]\n    c = 0\n    for k in range(1, m):\n        elem = strip[k]\n        curr = arr[elem]\n        if pos != curr:\n            c += 1\n            pos = arr[elem]\n        else:\n            pos = arr[elem]\n    print(c + 1)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    list_no = [0] * (n + 1)\n    for i in range(1, m + 1):\n        for j in list(input().split())[1:]:\n            if int(j) > 0:\n                list_no[int(j)] = i\n    colors = list(map(int, list(input().split())))\n    count = 0\n    v = 0\n    for k in colors:\n        if list_no[k] != v:\n            count = count + 1\n        v = list_no[k]\n    print(count)", "try:\n    n = int(input())\n    for _ in range(n):\n        li = list(map(int, input().split()))\n        n = li[0]\n        m = li[1]\n        l = li[2]\n        listimp = []\n        for _ in range(m):\n            a = list(map(int, input().split()))\n            listimp.append(a[1:])\n        b = list(map(int, input().split()))\n        count = 1\n        ind = {}\n        for (i, g) in enumerate(listimp):\n            for e in g:\n                ind.setdefault(e, set()).add(i)\n\n        def same_group(e1, e2):\n            return ind.get(e1, set()) & ind.get(e2, set())\n        for i in range(len(b) - 1):\n            if same_group(b[i], b[i + 1]) == set():\n                count += 1\n        print(count)\nexcept EOFError:\n    pass", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    cnt = 1\n    d = {}\n    for i in range(m):\n        a = [int(x) for x in input().split()]\n        for j in range(1, len(a)):\n            d[a[j]] = i + 1\n    s = [int(x) for x in input().split()]\n    for i in range(1, l):\n        if d[s[i - 1]] != d[s[i]]:\n            cnt += 1\n    print(cnt)", "def calSegments(n, m, l, arr, strip):\n    count = {}\n    for i in range(m):\n        for j in range(1, arr[i][0] + 1):\n            count[arr[i][j]] = i + 1\n    segment = 1\n    for i in range(l - 1):\n        if count[strip[i]] != count[strip[i + 1]]:\n            segment += 1\n    return segment\nfor _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = []\n    for i in range(m):\n        tempList = list(map(int, input().split()))\n        arr.append(tempList)\n    strip = list(map(int, input().split()))\n    print(calSegments(n, m, l, arr, strip))", "def calSegments(n, m, l, arr, strip):\n    count = {}\n    for i in range(m):\n        for j in range(1, arr[i][0] + 1):\n            count[arr[i][j]] = i + 1\n    segment = 1\n    for i in range(l - 1):\n        if count[strip[i]] != count[strip[i + 1]]:\n            segment += 1\n    return segment\nfor _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    arr = []\n    for i in range(m):\n        tempList = list(map(int, input().split()))\n        arr.append(tempList)\n    strip = list(map(int, input().split()))\n    print(calSegments(n, m, l, arr, strip))", "for _ in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    count = 1\n    for i in range(m):\n        lst = list(map(int, input().split()))\n        k = lst[0]\n        for j in lst[1:]:\n            ans[j] = count\n        count += 1\n    arr = list(map(int, input().split()))\n    c = 1\n    for k in range(1, len(arr)):\n        if ans[arr[k]] != ans[arr[k - 1]]:\n            c += 1\n    print(c)", "d = {}\nt = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    for k in range(m):\n        x = list(map(int, input().split()))\n        for j in range(1, x[0] + 1):\n            d[x[j]] = k + 1\n    cl = list(map(int, input().split()))\n    c = 1\n    for i in range(l - 1):\n        if d[cl[i]] != d[cl[i + 1]]:\n            c += 1\n        else:\n            continue\n    print(c)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    M = {}\n    for i in range(m):\n        t = list(map(int, input().split()))[1:]\n        for j in range(len(t)):\n            M[t[j]] = i + 1\n    L = list(map(int, input().split()))\n    prev = M[L[0]]\n    (curr, c) = (0, 1)\n    for i in range(1, l):\n        curr = M[L[i]]\n        if prev != curr:\n            c += 1\n        prev = curr\n    print(c)", "d = {}\nt = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    for k in range(m):\n        x = list(map(int, input().split()))\n        for j in range(1, x[0] + 1):\n            d[x[j]] = k + 1\n    cl = list(map(int, input().split()))\n    c = 1\n    for i in range(l - 1):\n        if d[cl[i]] != d[cl[i + 1]]:\n            c += 1\n        else:\n            continue\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m, o) = map(int, input().split())\n    arr = list()\n    arr.append(0)\n    for j in range(n):\n        arr.append(0)\n    for j in range(m):\n        temp = list(map(int, input().split()))\n        size = temp.pop(0)\n        for x in temp:\n            arr[x] = j + 1\n    l = list(map(int, input().split()))\n    count = 0\n    cur = 0\n    for x in l:\n        if arr[x] == cur:\n            pass\n        else:\n            cur = arr[x]\n            count += 1\n    print(count)", "import sys, collections, math, itertools, random, bisect, string\nINF = sys.maxsize\n\ndef intp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 1000000007\nfor _ in range(int(input())):\n    s = 0\n    (n, m, l) = intp()\n    a = {}\n    for i in range(m):\n        b = list(map(int, input().split()))\n        for k in b[1:]:\n            a[k] = i\n    strip = list(map(int, input().split()))\n    var_col = a[strip[0]]\n    for i in range(1, len(strip)):\n        if a[strip[i]] != var_col:\n            s = s + 1\n            var_col = a[strip[i]]\n    print(s + 1)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    dic = {}\n    for i in range(m):\n        lis = list(map(int, input().split()))\n        lis = lis[1:]\n        for j in lis:\n            dic[j] = i\n    lis = list(map(int, input().split()))\n    ans = 1\n    for i in range(1, len(lis)):\n        if dic[lis[i]] != dic[lis[i - 1]]:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    cc = [0] * (n + 1)\n    for i in range(m):\n        for x in input().split()[1:]:\n            cc[int(x)] = i + 1\n    counti = 1\n    li = [int(x) for x in input().split()]\n    for i in range(1, l):\n        if cc[li[i - 1]] != cc[li[i]]:\n            counti += 1\n    print(counti)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    dic = {}\n    for i in range(m):\n        lst = list(map(int, input().split()))[1:]\n        for j in range(len(lst)):\n            dic[lst[j]] = i + 1\n    strip = list(map(int, input().split()))\n    prev = dic[strip[0]]\n    c = 1\n    for i in range(1, l):\n        curr = dic[strip[i]]\n        if prev != curr:\n            c += 1\n        prev = curr\n    print(c)", "t = int(input())\nwhile t:\n    (n, m, l) = map(int, input().split())\n    colorcodes = [0] * (n + 1)\n    for i in range(m):\n        for x in input().split()[1:]:\n            colorcodes[int(x)] = i + 1\n    count = 1\n    l1 = [int(x) for x in input().split()]\n    for i in range(1, l):\n        if colorcodes[l1[i - 1]] != colorcodes[l1[i]]:\n            count += 1\n    print(count)\n    t -= 1", "map_inputs = lambda Type=int: map(Type, input().strip().split())\narray_input = lambda n, Type=int: list(map_inputs(Type))[:n]\nmatrix_input = lambda row, col, Type=int: [array_input(col, Type) for _ in range(row)]\nstr_matrix = lambda row, col: [input().strip()[:col] for _ in range(row)]\nstr_listed_matrix = lambda row, col: [list(input().strip())[:col] for _ in range(row)]\ntest_cases = lambda t=1: [i for i in range(t)]\n\ndef main():\n    (N, M, L) = map_inputs()\n    arr = [0 for _ in range(N + 1)]\n    for i in range(M):\n        temp = list(map_inputs())\n        for j in temp[1:]:\n            arr[j] = i\n    strips = array_input(L)\n    ans = 0\n    i = 0\n    while i < L:\n        try:\n            let = arr[strips[i]]\n            ans += 1\n            while arr[strips[i]] == let:\n                i += 1\n                if i >= L:\n                    break\n        except:\n            break\n    print(ans)\nfor test in test_cases(int(input())):\n    main()", "t = int(input())\nfor i in range(t):\n    se = 1\n    (n, m, l) = map(int, input().split())\n    a = [0] * (n + 1)\n    for j in range(m):\n        c = list(map(int, input().split()))\n        c.remove(c[0])\n        for k in c:\n            a[k] = j\n    s = list(map(int, input().split()))\n    for h in range(1, len(s)):\n        if a[s[h]] != a[s[h - 1]]:\n            se += 1\n    print(se)", "t = int(input())\nfor k in range(t):\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    m = arr[1]\n    l = arr[2]\n    a = []\n    for i in range(m):\n        arr_ = list(map(int, input().split()))\n        a.append(arr_[1:])\n    x = list(map(int, input().split()))\n    count = 1\n    y = {}\n    for (i, g) in enumerate(a):\n        for e in g:\n            y.setdefault(e, set()).add(i)\n\n    def samegrp(e1, e2):\n        return y.get(e1, set()) & y.get(e2, set())\n    for i in range(len(x) - 1):\n        if samegrp(x[i], x[i + 1]) == set():\n            count += 1\n    print(count)", "def solve():\n    dup = [0] * (N + 1)\n    for i in range(M):\n        for a in A[i][1:]:\n            dup[a] = i\n    segments = 1\n    for i in range(1, L):\n        if dup[S[i]] != dup[S[i - 1]]:\n            segments += 1\n    return segments\nfor _ in range(int(input())):\n    (N, M, L) = [int(x) for x in input().split()]\n    A = []\n    for i in range(M):\n        A.append([int(x) for x in input().split()])\n    S = [int(x) for x in input().split()]\n    print(solve())", "def solve():\n    dup = [0] * (N + 1)\n    for i in range(M):\n        for a in A[i][1:]:\n            dup[a] = i\n    for i in range(L):\n        S[i] = dup[S[i]]\n    segments = 1\n    for i in range(1, L):\n        if S[i] != S[i - 1]:\n            segments += 1\n    return segments\nfor _ in range(int(input())):\n    (N, M, L) = [int(x) for x in input().split()]\n    A = []\n    for i in range(M):\n        A.append([int(x) for x in input().split()])\n    S = [int(x) for x in input().split()]\n    print(solve())", "def solve():\n    dup = {}\n    for Ai in A:\n        for a in Ai[1:]:\n            dup[a] = Ai[1]\n    for i in range(L):\n        if S[i] in dup:\n            S[i] = dup[S[i]]\n    segments = 1\n    for i in range(1, L):\n        if S[i] != S[i - 1]:\n            segments += 1\n    return segments\nfor _ in range(int(input())):\n    (N, M, L) = [int(x) for x in input().split()]\n    A = []\n    for i in range(M):\n        A.append([int(x) for x in input().split()])\n    S = [int(x) for x in input().split()]\n    print(solve())", "T = int(input())\nwhile T > 0:\n    (n, m, l) = input().split()\n    n = int(n)\n    m = int(m)\n    l = int(l)\n    ans = 1\n    final = [x for x in range(n + 1)]\n    for i in range(m):\n        arr = input().split()\n        x = 0\n        for j in arr:\n            if x == 0:\n                x = 1\n                continue\n            j = int(j)\n            final[j] = i\n    strip = input().split()\n    for i in range(len(strip) - 1):\n        if final[int(strip[i])] != final[int(strip[i + 1])]:\n            ans = ans + 1\n    print(ans)\n    T -= 1", "try:\n    t = int(input())\n    for _ in range(t):\n        arr = list(map(int, input().split()))\n        n = arr[0]\n        m = arr[1]\n        l = arr[2]\n        a = []\n        for i in range(m):\n            b = list(map(int, input().split()))\n            a.append(b[1:])\n        strip = list(map(int, input().split()))\n        length = 1\n        ind = {}\n        for (i, g) in enumerate(a):\n            for e in g:\n                ind.setdefault(e, set()).add(i)\n\n        def same_group(e1, e2):\n            return ind.get(e1, set()) & ind.get(e2, set())\n        for i in range(len(strip) - 1):\n            if same_group(strip[i], strip[i + 1]) == set():\n                length += 1\n        print(length)\nexcept:\n    pass", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    z = [-1] * (n + 1)\n    for i in range(m):\n        (k, *a) = map(int, input().split())\n        for j in a:\n            z[j] = i + 1\n    strip = [int(i) for i in input().split()]\n    segcnt = 0\n    prev = -1\n    for i in strip:\n        k = z[i]\n        if prev == -1 or prev != k:\n            segcnt += 1\n            prev = k\n    print(segcnt)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    M = {}\n    for i in range(m):\n        t = list(map(int, input().split()))[1:]\n        for j in range(len(t)):\n            M[t[j]] = i + 1\n    L = list(map(int, input().split()))\n    prev = M[L[0]]\n    curr = 0\n    count = 1\n    for i in range(1, l):\n        curr = M[L[i]]\n        if prev != curr:\n            count += 1\n        prev = curr\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    color_index = [0] * (n + 1)\n    for i in range(1, m + 1):\n        color = list(map(int, input().split()))[1:]\n        for j in color:\n            color_index[j] = i\n    s = list(map(int, input().split()))\n    sections = 1\n    for i in range(1, l):\n        if color_index[s[i]] != color_index[s[i - 1]]:\n            sections += 1\n    print(sections)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    M = {}\n    for i in range(m):\n        t = list(map(int, input().split()))[1:]\n        for j in range(len(t)):\n            M[t[j]] = i + 1\n    L = list(map(int, input().split()))\n    prev = M[L[0]]\n    (curr, c) = (0, 1)\n    for i in range(1, l):\n        curr = M[L[i]]\n        if prev != curr:\n            c += 1\n        prev = curr\n    print(c)", "try:\n    t = int(input())\n    for _ in range(t):\n        arr = list(map(int, input().split()))\n        n = arr[0]\n        m = arr[1]\n        l = arr[2]\n        a = []\n        for i in range(m):\n            b = list(map(int, input().split()))\n            a.append(b[1:])\n        strip = list(map(int, input().split()))\n        length = 1\n        ind = {}\n        for (i, g) in enumerate(a):\n            for e in g:\n                ind.setdefault(e, set()).add(i)\n\n        def same_group(e1, e2):\n            return ind.get(e1, set()) & ind.get(e2, set())\n        for i in range(len(strip) - 1):\n            if same_group(strip[i], strip[i + 1]) == set():\n                length += 1\n        print(length)\nexcept:\n    pass", "for i in range(int(input())):\n    c = 0\n    prev = 0\n    (n, m, l) = map(int, input().split())\n    ar = [0] * (n + 1)\n    for i in range(1, m + 1):\n        a = list(map(int, input().split()))\n        for j in a:\n            ar[j] = i\n    lis = list(map(int, input().split()))\n    for k in lis:\n        if ar[k] != prev:\n            c += 1\n            prev = ar[k]\n    print(c)", "t = int(input().strip())\nwhile t:\n    (N, M, L) = map(int, input().strip().split())\n    id = [-1] * (N + 1)\n    for i in range(M):\n        line = list(map(int, input().strip().split()))[1:]\n        for j in range(len(line)):\n            id[line[j]] = i + 1\n    l_list = list(map(int, input().strip().split()))\n    count = 0\n    for i in range(1, len(l_list)):\n        if id[l_list[i]] != id[l_list[i - 1]]:\n            count += 1\n    count += 1\n    print(count)\n    t -= 1", "for i in range(int(input())):\n    c = 1\n    (n, m, l) = map(int, input().split())\n    ar = [0] * (n + 1)\n    for i in range(1, m + 1):\n        a = list(map(int, input().split()))\n        for j in a:\n            ar[j] = i\n    lis = list(map(int, input().split()))\n    for k in range(l - 1):\n        if ar[lis[k]] != ar[lis[k + 1]]:\n            c += 1\n    print(c)", "try:\n    t = int(input())\n    i = 1\n    while i <= t:\n        arr = list(map(int, input().split(' ')))\n        N = int(arr[0])\n        M = int(arr[1])\n        L = int(arr[2])\n        m = 1\n        list_2d = []\n        dict = {}\n        while m <= M:\n            temp_list = list(input().split(' '))\n            for a in range(1, len(temp_list)):\n                temp = int(temp_list[a])\n                dict[temp] = m\n            m += 1\n        count = 1\n        Strip = list(map(int, input().split(' ')))\n        prev = dict[Strip[0]]\n        for strip in range(1, L):\n            temp = Strip[strip]\n            if dict[temp] != prev:\n                count += 1\n                prev = dict[temp]\n            else:\n                prev = dict[temp]\n        print(count)\n        i += 1\nexcept IOError:\n    print('IO Exception')", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    M = {}\n    for i in range(m):\n        t = list(map(int, input().split()))[1:]\n        for j in range(len(t)):\n            M[t[j]] = i + 1\n    L = list(map(int, input().split()))\n    prev = M[L[0]]\n    (curr, c) = (0, 1)\n    for i in range(1, l):\n        curr = M[L[i]]\n        if prev != curr:\n            c += 1\n        prev = curr\n    print(c)", "from collections import defaultdict\nfor t in range(int(input())):\n    (N, M, L) = map(int, input().split())\n    D = defaultdict(int)\n    c = 1\n    for i in range(M):\n        lst = list(map(int, input().split()))\n        for col in lst[1:]:\n            D[col] = i\n    stp = list(map(int, input().split()))\n    if len(stp) == 1:\n        print(c)\n    else:\n        for i in range(1, len(stp)):\n            if D[stp[i]] != D[stp[i - 1]]:\n                c += 1\n        print(c)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    dic = {}\n    j = 0\n    for i in range(m):\n        j += 1\n        lst = list(map(int, input().split()))\n        for i in range(1, len(lst)):\n            dic[lst[i]] = j\n    ls = list(map(int, input().split()))\n    chk = 0\n    count = 0\n    for i in ls:\n        chk1 = dic[i]\n        if chk != chk1:\n            count += 1\n            chk = chk1\n        else:\n            continue\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    d = dict()\n    for idx in range(m):\n        lst = list(map(int, input().split()))[1:]\n        for i in lst:\n            d[i] = idx\n    s = list(map(int, input().split()))\n    arr = []\n    for i in s:\n        if len(arr) == 0:\n            arr.append([d[i], 1])\n        elif arr[-1][0] == d[i]:\n            arr[-1][1] += 1\n        else:\n            arr.append([d[i], 1])\n    print(len(arr))", "T = int(input())\nfor test in range(T):\n    (n, m, l) = map(int, input().split())\n    checker = {}\n    idForList = 0\n    for listInput in range(m):\n        inp = list(map(int, input().split()))\n        inp = inp[1:]\n        for i in inp:\n            checker[i] = idForList\n        idForList += 1\n    stripID = list(map(int, input().split()))\n    cnt = 1\n    for i in range(1, l):\n        if checker[stripID[i]] != checker[stripID[i - 1]]:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    idx_list = {}\n    for i in range(m):\n        temp = list(map(int, input().split()))\n        for j in range(1, len(temp)):\n            idx_list[temp[j]] = i + 1\n    strip = list(map(int, input().split()))\n    segment = l\n    for i in range(l - 1):\n        if idx_list[strip[i]] == idx_list[strip[i + 1]]:\n            segment -= 1\n    print(segment)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    idx_list = {}\n    for i in range(m):\n        temp = list(map(int, input().split()))\n        for j in range(1, len(temp)):\n            idx_list[temp[j]] = i + 1\n    strip = list(map(int, input().split()))\n    segment = l\n    for i in range(l - 1):\n        if idx_list[strip[i]] == idx_list[strip[i + 1]]:\n            segment -= 1\n    print(segment)", "try:\n    for _ in range(int(input())):\n        A = [int(x) for x in input().split()]\n        M = [0 for i in range(A[0] + 1)]\n        for j in range(A[1]):\n            m = [int(x) for x in input().split()]\n            for i in m[1:]:\n                M[i] = j - 1\n        count = 1\n        L = [int(x) for x in input().split()]\n        for j in range(1, len(L)):\n            if M[L[j]] != M[L[j - 1]]:\n                count += 1\n        print(count)\nexcept:\n    pass", "T = int(input())\nfor i in range(T):\n    lengths = list(map(int, input().split()))\n    (N, M, L) = (lengths[0], lengths[1], lengths[2])\n    colour_groups = {}\n    for j in range(M):\n        colours = list(map(int, input().split()))\n        for k in colours[1:]:\n            colour_groups[k] = j\n    strip = list(map(int, input().split()))\n    prev = None\n    segment = 1\n    for h in strip:\n        if prev == None:\n            prev = colour_groups[h]\n            continue\n        elif prev != colour_groups[h]:\n            segment += 1\n            prev = colour_groups[h]\n    print(segment)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    z = {}\n    for i in range(a[1]):\n        arr = list(map(int, input().split()))\n        for x in arr[1:]:\n            z.update({x: i})\n    l = list(map(int, input().split()))\n    L = a[2]\n    X = -1\n    for x in range(a[2]):\n        y = z.get(l[x])\n        if X == y:\n            L = L - 1\n        X = y\n    print(L)", "t = int(input())\nfor _ in range(t):\n    (N, M, L) = map(int, input().split())\n    arr = [0] * N\n    for __ in range(1, M + 1):\n        K = list(map(int, input().split()))\n        for i in range(1, K[0] + 1):\n            inp = K[i]\n            arr[inp - 1] = __\n    prev = 0\n    ans = 0\n    s = list(map(int, input().split()))\n    for ll in range(L):\n        pp = s[ll] - 1\n        if arr[pp] != prev:\n            ans = ans + 1\n        prev = arr[pp]\n    print(ans)", "test = int(input())\nfor t in range(test):\n    major = []\n    (n, m, l) = map(int, input().split())\n    for i in range(m):\n        major.append(list(map(int, input().split())))\n    strip = list(map(int, input().split()))\n    check = [-1 for i in range(n + 1)]\n    ind = 0\n    for i in major:\n        for j in range(1, i[0] + 1):\n            check[i[j]] = ind\n        ind += 1\n    count = 0\n    i = 0\n    prevstrip = -2\n    while i < l:\n        if check[strip[i]] == prevstrip:\n            i += 1\n            continue\n        prevstrip = check[strip[i]]\n        count += 1\n        i += 1\n    print(count)", "test = int(input())\nfor t in range(test):\n    major = []\n    (n, m, l) = map(int, input().split())\n    for i in range(m):\n        major.append(list(map(int, input().split())))\n    strip = list(map(int, input().split()))\n    check = [-1 for i in range(n + 1)]\n    ind = 0\n    for i in major:\n        for j in range(1, i[0] + 1):\n            check[i[j]] = ind\n        ind += 1\n    count = 0\n    i = 0\n    prevstrip = -2\n    while i < l:\n        if check[strip[i]] == prevstrip:\n            i += 1\n            continue\n        prevstrip = check[strip[i]]\n        count += 1\n        i += 1\n    print(count)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    g = {}\n    for j in range(m):\n        l = list(map(int, input().split()))\n        for sd in range(1, len(l)):\n            g[l[sd]] = j + 1\n    z = list(map(int, input().split()))\n    p = 1\n    k = g[z[0]]\n    for i in range(1, len(z)):\n        if g[z[i]] != k:\n            p += 1\n            k = g[z[i]]\n    print(p)", "test = int(input())\nfor t in range(test):\n    major = []\n    (n, m, l) = map(int, input().split())\n    for i in range(m):\n        major.append(list(map(int, input().split())))\n    strip = list(map(int, input().split()))\n    check = [-1 for i in range(n + 1)]\n    ind = 0\n    for i in major:\n        for j in range(1, i[0] + 1):\n            check[i[j]] = ind\n        ind += 1\n    count = 0\n    i = 0\n    while i < l:\n        while i < l - 1:\n            if check[strip[i]] == check[strip[i + 1]]:\n                i += 1\n            else:\n                break\n        i += 1\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    dict = {}\n    for x in range(m):\n        l1 = list(map(int, input().split()))[1:]\n        for y in range(len(l1)):\n            dict[l1[y]] = x\n    l = list(map(int, input().split()))\n    c = 0\n    for x in range(len(l) - 1):\n        if dict[l[x]] != dict[l[x + 1]]:\n            c += 1\n    print(c + 1)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    m_list = [0] * n\n    for i in range(m):\n        a = list(map(int, input().split()))[1:]\n        for j in a:\n            m_list[j - 1] = i + 1\n    l_list = list(map(int, input().split()))\n    count = 0\n    for i in range(1, l):\n        if m_list[l_list[i - 1] - 1] != m_list[l_list[i] - 1]:\n            count += 1\n    print(count + 1)"]