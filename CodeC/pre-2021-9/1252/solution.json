["t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    l1 = []\n    r1 = []\n    l2 = 0\n    r2 = n - 1\n    for j in range(n - 1, -1, -1):\n        while l2 < n and (not l <= int(str(a[l2]) + str(a[j]))):\n            l2 += 1\n        l1.append(l2)\n    for k in range(n):\n        while r2 >= 0 and (not int(str(a[r2]) + str(a[k])) <= r):\n            r2 -= 1\n        r1.append(r2)\n    l1.reverse()\n    s = 0\n    for z in range(n):\n        x = r1[z] - l1[z] + 1\n        if x > 0:\n            s += x\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    l1 = []\n    r1 = []\n    l2 = 0\n    r2 = n - 1\n    for j in range(n - 1, -1, -1):\n        while l2 < n and (not l <= int(str(a[l2]) + str(a[j]))):\n            l2 += 1\n        l1.append(l2)\n    for k in range(n):\n        while r2 >= 0 and (not int(str(a[r2]) + str(a[k])) <= r):\n            r2 -= 1\n        r1.append(r2)\n    l1.reverse()\n    s = 0\n    for z in range(n):\n        x = r1[z] - l1[z] + 1\n        if x > 0:\n            s += x\n    print(s)", "def main():\n    for _ in range(int(input())):\n        (n, L, R) = map(int, input().split())\n        a = sorted(map(int, input().split()))\n        c = 0\n        ls = []\n        rs = []\n        (l, r) = (0, n - 1)\n        for i in range(n - 1, -1, -1):\n            while l < n and (not L <= int(str(a[l]) + str(a[i]))):\n                l += 1\n            ls.append(l)\n        for i in range(n):\n            while r >= 0 and (not int(str(a[r]) + str(a[i])) <= R):\n                r -= 1\n            rs.append(r)\n        ls.reverse()\n        s = 0\n        for i in range(n):\n            x = rs[i] - ls[i] + 1\n            if x > 0:\n                s += x\n        print(s)\nmain()", "from sys import stdin\nfrom bisect import bisect_left as bl, bisect_right as br\nimport math\n\ndef in_put():\n    s = stdin.readline()\n    return s\nfor _ in range(int(in_put())):\n    (n, l, r) = map(int, in_put().split())\n    arr = sorted(list(map(int, in_put().split())))\n    ans = 0\n    for i in arr:\n        x = bl(arr, math.ceil((l - i) / math.pow(10, len(str(i)))))\n        y = br(arr, (r - i) // math.pow(10, len(str(i))))\n        ans += y - x\n    print(ans)", "import bisect\nfor _ in range(int(input())):\n    (N, L, R) = map(int, input().split())\n    A = list(map(int, input().split()))\n    c = 0\n    A.sort()\n    for i in range(N):\n        l = len(str(A[i]))\n        xl = (L - A[i]) / 10 ** l\n        xr = (R - A[i]) / 10 ** l\n        c += bisect.bisect_right(A, xr) - bisect.bisect_left(A, xl)\n    print(c)", "import bisect\nimport math\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        x = bisect.bisect_left(arr, math.ceil((l - arr[i]) / 10 ** len(str(arr[i]))))\n        y = bisect.bisect_right(arr, (r - arr[i]) / 10 ** len(str(arr[i])))\n        count += y - x\n    print(count)", "import io, os, time\nimport sys\nimport bisect\n\ndef length(n):\n    return len(str(n))\nt = int(input())\nfor t in range(t):\n    (n, l, r) = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    a.sort()\n    ans = 0\n    for j in range(n):\n        left = (l - a[j]) / 10 ** length(a[j])\n        right = (r - a[j]) / 10 ** length(a[j])\n        ans += bisect.bisect(a, right) - bisect.bisect_left(a, left)\n    sys.stdout.write(str(ans) + '\\n')", "import io, os, time\nimport sys\ninput = sys.stdin.readline\nimport bisect\n\ndef length(n):\n    return len(str(n))\nt = int(input())\nfor t in range(t):\n    (n, l, r) = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    a.sort()\n    ans = 0\n    for j in range(n):\n        left = (l - a[j]) / 10 ** length(a[j])\n        right = (r - a[j]) / 10 ** length(a[j])\n        ans += bisect.bisect(a, right) - bisect.bisect_left(a, left)\n    print(ans)", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nans = ''\nfor _ in range(int(input())):\n    (n, l, r) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = 0\n    for i in range(len(arr)):\n        L = (l - arr[i]) / 10 ** len(str(arr[i]))\n        R = (r - arr[i]) / 10 ** len(str(arr[i]))\n        ind1 = bl(arr, L)\n        ind2 = br(arr, R)\n        count += ind2 - ind1\n    ans += str(count) + '\\n'\nprint(ans)", "from os import path\nfrom io import BytesIO, IOBase\nimport sys\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque, Counter, defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right, insort, insort_left, insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil, sqrt, log, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input().rstrip()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nabc = 'abcdefghijklmnopqrstuvwxyz'\nmod = 1000000007\ninf = float('inf')\nvow = ['a', 'e', 'i', 'o', 'u']\n(dx, dy) = ([-1, 1, 0, 0], [0, 0, 1, -1])\n\ndef bo(i):\n    return ord(i) - ord('0')\nfile = 1\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\ndef solve():\n    for _ in range(1, ii() + 1):\n        (n, l, r) = mi()\n        a = li()\n        a.sort()\n\n        def calc(s, p):\n            pw = pow(10, len(str(s)))\n            x = (p - s) // pw\n            return bisect_right(a, x)\n        res = 0\n        for i in a:\n            res += calc(i, r)\n            res -= calc(i, l - 1)\n        print(res)\nif file:\n    if path.exists('input.txt'):\n        sys.stdin = open('input.txt', 'r')\n        sys.stdout = open('output.txt', 'w')\n    else:\n        input = sys.stdin.readline\nsolve()", "for _ in range(int(input())):\n    (n, L, R) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    s = 0\n    ls = [0] * n\n    rs = [0] * n\n    (l, r) = (0, n - 1)\n    for i in reversed(range(n)):\n        while l < n and L > int(str(a[l]) + str(a[i])):\n            l += 1\n        ls[i] = l\n    for i in range(n):\n        while r >= 0 and int(str(a[r]) + str(a[i])) > R:\n            r -= 1\n        d = r - ls[i] + 1\n        if d > 0:\n            s += d\n    print(s)", "from sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, L, R) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    ls = [0] * n\n    rs = [0] * n\n    (l, r) = (0, n - 1)\n    for i in range(n - 1, -1, -1):\n        while l < n and L > int(str(a[l]) + str(a[i])):\n            l += 1\n        ls[i] = l\n    for i in range(n):\n        while r >= 0 and int(str(a[r]) + str(a[i])) > R:\n            r -= 1\n        d = r - ls[i] + 1\n        if d > 0:\n            s += d\n    print(s)", "from sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, L, R) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    s = 0\n    ls = [0] * n\n    rs = [0] * n\n    (l, r) = (0, n - 1)\n    for i in range(n - 1, -1, -1):\n        while l < n and (not L <= int(str(a[l]) + str(a[i]))):\n            l += 1\n        ls[i] = l\n    for i in range(n):\n        while r >= 0 and (not int(str(a[r]) + str(a[i])) <= R):\n            r -= 1\n        d = r - ls[i] + 1\n        if d > 0:\n            s += d\n    print(s)", "def binarysearch(lim, arr):\n    l = 0\n    r = len(arr) - 1\n    while l <= r:\n        mid = (l + r) // 2\n        if arr[mid] <= lim:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return l\nfrom bisect import bisect_left as bl, bisect_right as br\nimport math\nt = int(input())\nfor i in range(t):\n    (n, l, r) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for j in range(len(a)):\n        len_y = len(str(a[j]))\n        p = 10 ** len_y\n        L = (l - a[j] + p - 1) // p\n        R = (r - a[j]) // p\n        ans += br(a, R) - bl(a, L)\n    print(ans)", "import math\nimport bisect\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().strip().split())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    c = 0\n    for y in a:\n        d = 10 ** len(str(y))\n        (L, R) = (math.ceil((l - y) / d), math.floor((r - y) / d))\n        c += bisect.bisect_right(a, R) - bisect.bisect_left(a, L)\n    print(c)", "import sys\nfrom bisect import bisect_left as bl, bisect_right as br\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        fact = len(str(a[i]))\n        low = (l - a[i] + pow(10, fact) - 1) // pow(10, fact)\n        high = (r - a[i]) // pow(10, fact)\n        if low > high:\n            continue\n        ans += br(a, high) - bl(a, low)\n    sys.stdout.write(str(ans) + '\\n')", "import sys\nfrom bisect import bisect_left as bl, bisect_right as br\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        fact = len(str(a[i]))\n        low = (l - a[i] + pow(10, fact) - 1) // pow(10, fact)\n        high = (r - a[i]) // pow(10, fact)\n        if low > high:\n            continue\n        ans += br(a, high) - bl(a, low)\n    print(ans)", "for _ in range(int(input())):\n    (n, L, R) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    c = 0\n    ls = []\n    rs = []\n    (l, r) = (0, n - 1)\n    for i in range(n - 1, -1, -1):\n        while l < n and (not L <= int(str(a[l]) + str(a[i]))):\n            l += 1\n        ls.append(l)\n    for i in range(n):\n        while r >= 0 and (not int(str(a[r]) + str(a[i])) <= R):\n            r -= 1\n        rs.append(r)\n    ls.reverse()\n    s = 0\n    for i in range(n):\n        x = rs[i] - ls[i] + 1\n        if x > 0:\n            s += x\n    print(s)", "from sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, L, R) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    s = 0\n    ls = [0] * n\n    rs = [0] * n\n    (l, r) = (0, n - 1)\n    for i in range(n - 1, -1, -1):\n        while l < n and (not L <= int(str(a[l]) + str(a[i]))):\n            l += 1\n        ls[i] = l\n    for i in range(n):\n        while r >= 0 and (not int(str(a[r]) + str(a[i])) <= R):\n            r -= 1\n        d = r - ls[i] + 1\n        if d > 0:\n            s += d\n    print(s)"]