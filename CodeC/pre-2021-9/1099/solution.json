["t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    r = 0\n    for j in range(n):\n        r |= a[j]\n        sum += a[j]\n        r |= sum\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    r = 0\n    for j in range(n):\n        r |= a[j]\n        sum += a[j]\n        r |= sum\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pref_sum = 0\n    res = 0\n    for i in range(n):\n        res |= a[i]\n        pref_sum += a[i]\n        res |= pref_sum\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = 0\n    summ = 0\n    for i in range(N):\n        x = x | A[i]\n        summ = summ + A[i]\n        x = x | summ\n    print(x)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    xxx = 0\n    summ = 0\n    for i in range(N):\n        xxx = xxx | A[i]\n        summ = summ + A[i]\n        xxx = xxx | summ\n    print(xxx)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    xxx = 0\n    summ = 0\n    for i in range(N):\n        xxx = xxx | A[i]\n        summ = summ + A[i]\n        xxx = xxx | summ\n    print(xxx)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    dp = [0 for i in range(50)]\n    for i in range(50):\n        count = 0\n        for j in arr:\n            if j & 1 << i:\n                count += 1\n        dp[i] = count + dp[i - 1] // 2\n    ans = 0\n    s = sum(arr)\n    for i in range(50):\n        if dp[i]:\n            ans = ans | 1 << i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pref_sum = 0\n    res = 0\n    for i in range(n):\n        res |= a[i]\n        pref_sum += a[i]\n        res |= pref_sum\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pref_sum = 0\n    res = 0\n    for i in range(n):\n        res |= a[i]\n        pref_sum += a[i]\n        res |= pref_sum\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().split()))\n    ans = l[0]\n    for i in l:\n        ans |= i\n        s += i\n        ans |= s\n    print(ans)", "def answer():\n    bits = [0] * 61\n    ans = 0\n    for i in range(60):\n        for v in a:\n            if v >> i & 1:\n                bits[i] += 1\n        bits[i + 1] += bits[i] // 2\n        if bits[i]:\n            ans |= 1 << i\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = get_array()\n    pref_sum = 0\n    res = 0\n    for i in range(n):\n        res |= a[i]\n        pref_sum += a[i]\n        res |= pref_sum\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (sum, ans) = (0, 0)\n    for i in range(n):\n        ans |= arr[i]\n        sum += arr[i]\n        ans |= sum\n    print(ans)", "from math import log2\nimport bisect\nfrom bisect import bisect_left, bisect_right\nimport sys\nsys.setrecursionlimit(10 ** 7)\nfrom collections import defaultdict\ninf = float('inf')\n\ndef get_no(l, k):\n    suma = sum(l)\n    if suma >= k:\n        return 1\n    return 0\n\ndef list_mod(l, k):\n    return [i % k for i in l]\ntwopowers = [1]\nwhile twopowers[-1] < pow(2, 60):\n    twopowers.append(twopowers[-1] * 2)\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    answer = []\n    for k in twopowers:\n        m = list_mod(l, 2 * k)\n        theta = get_no(m, k)\n        answer.append(theta)\n    answer.reverse()\n    a = ''\n    for i in answer:\n        a += str(i)\n    ans = int(a, 2)\n    print(ans)", "def abc(l, n, i, x):\n    if i == n:\n        return x\n    return abc(l, n, i + 1, x) | abc(l, n, i + 1, x + l[i])\nt = int(input())\nimport random\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = [0] * 64\n    for i in range(n):\n        c = '{0:031b}'.format(l[i])\n        c = c[-1::-1]\n        for j in range(len(c)):\n            if c[j] == '1':\n                ans[j] += 1\n    for i in range(64):\n        d = ans[i]\n        ans[i] = 0\n        if d:\n            ans[i] = 1\n            ans[i + 1] += d // 2\n    k = 1\n    e = 0\n    for i in range(64):\n        e += k * ans[i]\n        k *= 2\n    print(e)", "import math\n\ndef check(N, a):\n    su = 0\n    for i in a:\n        su = su + i\n        if su >= 2 ** N and su < 2 ** (N + 1):\n            return 0\n    return -1\n\ndef binary(N):\n    a = []\n    while N != 0:\n        a.append(N % 2)\n        N = N // 2\n    return a\n\ndef decimal(a):\n    s = 0\n    for i in range(len(a)):\n        s = s + 2 ** i * a[i]\n    return s\nfor i in range(int(input())):\n    N = int(input())\n    a = [int(x) for x in input().split()]\n    s = sum(a)\n    k = binary(s)\n    count = 0\n    su = 0\n    for i in range(len(a)):\n        su = su + a[i]\n        count = count | su | a[i]\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list((int(x) for x in input().split()))\n    res = 0\n    x = 0\n    for i in range(0, len(arr)):\n        res += arr[i]\n        x = x | res | arr[i]\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = 0\n    s = 0\n    b = []\n    for i in range(len(a)):\n        sum += a[i]\n        b.append(sum)\n    for i in range(len(b)):\n        s = s | b[i] | a[i]\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = 0\n    s = 0\n    for i in range(len(a)):\n        sum += a[i]\n        s = s | sum | a[i]\n    print(s)", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "from math import log2\n\ndef answer():\n    x = int(log2(n * sum(a)))\n    set_bit = [0] * (x + 2)\n    ans = 0\n    for bit in range(x + 1):\n        for val in a:\n            if val >> bit & 1:\n                set_bit[bit] += 1\n        set_bit[bit + 1] += set_bit[bit] // 2\n        if set_bit[bit]:\n            ans |= 1 << bit\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "from math import log2\nworst_bit = int(log2(10 ** 5 * 2 ** 30))\n\ndef answer():\n    set_bit = [0] * (worst_bit + 2)\n    ans = 0\n    for bit in range(worst_bit + 1):\n        for val in a:\n            if val >> bit & 1:\n                set_bit[bit] += 1\n        set_bit[bit + 1] += set_bit[bit] // 2\n        if set_bit[bit]:\n            ans |= 1 << bit\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = [0] * 75\n    b = 1\n    for j in range(n):\n        b = 1\n        c = 0\n        while a[j] > 0:\n            g[c] = g[c] + a[j] % 2 * b\n            a[j] = a[j] // 2\n            c = c + 1\n            b = b * 2\n    b = 1\n    sumo = 0\n    sum1 = 0\n    for j in range(75):\n        sumo = sumo + g[j]\n        if sumo >= b:\n            sum1 = sum1 + b\n        b = b * 2\n    print(sum1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sum1 = 0\n    mx = 0\n    for i in arr:\n        sum1 += i\n        mx = sum1 | i | mx\n    print(mx)", "from math import log2\nfor _ in range(int(input())):\n    (n, a) = (int(input()), sorted(list(map(int, input().split()))))\n    val = int(log2(pow(10, 5) * pow(2, 31)))\n    (ans, old) = (0, 0)\n    for i in range(0, val + 1):\n        temp = 0\n        for j in range(n):\n            if a[j] & 1 << i:\n                temp += 1\n        if temp:\n            ans += 1 << i\n        elif old >= 1 << i:\n            ans += 1 << i\n        old += temp * (1 << i)\n    print(ans)", "import sys\nimport math\nfrom collections import defaultdict, Counter\ninput = sys.stdin.readline\n\ndef print(x):\n    sys.stdout.write(str(x) + '\\n')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [0] * 60\n    s = 0\n    for j in a:\n        for k in range(30):\n            if j & 1 << k:\n                d[k] += 1\n        s += j\n    b = len(bin(s)) - 2\n    l = ['0'] * b\n    l[-1] = '1'\n    for j in range(b - 1):\n        c = 0\n        cur = 0\n        for k in range(j, -1, -1):\n            cur += d[k]\n            if cur >= 1 << c:\n                l[j] = '1'\n                break\n            c += 1\n            cur *= 2\n    ans = ''.join(reversed(l))\n    print(int(ans, 2))", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ans = 0\n    count = 0\n    for i in arr:\n        ans = ans | i\n        count = count + i\n        ans = ans | count\n    print(ans)", "from math import log2, ceil, floor\nmaxBits = ceil(log2(10 ** 5 * 2 ** 31))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = 0\n    ans = 0\n    for num in arr:\n        ans |= num\n        tot += num\n        ans |= tot\n    print(ans)", "from math import log2, ceil, floor\nmaxBits = ceil(log2(10 ** 5 * 2 ** 31))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dp = [0 for i in range(maxBits + 1)]\n    ans = 0\n    for bit in range(maxBits + 1):\n        c = 0\n        for i in range(len(arr)):\n            c += 1 if arr[i] & 1 << bit else 0\n        dp[bit] = c\n        if bit > 0:\n            dp[bit] += dp[bit - 1] // 2\n        if dp[bit]:\n            ans += 2 ** bit\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    res = 0\n    tot = 0\n    for a in A:\n        tot = tot + a\n        res = res | a\n        res = res | tot\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    finalOr = 0\n    numOfBits = 0\n    carryOverBits = 0\n    for i in range(50):\n        for j in l:\n            temp = j\n            temp = temp >> i\n            numOfBits += temp & 1\n        if numOfBits + carryOverBits >= 1:\n            finalOr = finalOr | 1 << i\n        carryOverBits = (numOfBits + carryOverBits) // 2\n        numOfBits = 0\n    print(finalOr)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    Sum = 0\n    for i in a:\n        ans |= i\n        Sum += i\n        ans |= Sum\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    sm = 0\n    ans = 0\n    lis = list(map(int, input().split()))\n    for i in lis:\n        ans |= i\n        sm += i\n        ans |= sm\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = 0\n    sum = 0\n    for ele in arr:\n        ans |= ele\n        sum += ele\n        ans |= sum\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    z = 0\n    sm = 0\n    for i in ls:\n        sm += i\n        z = z | i | sm\n    print(z)", "def log(a):\n    c = 0\n    while a > 0:\n        a >>= 1\n        c += 1\n    return c\n\ndef sso(arr, n, brr, l):\n    for i in range(l):\n        count = 0\n        for j in range(n):\n            if arr[j] >> i & 1 == 1:\n                count += 1\n        if i == 0:\n            brr[0] = count\n        else:\n            brr[i] = count + brr[i - 1] // 2\n    res = 0\n    for i in range(l):\n        if brr[i] > 0:\n            res += 1 << i\n    return res\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s += i\n    l = log(s)\n    brr = [0] * l\n    print(sso(arr, n, brr, l))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = max(a).bit_length()\n    i = ans = bits = 0\n    while i < m or bits > 0:\n        for j in range(n):\n            if a[j] >> i & 1:\n                bits += 1\n        if bits > 0:\n            ans |= 1 << i\n        bits >>= 1\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    s = max(a)\n    m = 0\n    while s > 0:\n        s >>= 1\n        m += 1\n    i = ans = bits = 0\n    while i < m or bits > 0:\n        for j in range(n):\n            if a[j] >> i & 1:\n                bits += 1\n        if bits > 0:\n            ans |= 1 << i\n        bits >>= 1\n        i += 1\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    sm = 0\n    while n > 0:\n        ans = ans | arr[n - 1]\n        sm = sm + arr[n - 1]\n        ans = ans | sm\n        n -= 1\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    ans = 0\n    bits = 0\n    for i in range(30):\n        for j in range(n):\n            if a[j] >> i & 1:\n                bits += 1\n        if bits > 0:\n            ans |= 1 << i\n        bits >>= 1\n    i = 30\n    while bits > 0:\n        ans |= 1 << i\n        bits >>= 1\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    s = sum(a)\n    m = 0\n    while s > 0:\n        s >>= 1\n        m += 1\n    ans = 0\n    bits = 0\n    for i in range(m):\n        for j in range(n):\n            if a[j] >> i & 1:\n                bits += 1\n        if bits > 0:\n            ans |= 1 << i\n        bits >>= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    su = 0\n    for i in a:\n        ans |= i\n        su += i\n        ans |= su\n    print(ans)", "import sys\n\ndef main():\n    test_cases = int(sys.stdin.readline())\n    for _ in range(test_cases):\n        N = int(sys.stdin.readline())\n        A = [int(i) for i in sys.stdin.readline().split()]\n        max_bit = 50\n        bits_set = [0 for _ in range(max_bit)]\n        for a in A:\n            for b in range(max_bit):\n                mask = 1 << b\n                if a & mask:\n                    bits_set[b] += 1\n        soln = 0\n        for b in range(max_bit):\n            if bits_set[b] > 0:\n                mask = 1 << b\n                carry = bits_set[b] // 2\n                if b + 1 < max_bit:\n                    bits_set[b + 1] += carry\n                soln |= mask\n        print(soln)\nmain()", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    t = 0\n    for i in l:\n        t = t + i\n        s = s | t | i\n    print(s)", "l1 = int(input())\nfor _ in range(l1):\n    n = int(input())\n    s = list(map(int, input().split()))\n    count = 0\n    a = []\n    for i in s:\n        a.append(count + i)\n        count += i\n    f = a[0]\n    for i in range(n):\n        f = f | a[i]\n        f = f | s[i]\n    print(f)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ct = ar[0]\n    res = ar[0]\n    for i in ar[1:]:\n        ct += i\n        res = res | ct | i\n    print(res)", "for i in range(int(input())):\n    o = 0\n    s = 0\n    input()\n    l = map(int, input().split())\n    for j in l:\n        s += j\n        o = o | s | j\n    print(o)", "t = int(input())\n\ndef abc(l, n, i, x):\n    if i == n:\n        return x\n    return abc(l, n, i + 1, x) | abc(l, n, i + 1, x + l[i])\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    l.sort()\n    c = 0\n    for i in l:\n        c += i\n        ans = ans | i\n        ans = ans | c\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    ar = list(map(int, input().split()))\n    for e in ar:\n        ans |= e\n    cur_sum = 0\n    for e in ar:\n        cur_sum += e\n        ans |= cur_sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    h = 0\n    for i in range(len(a)):\n        x += a[i]\n        h |= x | a[i]\n    print(h)", "for Jai_Shree_RAM in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    h = 0\n    for i in arr:\n        h += i\n        s |= i | h\n    print(s)", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    m = 0\n    l = map(int, input().split())\n    for i in l:\n        s += i\n        m = m | i | s\n    print(m)", "from sys import stdin as stin, stdout as stout, setrecursionlimit as srl\n\ndef get_ints():\n    return map(int, stin.readline().split())\n\ndef get_list():\n    return list(map(int, stin.readline().split()))\n\ndef get_int():\n    return int(stin.readline())\n\ndef get_str():\n    return stin.readline()\nfor _ in range(get_int()):\n    n = get_int()\n    nums = get_list()\n    ans = 0\n    s = 0\n    for i in nums:\n        ans |= i\n        s += i\n        ans |= s\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    sum = 0\n    for i in range(N):\n        sum += A[i]\n        ans = ans | sum | A[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumi = sum(a)\n    p = 0\n    for i in range(0, len(a)):\n        p += a[i]\n        sumi = sumi | a[i] | p\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = 0\n    t = 0\n    for i in range(n):\n        r = r | a[i]\n        t += a[i]\n        r = r | t\n    print(t | r)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = []\n    ans = 0\n    s = 0\n    for x in a:\n        s = s + x\n        ans |= x\n        ans |= s\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    curr = 0\n    for i in a:\n        curr += i\n        ans |= i | curr\n    print(ans)", "from random import randint\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    tot = sum(arr)\n    ans = tot\n    for i in range(n):\n        ans |= arr[i]\n        ans |= tot - arr[i]\n    arr.sort()\n    current = 0\n    for j in range(n):\n        current += arr[j]\n        ans |= current\n    print(ans)", "from itertools import accumulate\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    akk = list(accumulate(arr))\n    ans = 0\n    for i in range(n):\n        ans = ans | akk[i] | arr[i]\n    print(ans)", "from itertools import accumulate\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    akk = list(accumulate(arr))\n    ans = 0\n    for i in arr:\n        ans |= i\n    for i in range(n):\n        ans |= akk[i]\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    temp = 0\n    sum = 0\n    arr = map(int, input().split())\n    for x in arr:\n        sum += x\n        temp = temp | x | sum\n    print(temp)", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    temp = 0\n    sum = 0\n    arr = map(int, input().split())\n    for x in arr:\n        sum += x\n        temp = temp | x | sum\n    print(temp)", "from math import log2\nfor _ in range(int(input())):\n    (n, a) = (int(input()), sorted(list(map(int, input().split()))))\n    val = int(log2(pow(10, 5) * pow(2, 31)))\n    (ans, old) = (0, 0)\n    for i in range(0, val + 1):\n        temp = 0\n        for j in range(n):\n            if a[j] & 1 << i:\n                temp += 1\n        if temp:\n            ans += 1 << i\n        elif old >= 1 << i:\n            ans += 1 << i\n        old += temp * (1 << i)\n    print(ans)", "T = int(input())\nfor each in range(T):\n    N = int(input())\n    sm = 0\n    mx = 0\n    arr = map(int, input().split())\n    for x in arr:\n        mx += x\n        sm = sm | x | mx\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = [l[0]]\n    for i in l[1:]:\n        p.append(p[-1] + i)\n    x = 0\n    for i in p:\n        x |= i\n    for i in l:\n        x |= i\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    l.sort()\n    m = [s - l[0]]\n    for i in range(1, n):\n        m.append(m[-1] - l[i])\n    for i in range(n):\n        s = s | m[i]\n    for i in range(n):\n        s = s | l[i]\n    print(s)", "import math, sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, deque\ninput = stdin.readline\nI = lambda : int(input())\nli = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = I()\n    a = li()\n    s = [a[0]]\n    for i in range(1, n):\n        s.append(s[i - 1] + a[i])\n    x = s[0]\n    for i in range(1, n):\n        x |= s[i]\n    for i in range(n):\n        x |= a[i]\n    print(x)\nfor _ in range(I()):\n    solve()", "f = input\nfor _ in range(int(f())):\n    n = int(f())\n    l = list(map(int, f().split()))\n    ans = 0\n    su = 0\n    for i in range(n):\n        su += l[i]\n        ans = ans | su | l[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    sum_ = 0\n    for i in range(n):\n        sum_ += l[i]\n        ans = ans | sum_ | l[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ct = ar[0]\n    res = ar[0]\n    for i in ar[1:]:\n        ct += i\n        res = res | ct | i\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    res = 0\n    for i in range(0, n):\n        res = res | arr[i]\n    for i in range(0, n):\n        ans = ans + arr[i]\n        res = res | ans\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sm = 0\n    smm = []\n    for j in a:\n        sm += j\n        smm.append(sm)\n    ans = 0\n    for k in smm:\n        ans = ans | k\n    for k in a:\n        ans = ans | k\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sm = 0\n    smm = []\n    for j in a:\n        sm += j\n        smm.append(sm)\n    ans = 0\n    for k in smm:\n        ans = ans | k\n    smm = []\n    sm = 0\n    for j in a[::-1]:\n        sm += j\n        smm.append(sm)\n    for k in smm:\n        ans = ans | k\n    for k in a:\n        ans = ans | k\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = A.copy()\n    for i in range(1, n):\n        A[i] = A[i] + A[i - 1]\n    bitsum = 0\n    for i in A:\n        bitsum = bitsum | i\n    for x in B:\n        bitsum = bitsum | x\n    print(bitsum)", "def testcase():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    bf = [0 for _ in range(100)]\n    bi = 0\n    bv = 1\n    mx = max(arr)\n    while bv <= mx:\n        f = 0\n        for a in arr:\n            if a & bv != 0:\n                f += 1\n        bf[bi] += f\n        bi += 1\n        bv <<= 1\n    for i in range(1, 100):\n        bf[i] += bf[i - 1] // 2\n    bv = 1\n    ans = 0\n    for i in range(100):\n        if bf[i] > 0:\n            ans += bv\n        bv <<= 1\n    print(ans)\n    return\nimport sys, os\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\nsys.setrecursionlimit(10 ** 5)\nt = int(input())\nfor _ in range(t):\n    testcase()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    l = a.copy()\n    for i in range(n):\n        s = s + a[i]\n        l.append(s)\n    k = l[0]\n    for i in range(1, len(l)):\n        k = k | l[i]\n    print(k)", "import math\nfrom operator import ior\nfrom functools import reduce\nfrom itertools import combinations\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lis = [i for i in arr]\n    some = 0\n    for i in range(0, n):\n        some += arr[i]\n        lis.append(some)\n    print(reduce(ior, lis))", "def hello_bhai():\n    for i in range(n):\n        parameter = bin(hi[i])[2:]\n        le = len(parameter)\n        for j in range(le):\n            good_night[j] += int(parameter[-j - 1])\n\ndef kaisa_hai():\n    for i in range(100000):\n        if good_night[i] > 1:\n            byee(i)\n\ndef byee(i):\n    good_night[i + 1] += good_night[i] // 2\n    good_night[i] = 1\nM = 100001\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    hi = list(map(int, input().split()))\n    good_night = [0] * M\n    hello_bhai()\n    kaisa_hai()\n    print(int('0b' + ''.join(list(map(str, good_night[::-1]))), 2))", "from sys import stdin\ninput = stdin.readline\nMAX = 60\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        done = set()\n        for j in range(MAX):\n            asd = 1 << j\n            if asd >= a[i]:\n                break\n            x = a[i] % asd\n            if x != 0 and x not in done:\n                a.append(x)\n                done.add(x)\n    p = [0] * MAX\n    for i in a:\n        p[i.bit_length() - 1] += 1\n    for i in range(1, MAX):\n        p[i] += p[i - 1] >> 1\n    s = 0\n    for i in range(MAX):\n        if p[i]:\n            s += 1 << i\n    print(s)", "t = int(input())\nfor _ in range(t):\n    bits = [0] * 50\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        j = l[i]\n        index = 0\n        while j > 0:\n            val = j % 2\n            bits[index] += val\n            index += 1\n            j //= 2\n    ans = 0\n    cur = 0\n    for i in range(50):\n        val = bits[i] + cur\n        if val:\n            ans += 2 ** i\n        cur = val // 2\n    print(ans)", "from sys import maxsize, stdout, stdin, stderr\nmod = int(1000000000.0 + 7)\nimport re\ntup = lambda : map(int, stdin.readline().split())\nI = lambda : int(stdin.readline())\nlint = lambda : [int(x) for x in stdin.readline().split()]\nS = lambda : stdin.readline().replace('\\n', '').strip()\n\ndef grid(r, c):\n    return [lint() for i in range(r)]\n\ndef debug(*args, c=6):\n    print('\\x1b[3{}m'.format(c), *args, '\\x1b[0m', file=stderr)\nfor _ in range(I()):\n    x = I()\n    ls = lint()\n    (s, p) = (0, 0)\n    for i in ls:\n        s += i\n        p = s | p | i\n    print(p)", "import sys\nimport itertools as it\nimport math as mt\nimport bisect as bi\nimport collections as cc\nimport itertools as it\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    l = I()\n    l.sort()\n    f = cc.defaultdict(int)\n    ans = 0\n    prev = 0\n    for i in range(0, 50):\n        now = 0\n        for k in range(n):\n            if l[k] & 1 << i:\n                now += 1\n        if now:\n            ans += pow(2, i)\n        elif prev >= pow(2, i):\n            ans += pow(2, i)\n        prev += now * pow(2, i)\n    print(ans)", "I = lambda : list(map(int, input().split()))\n(t,) = I()\nfor _ in range(t):\n    (n,) = I()\n    l = I()\n    an = 0\n    x = 1\n    pr = 0\n    for i in range(57):\n        ct = 0\n        for j in range(n):\n            if x & l[j]:\n                ct += 1\n        if ct:\n            an += x\n        elif pr >= x:\n            an += x\n        pr += ct * x\n        x *= 2\n    print(an)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0 for x in range(30)]\n    for i in range(n):\n        x = a[i]\n        j = 0\n        while x > 0:\n            b[j] = b[j] + x % 2\n            x = x // 2\n            j += 1\n    k = 0\n    rep = 1\n    ans = 0\n    for i in range(30):\n        k = k // 2 + b[i]\n        if k > 0:\n            ans = ans + rep\n        rep = rep * 2\n    k = k // 2\n    while k > 0:\n        ans = ans + rep\n        rep = rep * 2\n        k = k // 2\n    print(ans)", "import sys, math\ninput = lambda : sys.stdin.readline().strip()\ninp = lambda : list(map(int, input().split()))\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\nfor _ in range(int(input())):\n    (n,) = inp()\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(47)]\n    for i in range(n):\n        s = bin(a[i]).replace('0b', '')\n        s = s[::-1]\n        for j in range(len(s)):\n            if s[j] == '1':\n                ans[j] += 1\n    res = [0 for i in range(47)]\n    for i in range(47):\n        if ans[i] > 0:\n            res[i] = 1\n        if i < 46:\n            ans[i + 1] += ans[i] // 2\n    new = ''.join((str(i) for i in res))\n    print(int(new[::-1], 2))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l1 = [int(i) for i in input().split(' ')]\n    l2 = []\n    k = 0\n    for i in l1:\n        k += i\n        l2.append(k)\n    ans = 0\n    for i in range(n):\n        ans = ans | l2[i]\n        ans = ans | l1[i]\n    print(ans)", "for tc in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    a = [0] * n\n    a[0] = li[0]\n    for i in range(1, n):\n        a[i] = a[i - 1] + li[i]\n    c = 0\n    for i in range(n):\n        c = c | a[i]\n        c = c | li[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num = [0] * 100000\n    for i in l:\n        x = bin(i)[2:]\n        for j in range(len(x)):\n            num[j] += int(x[-j - 1])\n    for i in range(100000):\n        if num[i] > 1:\n            num[i + 1] += num[i] // 2\n            num[i] = 1\n    print(int('0b' + ''.join(list(map(str, num[::-1]))), 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = 0\n    t = 0\n    for i in range(n):\n        r = r | a[i]\n        t += a[i]\n        r = r | t\n    print(t | r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    ans = s\n    prefsum = 0\n    for i in range(n):\n        prefsum += a[i]\n        ans = ans | prefsum\n        ans = ans | a[i]\n    print(ans)", "from sys import stdin, stdout\nfrom collections import defaultdict, deque\nT = int(stdin.readline())\nfor t in range(T):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    z = 0\n    ans = 0\n    for i in range(n):\n        z += l[i]\n        ans |= l[i]\n        ans |= z\n    print(ans)"]