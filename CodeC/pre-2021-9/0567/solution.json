["for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    if n < k or (n * 6 < k * 7 and s >= 7) or (n == k and s >= 7):\n        print(-1)\n        continue\n    if k * s % n == 0:\n        print(k * s // n)\n    else:\n        print(k * s // n + 1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    if n < k or (n * 6 < k * 7 and s >= 7) or (n == k and s >= 7):\n        print(-1)\n        continue\n    if k * s % n == 0:\n        print(k * s // n)\n    else:\n        print(k * s // n + 1)", "from math import ceil\nfor t in range(int(input())):\n    (n, k, s) = tuple(map(int, input().split()))\n    t = ceil(s * k / n)\n    print(-1 if t > s - s // 7 else t)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = list(map(int, input().split()))\n    if n < k:\n        print('-1')\n        continue\n    if s > 6 and 6 * n - 7 * k < 0:\n        print('-1')\n        continue\n    days = s * k // n\n    if s * k % n != 0:\n        days += 1\n    print(days)", "import math\ntc = int(input())\nfor _ in range(tc):\n    ip = list(map(int, input().split()))\n    n = ip[0]\n    k = ip[1]\n    s = ip[2]\n    days = s - s // 7\n    res = math.ceil(s * k / n)\n    if days < res:\n        print(-1)\n    else:\n        print(res)", "import sys\nfrom math import gcd, sqrt, log, ceil, floor\ntc = int(input().strip())\nfor t in range(tc):\n    (chocolate, consumption, days) = map(int, input().split())\n    if consumption > chocolate:\n        print(-1)\n        continue\n    purchaseReq = ceil(consumption * days / chocolate)\n    purchasesPossible = days - days // 7\n    if purchaseReq <= purchasesPossible:\n        print(purchaseReq)\n    else:\n        print(-1)", "import sys\nfrom math import gcd, sqrt, log, ceil, floor\ntc = int(input().strip())\nfor t in range(tc):\n    (chocolate, consumption, days) = map(int, input().split())\n    if consumption > chocolate:\n        print(-1)\n        continue\n    purchaseReq = ceil(consumption * days / chocolate)\n    purchasesPossible = days - days // 7\n    if purchaseReq <= purchasesPossible:\n        print(purchaseReq)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    if 7 * k > 6 * n and s > 6 or n < k:\n        print(-1)\n    else:\n        print(-(s * k // -n))", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    if 7 * k > 6 * n and s > 6 or n < k:\n        print(-1)\n    else:\n        print(-(s * k // -n))", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split(' '))\n    res = -(k * s // -n)\n    if n < k or (s > 6 and n * 6 < k * 7):\n        print(-1)\n    else:\n        print(res)", "from math import ceil\n\ndef soln(n, k, s):\n    if n < k:\n        return -1\n    if n * 6 - k * 7 < 0 and s >= 7:\n        return -1\n    res = 0\n    cur = 0\n    for i in range(s):\n        if cur < k:\n            cur += n\n            res += 1\n        cur -= k\n    return res\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    print(soln(n, k, s))", "from math import ceil\n\ndef soln(n, k, s):\n    if n < k:\n        return -1\n    if n * 6 - k * 7 < 0 and s >= 7:\n        return -1\n    return ceil(k * s / n)\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    print(soln(n, k, s))", "def soln(n, k, s):\n    if n < k:\n        return -1\n    if n * 6 - k * 7 < 0 and s >= 7:\n        return -1\n    cur = res = 0\n    need = k * s\n    while cur < need:\n        cur += n\n        res += 1\n    return res\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    print(soln(n, k, s))", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    if n * 6 >= s * 7:\n        p = s * k\n        if p % n == 0:\n            print(p // n)\n        else:\n            print(p // n + 1)\n    elif n < s:\n        print(-1)\n    elif n == s and k < 7:\n        print(k)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    t = k * s\n    d = s - s // 7\n    if t > n * d or (s >= 7 and (n - k) * 6 < k):\n        print('-1')\n    else:\n        c = t // n\n        if t % n != 0:\n            c = c + 1\n        print(c)", "import math\nT = int(input())\nfor i in range(T):\n    (N, K, S) = map(int, input().split())\n    d = math.ceil(K * S / N)\n    if N < K:\n        print(-1)\n    elif S >= d and 6 * N >= 7 * K:\n        print(d)\n    elif N == K and S < 7:\n        print(S)\n    else:\n        print(-1)", "for x in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "for x in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    t = k * s\n    d = s - s // 7\n    if t > n * d or (s >= 7 and (n - k) * 6 < k):\n        print('-1')\n    else:\n        c = t // n\n        if t % n != 0:\n            c = c + 1\n        print(c)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    tot = k * s\n    opend = s - s // 7\n    if tot > n * opend or (s >= 7 and (n - k) * 6 < k):\n        print(-1)\n    else:\n        ans = tot // n\n        if tot % n != 0:\n            ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    tot = k * s\n    opend = s - s // 7\n    if tot > n * opend or (s >= 7 and (n - k) * 6 < k):\n        print(-1)\n    else:\n        ans = tot // n\n        if tot % n != 0:\n            ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    tot = k * s\n    opend = s - s // 7\n    if tot > n * opend or (s >= 7 and (n - k) * 6 < k):\n        print(-1)\n    else:\n        ans = tot // n\n        if tot % n != 0:\n            ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    tot = k * s\n    opend = s - s // 7\n    if tot > n * opend or (s >= 7 and (n - k) * 6 < k):\n        print(-1)\n    else:\n        ans = tot // n\n        if tot % n != 0:\n            ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    count = 0\n    a = n\n    b = s\n    while s > 0:\n        s = s - n // k\n        n = a + n % k\n        count += 1\n    if count > b - b // 7:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    count = 0\n    a = n\n    b = s\n    while s > 0:\n        s = s - n // k\n        n = a + n % k\n        count += 1\n    if count > b - b // 7:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    count = 0\n    a = n\n    b = s\n    while s > 0:\n        s = s - n // k\n        n = a + n % k\n        count += 1\n    if count > b - b // 7:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    count = 0\n    a = n\n    b = s\n    while s > 0:\n        s = s - n // k\n        n = a + n % k\n        count += 1\n    if count > b - b // 7:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    count = 0\n    a = n\n    b = s\n    while s > 0:\n        s = s - n // k\n        n = a + n % k\n        count += 1\n    if count > b - b // 7:\n        print(-1)\n    else:\n        print(count)", "from heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, k, s) = map(int, input().split())\n    mn_chok = ceil(k * s / n)\n    if s < 7:\n        if n >= k:\n            print(mn_chok)\n        else:\n            print(-1)\n    elif 7 * k <= 6 * n:\n        print(mn_chok)\n    else:\n        print(-1)", "from heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, k, s) = map(int, input().split())\n    mn_chok = ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    mn_chok = math.ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    mn_chok = math.ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    mn_chok = math.ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    mn_chok = math.ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    mn_chok = math.ceil(k * s / n)\n    sm = 6 * n - k * 6\n    if s < 7:\n        print(mn_chok)\n    elif sm < k:\n        print(-1)\n    else:\n        print(mn_chok)", "import math\n\ndef solve():\n    days_needed = math.ceil(k * s / n)\n    ch_collected_in_6_days = n * 6\n    ch_needed_for_7_days = 7 * k\n    if n < k:\n        print(-1)\n    elif n == k and s <= 7:\n        if s < 7:\n            print(s)\n        else:\n            print(-1)\n    elif n > k and s <= 7:\n        if days_needed >= 7:\n            print(-1)\n        else:\n            print(days_needed)\n    elif ch_collected_in_6_days < ch_needed_for_7_days:\n        print(-1)\n    else:\n        print(days_needed)\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = list(map(int, input().split()))\n    solve()", "import math\n\ndef solve():\n    days_needed = math.ceil(k * s / n)\n    ch_collected_in_6_days = n * 6\n    ch_needed_for_7_days = 7 * k\n    if n < k:\n        print(-1)\n    elif n == k and s <= 7:\n        if s < 7:\n            print(s)\n        else:\n            print(-1)\n    elif n > k and s <= 7:\n        if days_needed >= 7:\n            print(-1)\n        else:\n            print(days_needed)\n    elif ch_collected_in_6_days < ch_needed_for_7_days:\n        print(-1)\n    else:\n        print(days_needed)\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = list(map(int, input().split()))\n    solve()", "import math\n\ndef solve():\n    ch_neede = k * s\n    days_needed = math.ceil(k * s / n)\n    survie_of_week = n * 6\n    ch_collected_in_6_days = 7 * k\n    if n < k:\n        print(-1)\n    elif n == k and s < 7:\n        print(s)\n    elif n == k and s == 7:\n        print(-1)\n    elif n > k and s <= 7:\n        if days_needed >= 7:\n            print(-1)\n        else:\n            print(days_needed)\n    elif survie_of_week < ch_collected_in_6_days:\n        print(-1)\n    else:\n        print(days_needed)\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = list(map(int, input().split()))\n    solve()", "t = int(input())\nwhile t:\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    days = c // n\n    if c % n != 0:\n        days += 1\n    if days < 7:\n        print(days)\n    else:\n        d = (n - k) * 6\n        if d >= k:\n            print(days)\n        else:\n            print(-1)\n    t -= 1", "for p in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "for x in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        (n, k, s) = sm()\n        week_days = s - s // 7\n        buying_days = math.ceil(s * k / n)\n        if buying_days > week_days:\n            print(-1)\n        else:\n            print(buying_days)\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        (n, k, s) = sm()\n        if k > n:\n            print(-1)\n            continue\n        count = 0\n        days = 0\n        total_choco = 0\n        possible = True\n        for i in range(1, s + 1):\n            if i % 7 == 0:\n                if total_choco < k:\n                    if days >= 6:\n                        possible = False\n                        break\n                    else:\n                        total_choco += n\n                        count += 1\n                days = 0\n            elif total_choco < k:\n                total_choco += n\n                days += 1\n                count += 1\n            if total_choco >= k:\n                total_choco -= k\n            else:\n                possible = False\n                break\n        print(count if possible else -1)\nmain()", "for x in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "try:\n    from debug import debug, timer\nexcept ImportError:\n    pass\nfrom sys import stdin\ninput = stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef getvals():\n    while True:\n        yield from input().split()\n\ndef tri(n):\n    return n * (n + 1) // 2\n\ndef smallest_first(m, n):\n    return (min(m, n), max(m, n))\nfrom math import ceil\n\ndef solve(*args):\n    (n, k, s) = args\n    if n < k:\n        return -1\n    if n * 6 <= k * 6 and s < 7:\n        return ceil(k * s / n)\n    if n * 6 < k * 7:\n        return -1\n    boxes_needed = ceil(k * s / n)\n    return boxes_needed\n\ndef do_codechef():\n    for t in rii():\n        (n, k, s) = mii()\n        print(solve(n, k, s))\ndo_codechef()\nexit()", "import math\ntry:\n    for _ in range(int(input())):\n        (n, k, s) = list(map(int, input().split()))\n        sundays = s // 7\n        weekdays = s - sundays\n        required = s * k\n        buying_days = math.ceil(required / n)\n        if buying_days > weekdays:\n            print(-1)\n        elif n < k:\n            print(-1)\n        elif s >= 7 and (n - k) * 6 < k:\n            print(-1)\n        else:\n            print(buying_days)\nexcept:\n    pass", "for x in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    c = k * s\n    day = c // n\n    if c % n != 0:\n        day += 1\n    if day < 7:\n        print(day)\n    else:\n        diff = (n - k) * 6\n        if diff >= k:\n            print(day)\n        else:\n            print('-1')", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    count = s // 7\n    m = s - count\n    remain = n * m - s * k\n    if remain < 0:\n        print(-1)\n    elif n < k:\n        print(-1)\n    else:\n        res = remain // n\n        print(m - res)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    count = s // 7\n    m = s - count\n    remain = n * m - s * k\n    if remain < 0:\n        print(-1)\n    elif n < k:\n        print(-1)\n    else:\n        res = remain // n\n        print(m - res)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    count = s // 7\n    m = s - count\n    remain = n * m - s * k\n    if remain < 0:\n        print(-1)\n    elif n < k:\n        print(-1)\n    else:\n        res = remain // n\n        print(m - res)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    count = s // 7\n    m = s - count\n    remain = n * m - s * k\n    if remain < 0:\n        print(-1)\n    elif n < k:\n        print(-1)\n    else:\n        res = remain // n\n        print(m - res)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    count = s // 7\n    m = s - count\n    remain = n * m - s * k\n    if remain < 0:\n        print(-1)\n    elif n < k:\n        print(-1)\n    else:\n        res = remain // n\n        print(m - res)", "import math\nT = int(input())\nfor tj in range(T):\n    (N, K, S) = map(int, input().split())\n    n_days = math.ceil(S * K / N)\n    S -= S // 7\n    if n_days > S:\n        print(-1)\n    else:\n        print(n_days)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    a = k * s\n    a = ceil(a / n)\n    s -= s // 7\n    if a <= s:\n        print(a)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    weeks = s // 7\n    days = s - weeks\n    choco = days * n\n    chcoreq = k * s\n    if chcoreq - choco > 0:\n        print(-1)\n    else:\n        d = chcoreq // n\n        if chcoreq % n == 0:\n            print(d)\n        else:\n            print(d + 1)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    a = k * s\n    a = ceil(a / n)\n    s -= s // 7\n    if a <= s:\n        print(a)\n    else:\n        print(-1)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    a = k * s\n    a = ceil(a / n)\n    s -= s // 7\n    if a <= s:\n        print(a)\n    else:\n        print(-1)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    a = k * s\n    a = ceil(a / n)\n    s -= s // 7\n    if a <= s:\n        print(a)\n    else:\n        print(-1)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k, s) = list(map(int, input().split()))\n    left_out = 0\n    purchase = 0\n    for day in range(1, s + 1):\n        if left_out < k and day % 7 != 0:\n            purchase += 1\n            left_out += n\n        elif k < left_out < 2 * k and day % 7 == 6 and (day != s):\n            purchase += 1\n            left_out += n\n        while left_out < k:\n            rem_days = day - day // 7 - purchase\n            if rem_days > 0:\n                purchase += 1\n                left_out += n\n            else:\n                break\n        if left_out >= k:\n            left_out -= k\n        else:\n            print(-1)\n            break\n    else:\n        print(purchase)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k, s) = list(map(int, input().split()))\n    left_out = 0\n    purchase = 0\n    for day in range(1, s + 1):\n        if left_out < k and day % 7 != 0:\n            purchase += 1\n            left_out += n\n        while left_out < k:\n            rem_days = day - day // 7 - purchase\n            if rem_days > 0:\n                purchase += 1\n                left_out += n\n            else:\n                break\n        if left_out >= k:\n            left_out -= k\n        else:\n            print(-1)\n            break\n    else:\n        print(purchase)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    (w, d) = (s // 7, s % 7)\n    ans = 0\n    x = 0\n    for _ in range(w):\n        temp = k * 7 - x\n        if temp % n == 0:\n            if temp // n <= 6:\n                ans += temp // n\n                x = 0\n            else:\n                ans = -1\n                break\n        elif temp % n > 0:\n            if temp // n <= 5:\n                ans += temp // n + 1\n                x += n * (temp // n + 1) - 7 * k\n            else:\n                ans = -1\n                break\n    if ans >= 0:\n        for _ in range(d):\n            x -= k\n            if x < 0:\n                ans += 1\n                x += n\n                if x < 0:\n                    ans = -1\n                    break\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    a = k * s\n    a = ceil(a / n)\n    s -= s // 7\n    if a <= s:\n        print(a)\n    else:\n        print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, m) = map(int, input().split())\n    s = m - m // 7\n    c = k * m\n    a = n * s\n    cs = n / k\n    if a >= c:\n        ans = int(math.ceil(m / cs))\n        print(ans)\n    else:\n        print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, m) = map(int, input().split())\n    s = m - m // 7\n    c = k * m\n    a = n * s\n    cs = n / k\n    if a >= c:\n        ans = int(math.ceil(m / cs))\n        print(ans)\n    else:\n        print(-1)", "try:\n    import math as ma\n    for _ in range(int(input())):\n        (n, k, s) = map(int, input().split())\n        d = s - s // 7\n        req = k * s\n        got = n * d\n        daysononebox = n / k\n        if got >= req:\n            print(int(ma.ceil(s / daysononebox)))\n        else:\n            print(-1)\nexcept EOFError as e:\n    pass", "try:\n    import math as ma\n    for _ in range(int(input())):\n        (n, k, s) = map(int, input().split())\n        d = s - s // 7\n        req = k * s\n        got = n * d\n        daysononebox = n / k\n        if got >= req:\n            print(int(ma.ceil(s / daysononebox)))\n        else:\n            print(-1)\nexcept EOFError as e:\n    pass", "import math\nfor __ in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    if N < K:\n        print(-1)\n    elif 7 <= S and (N - K) * 6 < K:\n        print(-1)\n    else:\n        print(math.ceil(K * S / N))", "for i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    sun = n * (s - s // 7)\n    a = k * s\n    if a > sun:\n        print(-1)\n    elif a % n == 0:\n        print(a // n)\n    else:\n        print(a // n + 1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    sum = n * (s - s // 7)\n    a = k * s\n    if a > sum:\n        print(-1)\n    elif a % n == 0:\n        print(a // n)\n    else:\n        print(a // n + 1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "subtask = int(input())\nfor _ in range(subtask):\n    (N, K, S) = [int(i) for i in input().split()]\n    if K > N:\n        print(-1)\n    else:\n        boxes = 0\n        day = 0\n        chocolates = 0\n        requires = S * K\n        while chocolates < requires and day <= S:\n            if day % 7 != 0:\n                boxes += 1\n                chocolates += N\n            day += 1\n        if chocolates >= requires:\n            print(boxes)\n        else:\n            print(-1)", "subtask = int(input())\nfor _ in range(subtask):\n    (N, K, S) = [int(i) for i in input().split()]\n    if K > N:\n        print(-1)\n    else:\n        boxes = 0\n        day = 0\n        chocolates = 0\n        requires = S * K\n        while chocolates < requires and day <= S:\n            if day % 7 != 0:\n                boxes += 1\n                chocolates += N\n            day += 1\n        if chocolates >= requires:\n            print(boxes)\n        else:\n            print(-1)", "subtask = int(input())\nfor _ in range(subtask):\n    (N, K, S) = [int(i) for i in input().split()]\n    if K > N:\n        print(-1)\n    else:\n        b = 0\n        d = 0\n        c = 0\n        R = S * K\n        while c < R and d <= S:\n            if d % 7 != 0:\n                b += 1\n                c += N\n            d += 1\n        if c >= R:\n            print(b)\n        else:\n            print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    sum = n * (s - s // 7)\n    a = k * s\n    if a > sum:\n        print(-1)\n    elif a % n == 0:\n        print(a // n)\n    else:\n        print(a // n + 1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if k > n:\n        print('-1')\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print('-1')\n        else:\n            a = math.ceil(s * k / n)\n            print(a)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    if n < k:\n        print(-1)\n    else:\n        sun = s // 7\n        if s * k / n > s - sun:\n            print(-1)\n        else:\n            ans = math.ceil(s * k / n)\n            print(ans)", "for _ in range(int(input())):\n    (N, K, S) = [int(s) for s in input().split()]\n    Chocolates = 0\n    Bought = 0\n    Survived = True\n    for i in range(1, S + 1):\n        BoughtToday = False\n        Chocolates -= K\n        if Chocolates < 0:\n            if i % 7 != 0:\n                Chocolates += N\n                Bought += 1\n                BoughtToday = True\n                if Chocolates < 0:\n                    Survived = False\n                    break\n            else:\n                Survived = False\n                break\n        NextSunday = (i // 7 + 1) * 7\n        if not BoughtToday and NextSunday <= S:\n            if Chocolates - K < 0:\n                Chocolates += N\n                Bought += 1\n                BoughtToday = True\n    if Survived:\n        print(Bought)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    sum = n * (s - s // 7)\n    a = k * s\n    if a > sum:\n        print(-1)\n    elif a % n == 0:\n        print(a // n)\n    else:\n        print(a // n + 1)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    z = k * s / n\n    x = math.ceil(z)\n    s = s - s // 7\n    if z <= s:\n        print(x)\n    else:\n        print('-1')", "T = int(input())\nfor i in range(T):\n    (N, K, S) = map(int, input().split())\n    Total = K * S\n    Count = 0\n    Days = 0\n    Flag = False\n    for Day in range(1, S + 1):\n        if Day % 7 != 0:\n            Count += N\n            Days += 1\n        if Count >= Total:\n            Flag = True\n            break\n    if Flag:\n        print(Days)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    tot = k * s\n    flag = 0\n    ans = 0\n    c = 0\n    for i in range(1, s + 1):\n        if i % 7 == 0:\n            continue\n        else:\n            ans = ans + 1\n            c = c + n\n            if c >= tot:\n                flag = 1\n                print(ans)\n                break\n    if flag == 0:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = [int(x) for x in input().split()]\n    sam = k * s\n    c = 0\n    c1 = 0\n    f = 0\n    for i in range(1, s + 1):\n        if i % 7 != 0:\n            c += n\n            c1 += 1\n        if c >= sam:\n            f = 1\n            break\n    if f == 1:\n        print(c1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    t = k * s\n    count = 0\n    (l, flag) = (0, 0)\n    for i in range(1, s + 1):\n        if i % 7 != 0:\n            l += 1\n            count += n\n        if count >= t:\n            flag = 1\n            break\n    if flag == 1:\n        print(l)\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    d = math.ceil(k * s / n)\n    su = d // 7\n    if k <= n:\n        if d + su > s:\n            print(-1)\n        else:\n            flag = 0\n            for j in range(1, su + 1):\n                if (7 * j - 1) * n - (7 * j - 1) * k < k:\n                    flag = 1\n                    break\n            if flag == 1:\n                print(-1)\n            else:\n                print(d)\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    d = math.ceil(k * s / n)\n    su = d // 7\n    if k <= n:\n        if d + su > s:\n            print(-1)\n        else:\n            flag = 0\n            for j in range(1, su + 1):\n                if (7 * j - 1) * n - (7 * j - 1) * k < k:\n                    flag = 1\n                    break\n            if flag == 1:\n                print(-1)\n            else:\n                print(d)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    Total = K * S\n    Count = 0\n    Days = 0\n    Flag = False\n    for Day in range(1, S + 1):\n        if Day % 7 != 0:\n            Count += N\n            Days += 1\n        if Count >= Total:\n            Flag = True\n            break\n    if Flag:\n        print(Days)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    Total = K * S\n    Count = 0\n    Days = 0\n    Flag = False\n    for Day in range(1, S + 1):\n        if Day % 7 != 0:\n            Count += N\n            Days += 1\n        else:\n            continue\n        if Count >= Total:\n            Flag = True\n            break\n    if Flag:\n        print(Days)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (n, k, s) = list(map(int, input().split()))\n    if s < 7:\n        if k <= n:\n            print(math.ceil(s * k / n))\n        else:\n            print(-1)\n    elif 7 * k <= 6 * n:\n        print(math.ceil(s * k / n))\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    a = input().split()\n    n = int(a[0])\n    k = int(a[1])\n    s = int(a[2])\n    if s < 7:\n        if k <= n:\n            print(math.ceil(s * k / n))\n        else:\n            print(-1)\n    elif 7 * k <= 6 * n:\n        print(math.ceil(s * k / n))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k, d) = list(map(int, input().split()))\n    dem = k * d\n    ava = n * (d - d // 7)\n    day = 0\n    if dem <= ava:\n        count = 0\n        ans = 0\n        for i in range(d):\n            count += 1\n            count %= 7\n            if count != 0:\n                day += 1\n                ans += n\n            if ans >= dem:\n                break\n        print(day)\n    else:\n        print('-1')", "te = int(input())\nfor _ in range(te):\n    (n, k, s) = input().split()\n    (n, k, s) = (int(n), int(k), int(s))\n    capacity = k * s\n    availablity = n * s\n    availablity -= n * (s // 7)\n    maans = 0\n    if capacity <= availablity:\n        answer = 0\n        counter = 0\n        for i in range(s):\n            counter += 1\n            counter %= 7\n            if counter != 0:\n                maans += 1\n                answer += n\n            if answer >= capacity:\n                break\n        print(maans)\n    else:\n        print('-1')", "te = int(input())\nfor _ in range(te):\n    (n, k, s) = input().split()\n    (n, k, s) = (int(n), int(k), int(s))\n    capacity = k * s\n    availablity = n * s\n    availablity -= n * (s // 7)\n    maans = 0\n    if capacity <= availablity:\n        answer = 0\n        counter = 0\n        for i in range(s):\n            counter += 1\n            counter %= 7\n            if counter != 0:\n                maans += 1\n                answer += n\n            if answer >= capacity:\n                break\n        print(maans)\n    else:\n        print('-1')"]