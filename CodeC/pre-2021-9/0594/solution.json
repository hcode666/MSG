["def soln(n, k, arr, qrr):\n    dist = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            dist += 1\n        else:\n            dist += 2\n    for i in qrr:\n        i -= 1\n        arr[i] = 1 if arr[i] == 0 else 0\n        if i < n - 1:\n            if arr[i] != arr[i + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        if i > 0:\n            if arr[i] != arr[i - 1]:\n                dist -= 1\n            else:\n                dist += 1\n        print(dist)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    srr = list(map(int, input()))\n    qrr = list(map(int, input().split()))\n    soln(n, k, srr, qrr)", "def soln(n, k, arr, qrr):\n    dist = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            dist += 1\n        else:\n            dist += 2\n    for i in qrr:\n        i -= 1\n        arr[i] = 1 if arr[i] == 0 else 0\n        if i < n - 1:\n            if arr[i] != arr[i + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        if i > 0:\n            if arr[i] != arr[i - 1]:\n                dist -= 1\n            else:\n                dist += 1\n        print(dist)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    srr = list(map(int, input()))\n    qrr = list(map(int, input().split()))\n    soln(n, k, srr, qrr)", "def clc(arr):\n    cnt = 0\n    nm = len(arr)\n    for i in range(1, nm):\n        if arr[i] != arr[i - 1]:\n            cnt += 1\n        else:\n            cnt += 2\n    return cnt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    qli = [int(a) for a in input()]\n    kli = list(map(int, input().split()))\n    ans = clc(qli)\n    for j in kli:\n        j -= 1\n        if qli[j] == 0:\n            qli[j] = 1\n        else:\n            qli[j] = 0\n        if j > 0:\n            if qli[j] == qli[j - 1]:\n                ans += 1\n            else:\n                ans -= 1\n        if j < n - 1:\n            if qli[j] == qli[j + 1]:\n                ans += 1\n            else:\n                ans -= 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    q = list(map(int, input().split()))\n    (base, spaces) = (s[0], 0)\n    for i in range(1, n):\n        if s[i] == base:\n            spaces += 2\n        else:\n            spaces += 1\n        base = s[i]\n    for i in q:\n        if s[i - 1] == '1':\n            s = s[:i - 1] + '0' + s[i:]\n        else:\n            s = s[:i - 1] + '1' + s[i:]\n        if i - 1 > 0:\n            if s[i - 2] == s[i - 1]:\n                spaces += 1\n            else:\n                spaces -= 1\n        if i - 1 < n - 1:\n            if s[i] == s[i - 1]:\n                spaces += 1\n            else:\n                spaces -= 1\n        print(spaces)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = []\n    a1 = list(map(int, input().split()))\n    for j in s:\n        a.append(int(j))\n    dt = 0\n    for j in range(n):\n        d = 0\n        if j < n - 1:\n            if a[j] == a[j + 1]:\n                d += 2\n            else:\n                d += 1\n        else:\n            d = 0\n        dt += d\n    for j in a1:\n        l = j\n        l -= 1\n        if a[l] == 1:\n            a[l] = 0\n        else:\n            a[l] = 1\n        if l > 0:\n            if a[l] == a[l - 1]:\n                dt += 1\n            else:\n                dt -= 1\n        if l < n - 1:\n            if a[l + 1] == a[l]:\n                dt += 1\n            else:\n                dt -= 1\n        print(dt)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = []\n    a1 = list(map(int, input().split()))\n    for j in s:\n        a.append(int(j))\n    dt = 0\n    for j in range(n):\n        d = 0\n        if j < n - 1:\n            if a[j] == a[j + 1]:\n                d += 2\n            else:\n                d += 1\n        else:\n            d = 0\n        dt += d\n    for j in a1:\n        l = j\n        l -= 1\n        if a[l] == 1:\n            a[l] = 0\n        else:\n            a[l] = 1\n        if l > 0:\n            if a[l] == a[l - 1]:\n                dt += 1\n            else:\n                dt -= 1\n        if l < n - 1:\n            if a[l + 1] == a[l]:\n                dt += 1\n            else:\n                dt -= 1\n        print(dt)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = []\n    a1 = list(map(int, input().split()))\n    for j in s:\n        a.append(int(j))\n    dt = 0\n    for j in range(n):\n        d = 0\n        if j < n - 1:\n            if a[j] == a[j + 1]:\n                d += 2\n            else:\n                d += 1\n        else:\n            d = 0\n        dt += d\n    for j in a1:\n        l = j\n        l -= 1\n        if a[l] == 1:\n            a[l] = 0\n        else:\n            a[l] = 1\n        if l > 0:\n            if a[l] == a[l - 1]:\n                dt += 1\n            else:\n                dt -= 1\n        if l < n - 1:\n            if a[l + 1] == a[l]:\n                dt += 1\n            else:\n                dt -= 1\n        print(dt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    q = list(map(int, input().split()))\n    (base, spaces) = (s[0], 0)\n    for i in range(1, n):\n        if s[i] == base:\n            spaces += 2\n        else:\n            spaces += 1\n        base = s[i]\n    for i in q:\n        if s[i - 1] == '1':\n            s = s[:i - 1] + '0' + s[i:]\n        else:\n            s = s[:i - 1] + '1' + s[i:]\n        if i - 1 > 0:\n            if s[i - 2] == s[i - 1]:\n                spaces += 1\n            else:\n                spaces -= 1\n        if i - 1 < n - 1:\n            if s[i] == s[i - 1]:\n                spaces += 1\n            else:\n                spaces -= 1\n        print(spaces)", "for z in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = list(input())\n    d = 0\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            d += 2\n        else:\n            d += 1\n    for x in input().split():\n        k = int(x) - 1\n        if k > 0:\n            if a[k - 1] == a[k]:\n                d -= 1\n            else:\n                d += 1\n        if k < n - 1:\n            if a[k + 1] == a[k]:\n                d -= 1\n            else:\n                d += 1\n        if a[k] == '0':\n            a[k] = '1'\n        else:\n            a[k] = '0'\n        print(d)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    Q = list(map(int, input().split()))\n    D = 0\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            D += 2\n        else:\n            D += 1\n    if N == 1:\n        for i in Q:\n            print(0)\n    else:\n        for i in Q:\n            c = i - 1\n            if c == 0:\n                if S[c] == '0':\n                    S = '1' + S[1:]\n                    if S[c + 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = '0' + S[1:]\n                    if S[c + 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif c == N - 1:\n                if S[c] == '0':\n                    S = S[:-1] + '1'\n                    if S[c - 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = S[:-1] + '0'\n                    if S[c - 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif S[c] == '0':\n                S = S[:c] + '1' + S[c + 1:]\n                if S[c - 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n            else:\n                S = S[:c] + '0' + S[c + 1:]\n                if S[c - 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n            print(D)", "import math\nt = int(input())\nfor case in range(t):\n    vars = input().split()\n    n = int(vars[0])\n    k = int(vars[1])\n    charges = list(input())\n    flips = input().split()\n\n    def create_distances(particlelist, destination):\n        for i in range(n - 1):\n            if particlelist[i] == particlelist[i + 1]:\n                destination.append(1)\n            else:\n                destination.append(0)\n\n    def flip(destination, index):\n        index -= 1\n        rollingcount = 0\n        try:\n            if destination[index] == 0:\n                destination[index] = 1\n                rollingcount += 1\n            else:\n                destination[index] = 0\n                rollingcount -= 1\n        except IndexError:\n            pass\n        index -= 1\n        if index < 0:\n            return rollingcount\n        try:\n            if destination[index] == 0:\n                destination[index] = 1\n                rollingcount += 1\n            else:\n                destination[index] = 0\n                rollingcount -= 1\n        except IndexError:\n            pass\n        return rollingcount\n    distances = []\n    create_distances(charges, distances)\n    sumdist = sum(distances) + n - 1\n    for tobeflipped in flips:\n        tobeflipped = int(tobeflipped)\n        sumdist += flip(distances, tobeflipped)\n        print(sumdist)", "import math\nt = int(input())\nfor case in range(t):\n    vars = input().split()\n    n = int(vars[0])\n    k = int(vars[1])\n    charges = list(input())\n    flips = input().split()\n\n    def create_distances(particlelist, destination):\n        for i in range(n - 1):\n            if particlelist[i] == particlelist[i + 1]:\n                destination.append(1)\n            else:\n                destination.append(0)\n\n    def flip(destination, index):\n        index -= 1\n        rollingcount = 0\n        try:\n            if destination[index] == 0:\n                destination[index] = 1\n                rollingcount += 1\n            else:\n                destination[index] = 0\n                rollingcount -= 1\n        except IndexError:\n            pass\n        index -= 1\n        if index < 0:\n            return rollingcount\n        try:\n            if destination[index] == 0:\n                destination[index] = 1\n                rollingcount += 1\n            else:\n                destination[index] = 0\n                rollingcount -= 1\n        except IndexError:\n            pass\n        return rollingcount\n    distances = []\n    create_distances(charges, distances)\n    sumdist = sum(distances) + n - 1\n    for tobeflipped in flips:\n        tobeflipped = int(tobeflipped)\n        sumdist += flip(distances, tobeflipped)\n        print(sumdist)", "def change(s, p):\n    if s[p] == '1':\n        return '0'\n    else:\n        return '1'\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    q = map(int, input().split())\n    a = 0\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            a += 2\n        else:\n            a += 1\n    for i in q:\n        p = i - 1\n        if n == 1:\n            print(0)\n            continue\n        elif p == 0:\n            s[p] = change(s, p)\n            if s[p] == s[p + 1]:\n                a += 1\n            else:\n                a -= 1\n        elif i == n:\n            s[p] = change(s, p)\n            if s[p] == s[p - 1]:\n                a += 1\n            else:\n                a -= 1\n        else:\n            s[p] = change(s, p)\n            if s[p] == s[p - 1]:\n                a += 1\n            else:\n                a -= 1\n            if s[p] == s[p + 1]:\n                a += 1\n            else:\n                a -= 1\n        print(a)", "T = int(input())\nfor _ in range(T):\n    (n, k) = list(map(int, input().split()))\n    atoms = list(map(int, list(input())))\n    change = list(map(int, input().split()))\n    dist = 0\n    for i in range(1, n):\n        if atoms[i - 1] == atoms[i]:\n            dist += 2\n        else:\n            dist += 1\n    for k in change:\n        k -= 1\n        atoms[k] = 0 if atoms[k] == 1 else 1\n        if k > 0:\n            dist += -1 if atoms[k] != atoms[k - 1] else +1\n        if k < n - 1:\n            dist += -1 if atoms[k] != atoms[k + 1] else +1\n        print(dist)", "import sys\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\n\ndef flip(s):\n    if s == '1':\n        return '0'\n    else:\n        return '1'\nfor _ in range(ii()):\n    (n, k) = il()\n    st = list(ip())\n    queries = il()\n    sum = 0\n    for i in range(n - 1):\n        if st[i] == st[i + 1]:\n            sum += 2\n        else:\n            sum += 1\n    for i in range(k):\n        if n == 1:\n            print(0)\n            continue\n        ind = queries[i] - 1\n        if ind == 0:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind + 1]:\n                sum += 1\n            else:\n                sum -= 1\n        elif ind == n - 1:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind - 1]:\n                sum += 1\n            else:\n                sum -= 1\n        else:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind - 1]:\n                sum += 1\n            else:\n                sum -= 1\n            if st[ind] == st[ind + 1]:\n                sum += 1\n            else:\n                sum -= 1\n        print(sum)", "import sys\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\n\ndef flip(s):\n    if s == '1':\n        return '0'\n    else:\n        return '1'\nfor _ in range(ii()):\n    (n, k) = il()\n    st = list(ip())\n    queries = il()\n    sum = 0\n    for i in range(n - 1):\n        if st[i] == st[i + 1]:\n            sum += 2\n        else:\n            sum += 1\n    for i in range(k):\n        if n == 1:\n            print(0)\n            continue\n        ind = queries[i] - 1\n        if ind == 0:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind + 1]:\n                sum += 1\n            else:\n                sum -= 1\n        elif ind == n - 1:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind - 1]:\n                sum += 1\n            else:\n                sum -= 1\n        else:\n            st[ind] = flip(st[ind])\n            if st[ind] == st[ind - 1]:\n                sum += 1\n            else:\n                sum -= 1\n            if st[ind] == st[ind + 1]:\n                sum += 1\n            else:\n                sum -= 1\n        print(sum)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    S = list(map(int, input().split()))\n    dis = 0\n    for i in range(1, n):\n        if L[i] == L[i - 1]:\n            dis += 2\n        else:\n            dis += 1\n    for i in range(k):\n        a = int(S[i]) - 1\n        if a > 0:\n            if L[a] != L[a - 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if a < n - 1:\n            if L[a] != L[a + 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if L[a] == '1':\n            L[a] = '0'\n        else:\n            L[a] = '1'\n        print(dis)", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter\n\ndef main():\n    initial_distance = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            initial_distance += 2\n        else:\n            initial_distance += 1\n    for i in Q:\n        (prev, j) = (0, i - 1)\n        (l, r) = (j - 1, j + 1)\n        if 0 <= l < n:\n            if s[l] == s[j]:\n                prev -= 1\n            else:\n                prev += 1\n        if 0 <= r < n:\n            if s[r] == s[j]:\n                prev -= 1\n            else:\n                prev += 1\n        initial_distance += prev\n        s[j] = '0' if s[j] == '1' else '1'\n        print(initial_distance)\nt = int(input())\nfor _ in range(t):\n    (n, k) = integer_list()\n    s = list(input())\n    Q = integer_list()\n    main()", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    S = list(map(int, input().split()))\n    dis = 0\n    for i in range(1, n):\n        if L[i] == L[i - 1]:\n            dis += 2\n        else:\n            dis += 1\n    for i in range(k):\n        a = int(S[i]) - 1\n        if a > 0:\n            if L[a] != L[a - 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if a < n - 1:\n            if L[a] != L[a + 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if L[a] == '1':\n            L[a] = '0'\n        else:\n            L[a] = '1'\n        print(dis)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    S = list(map(int, input().split()))\n    dis = 0\n    for i in range(1, n):\n        if L[i] == L[i - 1]:\n            dis += 2\n        else:\n            dis += 1\n    for i in range(k):\n        a = int(S[i]) - 1\n        if a > 0:\n            if L[a] != L[a - 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if a < n - 1:\n            if L[a] != L[a + 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if L[a] == '1':\n            L[a] = '0'\n        else:\n            L[a] = '1'\n        print(dis)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    S = list(map(int, input().split()))\n    dis = 0\n    for i in range(1, n):\n        if L[i] == L[i - 1]:\n            dis += 2\n        else:\n            dis += 1\n    for i in range(k):\n        a = int(S[i]) - 1\n        if a > 0:\n            if L[a] != L[a - 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if a < n - 1:\n            if L[a] != L[a + 1]:\n                dis += 1\n            else:\n                dis -= 1\n        else:\n            pass\n        if L[a] == '1':\n            L[a] = '0'\n        else:\n            L[a] = '1'\n        print(dis)", "T = int(input())\nfor _ in range(T):\n    temp = input().split(' ')\n    (n, k) = (int(temp[0]), int(temp[1]))\n    temp = input()\n    arr = [int(x) for x in temp]\n    temp = input().split(' ')\n    changes = [int(x) - 1 for x in temp]\n    distance = 0\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            distance += 2\n        else:\n            distance += 1\n    for change in changes:\n        arr[change] = 1 - arr[change]\n        if change < n - 1:\n            if arr[change] == arr[change + 1]:\n                distance += 1\n            else:\n                distance -= 1\n        if change > 0:\n            if arr[change] == arr[change - 1]:\n                distance += 1\n            else:\n                distance -= 1\n        print(distance)", "def distance(s, k, d):\n    intial = s[k - 1]\n    if s[k - 1] == '1':\n        s = s[0:k - 1] + '0' + s[k:len(s)]\n    else:\n        s = s[0:k - 1] + '1' + s[k:len(s)]\n    if d == 0:\n        d = 0\n        i = 0\n        j = 1\n        while j < len(s):\n            if s[i] != s[j]:\n                d += 1\n            else:\n                d += 2\n            i += 1\n            j += 1\n        return [s, d]\n    else:\n        if k == 1:\n            if intial == s[k]:\n                d -= 1\n            else:\n                d += 1\n        elif k == len(s):\n            if intial == s[k - 2]:\n                d -= 1\n            else:\n                d += 1\n        else:\n            if intial == s[k]:\n                d -= 1\n            else:\n                d += 1\n            if intial == s[k - 2]:\n                d -= 1\n            else:\n                d += 1\n        return [s, d]\ntest_cases = int(input())\nwhile test_cases != 0:\n    data = list(map(int, input().split()))\n    data2 = input()\n    data3 = list(map(int, input().split()))\n    itr = 0\n    d = 0\n    while itr != len(data3):\n        x = distance(data2, data3[itr], d)\n        d = x[1]\n        data2 = x[0]\n        print(d)\n        itr += 1\n    test_cases -= 1", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = before(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "def before(i):\n    (beforef, beforeb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            beforeb = 2\n        else:\n            beforeb = 1\n        if ls[i] == ls[i + 1]:\n            beforef = 2\n        else:\n            beforef = 1\n    return (beforef, beforeb)\n\ndef after(i):\n    (afterf, afterb) = (0, 0)\n    if i == 0 and i + 1 < len(ls):\n        if ls[i] == ls[i + 1]:\n            afterf = 2\n        else:\n            afterf = 1\n    elif i == len(ls) - 1 and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            afterb = 2\n        else:\n            afterb = 1\n    elif i + 1 < len(ls) and i - 1 >= 0:\n        if ls[i] == ls[i - 1]:\n            afterb = 2\n        else:\n            afterb = 1\n        if ls[i] == ls[i + 1]:\n            afterf = 2\n        else:\n            afterf = 1\n    return (afterf, afterb)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    ls = list(s)\n    initial = 0\n    for i in range(len(ls) - 1):\n        if ls[i] == ls[i + 1]:\n            initial += 2\n        else:\n            initial += 1\n    for i in range(len(moves)):\n        (a, b) = before(moves[i] - 1)\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        (c, d) = after(moves[i] - 1)\n        diff = c - a + (d - b)\n        initial += diff\n        print(initial)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    moves = list(map(int, input().split()))\n    initial = 0\n    ls = list(s)\n    for i in range(len(ls) - 1):\n        if ls[i] != ls[i + 1]:\n            initial += 1\n        else:\n            initial += 2\n    for i in range(len(moves)):\n        (beforef, beforeb, afterf, afterb) = (0, 0, 0, 0)\n        if moves[i] - 1 == 0 and moves[i] < len(ls):\n            if ls[moves[i] - 1] == ls[moves[i]]:\n                beforef = 2\n            else:\n                beforef = 1\n        elif moves[i] - 1 == len(ls) - 1 and moves[i] - 2 >= 0:\n            if ls[moves[i] - 1] == ls[moves[i] - 2]:\n                beforeb = 2\n            else:\n                beforeb = 1\n        elif moves[i] - 2 >= 0 and moves[i] - 1 < len(ls):\n            if ls[moves[i] - 1] == ls[moves[i]]:\n                beforef = 2\n            else:\n                beforef = 1\n            if ls[moves[i] - 1] == ls[moves[i] - 2]:\n                beforeb = 2\n            else:\n                beforeb = 1\n        if ls[moves[i] - 1] == '1':\n            ls[moves[i] - 1] = '0'\n        else:\n            ls[moves[i] - 1] = '1'\n        if moves[i] - 1 == 0 and moves[i] < len(ls):\n            if ls[moves[i] - 1] == ls[moves[i]]:\n                afterf = 2\n            else:\n                afterf = 1\n        elif moves[i] - 1 == len(ls) - 1 and moves[i] - 2 >= 0:\n            if ls[moves[i] - 1] == ls[moves[i] - 2]:\n                afterb = 2\n            else:\n                afterb = 1\n        elif moves[i] - 2 >= 0 and moves[i] - 1 < len(ls):\n            if ls[moves[i] - 1] == ls[moves[i]]:\n                afterf = 2\n            else:\n                afterf = 1\n            if ls[moves[i] - 1] == ls[moves[i] - 2]:\n                afterb = 2\n            else:\n                afterb = 1\n        diff = afterb - beforeb + (afterf - beforef)\n        initial += diff\n        print(initial)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    Q = list(map(int, input().split()))\n    D = 0\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            D += 2\n        else:\n            D += 1\n    if N == 1:\n        for i in Q:\n            print(0)\n    else:\n        for i in Q:\n            c = i - 1\n            if c == 0:\n                if S[c] == '0':\n                    S = '1' + S[1:]\n                    if S[c + 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = '0' + S[1:]\n                    if S[c + 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif c == N - 1:\n                if S[c] == '0':\n                    S = S[:-1] + '1'\n                    if S[c - 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = S[:-1] + '0'\n                    if S[c - 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif S[c] == '0':\n                S = S[:c] + '1' + S[c + 1:]\n                if S[c - 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n            else:\n                S = S[:c] + '0' + S[c + 1:]\n                if S[c - 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n            print(D)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    Q = list(map(int, input().split()))\n    D = 0\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            D += 2\n        else:\n            D += 1\n    if N == 1:\n        for i in Q:\n            print(0)\n    else:\n        for i in Q:\n            c = i - 1\n            if c == 0:\n                if S[c] == '0':\n                    S = '1' + S[1:]\n                    if S[c + 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = '0' + S[1:]\n                    if S[c + 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif c == N - 1:\n                if S[c] == '0':\n                    S = S[:-1] + '1'\n                    if S[c - 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = S[:-1] + '0'\n                    if S[c - 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif S[c] == '0':\n                S = S[:c] + '1' + S[c + 1:]\n                if S[c - 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n            else:\n                S = S[:c] + '0' + S[c + 1:]\n                if S[c - 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n            print(D)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    Q = list(map(int, input().split()))\n    D = 0\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            D += 2\n        else:\n            D += 1\n    if N == 1:\n        for i in Q:\n            print(0)\n    else:\n        for i in Q:\n            c = i - 1\n            if c == 0:\n                if S[c] == '0':\n                    S = '1' + S[1:]\n                    if S[c + 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = '0' + S[1:]\n                    if S[c + 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif c == N - 1:\n                if S[c] == '0':\n                    S = S[:-1] + '1'\n                    if S[c - 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = S[:-1] + '0'\n                    if S[c - 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif S[c] == '0':\n                S = S[:c] + '1' + S[c + 1:]\n                if S[c - 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n            else:\n                S = S[:c] + '0' + S[c + 1:]\n                if S[c - 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n            print(D)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    Q = list(map(int, input().split()))\n    D = 0\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            D += 2\n        else:\n            D += 1\n    if N == 1:\n        for i in Q:\n            print(0)\n    else:\n        for i in Q:\n            c = i - 1\n            if c == 0:\n                if S[c] == '0':\n                    S = '1' + S[1:]\n                    if S[c + 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = '0' + S[1:]\n                    if S[c + 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif c == N - 1:\n                if S[c] == '0':\n                    S = S[:-1] + '1'\n                    if S[c - 1] == '0':\n                        D -= 1\n                    else:\n                        D += 1\n                else:\n                    S = S[:-1] + '0'\n                    if S[c - 1] == '1':\n                        D -= 1\n                    else:\n                        D += 1\n            elif S[c] == '0':\n                S = S[:c] + '1' + S[c + 1:]\n                if S[c - 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '0':\n                    D -= 1\n                else:\n                    D += 1\n            else:\n                S = S[:c] + '0' + S[c + 1:]\n                if S[c - 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n                if S[c + 1] == '1':\n                    D -= 1\n                else:\n                    D += 1\n            print(D)", "try:\n    for t in range(int(input())):\n        (N, K) = map(int, input().split())\n        S = list(str(input()))\n        Q = list(map(int, input().split()))\n        D = 0\n        for i in range(1, len(S)):\n            if S[i] == S[i - 1]:\n                D += 2\n            else:\n                D += 1\n        for i in Q:\n            if S[i - 1] == '0':\n                S[i - 1] = '1'\n            else:\n                S[i - 1] = '0'\n            if i - 1 > 0:\n                if S[i - 2] != S[i - 1]:\n                    D -= 1\n                else:\n                    D += 1\n            if i - 1 < len(S) - 1:\n                if S[i] != S[i - 1]:\n                    D -= 1\n                else:\n                    D += 1\n            print(D)\nexcept:\n    pass", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    q = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans += 2\n        else:\n            ans += 1\n    for i in range(len(q)):\n        ind = q[i] - 1\n        if ind < n - 1:\n            if s[ind] == '0':\n                if s[ind + 1] == '1':\n                    ans += 1\n                else:\n                    ans -= 1\n            elif s[ind] == '1':\n                if s[ind + 1] == '1':\n                    ans -= 1\n                else:\n                    ans += 1\n        if ind > 0:\n            if s[ind] == '0':\n                if s[ind - 1] == '1':\n                    ans += 1\n                else:\n                    ans -= 1\n            elif s[ind] == '1':\n                if s[ind - 1] == '1':\n                    ans -= 1\n                else:\n                    ans += 1\n        if s[ind] == '1':\n            s[ind] = '0'\n        else:\n            s[ind] = '1'\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    lis = list(map(int, input().split()))\n    l = len(s) - 1\n    for p in range(1, n):\n        if s[p] == s[p - 1]:\n            l += 1\n    for i in lis:\n        if s[i - 1] == '0':\n            s = s[:i - 1] + '1' + s[i:]\n            if not i == n:\n                if s[i] == s[i - 1]:\n                    l += 1\n                else:\n                    l -= 1\n            if i - 2 >= 0:\n                if s[i - 2] == s[i - 1]:\n                    l += 1\n                else:\n                    l -= 1\n            print(l)\n        else:\n            s = s[:i - 1] + '0' + s[i:]\n            if not i == n:\n                if s[i] == s[i - 1]:\n                    l += 1\n                else:\n                    l -= 1\n            if i - 2 >= 0:\n                if s[i - 2] == s[i - 1]:\n                    l += 1\n                else:\n                    l -= 1\n            print(l)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    q = list(map(int, input().split()))\n    s = 0\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            s += 2\n        else:\n            s += 1\n    for i in range(k):\n        x = q[i] - 1\n        if x - 1 >= 0:\n            if l[x - 1] == l[x]:\n                s -= 1\n            else:\n                s += 1\n        if x + 1 <= n - 1:\n            if l[x + 1] == l[x]:\n                s -= 1\n            else:\n                s += 1\n        l[x] = str(1 - int(l[x]))\n        print(s)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    q = [int(x) for x in input().split()]\n    currLength = 0\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            currLength += 2\n        else:\n            currLength += 1\n    for i in q:\n        i -= 1\n        s[i] = '0' if s[i] == '1' else '1'\n        if i < n - 1:\n            if s[i] == s[i + 1]:\n                currLength += 1\n            else:\n                currLength -= 1\n        if i > 0:\n            if s[i] == s[i - 1]:\n                currLength += 1\n            else:\n                currLength -= 1\n        print(currLength)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    li = list(map(int, input().split()))\n    dis = 0\n    for t in range(n - 1):\n        if s[t] != s[t + 1]:\n            dis += 1\n        else:\n            dis += 2\n    for i in range(len(li)):\n        if s[li[i] - 1] == '0':\n            s[li[i] - 1] = '1'\n            if li[i] - 2 >= 0 and s[li[i] - 2] != s[li[i] - 1]:\n                dis -= 1\n            elif li[i] - 2 >= 0 and s[li[i] - 2] == s[li[i] - 1]:\n                dis += 1\n            if li[i] < n and s[li[i]] != s[li[i] - 1]:\n                dis -= 1\n            elif li[i] < n and s[li[i]] == s[li[i] - 1]:\n                dis += 1\n        else:\n            s[li[i] - 1] = '0'\n            if li[i] - 2 >= 0 and s[li[i] - 2] != s[li[i] - 1]:\n                dis -= 1\n            elif li[i] - 2 >= 0 and s[li[i] - 2] == s[li[i] - 1]:\n                dis += 1\n            if li[i] < n and s[li[i]] != s[li[i] - 1]:\n                dis -= 1\n            elif li[i] < n and s[li[i]] == s[li[i] - 1]:\n                dis += 1\n        print(dis)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans = ans + 2\n        else:\n            ans = ans + 1\n    for i in range(k):\n        p = l[i]\n        if s[p - 1] == '0':\n            m = '1'\n            s = s[:p - 1] + m + s[p:]\n        else:\n            m = '0'\n            s = s[:p - 1] + m + s[p:]\n        if s[p - 2] != s[p - 1] and p - 1 != 0:\n            ans -= 1\n        elif s[p - 1] == s[p - 2] and p - 1 != 0:\n            ans += 1\n        if p - 1 != n - 1 and s[p - 1] != s[p]:\n            ans -= 1\n        elif p - 1 != n - 1 and s[p - 1] == s[p]:\n            ans += 1\n        print(ans)\n    t -= 1", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    particles = [int(x) for x in input()]\n    changes = [int(x) - 1 for x in input().split()]\n    count = 0\n    for k in range(len(particles) - 1):\n        if particles[k] != particles[k + 1]:\n            count += 1\n        else:\n            count += 2\n    for j in range(len(changes)):\n        if particles[changes[j]] == 0:\n            particles[changes[j]] = 1\n        else:\n            particles[changes[j]] = 0\n        index = changes[j]\n        if index == 0 and len(particles) > 1:\n            if particles[index] != particles[index + 1]:\n                count -= 1\n            else:\n                count += 1\n        elif index == len(particles) - 1:\n            if particles[index] != particles[index - 1]:\n                count -= 1\n            else:\n                count += 1\n        else:\n            if particles[index] != particles[index - 1]:\n                count -= 1\n            else:\n                count += 1\n            if particles[index] != particles[index + 1]:\n                count -= 1\n            else:\n                count += 1\n        if len(particles) == 1:\n            print(0)\n        else:\n            print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    ss = []\n    for j in range(len(s)):\n        ss.append(s[j])\n    li = [int(x) for x in input().split()]\n    distance = 0\n    for j in range(len(s) - 1):\n        if s[j] == s[j + 1]:\n            distance += 2\n        else:\n            distance += 1\n    v = 1\n    if len(ss) == 1:\n        print(0)\n        v = 0\n    if v == 1:\n        for j in range(len(li)):\n            particle = li[j] - 1\n            if particle == 0:\n                if ss[0] == ss[1]:\n                    distance -= 1\n                    if ss[0] == '0':\n                        ss[0] = '1'\n                    else:\n                        ss[0] = '0'\n                else:\n                    distance += 1\n                    if ss[0] == '0':\n                        ss[0] = '1'\n                    else:\n                        ss[0] = '0'\n            elif particle == len(ss) - 1:\n                if ss[particle] == ss[particle - 1]:\n                    distance -= 1\n                    if ss[particle] == '0':\n                        ss[particle] = '1'\n                    else:\n                        ss[particle] = '0'\n                else:\n                    distance += 1\n                    if ss[particle] == '0':\n                        ss[particle] = '1'\n                    else:\n                        ss[particle] = '0'\n            elif ss[particle] == ss[particle - 1] and ss[particle] == ss[particle + 1]:\n                distance -= 2\n                if ss[particle] == '0':\n                    ss[particle] = '1'\n                else:\n                    ss[particle] = '0'\n            elif ss[particle] != ss[particle - 1] and ss[particle] == ss[particle + 1]:\n                if ss[particle] == '0':\n                    ss[particle] = '1'\n                else:\n                    ss[particle] = '0'\n            elif ss[particle] == ss[particle - 1] and ss[particle] != ss[particle + 1]:\n                if ss[particle] == '0':\n                    ss[particle] = '1'\n                else:\n                    ss[particle] = '0'\n            else:\n                distance += 2\n                if ss[particle] == '0':\n                    ss[particle] = '1'\n                else:\n                    ss[particle] = '0'\n            print(distance)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    charge_string = list(input())\n    Q_list = list(map(int, input().split()))\n    distance = 0\n    output_list = []\n    for j in range(len(charge_string) - 1):\n        if charge_string[j] == charge_string[j + 1]:\n            distance += 2\n        else:\n            distance += 1\n    for j in Q_list:\n        if charge_string[j - 1] == '1':\n            charge_string[j - 1] = '0'\n        else:\n            charge_string[j - 1] = '1'\n        if j - 2 >= 0 and charge_string[j - 1] == charge_string[j - 2]:\n            distance += 1\n        elif j - 2 >= 0:\n            distance -= 1\n        if j < len(charge_string) and charge_string[j - 1] == charge_string[j]:\n            distance += 1\n        elif j < len(charge_string):\n            distance -= 1\n        output_list.append(distance)\n    for j in output_list:\n        print(j)", "t = int(input())\nfor i in range(t):\n    ls = input().split(' ')\n    N = int(ls[0])\n    K = int(ls[1])\n    ss = input()\n    query = input().split(' ')\n    for j in range(K):\n        query[j] = int(query[j])\n    ps = list(ss)\n    for j in range(N):\n        ps[j] = int(ps[j])\n    if N == 1:\n        print(0)\n    else:\n        sumi = 0\n        for j in range(1, N):\n            if ps[j] != ps[j - 1]:\n                sumi += 1\n            else:\n                sumi += 2\n        for j in range(K):\n            if query[j] - 1 == 0 and ps[query[j]] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == 0 and ps[query[j]] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 > 0 and query[j] - 1 < N - 1:\n                if ps[query[j]] == ps[query[j] - 2] and ps[query[j]] == ps[query[j] - 1]:\n                    sumi -= 2\n                elif ps[query[j]] == ps[query[j] - 2] and ps[query[j]] != ps[query[j] - 1]:\n                    sumi += 2\n            ps[query[j] - 1] = abs(ps[query[j] - 1] - 1)\n            print(sumi)", "t = int(input())\nfor i in range(t):\n    ls = input().split(' ')\n    N = int(ls[0])\n    K = int(ls[1])\n    ss = input()\n    query = input().split(' ')\n    for j in range(K):\n        query[j] = int(query[j])\n    ps = list(ss)\n    for j in range(N):\n        ps[j] = int(ps[j])\n    if N == 1:\n        print(0)\n    else:\n        sumi = 0\n        for j in range(1, N):\n            if ps[j] != ps[j - 1]:\n                sumi += 1\n            else:\n                sumi += 2\n        for j in range(K):\n            if query[j] - 1 == 0 and ps[query[j]] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == 0 and ps[query[j]] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 > 0 and query[j] - 1 < N - 1:\n                if ps[query[j]] == ps[query[j] - 2] and ps[query[j]] == ps[query[j] - 1]:\n                    sumi -= 2\n                elif ps[query[j]] == ps[query[j] - 2] and ps[query[j]] != ps[query[j] - 1]:\n                    sumi += 2\n            ps[query[j] - 1] = abs(ps[query[j] - 1] - 1)\n            print(sumi)", "t = int(input())\nfor i in range(t):\n    ls = input().split(' ')\n    N = int(ls[0])\n    K = int(ls[1])\n    ss = input()\n    query = input().split(' ')\n    for j in range(K):\n        query[j] = int(query[j])\n    ps = list(ss)\n    for j in range(N):\n        ps[j] = int(ps[j])\n    if N == 1:\n        print(0)\n    else:\n        sumi = 0\n        for j in range(1, N):\n            if ps[j] != ps[j - 1]:\n                sumi += 1\n            else:\n                sumi += 2\n        for j in range(K):\n            if query[j] - 1 == 0 and ps[query[j]] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == 0 and ps[query[j]] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] == ps[query[j] - 1]:\n                sumi -= 1\n            elif query[j] - 1 == N - 1 and ps[query[j] - 2] != ps[query[j] - 1]:\n                sumi += 1\n            elif query[j] - 1 > 0 and query[j] - 1 < N - 1:\n                if ps[query[j]] == ps[query[j] - 2] and ps[query[j]] == ps[query[j] - 1]:\n                    sumi -= 2\n                elif ps[query[j]] == ps[query[j] - 2] and ps[query[j]] != ps[query[j] - 1]:\n                    sumi += 2\n            ps[query[j] - 1] = abs(ps[query[j] - 1] - 1)\n            print(sumi)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = input()\n    s = list(s)\n    q = list(map(int, input().split()))\n    distance = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            distance = distance + 2\n        elif s[i] != s[i + 1]:\n            distance = distance + 1\n    for i in q:\n        index = i - 1\n        if index > 0 and index < n - 1:\n            if s[index] == s[index + 1]:\n                distance = distance - 1\n            elif s[index] != s[index + 1]:\n                distance = distance + 1\n            if s[index] == s[index - 1]:\n                distance = distance - 1\n            elif s[index] != s[index - 1]:\n                distance = distance + 1\n        elif index == 0 and n != 1:\n            if s[index] == s[index + 1]:\n                distance = distance - 1\n            elif s[index] != s[index + 1]:\n                distance = distance + 1\n        elif index == n - 1 and n != 1:\n            if s[index] == s[index - 1]:\n                distance = distance - 1\n            elif s[index] != s[index - 1]:\n                distance = distance + 1\n        if s[index] == '0':\n            s[index] = '1'\n        else:\n            s[index] = '0'\n        print(distance)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ch = input()\n    chg = []\n    for i in ch:\n        chg.append(int(i))\n    pos = list(map(int, input().split()))\n    (temp, ans, sol) = (chg[0], [], 0)\n    for i in range(1, len(chg)):\n        sol += 1\n        if temp == chg[i]:\n            sol += 1\n        temp = chg[i]\n    chg.insert(0, -1)\n    chg.append(-1)\n    for i in pos:\n        so = 0\n        for j in [1, -1]:\n            if chg[i + j] == -1:\n                so += 0\n            elif chg[i + j] != chg[i]:\n                so += 1\n            else:\n                so += 2\n        sol -= so\n        so = 0\n        chg[i] += 1\n        if chg[i] == 2:\n            chg[i] = 0\n        for j in [1, -1]:\n            if chg[i + j] == -1:\n                so += 0\n            elif chg[i + j] != chg[i]:\n                so += 1\n            else:\n                so += 2\n        sol += so\n        print(sol)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    a = list(map(int, input().split()))\n    d = 0\n    if n == 1:\n        for i in a:\n            print(0)\n    else:\n        for i in range(len(s) - 1):\n            if s[i] != s[i + 1]:\n                d += 1\n            else:\n                d += 2\n        for i in a:\n            index = i - 1\n            if index == 0:\n                if s[index] == s[index + 1]:\n                    d -= 1\n                else:\n                    d += 1\n                if s[index] == '0':\n                    s = '1' + s[index + 1:]\n                else:\n                    s = '0' + s[index + 1:]\n            elif index == n - 1:\n                if s[index] == s[index - 1]:\n                    d -= 1\n                else:\n                    d += 1\n                if s[index] == '0':\n                    s = s[:index] + '1'\n                else:\n                    s = s[:index] + '0'\n            else:\n                if s[index] == s[index + 1] and s[index] == s[index - 1]:\n                    d -= 2\n                elif s[index] != s[index + 1] and s[index] != s[index - 1]:\n                    d += 2\n                if s[index] == '0':\n                    s = s[:index] + '1' + s[index + 1:]\n                else:\n                    s = s[:index] + '0' + s[index + 1:]\n            print(d)\n    t -= 1", "T = int(input())\nfor t in range(T):\n    input()\n    l2 = list(input())\n    l3 = input().split(' ')\n    l2 = list(map(lambda x: int(x), l2))\n    l3 = list(map(lambda x: int(x), l3))\n    sum = 0\n    for i in range(1, len(l2)):\n        if l2[i] == l2[i - 1]:\n            sum += 2\n        else:\n            sum += 1\n    for q in l3:\n        l2[q - 1] = 1 - l2[q - 1]\n        if q - 1 - 1 >= 0:\n            if l2[q - 1] == l2[q - 2]:\n                sum += 1\n            else:\n                sum -= 1\n        if q - 1 + 1 < len(l2):\n            if l2[q - 1] == l2[q]:\n                sum += 1\n            else:\n                sum -= 1\n        print(sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = 0\n    if n > 1:\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                d += 2\n            else:\n                d += 1\n        ar = [0] * n\n        for i in range(n):\n            if s[i] == '1':\n                ar[i] = 1\n        p = [int(x) for x in input().split()]\n        for i in range(k):\n            q = p[i] - 1\n            if q == 0 or q == n - 1:\n                if q == 0:\n                    if n > 1:\n                        if ar[0] == ar[1]:\n                            d -= 1\n                        else:\n                            d += 1\n                    if ar[q] == 0:\n                        ar[q] = 1\n                    else:\n                        ar[q] = 0\n                else:\n                    if ar[n - 1] == ar[n - 2]:\n                        d -= 1\n                    else:\n                        d += 1\n                    if ar[q] == 0:\n                        ar[q] = 1\n                    else:\n                        ar[q] = 0\n            else:\n                if ar[q] == ar[q - 1]:\n                    d -= 1\n                else:\n                    d += 1\n                if ar[q] == ar[q + 1]:\n                    d -= 1\n                else:\n                    d += 1\n                if ar[q] == 0:\n                    ar[q] = 1\n                else:\n                    ar[q] = 0\n            print(d)\n    else:\n        p = [int(x) for x in input().split()]\n        for i in range(k):\n            print(0)", "T = int(input())\nfor test_case in range(T):\n    (n, k) = map(int, input().split())\n    s = [a for a in input()]\n    final = 0\n    for y in range(len(s) - 1):\n        if s[y] == s[y + 1]:\n            final += 2\n        else:\n            final += 1\n    q = list(map(int, input().split()))\n    for x in range(k):\n        if s[q[x] - 1] == '0':\n            s[q[x] - 1] = '1'\n        else:\n            s[q[x] - 1] = '0'\n        if q[x] >= 2:\n            if s[q[x] - 1] == s[q[x] - 2]:\n                final += 1\n            else:\n                final -= 1\n        if q[x] < n:\n            if s[q[x] - 1] == s[q[x]]:\n                final += 1\n            else:\n                final -= 1\n        print(final)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    qq = list(map(int, input().split()))\n    dist = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            dist += 2\n        else:\n            dist += 1\n    for q in qq:\n        if s[q - 1] == '0':\n            s[q - 1] = '1'\n            if q - 2 >= 0:\n                if s[q - 2] == s[q - 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            if q <= n - 1:\n                if s[q] == s[q - 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            print(dist)\n        else:\n            s[q - 1] = '0'\n            if q - 2 >= 0:\n                if s[q - 2] == s[q - 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            if q <= n - 1:\n                if s[q] == s[q - 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            print(dist)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    charges = input()\n    Q = [int(x) for x in input().split()]\n    distances = [0 for x in range(n - 1)]\n    m = 0\n    for c in range(len(charges) - 1):\n        if charges[c] == '0' and charges[c + 1] == '1' or (charges[c] == '1' and charges[c + 1] == '0'):\n            distances[m] = 1\n        else:\n            distances[m] = 2\n        m += 1\n    isFlagOne = False\n    isFlagTwo = False\n    distance = sum(distances)\n    if len(Q) == 1:\n        print(0)\n    else:\n        for q in Q:\n            if q == 1:\n                if distances[0] == 1:\n                    distance += 1\n                    distances[0] = 2\n                else:\n                    distance -= 1\n                    distances[0] = 1\n            elif q == n:\n                if distances[n - 2] == 1:\n                    distance += 1\n                    distances[n - 2] = 2\n                else:\n                    distance -= 1\n                    distances[n - 2] = 1\n            else:\n                if distances[q - 2] == 1:\n                    distance += 1\n                    distances[q - 2] = 2\n                else:\n                    distance -= 1\n                    distances[q - 2] = 1\n                if distances[q - 1] == 1:\n                    distance += 1\n                    distances[q - 1] = 2\n                else:\n                    distance -= 1\n                    distances[q - 1] = 1\n            print(distance)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    sArr = [int(ele) for ele in input()]\n    q = [int(ele) - 1 for ele in input().split()]\n    length = 0\n    i = 1\n    while i < len(sArr):\n        if sArr[i - 1] == sArr[i]:\n            length += 2\n        else:\n            length += 1\n        i += 1\n    for ele in q:\n        if sArr[ele] == 0:\n            sArr[ele] = 1\n        else:\n            sArr[ele] = 0\n        if ele < len(sArr) - 1:\n            if sArr[ele + 1] == sArr[ele]:\n                length += 1\n            else:\n                length -= 1\n        if ele > 0:\n            if sArr[ele - 1] == sArr[ele]:\n                length += 1\n            else:\n                length -= 1\n        print(length)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    charges = [int(i) for i in input()]\n    changes = list(map(int, input().split()))\n    initial = n - 1\n    for x in range(1, n):\n        if charges[x] == charges[x - 1]:\n            initial += 1\n    for c in changes:\n        c -= 1\n        if charges[c] == 1:\n            charges[c] = 0\n        else:\n            charges[c] = 1\n        if c < n - 1:\n            if charges[c] == charges[c + 1]:\n                initial += 1\n            else:\n                initial -= 1\n        if c > 0:\n            if charges[c] == charges[c - 1]:\n                initial += 1\n            else:\n                initial -= 1\n        print(initial)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(input())\n    changes = list(map(int, input().split()))\n    distance = 0\n    for i in range(len(arr) - 1):\n        if arr[i] == arr[i + 1]:\n            distance += 2\n        else:\n            distance += 1\n    for ij in range(len(changes)):\n        addr = changes[ij] - 1\n        if arr[addr] == '0':\n            arr[addr] = '1'\n        else:\n            arr[addr] = '0'\n        if addr > 0:\n            if arr[addr] == arr[addr - 1]:\n                distance += 1\n            else:\n                distance -= 1\n        if addr < n - 1:\n            if arr[addr] == arr[addr + 1]:\n                distance += 1\n            else:\n                distance -= 1\n        print(distance)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = list(map(int, input().split()))\n    a = list(map(int, list(s)))\n    sum = 0\n    if n == 1:\n        print(0)\n        continue\n    for i in range(0, len(a) - 1):\n        if a[i] == a[i + 1]:\n            sum += 2\n        else:\n            sum += 1\n    for i in range(0, k):\n        if b[i] - 1 == 0:\n            if a[b[i] - 1] == 1:\n                if a[b[i]] == 0:\n                    sum += 1\n                elif a[b[i]] == 1:\n                    sum -= 1\n                a[b[i] - 1] = 0\n            else:\n                if a[b[i]] == 1:\n                    sum += 1\n                elif a[b[i]] == 0:\n                    sum -= 1\n                a[b[i] - 1] = 1\n        elif b[i] - 1 == n - 1:\n            if a[b[i] - 1] == 1:\n                if a[b[i] - 2] == 0:\n                    sum += 1\n                elif a[b[i] - 2] == 1:\n                    sum -= 1\n                a[b[i] - 1] = 0\n            else:\n                if a[b[i] - 2] == 1:\n                    sum += 1\n                elif a[b[i] - 2] == 0:\n                    sum -= 1\n                a[b[i] - 1] = 1\n        elif a[b[i] - 1] == 1:\n            if a[b[i] - 2] == 0:\n                sum += 1\n            elif a[b[i] - 2] == 1:\n                sum -= 1\n            if a[b[i]] == 0:\n                sum += 1\n            elif a[b[i]] == 1:\n                sum -= 1\n            a[b[i] - 1] = 0\n        else:\n            if a[b[i] - 2] == 1:\n                sum += 1\n            elif a[b[i] - 2] == 0:\n                sum -= 1\n            if a[b[i]] == 1:\n                sum += 1\n            elif a[b[i]] == 0:\n                sum -= 1\n            a[b[i] - 1] = 1\n        print(sum)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    s = input()\n    st = list(s)\n    a = list(map(int, input().split()))\n    i = 0\n    s = 0\n    while i < n - 1:\n        if st[i] == st[i + 1]:\n            s = s + 2\n        else:\n            s = s + 1\n        i = i + 1\n    j = 0\n    while j < p:\n        k = a[j] - 1\n        if n == 1:\n            print(0)\n            j = j + 1\n            continue\n        if st[k] == '1':\n            st[k] = '0'\n        else:\n            st[k] = '1'\n        if k == 0 and st[k] == st[k + 1]:\n            s = s + 1\n        elif k == 0 and st[k] != st[k + 1]:\n            s = s - 1\n        elif k == n - 1 and st[k] == st[k - 1]:\n            s = s + 1\n        elif k == n - 1 and st[k] != st[k - 1]:\n            s = s - 1\n        elif st[k] == st[k - 1] and st[k] == st[k + 1]:\n            s = s + 2\n        elif st[k] != st[k - 1] and st[k] == st[k + 1]:\n            s = s\n        elif st[k] == st[k - 1] and st[k] != st[k + 1]:\n            s = s\n        elif st[k] != st[k - 1] and st[k] != st[k + 1]:\n            s = s - 2\n        print(s)\n        j = j + 1", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    s = input()\n    st = list(s)\n    a = list(map(int, input().split()))\n    i = 0\n    s = 0\n    while i < n - 1:\n        if st[i] == st[i + 1]:\n            s = s + 2\n        else:\n            s = s + 1\n        i = i + 1\n    j = 0\n    while j < p:\n        k = a[j] - 1\n        if n == 1:\n            print(0)\n            j = j + 1\n            continue\n        if st[k] == '1':\n            st[k] = '0'\n        else:\n            st[k] = '1'\n        if k == 0 and st[k] == st[k + 1]:\n            s = s + 1\n        elif k == 0 and st[k] != st[k + 1]:\n            s = s - 1\n        elif k == n - 1 and st[k] == st[k - 1]:\n            s = s + 1\n        elif k == n - 1 and st[k] != st[k - 1]:\n            s = s - 1\n        elif st[k] == st[k - 1] and st[k] == st[k + 1]:\n            s = s + 2\n        elif st[k] != st[k - 1] and st[k] == st[k + 1]:\n            s = s\n        elif st[k] == st[k - 1] and st[k] != st[k + 1]:\n            s = s\n        elif st[k] != st[k - 1] and st[k] != st[k + 1]:\n            s = s - 2\n        print(s)\n        j = j + 1", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    s = input()\n    st = list(s)\n    a = list(map(int, input().split()))\n    i = 0\n    s = 0\n    while i < n - 1:\n        if st[i] == st[i + 1]:\n            s = s + 2\n        else:\n            s = s + 1\n        i = i + 1\n    j = 0\n    while j < p:\n        k = a[j] - 1\n        if n == 1:\n            print(0)\n            j = j + 1\n            continue\n        if st[k] == '1':\n            st[k] = '0'\n        else:\n            st[k] = '1'\n        if k == 0 and st[k] == st[k + 1]:\n            s = s + 1\n        elif k == 0 and st[k] != st[k + 1]:\n            s = s - 1\n        elif k == n - 1 and st[k] == st[k - 1]:\n            s = s + 1\n        elif k == n - 1 and st[k] != st[k - 1]:\n            s = s - 1\n        elif st[k] == st[k - 1] and st[k] == st[k + 1]:\n            s = s + 2\n        elif st[k] != st[k - 1] and st[k] == st[k + 1]:\n            s = s\n        elif st[k] == st[k - 1] and st[k] != st[k + 1]:\n            s = s\n        elif st[k] != st[k - 1] and st[k] != st[k + 1]:\n            s = s - 2\n        print(s)\n        j = j + 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    st = list(s)\n    a = list(map(int, input().split()))\n    d = 0\n    for i in range(1, n):\n        if st[i] == st[i - 1]:\n            d = d + 2\n        else:\n            d = d + 1\n    for k in a:\n        k = k - 1\n        if n == 1:\n            print(0)\n            continue\n        if st[k] == '1':\n            st[k] = '0'\n        else:\n            st[k] = '1'\n        if k == 0:\n            if st[k] == st[k + 1]:\n                d = d + 1\n            else:\n                d = d - 1\n        elif k == n - 1:\n            if st[k] == st[k - 1]:\n                d = d + 1\n            else:\n                d = d - 1\n        elif st[k - 1] == st[k + 1]:\n            if st[k] != st[k - 1]:\n                d = d - 2\n            else:\n                d = d + 2\n        print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = list(map(int, input().split()))\n    dist = 0\n    s = list(s)\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            dist = dist + 2\n        else:\n            dist = dist + 1\n    for k in arr:\n        k = k - 1\n        if s[k] == '0':\n            s[k] = '1'\n        else:\n            s[k] = '0'\n        if k - 1 >= 0:\n            if s[k] == s[k - 1]:\n                dist = dist - 1 + 2\n            else:\n                dist = dist - 2 + 1\n        if k + 1 < n:\n            if s[k] == s[k + 1]:\n                dist = dist - 1 + 2\n            else:\n                dist = dist - 2 + 1\n        print(dist)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    s = list(map(int, input()))\n    q = list(map(int, input().strip().split()))\n    dist = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            dist += 2\n        else:\n            dist += 1\n    for j in range(k):\n        idx = q[j] - 1\n        s[idx] = s[idx] ^ 1\n        if idx != 0 and idx != n - 1:\n            if s[idx] ^ s[idx - 1]:\n                dist -= 1\n            else:\n                dist += 1\n            if s[idx] ^ s[idx + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        if idx == 0 and idx != n - 1:\n            if s[idx] ^ s[idx + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        if idx == n - 1 and idx != 0:\n            if s[idx] ^ s[idx - 1]:\n                dist -= 1\n            else:\n                dist += 1\n        print(dist)", "def convertnumbertodigits(n):\n    d = [int(k) for k in str(n)]\n    return d\n\ndef distance2(a, b):\n    if a == b:\n        d = 2\n    else:\n        d = 1\n    return d\n\ndef charges(n, k, s, Q):\n    u = convertnumbertodigits(s)\n    k0 = u[0]\n    D = []\n    for (i, k1) in enumerate(u[1:]):\n        if k1 == k0:\n            d = 2\n        else:\n            d = 1\n        D.append(d)\n        k0 = k1\n    R2 = []\n    total = 0\n    dd = sum(D)\n    for (i, p) in enumerate(Q):\n        u[p - 1] = 1 - u[p - 1]\n        offset = 0\n        if p >= 2:\n            d1 = distance2(u[p - 2], u[p - 1])\n            offset += d1 - D[p - 2]\n            D[p - 2] = d1\n        if p < n:\n            d2 = distance2(u[p - 1], u[p - 0])\n            offset += d2 - D[p - 1]\n            D[p - 1] = d2\n        dd += offset\n        R2.append(dd)\n        total += dd\n    for x in R2:\n        print(x)\n    return total\ntyp = 1\nif typ == 0:\n    print('Testing functions')\n    n = 123 * 0\n    while n > 0:\n        n = int(input('n0759 = '))\n        if n == 0:\n            break\n        print('n = ', n)\nelif typ == 1:\n    m = int(input())\n    for i in range(1, m + 1):\n        t = input()\n        u = t.split(' ')\n        v = [int(x) for x in u]\n        [n, k] = v[:2]\n        s = input()\n        q = input()\n        Q = [int(p) for p in q.split(' ')]\n        charges(n, k, s, Q)\nelif typ == 2:\n    k = int(input())\n    for i in range(1, k + 1):\n        s = input()\n        u = s.split(' ')\n        v = [int(x) for x in u]\n        [xa, xb, Xa, Xb] = v[:4]\n        y = xa + xb\n        print(y)\nelif typ == 3:\n    print('typ = ', typ)\nelif typ == 4:\n    print('typ = ', typ)\nelif typ == 9:\n    print('Other functions e.g. test OTHER puzzles')\nelse:\n    print('Invalid typ = ', typ)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    lst = []\n    q = list(map(int, input().split()))\n    for i in range(n):\n        lst.append(s[i])\n    cn = 0\n    for j in range(n - 1):\n        if lst[j] != lst[j + 1]:\n            cn += 1\n        else:\n            cn += 2\n    for j in range(k):\n        index = q[j] - 1\n        temp = lst[q[j] - 1]\n        if temp == '1':\n            lst[index] = '0'\n        else:\n            lst[index] = '1'\n        diff = 0\n        if index + 1 < n:\n            if lst[index] == lst[index + 1]:\n                diff += 1\n            else:\n                diff -= 1\n        if index > 0:\n            if lst[index] == lst[index - 1]:\n                diff += 1\n            else:\n                diff -= 1\n        cn += diff\n        print(cn)", "def check_behind(s, d, i):\n    prev = s[i - 2]\n    curr = s[i - 1]\n    if prev == curr:\n        d -= 1\n    if prev != curr:\n        d += 1\n    return d\n\ndef check_ahead(s, d, i):\n    nex = s[i]\n    curr = s[i - 1]\n    if nex == curr:\n        d -= 1\n    if nex != curr:\n        d += 1\n    return d\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = [int(x) for x in input()]\n    distance = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            distance += 2\n        else:\n            distance += 1\n    for q in input().split():\n        i = int(q)\n        if n == 1:\n            print(0)\n            continue\n        if i == n:\n            distance = check_behind(s, distance, i)\n        elif i == 1:\n            distance = check_ahead(s, distance, i)\n        else:\n            distance = check_behind(s, distance, i)\n            distance = check_ahead(s, distance, i)\n        s[i - 1] = 1 if s[i - 1] == 0 else 0\n        print(distance)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    string = input().strip()\n    arr = []\n    for i in string:\n        if i == '1':\n            arr.append(1)\n        else:\n            arr.append(0)\n    change = list(map(int, input().strip().split()))\n    cnt = 0\n    for i in range(n - 1):\n        if arr[i] ^ arr[i + 1] == 1:\n            cnt += 1\n        else:\n            cnt += 2\n    for i in change:\n        i -= 1\n        if i - 1 >= 0:\n            if arr[i - 1] ^ arr[i] == 1:\n                cnt += 1\n            else:\n                cnt -= 1\n        if i + 1 < n:\n            if arr[i] ^ arr[i + 1] == 1:\n                cnt += 1\n            else:\n                cnt -= 1\n        arr[i] = arr[i] ^ 1\n        print(cnt)", "n_t = int(input())\nfor i in range(n_t):\n    (n, k) = map(int, input().split())\n    lst = input()\n    string = list(lst)\n    change = list(map(int, input().split()))\n    ini = string[0]\n    length = 0\n    if n == 1:\n        for y in range(k):\n            print(0)\n        continue\n    for j in range(1, n):\n        sec = string[j]\n        if sec == ini:\n            length += 2\n        else:\n            length += 1\n        ini = sec\n    for flip in change:\n        if string[flip - 1] == '0':\n            string[flip - 1] = '1'\n        else:\n            string[flip - 1] = '0'\n        if flip != 1 and flip != n:\n            if string[flip - 1] == string[flip - 2]:\n                length += 1\n            else:\n                length -= 1\n            if string[flip - 1] == string[flip]:\n                length += 1\n            else:\n                length -= 1\n        elif flip == 1:\n            if string[flip - 1] == string[flip]:\n                length += 1\n            else:\n                length -= 1\n        elif flip == n:\n            if string[flip - 1] == string[flip - 2]:\n                length += 1\n            else:\n                length -= 1\n        print(length)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    li = list(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        for _ in range(k):\n            print(0)\n        continue\n    gap = 0\n    for i in range(0, n - 1):\n        if li[i] == li[i + 1]:\n            gap += 2\n        else:\n            gap += 1\n    for i in range(k):\n        a = arr[i] - 1\n        if li[a] == '0':\n            li[a] = '1'\n        else:\n            li[a] = '0'\n        if a == 0:\n            if li[a + 1] == li[a]:\n                gap += 1\n            else:\n                gap -= 1\n        elif a == n - 1:\n            if li[a] == li[a - 1]:\n                gap += 1\n            else:\n                gap -= 1\n        elif li[a] == li[a + 1] and li[a] == li[a - 1]:\n            gap += 2\n        elif li[a] != li[a + 1] and li[a] != li[a - 1]:\n            gap -= 2\n        print(gap)", "def cal(a):\n    dis = 0\n    for i in range(1, len(a)):\n        if a[i - 1] == a[i]:\n            dis += 2\n        else:\n            dis += 1\n    return dis\nfor _ in range(int(input())):\n    l = int(input().split()[0])\n    n = input()\n    le = cal(n)\n    q = list(map(int, input().split()))\n    for j in q:\n        i = j - 1\n        if n[i] == '0':\n            n = n[:i] + '1' + n[i + 1:]\n        else:\n            n = n[:i] + '0' + n[i + 1:]\n        if i - 1 > -1:\n            if n[i - 1] == n[i]:\n                le += 1\n            else:\n                le -= 1\n        if i + 1 < l:\n            if n[i] == n[i + 1]:\n                le += 1\n            else:\n                le -= 1\n        print(le)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    loc = list(map(int, input().split()))\n    c = 0\n    for i in range(1, n):\n        v = 2 if s[i] == s[i - 1] else 1\n        c += v\n    c1 = []\n    for j in loc:\n        j = j - 1\n        s[j] = '1' if s[j] == '0' else '0'\n        if j > 0:\n            v = -1 if s[j] != s[j - 1] else 1\n            c += v\n        if j < n - 1:\n            v = -1 if s[j] != s[j + 1] else 1\n            c += v\n        c1.append(str(c))\n        c1.append('\\n')\n    print(''.join(c1[:-1]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = [int(c) for c in input()]\n    q_arr = list(map(int, input().split()))\n    d = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            d += 2\n        else:\n            d += 1\n    for q in q_arr:\n        s[q - 1] = s[q - 1] ^ 1\n        if q - 2 >= 0:\n            if s[q - 1] == s[q - 2]:\n                d += 1\n            else:\n                d -= 1\n        if q < n:\n            if s[q - 1] == s[q]:\n                d += 1\n            else:\n                d -= 1\n        print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    q = list(map(int, input().split()))\n    dist = 0\n    if n == 1:\n        print(dist)\n        continue\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            dist = dist + 2\n        else:\n            dist = dist + 1\n    f = dist\n    for i in q:\n        pos = i - 1\n        if pos == n - 1:\n            if s[pos - 1] == s[pos]:\n                dist -= 1\n            else:\n                dist += 1\n        elif pos == 0:\n            if s[pos] == s[pos + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        else:\n            if s[pos - 1] == s[pos]:\n                dist -= 1\n            else:\n                dist += 1\n            if s[pos] == s[pos + 1]:\n                dist -= 1\n            else:\n                dist += 1\n        print(dist)\n        if s[pos] == '1':\n            s[pos] = '0'\n        else:\n            s[pos] = '1'", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    q = list(map(int, input().split()))\n    total = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            total += 2\n        else:\n            total += 1\n    for x in q:\n        s[x - 1] = 1 - s[x - 1]\n        if x < n:\n            if s[x] == s[x - 1]:\n                total += 1\n            else:\n                total -= 1\n        if x - 1 > 0:\n            if s[x - 2] == s[x - 1]:\n                total += 1\n            else:\n                total -= 1\n        print(total)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input()))\n    s = 0\n    if n != 1:\n        for i in range(1, len(l)):\n            if l[i] == l[i - 1]:\n                s += 2\n            else:\n                s += 1\n    p = list(map(int, input().split()))\n    for i in p:\n        if l[i - 1] == 1:\n            l[i - 1] = 0\n        else:\n            l[i - 1] = 1\n        if n != 1:\n            if i - 1 == 0 and l[i - 1] == l[i] or (i - 1 == n - 1 and l[i - 1] == l[i - 2]):\n                s += 1\n            elif i - 1 == 0 or i - 1 == n - 1:\n                s -= 1\n            else:\n                if l[i - 1] == l[i]:\n                    s += 1\n                else:\n                    s -= 1\n                if l[i - 1] == l[i - 2]:\n                    s += 1\n                else:\n                    s -= 1\n        print(s)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = list(map(int, input().split()))\n    lst = []\n    lst[:0] = s\n    ans = n - 1\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            ans += 1\n    for i in arr:\n        i -= 1\n        if lst[i] == '0':\n            lst[i] = '1'\n        else:\n            lst[i] = '0'\n        if i - 1 >= 0:\n            if lst[i - 1] == lst[i]:\n                ans += 1\n            else:\n                ans -= 1\n        if i + 1 < n:\n            if lst[i + 1] == lst[i]:\n                ans += 1\n            else:\n                ans -= 1\n        print(ans)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = [int(i) for i in input()]\n    P = list(map(int, input().split()))\n    dist = 0\n    if N == 1:\n        for i in range(K):\n            print(0)\n    else:\n        for i in range(1, N):\n            if S[i] != S[i - 1]:\n                dist += 1\n            else:\n                dist += 2\n        for i in range(K):\n            pos = P[i] - 1\n            if pos == 0:\n                if S[pos] != S[pos + 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            elif pos == N - 1:\n                if S[pos] != S[pos - 1]:\n                    dist += 1\n                else:\n                    dist -= 1\n            elif S[pos] != S[pos - 1] and S[pos] != S[pos + 1]:\n                dist += 2\n            elif S[pos] == S[pos - 1] and S[pos] == S[pos + 1]:\n                dist -= 2\n            S[pos] = 1 - S[pos]\n            print(dist)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input().strip())\n    d = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            d += 1\n        else:\n            d += 2\n    queries = list(map(int, input().split()))\n    for i in queries:\n        q = i\n        q -= 1\n        if s[q] == '1':\n            s[q] = '0'\n        else:\n            s[q] = '1'\n        if q - 1 >= 0:\n            if s[q] == s[q - 1]:\n                d += 1\n            else:\n                d -= 1\n        if q + 1 < n:\n            if s[q] == s[q + 1]:\n                d += 1\n            else:\n                d -= 1\n        print(d)", "for i in range(int(input())):\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    k = arr[1]\n    s = input()\n    d = []\n    summ = 0\n    update = list(map(int, input().split()))\n    for t in range(0, len(s)):\n        if s[t] == '1':\n            d.append(1)\n        else:\n            d.append(0)\n    for l in range(0, n - 1):\n        if abs(d[l] - d[l + 1]) == 1:\n            summ += 1\n        else:\n            summ += 2\n    for j in range(0, k):\n        if len(d) == 1:\n            print(0)\n            break\n        if len(d) == 2:\n            if d[0] == d[1]:\n                summ -= 1\n            else:\n                summ += 1\n            print(summ)\n            continue\n        if update[j] - 1 > 0 and update[j] - 1 < n - 1:\n            if d[update[j] - 1] == d[update[j]] and d[update[j] - 1] == d[update[j] - 2]:\n                summ -= 2\n            if d[update[j] - 1] != d[update[j]] and d[update[j] - 1] != d[update[j] - 2]:\n                summ += 2\n            else:\n                summ += 0\n        else:\n            if update[j] - 1 == 0:\n                if d[0] == d[1]:\n                    summ -= 1\n                else:\n                    summ += 1\n            if update[j] - 1 == n - 1:\n                if d[n - 1] == d[n - 2]:\n                    summ -= 1\n                else:\n                    summ += 1\n        d[update[j] - 1] = abs(d[update[j] - 1] - 1)\n        print(summ)", "t = int(input())\nfor z in range(t):\n    x = []\n    (n, k) = map(int, input().split())\n    s = [i for i in input().strip()]\n    queries = list(map(int, input().split()))\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            x.append(1)\n        else:\n            x.append(2)\n    result = sum(x)\n    for i in queries:\n        if s[i - 1] == '0':\n            s[i - 1] = '1'\n        else:\n            s[i - 1] = '0'\n        if i - 2 >= 0:\n            if s[i - 1] != s[i - 2]:\n                result -= 1\n            else:\n                result += 1\n        if i < n:\n            if s[i - 1] != s[i]:\n                result -= 1\n            else:\n                result += 1\n        print(result)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    q = list(map(int, input().split()))\n    c = 0\n    for j in range(n - 1):\n        if s[j] == s[j + 1]:\n            c += 2\n        else:\n            c += 1\n    for i in range(k):\n        d = q[i] - 1\n        if s[d] == '0':\n            s[d] = '1'\n        else:\n            s[d] = '0'\n        if d < n - 1:\n            if s[d] == s[d + 1]:\n                c += 1\n            else:\n                c -= 1\n        if d > 0:\n            if s[d] == s[d - 1]:\n                c += 1\n            else:\n                c -= 1\n        print(c)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    S = list(str(input()))\n    arr = [int(s) for s in input().split()]\n    su = 0\n    if N != 1:\n        for j in range(N - 1):\n            if S[j] == S[j + 1]:\n                su += 2\n            else:\n                su += 1\n    for k in range(K):\n        if N != 1:\n            cur = arr[k]\n            if cur == 1:\n                if S[0] == S[1]:\n                    su -= 1\n                else:\n                    su += 1\n                if S[0] == '0':\n                    S[0] = '1'\n                else:\n                    S[0] = '0'\n            elif cur == N:\n                if S[N - 1] == S[N - 2]:\n                    su -= 1\n                else:\n                    su += 1\n                if S[N - 1] == '0':\n                    S[N - 1] = '1'\n                else:\n                    S[N - 1] = '0'\n            else:\n                if S[cur - 1] == S[cur - 2] and S[cur - 1] == S[cur]:\n                    su -= 2\n                elif S[cur - 1] != S[cur - 2] and S[cur - 1] != S[cur]:\n                    su += 2\n                if S[cur - 1] == '0':\n                    S[cur - 1] = '1'\n                else:\n                    S[cur - 1] = '0'\n        print(su)", "a = int(input())\nfor i in range(a):\n    (b, c) = map(int, input().split())\n    arr = input()\n    arr = list(arr)\n    result = 0\n    for j in range(1, len(arr)):\n        if arr[j] == arr[j - 1]:\n            result += 2\n        else:\n            result += 1\n    fresult = []\n    x = [int(y) for y in input().split()]\n    for j in range(c):\n        if b > 1:\n            if int(x[j]) == b:\n                if arr[int(x[j]) - 1] == arr[int(x[j]) - 2]:\n                    result -= 1\n                else:\n                    result += 1\n            elif int(x[j]) == 1:\n                if arr[int(x[j]) - 1] == arr[int(x[j])]:\n                    result -= 1\n                else:\n                    result += 1\n            else:\n                if arr[int(x[j]) - 1] == arr[int(x[j]) - 2]:\n                    result -= 1\n                else:\n                    result += 1\n                if arr[int(x[j]) - 1] == arr[int(x[j])]:\n                    result -= 1\n                else:\n                    result += 1\n        fresult.append(result)\n        if arr[int(x[j]) - 1] == '0':\n            arr[int(x[j]) - 1] = '1'\n        else:\n            arr[int(x[j]) - 1] = '0'\n    for ans in fresult:\n        print(ans)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    string = input()\n    s = []\n    q = list(map(int, input().split()))\n    length = 0\n    if n == 1:\n        print(length)\n    else:\n        for i in string:\n            s.append(i)\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                length += 2\n            else:\n                length += 1\n        if k != 0:\n            for _ in range(k):\n                if s[q[_] - 1] == '0':\n                    s[q[_] - 1] = '1'\n                else:\n                    s[q[_] - 1] = '0'\n                if q[_] == 1:\n                    if s[q[_] - 1] == s[q[_]]:\n                        length += 1\n                    else:\n                        length -= 1\n                elif q[_] == n:\n                    if s[q[_] - 1] == s[q[_] - 2]:\n                        length += 1\n                    else:\n                        length -= 1\n                else:\n                    if s[q[_] - 2] == s[q[_] - 1]:\n                        length += 1\n                    else:\n                        length -= 1\n                    if s[q[_] - 1] == s[q[_]]:\n                        length += 1\n                    else:\n                        length -= 1\n                print(length)\n        else:\n            print(length)\n    t -= 1"]