["import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    B = list(map(int, input().split()))\n\n    def fun(i):\n        t = False\n        for j in B:\n            if math.gcd(i + 1, j) == B[i]:\n                t = True\n                break\n        return t\n    c = 0\n    for i in range(N):\n        if B[i] == i + 1 or fun(i) == True:\n            c = c + 1\n        else:\n            print('NO')\n            break\n    if c == N:\n        print('YES')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    input()\n    print('YES' if all((i % j == 0 for (i, j) in enumerate(map(int, input().split()), 1))) else 'NO')", "for _ in range(int(input())):\n    input()\n    print('YES' if all((i % j == 0 for (i, j) in enumerate(map(int, input().split()), 1))) else 'NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    input()\n    f = 1\n    for (i, j) in enumerate(map(int, input().split()), 1):\n        if i % j != 0:\n            f = 0\n            break\n    print('YES' if f else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    f = True\n    for i in range(n):\n        if (i + 1) % li[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] == 0:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    for i in range(n):\n        if (i + 1) % a[i] != 0:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    for i in range(n):\n        if (i + 1) % a[i] != 0:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 'YES'\n    for (i, val) in enumerate(l):\n        if (i + 1) % val != 0:\n            ans = 'NO'\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    valid = True\n    for i in range(n):\n        if (i + 1) % b[i] != 0:\n            valid = False\n            break\n    print('YES' if valid else 'NO')", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'YES'\n    for j in range(length):\n        if (j + 1) % arr[j] != 0:\n            ans = 'NO'\n            break\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'YES'\n    for j in range(length):\n        if arr[j] <= length and (j + 1) % arr[j] != 0:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    c = 0\n    for j in range(len(l)):\n        if (j + 1) % l[j] == 0:\n            c = c + 1\n    if c == len(l):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    for (i, s) in enumerate(input().split(), start=1):\n        if i % int(s):\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    input()\n    for (i, s) in enumerate(input().split(), start=1):\n        if i % int(s):\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))[:n]\n    li = [*range(1, n + 1)]\n    for i in range(n):\n        if li[i] % B[i] != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "import sys\nimport math\nimport bisect\nimport numpy as np\nfrom sys import stdin, stdout\nfrom itertools import accumulate, chain, combinations, groupby, permutations, product\nfrom collections import deque, Counter\nfrom bisect import bisect_left, bisect_right\nfrom math import gcd, sqrt, sin, cos, tan, degrees, radians\nfrom fractions import Fraction\nfrom decimal import Decimal\nimport sys\nMOD = 10 ** 9 + 7\nINF = 10 ** 20\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\n\ndef solve():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(range(1, n + 1))\n    k = 0\n    for i in range(n):\n        if a[i] % b[i] != 0:\n            k = 1\n            break\n    if k == 1:\n        print('NO')\n    else:\n        print('YES')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))[:n]\n    li = [*range(1, n + 1)]\n    for i in range(n):\n        if li[i] % B[i] != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "def gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\nn = int(input())\nfor k in range(n):\n    an = int(input())\n    nums = [l for l in range(1, an + 1)]\n    conv = list(map(int, input().split()))\n    fin = 0\n    for i in range(0, an):\n        if nums[i] == conv[i]:\n            fin = fin + 1\n            continue\n        else:\n            for m in range(0, an):\n                gc = gcd(nums[i], nums[m])\n                if gc == conv[i]:\n                    fin = fin + 1\n                    break\n    if fin == an:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))[:n]\n    li = [*range(1, n + 1)]\n    for i in range(n):\n        if li[i] % B[i] != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    flag = False\n    for i in range(n):\n        if (i + 1) % arr[i] != 0:\n            flag = True\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    flag = False\n    for i in range(n):\n        if (i + 1) % arr[i] != 0:\n            flag = True\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 1\n    for i in range(n):\n        if a[i] != i + 1:\n            if (i + 1) % a[i] != 0:\n                f = 0\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 1\n    for i in range(n):\n        if a[i] != i + 1:\n            if (i + 1) % a[i] != 0:\n                f = 0\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    B_arr = list(map(int, input().split()))\n    A_arr = []\n    for x in range(1, N + 1):\n        A_arr.append(x)\n    count = 0\n    for x in range(N):\n        if A_arr[x] % B_arr[x] == 0:\n            count += 1\n    if count == len(B_arr):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    B_arr = list(map(int, input().split()))\n    A_arr = []\n    for x in range(1, N + 1):\n        A_arr.append(x)\n    count = 0\n    for x in range(N):\n        if A_arr[x] % B_arr[x] == 0:\n            count += 1\n    if count == len(B_arr):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    f = True\n    for i in range(n):\n        if (i + 1) % li[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    f = True\n    for i in range(n):\n        if (i + 1) % li[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "MOD = 1000000007\nfact = [1] * (10 ** 6 + 1)\n\ndef pre_computation():\n    for i in range(2, 10 ** 6 + 1):\n        fact[i] = fact[i - 1] * i % MOD\n\ndef mod_inv(a):\n    return pow(a, MOD - 2, MOD)\n\ndef nCr(n, r):\n    return fact[n] * mod_inv(fact[r] * fact[n - r] % MOD)\n\ndef check(sm, a, b):\n    while sm:\n        if sm % 10 == a or sm % 10 == b:\n            sm //= 10\n        else:\n            return False\n    return True\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        ok = True\n        for i in range(n):\n            if (i + 1) % l[i] != 0:\n                ok = False\n        if ok:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport bisect\nfrom bisect import bisect_left as lb\nfrom bisect import bisect_right as rb\nfrom queue import PriorityQueue\nfrom queue import Queue\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nfrom math import log\nfrom math import gcd\nfrom math import atan2, acos\nfrom random import randint\nimport random\nsa = lambda : input_()\nsb = lambda : int(input_())\nsc = lambda : input_().split()\nsd = lambda : list(map(int, input_().split()))\nsflo = lambda : list(map(float, input_().split()))\nse = lambda : float(input_())\nsf = lambda : list(input_())\nflsh = lambda : sys.stdout.flush()\nmod = 10 ** 9 + 7\nmod1 = 998244353\ngp = []\ncost = []\ndp = []\nmx = []\nans1 = []\nans2 = []\nspecial = []\nspecnode = []\na = 0\nkthpar = []\n\ndef dfs2(root, par):\n    if par != -1:\n        dp[root] = dp[par] + 1\n    for i in range(1, 20):\n        if kthpar[root][i - 1] != -1:\n            kthpar[root][i] = kthpar[kthpar[root][i - 1]][i - 1]\n    for child in gp[root]:\n        if child == par:\n            continue\n        kthpar[child][0] = root\n        dfs(child, root)\nans = 0\na = []\n(n, k) = (0, 0)\nb = []\nvis = []\ntot = 0\ntime = []\ntime1 = []\nadj = []\nmx = -1\neps = 1e-07\ngp = []\nans = []\n\ndef update_it(bit, i, val):\n    n = len(bit)\n    while i < n:\n        bit[i] += val\n        i += i & -i\n\ndef get_ans(bit, i):\n    n = len(bit)\n    tot = 0\n    while i > 0:\n        tot += bit[i]\n        i -= i & -i\n    return tot\n\ndef flip(a, l, r):\n    for i in range(l, r):\n        a[i] = '0' if a[i] == '1' else '1'\n    return\n\ndef hnbhai(tc):\n    n = sb()\n    a = sd()\n    for i in range(n):\n        if (i + 1) % a[i] != 0:\n            print('NO')\n            return\n    print('YES')\n    return\nfor _ in range(sb()):\n    hnbhai(_ + 1)", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if (i + 1) % l[i] != 0:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    b = L()\n    ans = 'YES'\n    for i in range(n):\n        if b[i] != i + 1 and (i + 1) % b[i]:\n            ans = 'NO'\n            break\n    print(ans)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    b = L()\n    ans = 'YES'\n    for i in range(n):\n        if b[i] != i + 1 and (i + 1) % b[i]:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = [i + 1 for i in range(n)]\n    for i in range(len(l)):\n        if k[i] % l[i] != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = True\n    for i in range(1, n + 1):\n        if i % l[i - 1] != 0:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    l = list(map(int, input().split()))\n    for j in range(n):\n        if (j + 1) % l[j] == 0:\n            pass\n        else:\n            c = 1\n            break\n    print('NO' if c == 1 else 'YES')", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if l[i] != i + 1:\n            if gcd(l[i], i + 1) != l[i]:\n                flag = 1\n                break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    p = int(input())\n    flag = 0\n    ar = list(map(int, input().rstrip().split()))\n    for i in range(0, p):\n        if (i + 1) % ar[i] == 0:\n            pass\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    p = int(input())\n    flag = 0\n    ar = list(map(int, input().rstrip().split()))\n    for i in range(0, p):\n        if (i + 1) % ar[i] == 0:\n            pass\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    flag = True\n    for i in range(n):\n        if (i + 1) % b[i] != 0:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    b = [int(j) for j in input().split()]\n    for j in range(len(b)):\n        if b[j] > j + 1 or (j + 1) % b[j] != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    li = [0] + list(map(int, input().split()))\n    ans = True\n    for i in range(1, n + 1):\n        if li[i] != i:\n            if li[i] > i:\n                ans = False\n                break\n            elif i % li[i] != 0:\n                ans = False\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    li = [0] + list(map(int, input().split()))\n    ans = True\n    for i in range(1, n + 1):\n        if li[i] != i:\n            if li[i] > i:\n                ans = False\n                break\n            elif i % li[i] != 0:\n                ans = False\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for i in range(int(input())):\n        flag = 0\n        n = int(input())\n        lst = list(map(int, input().split()))\n        lsta = [int(i) for i in range(1, n + 1)]\n        for i in range(len(lst)):\n            if lst[i] != lsta[i] and lsta[i] % lst[i] != 0:\n                print('NO')\n                flag = 1\n                break\n        if flag == 0:\n            print('YES')\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l1 = []\n    for i in range(1, n + 1):\n        l1.append(i)\n    l2 = list(map(int, input().split()))\n    flag = True\n    for i in range(n):\n        if l1[i] != l2[i]:\n            if l1[i] % l2[i] == 0:\n                pass\n            else:\n                flag = False\n                break\n    print('YES' if flag else 'NO')", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    chk = 1\n    for i in range(n):\n        if (i + 1) % lis[i] != 0:\n            chk = 0\n            break\n    if chk == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    flag = 1\n    for i in range(1, n + 1):\n        if i % b[i - 1] != 0:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    chk = 1\n    for i in range(n):\n        if (i + 1) % lis[i] != 0:\n            chk = 0\n            break\n    if chk == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    flag = 1\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if l[i] != i + 1:\n            if (i + 1) % l[i] != 0:\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if i % s[i - 1] > 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "from math import gcd\nfor _ in range(int(input())):\n    l1 = []\n    n = int(input())\n    for i in range(1, n + 1):\n        l1.append(i)\n    l = list(map(int, input().split()))\n    if l == l1:\n        print('YES')\n    else:\n        for i in range(0, n):\n            if l[i] != i + 1:\n                a = 1\n                if l[i] < i + 1:\n                    for j in l1[:i]:\n                        if gcd(j, i + 1) == l[i]:\n                            a = 0\n                            break\n                elif l[i] > i + 1:\n                    print('NO')\n                    break\n                if a == 1:\n                    print('NO')\n                    break\n        if a == 0:\n            print('YES')", "def solve(arr, n):\n    for i in range(1, n + 1):\n        if i % arr[i - 1] != 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if solve(a, n):\n        print('YES')\n    else:\n        print('NO')", "try:\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        k = []\n        flag = 0\n        for i in range(1, n + 1):\n            k.append(i)\n        for i in range(0, len(a)):\n            if a[i] != k[i]:\n                if k[i] % a[i] != 0:\n                    flag = 1\n                    break\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "for i in range(int(input())):\n    N = int(input())\n    B = list(map(int, input().split()))\n    for j in range(N):\n        if (j + 1) % B[j] > 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if i % arr[i - 1] > 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "def hcfnaive(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcfnaive(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr1 = []\n    for i in range(1, n + 1):\n        arr1.append(i)\n    for i in range(n):\n        if arr[i] != arr1[i]:\n            if hcfnaive(arr[i], arr1[i]) != arr[i]:\n                print('NO')\n                break\n    else:\n        print('YES')", "for __ in range(int(input())):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    b = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        if a[i] % b[i] != 0:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor test in range(int(input())):\n    N = int(input())\n    seq = list(map(int, input().split()))\n    flag = True\n    for i in range(N):\n        if seq[i] == i + 1:\n            continue\n        elif math.gcd(seq[i], i + 1) != seq[i]:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    for _ in range(N):\n        if (_ + 1) % l[_] != 0:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nT = int(input())\nfor i in range(0, T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = 1\n    for i in range(n):\n        if arr[i] == i + 1:\n            continue\n        elif gcd(arr[i], i + 1) != arr[i]:\n            flag = 0\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nT = int(input())\nfor i in range(0, T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = 1\n    for i in range(n):\n        if arr[i] == i + 1:\n            continue\n        elif gcd(arr[i], i + 1) != arr[i]:\n            flag = 0\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nT = int(input())\nfor i in range(0, T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = 1\n    for i in range(n):\n        if arr[i] == i + 1:\n            continue\n        elif (i + 1) % arr[i] != 0:\n            flag = 0\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nimport itertools\n\ndef solve():\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    b = list(map(int, input().split()))\n    check = True\n    for (x, y) in zip(a, b):\n        if x % y != 0:\n            check = False\n            break\n    if check:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [i for i in range(1, n + 1)]\n    c = 0\n    for i in range(n):\n        if a[i] > l[i]:\n            c = 1\n        elif l[i] % a[i] != 0:\n            c = 1\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if i % arr[i - 1] > 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    for i in range(1, n + 1):\n        if i % l[i - 1] > 0:\n            f = 0\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    B = [int(i) for i in input().split()]\n    for i in range(1, N + 1):\n        if B[i - 1] > i or i % B[i - 1] != 0:\n            ans.append('NO')\n            break\n    else:\n        ans.append('YES')\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    a = 0\n    p = 0\n    for j in range(n):\n        if d[j] != j + 1:\n            p += 1\n            if d[j] < j + 1 and (j + 1) % d[j] == 0:\n                a += 1\n    if a == p:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    f = 0\n    for i in range(a):\n        if (i + 1) % l[i] != 0:\n            f = 1\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    f = True\n    for i in range(a):\n        if (i + 1) % l[i] != 0:\n            f = False\n    if f == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if (i + 1) % arr[i] != 0:\n            c = 1\n            break\n    if c == 0:\n        print('YES')\n    else:\n        print('NO')", "p = int(input())\nfor i in range(p):\n    F = 0\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    for j in range(n):\n        if (j + 1) % list1[j] != 0:\n            if list1[j] != j + 1:\n                print('NO')\n                F = 1\n                break\n    if F == 0:\n        print('YES')", "def seq(B):\n    for (ind, val) in enumerate(B):\n        if val > ind + 1:\n            return 'NO'\n        elif (ind + 1) % val != 0:\n            return 'NO'\n    return 'YES'\nfor t in range(int(input())):\n    N = int(input())\n    B = list(map(int, input().split()))\n    print(seq(B))", "for t in range(int(input())):\n    n = int(input())\n    store = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        if store[i] != i + 1:\n            if (i + 1) % store[i] == 0:\n                z = store[i]\n                second = 0\n                for j in range(i + 1):\n                    if store[j] == z:\n                        second = 1\n                if second == 1:\n                    continue\n                else:\n                    flag = 1\n                    break\n            else:\n                flag = 1\n                break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    store = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        if store[i] != i + 1:\n            if (i + 1) % store[i] != 0:\n                flag = 1\n                break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 1\n    for i in range(n):\n        if (i + 1) % a[i] != 0:\n            c = 0\n            break\n    if c == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = [i for i in range(1, n + 1)]\n    c = 0\n    for i in range(n):\n        if a[i] % b[i] != 0:\n            print('NO')\n            c = 1\n            break\n    if c == 1:\n        continue\n    print('YES')"]