["result = []\nfor _ in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    if len(set([front, left, top])) == 1 or len(set([front, left, bottom])) == 1 or len(set([front, right, top])) == 1 or (len(set([front, right, bottom])) == 1) or (len(set([back, left, top])) == 1) or (len(set([back, left, bottom])) == 1) or (len(set([back, right, top])) == 1) or (len(set([back, right, bottom])) == 1):\n        result.append('YES')\n    else:\n        result.append('NO')\nfor _ in result:\n    print(_)", "t = int(input())\nfor ni in range(t):\n    s = input().split()\n    (f, b) = (s[0], s[1])\n    l1 = [s[2], s[3]]\n    l2 = [s[4], s[5]]\n    if f in l1 and f in l2:\n        print('YES')\n    elif b in l1 and b in l2:\n        print('YES')\n    else:\n        print('NO')", "result = []\nfor _ in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    if len(set([front, left, top])) == 1 or len(set([front, left, bottom])) == 1 or len(set([front, right, top])) == 1 or (len(set([front, right, bottom])) == 1) or (len(set([back, left, top])) == 1) or (len(set([back, left, bottom])) == 1) or (len(set([back, right, top])) == 1) or (len(set([back, right, bottom])) == 1):\n        result.append('YES')\n    else:\n        result.append('NO')\nfor _ in result:\n    print(_)", "result = []\nfor _ in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    if len(set([front, left, top])) == 1 or len(set([front, left, bottom])) == 1 or len(set([front, right, top])) == 1 or (len(set([front, right, bottom])) == 1) or (len(set([back, left, top])) == 1) or (len(set([back, left, bottom])) == 1) or (len(set([back, right, top])) == 1) or (len(set([back, right, bottom])) == 1):\n        result.append('YES')\n    else:\n        result.append('NO')\nfor _ in result:\n    print(_)", "listk = []\nfor _ in range(int(input())):\n    cc = input().split()\n    cc1 = set(cc[0:2])\n    cc2 = set(cc[2:4])\n    cc3 = set(cc[4:])\n    if cc1.intersection(cc2.intersection(cc3)) != set():\n        listk.append('YES')\n    else:\n        listk.append('NO')\nfor ele in listk:\n    print(ele)", "listk = []\nfor _ in range(int(input())):\n    cc = input().split()\n    cc1 = set(cc[0:2])\n    cc2 = set(cc[2:4])\n    cc3 = set(cc[4:])\n    if cc1.intersection(cc2.intersection(cc3)) != set():\n        listk.append('YES')\n    else:\n        listk.append('NO')\nfor ele in listk:\n    print(ele)", "listk = []\nfor _ in range(int(input())):\n    cc = input().split()\n    cc1 = set(cc[0:2])\n    cc2 = set(cc[2:4])\n    cc3 = set(cc[4:])\n    if cc1.intersection(cc2.intersection(cc3)) != set():\n        listk.append('YES')\n    else:\n        listk.append('NO')\nfor ele in listk:\n    print(ele)", "for _ in range(int(input())):\n    (f, ba, l, r, t, bo) = input().split()\n    if (f == l or f == r) and (f == t or f == bo) or ((ba == l or ba == r) and (ba == t or ba == bo)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor ni in range(t):\n    s = input().split()\n    (f, b) = (s[0], s[1])\n    l1 = [s[2], s[3]]\n    l2 = [s[4], s[5]]\n    if f in l1 and f in l2:\n        print('YES')\n    elif b in l1 and b in l2:\n        print('YES')\n    else:\n        print('NO')", "color_list = ['black', 'blue', 'red', 'green', 'yellow', 'orange']\nfor _ in range(int(input())):\n    ans = 'NO'\n    painted = input().split()\n    (fb, lr, tb) = (painted[:2], painted[2:4], painted[4:6])\n    for i in color_list:\n        if i in fb and i in lr and (i in tb):\n            ans = 'YES'\n            break\n    print(ans)", "for _ in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    if front == left == top or front == left == bottom or front == right == top or (front == right == bottom) or (back == left == top) or (back == left == bottom) or (back == right == top) or (back == right == bottom):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    if front == left == top or front == left == bottom or front == right == top or (front == right == bottom) or (back == left == top) or (back == left == bottom) or (back == right == top) or (back == right == bottom):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    l = list(map(str, input().split()))\n    if l[0] == l[2] and l[2] == l[5] or (l[0] == l[2] and l[2] == l[4]) or (l[0] == l[3] and l[3] == l[5]) or (l[0] == l[3] and l[3] == l[4]) or (l[1] == l[2] and l[2] == l[5]) or (l[1] == l[2] and l[2] == l[4]) or (l[1] == l[3] and l[3] == l[5]) or (l[1] == l[3] and l[3] == l[4]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (f, b, l, r, t, bt) = [str(i) for i in input().split()]\n    if (f == l or f == r) and (f == t or f == bt) or ((b == l or b == r) and (b == t or b == bt)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor t in range(t):\n    (f, bk, l, r, t, bt) = [str(i) for i in input().split()]\n    if (f == l or f == r) and (f == t or f == bt) or ((bk == l or bk == r) and (bk == t or bk == bt)):\n        print('YES')\n    else:\n        print('NO')", "for tc in range(int(input())):\n    (front, back, left, right, top, bottom) = input().split()\n    possible = {'black', 'blue', 'red', 'green', 'yellow', 'orange'}\n    ans = 'NO'\n    (f1, f2, b1, b2) = (False, False, False, False)\n    if front in (left, right):\n        f1 = True\n    if front in (top, bottom):\n        f2 = True\n    if back in (left, right):\n        b1 = True\n    if back in (top, bottom):\n        b2 = True\n    if f1 and f2:\n        ans = 'YES'\n    if b1 and b2:\n        ans = 'YES'\n    print(ans)", "import collections\nfor _ in range(int(input())):\n    (f, ba, l, r, t, b) = [x for x in input().split()]\n    if l == f == b or l == f == t or l == ba == b or (l == ba == t) or (r == f == b) or (r == f == t) or (r == ba == b) or (r == ba == t):\n        print('YES')\n    else:\n        print('NO')", "import collections\nfor _ in range(int(input())):\n    (f, ba, l, r, t, b) = [x for x in input().split()]\n    if l == f == b or l == f == t or l == ba == b or (l == ba == t) or (r == f == b) or (r == f == t) or (r == ba == b) or (r == ba == t):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor k in range(t):\n    (f, b, l, r, t, d) = map(str, input().split())\n    if t == f and t == l or (t == f and t == r):\n        print('YES')\n    elif f == d and d == l or (f == d and d == r):\n        print('YES')\n    elif b == d and d == l or (b == d and d == r):\n        print('YES')\n    elif b == t and t == r or (b == t and t == l):\n        print('YES')\n    else:\n        print('NO')", "a = int(input(''))\nfor i in range(a):\n    (F, Ba, L, R, T, B) = map(str, input('').split())\n    if F == L == B or F == R == B or F == T == L or (F == T == R) or (Ba == L == B) or (Ba == R == B) or (Ba == T == L) or (Ba == T == R):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor k in range(t):\n    (f, b, l, r, t, d) = map(str, input().split())\n    if t == f and t == l or (t == f and t == r):\n        print('YES')\n    elif f == d and d == l or (f == d and d == r):\n        print('YES')\n    elif b == d and d == l or (b == d and d == r):\n        print('YES')\n    elif b == t and t == r or (b == t and t == l):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor k in range(t):\n    (f, b, l, r, t, d) = map(str, input().split())\n    if t == f and t == l or (t == f and t == r):\n        print('YES')\n    elif f == d and d == l or (f == d and d == r):\n        print('YES')\n    elif b == d and d == l or (b == d and d == r):\n        print('YES')\n    elif b == t and t == r or (b == t and t == l):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(0, T):\n    (f, b, l, r, t, bo) = map(str, input().split())\n    if (f == l or f == r) and (f == t or f == bo):\n        print('YES')\n    elif (b == l or b == r) and (b == t or b == bo):\n        print('YES')\n    else:\n        print('NO')", "base = ((0, 2), (0, 3), (1, 2), (1, 3))\nfor _ in range(int(input())):\n    c = list(input().split())\n    ans = 'NO'\n    for b in base:\n        if c[b[0]] == c[b[1]]:\n            if c[b[0]] == c[4] or c[b[0]] == c[5]:\n                ans = 'YES'\n                break\n    print(ans)", "for _ in range(int(input())):\n    (f, ba, l, r, t, bo) = input().split()\n    if (f == l or f == r) and (f == t or f == bo) or ((ba == l or ba == r) and (ba == t or ba == bo)):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (f, ba, l, r, t, bo) = input().split()\n    if (f == l or f == r) and (f == t or f == bo) or ((ba == l or ba == r) and (ba == t or ba == bo)):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (f, ba, l, r, t, bo) = input().split()\n    if (f == l or f == r) and (f == t or f == bo) or ((ba == l or ba == r) and (ba == t or ba == bo)):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (f, ba, l, r, t, bo) = input().split()\n    if (f == l or f == r) and (f == t or f == bo) or ((ba == l or ba == r) and (ba == t or ba == bo)):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (front, back, left, right, top, bottom) = map(str, input().split())\n    ans = 'NO'\n    if (front == left or front == right) and (front == top or front == bottom):\n        ans = 'YES'\n    elif (back == left or back == right) and (back == top or back == bottom):\n        ans = 'YES'\n    print(ans)", "for t in range(int(input())):\n    c = list(map(str, input().split()))\n    if c[0] == c[2] == c[5] or c[0] == c[5] == c[3] or c[5] == c[3] == c[1] or (c[5] == c[1] == c[2]) or (c[0] == c[2] == c[4]) or (c[0] == c[4] == c[3]) or (c[4] == c[3] == c[1]) or (c[4] == c[1] == c[2]):\n        print('YES')\n    else:\n        print('NO')", "t = input()\nfor c in range(0, int(t)):\n    arr = list(input().split())\n    ans = 'NO'\n    if (arr[0] == arr[2] or arr[0] == arr[3]) and (arr[0] == arr[4] or arr[0] == arr[5]):\n        ans = 'YES'\n    elif (arr[1] == arr[2] or arr[1] == arr[3]) and (arr[1] == arr[4] or arr[1] == arr[5]):\n        ans = 'YES'\n    print(ans)", "t = input()\nfor c in range(0, int(t)):\n    arr = list(input().split())\n    ans = 'NO'\n    if (arr[0] == arr[2] or arr[0] == arr[3]) and (arr[0] == arr[4] or arr[0] == arr[5]):\n        ans = 'YES'\n    elif (arr[1] == arr[2] or arr[1] == arr[3]) and (arr[1] == arr[4] or arr[1] == arr[5]):\n        ans = 'YES'\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    arr = list(input().split())\n    ans = 'NO'\n    if (arr[0] == arr[2] or arr[0] == arr[3]) and (arr[0] == arr[4] or arr[0] == arr[5]):\n        ans = 'YES'\n    elif (arr[1] == arr[2] or arr[1] == arr[3]) and (arr[1] == arr[4] or arr[1] == arr[5]):\n        ans = 'YES'\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    arr = list(input().split())\n    ans = 'NO'\n    if (arr[0] == arr[2] or arr[0] == arr[3]) and (arr[0] == arr[4] or arr[0] == arr[5]):\n        ans = 'YES'\n    elif (arr[1] == arr[2] or arr[1] == arr[3]) and (arr[1] == arr[4] or arr[1] == arr[5]):\n        ans = 'YES'\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    arr = list(input().split())\n    ans = 'NO'\n    if (arr[0] == arr[2] or arr[0] == arr[3]) and (arr[0] == arr[4] or arr[0] == arr[5]):\n        ans = 'YES'\n    elif (arr[1] == arr[2] or arr[1] == arr[3]) and (arr[1] == arr[4] or arr[1] == arr[5]):\n        ans = 'YES'\n    print(ans)", "for _ in range(int(input())):\n    l = list(map(str, input().split()))\n    (a, b) = (l[0], l[1])\n    (i, s1, s2) = (2, 0, 0)\n    while i < 6:\n        if a in l[i:i + 2]:\n            s1 += 1\n        if b in l[i:i + 2]:\n            s2 += 1\n        i += 2\n    if s1 > 1 or s2 > 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = list(map(str, input().split()))\n    front = s[0]\n    back = s[1]\n    left = s[2]\n    right = s[3]\n    top = s[4]\n    down = s[5]\n    if (front == left or front == right) and (front == top or front == down):\n        print('YES')\n    elif (back == left or back == right) and (back == top or back == down):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "ujju = int(input())\nfor sai in range(ujju):\n    u1 = list(map(str, input().split()))\n    h = max(set(u1), key=u1.count)\n    g = u1.count(h)\n    if (u1[0] == h or u1[1] == h) and (u1[2] == h or u1[3] == h) and (u1[4] == h or u1[5] == h) and (g >= 3):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    l = input().split()\n    c = 0\n    c1 = 0\n    if l[0] in l[2:4]:\n        c1 += 1\n    if l[0] in l[4:]:\n        c1 += 1\n    if l[1] in l[2:4]:\n        c += 1\n    if l[1] in l[4:]:\n        c += 1\n    print('YES' if c == 2 or c1 == 2 else 'NO')", "t = int(input())\nfor i in range(t):\n    l = list(map(str, input().split()))\n    c = 0\n    c1 = 0\n    if l[0] in l[2:4]:\n        c1 += 1\n    if l[0] in l[4:]:\n        c1 += 1\n    if l[1] in l[2:4]:\n        c += 1\n    if l[1] in l[4:]:\n        c += 1\n    print('YES' if c == 2 or c1 == 2 else 'NO')", "t = int(input())\nfor i in range(t):\n    l = list(map(str, input().split()))\n    (c, count) = (0, 0)\n    if l[0] in l[2:4]:\n        count += 1\n    if l[0] in l[4:]:\n        count += 1\n    if l[1] in l[2:4]:\n        c += 1\n    if l[1] in l[4:]:\n        c += 1\n    if c == 2 or count == 2:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    l = list(map(str, input().split()))\n    (c, count) = (0, 0)\n    if l[0] in l[2:4]:\n        count += 1\n    if l[0] in l[4:]:\n        count += 1\n    if l[1] in l[2:4]:\n        c += 1\n    if l[1] in l[4:]:\n        c += 1\n    if c == 2 or count == 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    l = list(map(str, input().split()))\n    (c, count) = (0, 0)\n    if l[0] in l[2:4]:\n        count += 1\n    if l[0] in l[4:]:\n        count += 1\n    if l[1] in l[2:4]:\n        c += 1\n    if l[1] in l[4:]:\n        c += 1\n    if c == 2 or count == 2:\n        print('YES')\n    else:\n        print('NO')", "def check(s1, s2, s3):\n    if s1 == s2 and s2 == s3 and (s3 == s1):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (f, b, l, r, t, bo) = input().split()\n    if check(f, t, l) or check(f, t, r) or check(f, bo, l) or check(f, bo, r) or check(b, t, l) or check(b, t, r) or check(b, bo, l) or check(b, bo, r):\n        print('YES')\n    else:\n        print('NO')", "def check(s1, s2, s3):\n    if s1 == s2 and s2 == s3 and (s3 == s1):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (f, b, l, r, t, bo) = input().split()\n    if check(f, t, l) or check(f, t, r) or check(f, bo, l) or check(f, bo, r) or check(b, t, l) or check(b, t, r) or check(b, bo, l) or check(b, bo, r):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    l = list(map(str, input().split()))\n    a = [(1, 3, 5), (1, 3, 6), (1, 4, 5), (1, 4, 6), (2, 3, 5), (2, 3, 6), (2, 4, 5), (2, 4, 6)]\n    c = 0\n    for i in a:\n        if len(set([l[i[0] - 1], l[i[1] - 1], l[i[2] - 1]])) == 1:\n            c = 1\n            break\n    if c == 1:\n        print('YES')\n    else:\n        print('NO')", "from collections import *\nfor u in range(int(input())):\n    l = input().split()\n    C = l\n    if C[0] == C[2] == C[4] or C[0] == C[2] == C[5] or C[0] == C[3] == C[4] or (C[0] == C[3] == C[5]) or (C[1] == C[2] == C[4]) or (C[1] == C[2] == C[5]) or (C[1] == C[3] == C[4]) or (C[1] == C[3] == C[5]):\n        print('YES')\n    else:\n        print('NO')", "from collections import *\nfor u in range(int(input())):\n    l = input().split()\n    C = l\n    if C[0] == C[2] == C[4] or C[0] == C[2] == C[5] or C[0] == C[3] == C[4] or (C[0] == C[3] == C[5]) or (C[1] == C[2] == C[4]) or (C[1] == C[2] == C[5]) or (C[1] == C[3] == C[4]) or (C[1] == C[3] == C[5]):\n        print('YES')\n    else:\n        print('NO')", "from collections import *\nfor u in range(int(input())):\n    l = input().split()\n    C = l\n    if C[0] == C[2] == C[4] or C[0] == C[2] == C[5] or C[0] == C[3] == C[4] or (C[0] == C[3] == C[5]) or (C[1] == C[2] == C[4]) or (C[1] == C[2] == C[5]) or (C[1] == C[3] == C[4]) or (C[1] == C[3] == C[5]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (f, b, l, r, t, d) = input().split()\n    ans = False\n    if (f == l or f == r) and (f == t or f == d):\n        ans = True\n    if (b == l or b == r) and (b == t or b == d):\n        ans = True\n    if (t == l or t == r) and (t == f or t == b):\n        ans = True\n    if (d == l or d == r) and (d == f or d == b):\n        ans = True\n    if (l == f or l == b) and (l == t or l == d):\n        ans = True\n    if (r == f or r == b) and (r == t or r == d):\n        ans = True\n    print('YES' if ans else 'NO')", "t = int(input())\nfor j in range(t):\n    (f, ba, l, r, t, bo) = str(input()).split(' ')\n    if l == f and f == bo:\n        print('YES')\n    elif l == f and l == t:\n        print('YES')\n    elif l == t and t == ba:\n        print('YES')\n    elif l == ba and ba == bo:\n        print('YES')\n    elif f == t and t == r:\n        print('YES')\n    elif t == ba and ba == r:\n        print('YES')\n    elif bo == r and r == f:\n        print('YES')\n    elif r == ba and ba == bo:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    l = list(map(str, input().strip().split()))\n    k = max(set(l), key=l.count)\n    p = l.count(k)\n    if (l[0] == k or l[1] == k) and (l[2] == k or l[3] == k) and (l[4] == k or l[5] == k) and (p >= 3):\n        print('YES')\n    else:\n        print('NO')", "indices = [[0, 2, 4], [0, 3, 4], [0, 2, 5], [0, 3, 5], [1, 2, 4], [1, 3, 4], [1, 2, 5], [1, 3, 5]]\nfor _ in range(int(input())):\n    color = list(map(str, input().split()))\n    ans = 'NO'\n    for i in range(8):\n        if color[indices[i][0]] == color[indices[i][1]] == color[indices[i][2]]:\n            ans = 'YES'\n            break\n    print(ans)", "t = int(input())\nfor z in range(t):\n    d = list(input().split())\n    (front, back, left, right, top, bottom) = (d[0], d[1], d[2], d[3], d[4], d[5])\n    if (front == left or front == right) and (front == top or front == bottom):\n        print('YES')\n    elif (back == left or back == right) and (back == top or back == bottom):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input().split()\n    d = {}\n    for i in range(6):\n        try:\n            d[s[i]].append(i)\n        except:\n            d[s[i]] = [i]\n    flag = False\n    for i in d.keys():\n        if len(d[i]) >= 3:\n            if 0 in d[i] or 1 in d[i]:\n                if (3 in d[i] or 2 in d[i]) and (4 in d[i] or 5 in d[i]):\n                    flag = True\n                    break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input().split(' ')\n    flag = 0\n    if s[0] == s[2]:\n        if s[0] == s[4] or s[0] == s[5]:\n            flag = 1\n    if s[0] == s[3]:\n        if s[0] == s[4] or s[0] == s[5]:\n            flag = 1\n    if s[1] == s[2]:\n        if s[1] == s[4] or s[1] == s[5]:\n            flag = 1\n    if s[1] == s[3]:\n        if s[1] == s[4] or s[1] == s[5]:\n            flag = 1\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    List = [str(x) for x in input().split()]\n    if List[0] == List[3] == List[4] or List[0] == List[3] == List[5] or List[0] == List[2] == List[4] or (List[0] == List[2] == List[5]) or (List[1] == List[3] == List[4]) or (List[1] == List[3] == List[5]) or (List[1] == List[2] == List[4]) or (List[1] == List[2] == List[5]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = input().split()\n    y = 0\n    if a[4] == a[0] == a[3]:\n        y = 1\n    elif a[4] == a[0] == a[2]:\n        y = 1\n    elif a[4] == a[1] == a[3]:\n        y = 1\n    elif a[4] == a[1] == a[2]:\n        y = 1\n    elif a[5] == a[0] == a[3]:\n        y = 1\n    elif a[5] == a[0] == a[2]:\n        y = 1\n    elif a[5] == a[1] == a[3]:\n        y = 1\n    elif a[5] == a[1] == a[2]:\n        y = 1\n    if y == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nwhile t >= 1:\n    a = input()\n    a = a.split()\n    y = 0\n    if a[4] == a[0] == a[3]:\n        y = 1\n    elif a[4] == a[0] == a[2]:\n        y = 1\n    elif a[4] == a[1] == a[3]:\n        y = 1\n    elif a[4] == a[1] == a[2]:\n        y = 1\n    elif a[5] == a[0] == a[3]:\n        y = 1\n    elif a[5] == a[0] == a[2]:\n        y = 1\n    elif a[5] == a[1] == a[3]:\n        y = 1\n    elif a[5] == a[1] == a[2]:\n        y = 1\n    if y == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "import math\nt = int(input())\nwhile t >= 1:\n    a = input()\n    a = a.split()\n    y = 0\n    if a[4] == a[0] == a[3]:\n        y = 1\n    elif a[4] == a[0] == a[2]:\n        y = 1\n    elif a[4] == a[1] == a[3]:\n        y = 1\n    elif a[4] == a[1] == a[2]:\n        y = 1\n    elif a[5] == a[0] == a[3]:\n        y = 1\n    elif a[5] == a[0] == a[2]:\n        y = 1\n    elif a[5] == a[1] == a[3]:\n        y = 1\n    elif a[5] == a[1] == a[2]:\n        y = 1\n    if y == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "import math\nt = int(input())\nwhile t >= 1:\n    a = input()\n    a = a.split()\n    y = 0\n    if a[4] == a[0] == a[3]:\n        y = 1\n    elif a[4] == a[0] == a[2]:\n        y = 1\n    elif a[4] == a[1] == a[3]:\n        y = 1\n    elif a[4] == a[1] == a[2]:\n        y = 1\n    elif a[5] == a[0] == a[3]:\n        y = 1\n    elif a[5] == a[0] == a[2]:\n        y = 1\n    elif a[5] == a[1] == a[3]:\n        y = 1\n    elif a[5] == a[1] == a[2]:\n        y = 1\n    if y == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "for _ in range(int(input())):\n    arr = list(map(str, input().split()))\n    (front, back, left, right, top, bottom) = arr\n    if front == right == bottom or front == right == top or front == left == bottom or (front == left == top):\n        print('YES')\n    elif back == left == top or front == left == top or top == front == right or (right == back == top):\n        print('YES')\n    elif right == back == top or right == front == top or bottom == front == right or (right == back == bottom):\n        print('YES')\n    elif bottom == front == right or bottom == left == front or bottom == back == left or (bottom == back == right):\n        print('YES')\n    elif left == back == top or bottom == left == back or bottom == front == left or (left == front == top):\n        print('YES')\n    elif back == top == right or back == left == top or bottom == back == left or (bottom == back == right):\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input().split()\n    (d, loc, p) = ({}, [], 0)\n    for x in range(6):\n        if s[x] in d:\n            d[s[x]].append(x)\n        else:\n            d[s[x]] = [x]\n    for i in d:\n        if len(d[i]) >= 3:\n            loc = d[i]\n            break\n    for l in range(0, 5, 2):\n        if l in loc or l + 1 in loc:\n            p += 1\n    if p == 3:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    C = input().split()\n    if C[0] == C[2] == C[4] or C[0] == C[2] == C[5] or C[0] == C[3] == C[4] or (C[0] == C[3] == C[5]) or (C[1] == C[2] == C[4]) or (C[1] == C[2] == C[5]) or (C[1] == C[3] == C[4]) or (C[1] == C[3] == C[5]):\n        print('YES')\n    else:\n        print('NO')", "pairwise = [[0, 2, 4], [0, 3, 4], [1, 3, 4], [1, 2, 4], [0, 2, 5], [0, 3, 5], [1, 3, 5], [1, 2, 5]]\nfor _ in range(int(input())):\n    c = input().split()\n    ans = 'NO'\n    for i in pairwise:\n        (x, y, z) = i\n        if c[x] == c[y] == c[z]:\n            ans = 'YES'\n            break\n    print(ans)", "import math\nimport sys\n\ndef _int():\n    return int(sys.stdin.readline())\n\ndef _ints():\n    return map(int, sys.stdin.readline().split())\n\ndef _intarr():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef _str():\n    return sys.stdin.readline()\n\ndef _strarr():\n    return sys.stdin.readline().split()\n\ndef adj(a, b, c):\n    if b != opp[a] and b != opp[c] and (a != opp[c]):\n        return True\n    return False\nt = _int()\nopp = [1, 0, 3, 2, 5, 4]\nfor _ in range(t):\n    c = _strarr()\n    cd = dict()\n    for i in range(len(opp)):\n        ind = cd.get(c[i], [])\n        ind.append(i)\n        cd[c[i]] = ind\n    found = False\n    for k in cd.keys():\n        ind = cd.get(k, [])\n        if len(ind) == 3:\n            if adj(ind[0], ind[1], ind[2]):\n                found = True\n        elif len(ind) == 4:\n            if adj(ind[0], ind[1], ind[2]):\n                found = True\n            elif adj(ind[0], ind[1], ind[3]):\n                found = True\n            elif adj(ind[0], ind[2], ind[3]):\n                found = True\n            elif adj(ind[1], ind[2], ind[3]):\n                found = True\n        elif len(ind) >= 5:\n            found = True\n        if found:\n            break\n    print('YES' if found else 'NO')", "t = int(input())\nfor i in range(t):\n    s = list(map(str, input().split()))\n    if s[0] == s[3] == s[-1] or s[0] == s[3] == s[-2] or s[0] == s[2] == s[-1] or (s[0] == s[2] == s[-2]):\n        print('YES')\n    elif s[1] == s[3] == s[-1] or s[1] == s[3] == s[-2] or s[1] == s[2] == s[-1] or (s[1] == s[2] == s[-2]):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    l = list(map(str, input().split()))\n    L = [[0, 2, 4], [0, 3, 4], [0, 2, 5], [0, 3, 5], [1, 2, 4], [1, 3, 4], [1, 2, 5], [1, 3, 5]]\n    f = 1\n    for i in range(8):\n        l1 = L[i]\n        if l[l1[0]] == l[l1[1]] and l[l1[0]] == l[l1[2]]:\n            print('YES')\n            f = 0\n            break\n    if f == 1:\n        print('NO')", "class Cube(object):\n\n    def __init__(self, front, back, left, right, top, bottom):\n        self.front = front\n        self.back = back\n        self.left = left\n        self.right = right\n        self.top = top\n        self.bottom = bottom\nT = int(input())\nfor _ in range(T):\n    (front, back, left, right, top, bottom) = input().split()\n    cube = Cube(front, back, left, right, top, bottom)\n    del front, back, left, right, top, bottom\n    cubePairs = [{cube.front, cube.back}, {cube.left, cube.right}, {cube.top, cube.bottom}]\n    if len(cubePairs[0] & cubePairs[1] & cubePairs[2]) > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    h = input().split()\n    front = h[0]\n    back = h[1]\n    left = h[2]\n    right = h[3]\n    top = h[4]\n    bottom = h[5]\n    if left == top and left == front:\n        print('YES')\n    elif left == top and left == back:\n        print('YES')\n    elif left == bottom and left == front:\n        print('YES')\n    elif left == bottom and left == back:\n        print('YES')\n    elif right == top and right == front:\n        print('YES')\n    elif right == top and right == back:\n        print('YES')\n    elif right == bottom and right == front:\n        print('YES')\n    elif right == bottom and right == back:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    temp = list(input().split())\n    front = temp[0]\n    back = temp[1]\n    left = temp[2]\n    right = temp[3]\n    top = temp[4]\n    bottom = temp[5]\n    if left == top and left == front:\n        print('YES')\n    elif left == top and left == back:\n        print('YES')\n    elif left == bottom and left == front:\n        print('YES')\n    elif left == bottom and left == back:\n        print('YES')\n    elif right == top and right == front:\n        print('YES')\n    elif right == top and right == back:\n        print('YES')\n    elif right == bottom and right == front:\n        print('YES')\n    elif right == bottom and right == back:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    l = list(input().split())\n    s1 = []\n    s2 = []\n    s3 = []\n    for i in range(6):\n        if i <= 1:\n            s1.append(l[i])\n        elif i <= 3:\n            s2.append(l[i])\n        else:\n            s3.append(l[i])\n    colour = ['black', 'blue', 'red', 'green', 'yellow', 'orange']\n    for i in colour:\n        if i in s1 and i in s2 and (i in s3):\n            print('YES')\n            break\n    else:\n        print('NO')", "T = int(input())\nwhile T > 0:\n    a = list(map(str, input().split()))\n    p = 0\n    for i in range(4, 6):\n        if a[i] == a[0] and a[i] == a[2]:\n            p = 1\n        elif a[i] == a[2] and a[i] == a[1]:\n            p = 1\n        elif a[i] == a[1] and a[i] == a[3]:\n            p = 1\n        elif a[i] == a[0] and a[i] == a[3]:\n            p = 1\n    if p:\n        print('YES')\n    else:\n        print('NO')\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    a = list(map(str, input().split()))\n    p = 0\n    if a[5] == a[0] and a[5] == a[2]:\n        p = 1\n    if a[5] == a[2] and a[5] == a[1]:\n        p = 1\n    if a[5] == a[1] and a[5] == a[3]:\n        p = 1\n    if a[5] == a[0] and a[5] == a[3]:\n        p = 1\n    if a[4] == a[0] and a[4] == a[2]:\n        p = 1\n    if a[4] == a[2] and a[4] == a[1]:\n        p = 1\n    if a[4] == a[1] and a[4] == a[3]:\n        p = 1\n    if a[4] == a[0] and a[4] == a[3]:\n        p = 1\n    if p:\n        print('YES')\n    else:\n        print('NO')\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    a = list(map(str, input().split()))\n    p = 0\n    if a[5] == a[0] and a[5] == a[2]:\n        p = 1\n        q = a.count(a[5])\n    if a[5] == a[2] and a[5] == a[1]:\n        p = 1\n        q = a.count(a[5])\n    if a[5] == a[1] and a[5] == a[3]:\n        p = 1\n        q = a.count(a[5])\n    if a[5] == a[0] and a[5] == a[3]:\n        p = 1\n        q = a.count(a[5])\n    if a[4] == a[0] and a[4] == a[2]:\n        p = 1\n        q = a.count(a[4])\n    if a[4] == a[2] and a[4] == a[1]:\n        p = 1\n        q = a.count(a[4])\n    if a[4] == a[1] and a[4] == a[3]:\n        p = 1\n        q = a.count(a[4])\n    if a[4] == a[0] and a[4] == a[3]:\n        p = 1\n        q = a.count(a[4])\n    if p == 1:\n        print('YES')\n    else:\n        print('NO')\n    T = T - 1", "dic = {'f': 0, 'ba': 0, 'l': 0, 'r': 0, 't': 0, 'bo': 0}\nfor _ in range(int(input())):\n    x = input().split()\n    for (i, j) in zip(dic, x):\n        dic[i] = j[:3]\n    if dic['t'] == dic['f'] == dic['r']:\n        print('YES')\n    elif dic['t'] == dic['f'] == dic['l']:\n        print('YES')\n    elif dic['t'] == dic['ba'] == dic['l']:\n        print('YES')\n    elif dic['t'] == dic['ba'] == dic['r']:\n        print('YES')\n    elif dic['bo'] == dic['f'] == dic['r']:\n        print('YES')\n    elif dic['bo'] == dic['f'] == dic['l']:\n        print('YES')\n    elif dic['bo'] == dic['ba'] == dic['l']:\n        print('YES')\n    elif dic['bo'] == dic['ba'] == dic['r']:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor t in range(T):\n    color = input().split()\n    s1 = color[:2]\n    s2 = color[2:4]\n    s3 = color[4:6]\n    bo = False\n    for i in range(2):\n        for j in range(2):\n            for k in range(2):\n                if s1[i] == s2[j] == s3[k]:\n                    bo = True\n    if bo:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nans = 'NO'\na = []\nwhile t > 0:\n    a = input().split()\n    if a[0] == a[2] and a[0] == a[4]:\n        print('YES')\n    elif a[0] == a[3] and a[0] == a[4]:\n        print('YES')\n    elif a[0] == a[2] and a[0] == a[5]:\n        print('YES')\n    elif a[0] == a[3] and a[0] == a[5]:\n        print('YES')\n    elif a[1] == a[2] and a[1] == a[4]:\n        print('YES')\n    elif a[1] == a[3] and a[1] == a[4]:\n        print('YES')\n    elif a[1] == a[2] and a[1] == a[5]:\n        print('YES')\n    elif a[1] == a[3] and a[1] == a[5]:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "list_triplets = [('front', 'left', 'top'), ('top', 'left', 'back'), ('top', 'right', 'back'), ('front', 'right', 'top'), ('front', 'left', 'bottom'), ('bottom', 'left', 'back'), ('bottom', 'right', 'back'), ('front', 'right', 'bottom')]\ninput_order = ['front', 'back', 'left', 'right', 'top', 'bottom']\nn = input()\nfor _ in range(int(n)):\n    colors = input()\n    colors = colors.split()\n    color_map = {side: color for (side, color) in zip(input_order, colors)}\n    flag = False\n    for triplet in list_triplets:\n        current_color = None\n        triplet_flag = True\n        for side in triplet:\n            if current_color is None:\n                current_color = color_map.get(side)\n            if current_color != color_map.get(side):\n                triplet_flag = False\n        if triplet_flag is True:\n            flag = True\n    if flag is True:\n        print('YES')\n    else:\n        print('NO')", "list_triplets = [('front', 'left', 'top'), ('top', 'left', 'back'), ('top', 'right', 'back'), ('front', 'right', 'top'), ('front', 'left', 'bottom'), ('bottom', 'left', 'back'), ('bottom', 'right', 'back'), ('front', 'right', 'bottom')]\ninput_order = ['front', 'back', 'left', 'right', 'top', 'bottom']\nn = input()\nfor _ in range(int(n)):\n    colors = input()\n    colors = colors.split()\n    color_map = {input_order[i]: colors[i] for i in range(len(colors))}\n    flag = False\n    for triplet in list_triplets:\n        current_color = None\n        triplet_flag = True\n        for side in triplet:\n            if current_color is None:\n                current_color = color_map.get(side)\n            if current_color != color_map.get(side):\n                triplet_flag = False\n        if triplet_flag is True:\n            flag = True\n    if flag is True:\n        print('YES')\n    else:\n        print('NO')", "l = [[0, 4, 2], [0, 4, 3], [0, 5, 2], [0, 5, 3], [1, 4, 2], [1, 4, 3], [1, 5, 2], [1, 5, 3]]\n\ndef check():\n    inp = input().split(' ')\n    for [i, j, k] in l:\n        if inp[i] == inp[j] and inp[j] == inp[k]:\n            return 'YES'\n    return 'NO'\n\ndef main():\n    t = int(input())\n    while t > 0:\n        print(check())\n        t -= 1\n    return\nmain()", "str = input()\nT = int(str)\nfor ti in range(T):\n    can = False\n    str = input()\n    S = str.split(' ')\n    s = [[S[0], S[1]], [S[2], S[3]], [S[4], S[5]]]\n    for x in (0, 1):\n        for y in (0, 1):\n            for z in (0, 1):\n                if s[0][x] == s[1][y] == s[2][z]:\n                    can = True\n    if can:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nii = 0\nwhile ii < T:\n    sides = str(input())\n    sides = sides.split()\n    dice = {}\n    corners = [[0, 4, 3], [0, 3, 5], [0, 5, 2], [0, 2, 4], [1, 4, 3], [1, 3, 5], [1, 5, 2], [1, 2, 4]]\n    flag = 0\n    i = 0\n    while i < 8:\n        trip = corners[i]\n        if sides[corners[i][0]] == sides[corners[i][1]] and sides[corners[i][0]] == sides[corners[i][2]]:\n            flag = 1\n            break\n        else:\n            i += 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')\n    ii += 1", "def buildTriples():\n    triples = [[] for _ in range(8)]\n    triples[0] = [0, 2, 4]\n    triples[1] = [1, 2, 4]\n    triples[2] = [1, 3, 4]\n    triples[3] = [0, 3, 4]\n    triples[4] = [0, 2, 5]\n    triples[5] = [1, 2, 5]\n    triples[6] = [1, 3, 5]\n    triples[7] = [0, 3, 5]\n    return triples\n\ndef solve(triples, a):\n    for t in triples:\n        if a[t[0]] == a[t[1]] == a[t[2]]:\n            return 'YES'\n    return 'NO'\nT = int(input())\ntriples = buildTriples()\nfor _ in range(T):\n    print(solve(triples, input().split()))", "def check(color):\n    for f1 in [0, 1]:\n        for f2 in [2, 3]:\n            for f3 in [4, 5]:\n                if color[f1] == color[f2] == color[f3]:\n                    return 'YES'\n    return 'NO'\nt = int(input())\nwhile t > 0:\n    colors = input().split()\n    print(check(colors))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    s = input().split()\n    a = 0\n    if s[0] == s[2] == s[4]:\n        a = 1\n    elif s[0] == s[3] == s[4]:\n        a = 1\n    elif s[0] == s[3] == s[5]:\n        a = 1\n    elif s[0] == s[2] == s[5]:\n        a = 1\n    elif s[1] == s[3] == s[4]:\n        a = 1\n    elif s[1] == s[2] == s[4]:\n        a = 1\n    elif s[1] == s[3] == s[5]:\n        a = 1\n    elif s[1] == s[2] == s[5]:\n        a = 1\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (a, b, c, d, e, f) = input().split()\n    if (a == c or a == d) and (a == e or a == f):\n        print('YES')\n    elif (b == c or b == d) and (b == e or b == f):\n        print('YES')\n    else:\n        print('NO')", "def get_answer(cube):\n    if cube[0] in cube[2:4] and cube[0] in cube[4:len(cube)]:\n        return 'YES'\n    elif cube[1] in cube[2:4] and cube[1] in cube[4:len(cube)]:\n        return 'YES'\n    return 'NO'\ntest_case = int(input())\nfor i in range(0, test_case):\n    cube = input().split(' ')\n    print(get_answer(cube))", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    (front, back, left, right, top, bottom) = s.split()\n    if front == left and front == bottom and (left == bottom) or (front == right and front == bottom and (right == bottom)) or (front == left and front == top and (left == top)) or (front == right and front == top and (right == top)) or (back == left and back == bottom and (left == bottom)) or (back == right and back == bottom and (right == bottom)) or (back == left and back == top and (left == top)) or (back == right and back == top and (right == top)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (col1, col2, col3, col4, col5, col6) = input().split()\n    if set([col1, col2]) & set([col3, col4]) & set([col5, col6]):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\nflag = 0\nfor i in range(1, t + 1):\n    flag = 0\n    a = input().split()\n    b = Counter(a)\n    for color in ['black', 'blue', 'red', 'green', 'yellow', 'orange']:\n        if b[color] >= 3:\n            if (a[0] == color or a[1] == color) and (a[2] == color or a[3] == color) and (a[4] == color or a[5] == color):\n                print('YES')\n                flag = 1\n                break\n    if flag == 0:\n        print('NO')"]