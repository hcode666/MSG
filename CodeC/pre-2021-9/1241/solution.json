["def LII():\n    return [int(x) for x in input().split()]\n\ndef get_periods(a, b, x, m):\n    visited = m * [False]\n    values = [x]\n    visited[x] = True\n    while True:\n        x = (a * x + b) % m\n        if visited[x]:\n            break\n        visited[x] = True\n        values.append(x)\n    i = values.index(x)\n    return (values[:i], values[i:])\nfor _ in range(int(input())):\n    h = int(input())\n    (n, m) = LII()\n    (a, b, ind) = LII()\n    d = LII()\n    (initial, loop) = get_periods(a, b, ind, m)\n    initial = [d[i] for i in initial]\n    loop = [d[i] for i in loop]\n    if n - 1 < len(initial):\n        ans = sum(initial[:n - 1])\n    else:\n        ans = sum(initial)\n        n_left = n - 1 - len(initial)\n        ans += sum(loop) * (n_left // len(loop))\n        ans += sum(loop[:n_left % len(loop)])\n    ans *= h\n    print(str(ans // 2) + ('.0' if ans % 2 == 0 else '.5'))", "def LII():\n    return [int(x) for x in input().split()]\n\ndef get_periods(a, b, x, m):\n    visited = m * [False]\n    values = [x]\n    visited[x] = True\n    while True:\n        x = (a * x + b) % m\n        if visited[x]:\n            break\n        visited[x] = True\n        values.append(x)\n    i = values.index(x)\n    return (values[:i], values[i:])\nfor _ in range(int(input())):\n    h = int(input())\n    (n, m) = LII()\n    (a, b, ind) = LII()\n    d = LII()\n    (initial, loop) = get_periods(a, b, ind, m)\n    initial = [d[i] for i in initial]\n    loop = [d[i] for i in loop]\n    if n - 1 < len(initial):\n        ans = sum(initial[:n - 1])\n    else:\n        ans = sum(initial)\n        n_left = n - 1 - len(initial)\n        ans += sum(loop) * (n_left // len(loop))\n        ans += sum(loop[:n_left % len(loop)])\n    ans *= h\n    print(str(ans // 2) + ('.0' if ans % 2 == 0 else '.5'))"]