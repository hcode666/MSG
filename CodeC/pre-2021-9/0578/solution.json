["def soln(n):\n    arr = [(i, i + 1) for i in range(1, n)]\n    arr.append((1, n))\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, *arr[(i + j) % n])\nfor _ in range(int(input())):\n    n = int(input())\n    soln(n)", "def soln(n):\n    arr = [(i, i + 1) for i in range(1, n)]\n    arr.append((1, n))\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, *arr[(i + j) % n])\nfor _ in range(int(input())):\n    n = int(input())\n    soln(n)", "def soln(n):\n    arr = [(i, i + 1) for i in range(1, n)]\n    arr.append((1, n))\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, *arr[(i + j) % n])\nfor _ in range(int(input())):\n    n = int(input())\n    soln(n)", "for i in range(int(input())):\n    n = int(input())\n    k = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, k[(i + j - 1) % n], k[(i + j) % n])", "from collections import deque\n\ndef solve():\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())\nfor _ in range(int(input())):\n    solve()", "from collections import deque\n\ndef solve():\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())\nfor _ in range(int(input())):\n    solve()", "from collections import *\n\ndef solve():\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())\nfor _ in range(int(input())):\n    solve()", "from collections import deque\n\ndef solve():\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())\nfor _ in range(int(input())):\n    solve()", "import collections\n\ndef solve():\n    n = int(input())\n    q = collections.deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())\nfor _ in range(int(input())):\n    solve()", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())", "for t in range(int(input())):\n    n = int(input())\n    k = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, k[(i + j - 1) % n], k[(i + j) % n])", "for t in range(int(input())):\n    n = int(input())\n    k = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, k[(i + j - 1) % n], k[(i + j) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())", "testcase = int(input())\nfor _ in range(testcase):\n    numberOFJudges = int(input())\n    numberOFRounds = numberOFJudges\n    print(numberOFRounds)\n    IDofRecipe_1 = 1\n    IDofRecipe_2 = 2\n    for i in range(numberOFRounds - 1):\n        print(numberOFJudges)\n        for IDofJudges in range(numberOFJudges):\n            print(IDofJudges + 1, IDofRecipe_1, IDofRecipe_2)\n        IDofRecipe_1 = IDofRecipe_1 + 1\n        IDofRecipe_2 = IDofRecipe_2 + 1\n    print(numberOFJudges)\n    for IDofJudges in range(numberOFJudges):\n        print(IDofJudges + 1, 1, numberOFJudges)", "testcase = int(input())\nfor _ in range(testcase):\n    numberOFJudges = int(input())\n    numberOFRounds = numberOFJudges\n    print(numberOFRounds)\n    IDofRecipe_1 = 1\n    IDofRecipe_2 = 2\n    for i in range(numberOFRounds - 1):\n        print(numberOFJudges)\n        for IDofJudges in range(numberOFJudges):\n            print(IDofJudges + 1, IDofRecipe_1, IDofRecipe_2)\n        IDofRecipe_1 = IDofRecipe_1 + 1\n        IDofRecipe_2 = IDofRecipe_2 + 1\n    print(numberOFJudges)\n    for IDofJudges in range(numberOFJudges):\n        print(IDofJudges + 1, 1, numberOFJudges)", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    q = deque()\n    for i in range(n):\n        q.append((i + 1, (i + 1) % n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        for (i, (x, y)) in enumerate(q, start=1):\n            print(i, x, y)\n        q.append(q.popleft())", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    x = 1\n    y = 2\n    for i in range(n - 1):\n        print(n)\n        for j in range(n):\n            print(j + 1, x, y)\n        x += 1\n        y += 1\n    print(n)\n    for i in range(n):\n        print(i + 1, 1, n)", "def solve():\n    print(n)\n    (x, y) = (1, 2)\n    for r in range(n - 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, x, y)\n        x += 1\n        y += 1\n    print(n)\n    for j in range(1, n + 1):\n        print(j, 1, n)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    solve()", "def solve():\n    print(n)\n    (x, y) = (1, 2)\n    for r in range(n - 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, x, y)\n        x += 1\n        y += 1\n    print(n)\n    for j in range(1, n + 1):\n        print(j, 1, n)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    s = range(1, n + 1)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, s[(j + i - 1) % n], s[(j + i) % n])", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    s = range(1, n + 1)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, s[(j + i - 1) % n], s[(j + i) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        n = nl()\n        print(n)\n        for i in range(0, n):\n            dish_one = i % n + 1\n            dish_two = (i + 1) % n + 1\n            print(n)\n            for j in range(0, n):\n                print(j + 1, dish_one, dish_two)\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        n = nl()\n        print(n)\n        circle = [i for i in range(1, n + 1)]\n        count = 0\n        for i in range(0, n):\n            print(n)\n            for j in range(0, n):\n                print(j + 1, circle[(count + j) % n], circle[(count + j + 1) % n])\n            count += 1\nmain()", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = range(1, n + 1)\n    print(n)\n    for j in range(1, n + 1):\n        print(n)\n        for k in range(1, n + 1):\n            print(k, s[(j + k - 1) % n], s[(j + k) % n])", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = range(1, n + 1)\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, N[(i + j - 1) % n], N[(i + j) % n])", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, n):\n        l.append((i, i + 1))\n    l.append((n, 1))\n    print(n)\n    for i in range(n):\n        print(n)\n        j = 1\n        while j <= n:\n            print(j, l[j - 1][0], l[j - 1][1])\n            j += 1\n        l = l[1:] + [l[0]]", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, n):\n        l.append((i, i + 1))\n    l.append((n, 1))\n    print(n)\n    for i in range(n):\n        print(n)\n        j = 1\n        while j <= n:\n            print(j, l[j - 1][0], l[j - 1][1])\n            j += 1\n        l = l[1:] + [l[0]]", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, n):\n        l.append((i, i + 1))\n    l.append((n, 1))\n    print(n)\n    for i in range(n):\n        print(n)\n        j = 1\n        while j <= n:\n            print(j, l[j - 1][0], l[j - 1][1])\n            j += 1\n        l = l[1:] + [l[0]]", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = n\n    print(r)\n    for k in range(n):\n        no_judges = n\n        print(no_judges)\n        for j in range(n):\n            r1 = (k + j) % n + 1\n            r2 = (k + j + 1) % n + 1\n            print(j + 1, ' ', r1, ' ', r2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n)\n    for i in range(1, n + 1):\n        y = 1\n        print(n)\n        for j in range(i, n + 1):\n            if j == n:\n                print(y, j, 1)\n                y += 1\n            else:\n                print(y, j, j + 1)\n                y += 1\n        x = 1\n        while x <= i - 1:\n            print(y, x, x + 1)\n            x += 1\n            y += 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        item1 = i % n + 1\n        item2 = (i + 1) % n + 1\n        print(n)\n        for j in range(n):\n            print(j + 1, item1, item2)", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        item1 = i % n + 1\n        item2 = (i + 1) % n + 1\n        print(n)\n        for j in range(n):\n            print(j + 1, item1, item2)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    print(n)\n    for j in range(n):\n        c += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if c > n:\n                c = 1\n            print(c, end=' ')\n            c += 1\n            if c > n:\n                c = 1\n            print(c)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    print(n)\n    for j in range(n):\n        count += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if count > n:\n                count = 1\n            print(count, end=' ')\n            count += 1\n            if count > n:\n                count = 1\n            print(count)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    print(n)\n    for j in range(n):\n        count += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if count > n:\n                count = 1\n            print(count, end=' ')\n            count += 1\n            if count > n:\n                count = 1\n            print(count)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    print(n)\n    for j in range(n):\n        count += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if count > n:\n                count = 1\n            print(count, end=' ')\n            count += 1\n            if count > n:\n                count = 1\n            print(count)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    print(n)\n    for j in range(n):\n        count += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if count > n:\n                count = 1\n            print(count, end=' ')\n            count += 1\n            if count > n:\n                count = 1\n            print(count)", "for _ in range(int(input())):\n    n = int(input())\n    x = 1\n    y = 2\n    print(n)\n    print(n)\n    x = 1\n    y = 2\n    round1 = 1\n    judge = 1\n    while round1 <= n * (n + 1):\n        if judge % (n + 1) == 0 and round1 != n * (n + 1):\n            print(n)\n            judge = 1\n            x = x + 1\n            y = y + 1\n        elif round1 != n * (n + 1):\n            if x > n:\n                x = 1\n            if y > n:\n                y = 1\n            print(judge, x, y)\n            judge += 1\n            x = x + 1\n            y = y + 1\n            if x > n:\n                x = 1\n            if y > n:\n                y = 1\n        round1 += 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for r in range(n):\n        print(n)\n        for i in range(n):\n            print(i + 1, (i + r) % n + 1, (i + r + 1) % n + 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for r in range(n):\n        print(n)\n        for i in range(n):\n            print(i + 1, (i + r) % n + 1, (i + r + 1) % n + 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for r in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, (j + r) % n + 1, (j + r + 1) % n + 1)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    print(n)\n    for i in range(n):\n        print(n)\n        for k in range(n):\n            print(k + 1, i + k + 1 if i + k + 1 <= n else i + k + 1 - n, i + k + 2 if i + k + 2 <= n else i + k + 2 - n)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    print(n)\n    for i in range(n):\n        print(n)\n        for k in range(n):\n            print(k + 1, i + k + 1 if i + k + 1 <= n else i + k + 1 - n, i + k + 2 if i + k + 2 <= n else i + k + 2 - n)", "for _ in range(int(input())):\n    n = int(input())\n    k = 0\n    print(n)\n    for j in range(n):\n        k += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if k > n:\n                k = 1\n            print(k, end=' ')\n            k += 1\n            if k > n:\n                k = 1\n            print(k)", "for _ in range(int(input())):\n    N = int(input())\n    print(N)\n    for i in range(1, N + 1):\n        print(N)\n        k = 1\n        for j in range(i, i + N):\n            y = j % (N + i)\n            if y > N:\n                y -= N\n            z = y\n            if y < N:\n                z += 1\n            else:\n                z = 1\n            print(k, y, z)\n            k += 1", "for _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    print(n)\n    for j in range(n):\n        cnt += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if cnt > n:\n                cnt = 1\n            print(cnt, end=' ')\n            cnt += 1\n            if cnt > n:\n                cnt = 1\n            print(cnt)", "def snack_up(test_integer):\n    count = 0\n    print(test_integer)\n    for _ in range(test_integer):\n        count += 1\n        print(test_integer)\n        for i in range(test_integer):\n            print(i + 1, end=' ')\n            if count > test_integer:\n                count = 1\n            print(count, end=' ')\n            count += 1\n            if count > test_integer:\n                count = 1\n            print(count)\nfor _ in range(int(input())):\n    NUMBER_JUDGE = int(input())\n    snack_up(NUMBER_JUDGE)", "for _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    print(n)\n    for j in range(n):\n        cnt += 1\n        print(n)\n        for i in range(n):\n            print(i + 1, end=' ')\n            if cnt > n:\n                cnt = 1\n            print(cnt, end=' ')\n            cnt += 1\n            if cnt > n:\n                cnt = 1\n            print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    print(n)\n    for k in range(n):\n        print(n)\n        for l in range(n):\n            print(str(l + 1) + ' ' + str((k + l) % n + 1) + ' ' + str((k + l + 1) % n + 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n)\n    for k in range(n):\n        print(n)\n        for l in range(n):\n            print(str(l + 1) + ' ' + str((k + l) % n + 1) + ' ' + str((k + l + 1) % n + 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n)\n    for k in range(n):\n        print(n)\n        for l in range(n):\n            print(str(l + 1) + ' ' + str((k + l) % n + 1) + ' ' + str((k + l + 1) % n + 1))", "test_cases = int(input())\nwhile test_cases > 0:\n    n = int(input())\n    print(n)\n    counter = 0\n    for i in range(n):\n        print(n)\n        counter = i\n        for j in range(1, n + 1):\n            counter += 1\n            if (counter + 1) % (n + 1) == 0:\n                print(j, counter, 1)\n                counter = 0\n            else:\n                print(j, counter, counter + 1)\n    test_cases -= 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, (j + i) % n + 1, (j + i + 1) % n + 1)", "for t in range(int(input())):\n    n = int(input())\n    print(n)\n    (f, s) = (0, 0)\n    for i in range(n):\n        s = i + 1\n        print(n)\n        for j in range(n):\n            f = s\n            if f > n:\n                f = 1\n            s = f + 1\n            if s > n:\n                s = 1\n            print(j + 1, f, s)", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, (i + j) % n + 1, (i + j + 1) % n + 1)", "def rotate(arr):\n    temp = arr[-1]\n    new_temp1 = arr[1]\n    for i in range(1, len(arr), 2):\n        if i + 2 <= len(arr):\n            new_temp2 = arr[i + 2]\n            arr[i + 2] = new_temp1\n            new_temp1 = new_temp2\n    arr[1] = temp\nfor t in range(int(input())):\n    n = int(input())\n    arr = []\n    print(n)\n    for i in range(n):\n        arr.append(i + 1)\n        arr.append('j' + str(i + 1))\n    for k in range(n):\n        print(n)\n        for i in range(n):\n            j = i + 1\n            index = arr.index('j' + str(j))\n            if index + 1 < len(arr):\n                print(i + 1, arr[index - 1], arr[index + 1])\n            else:\n                print(i + 1, arr[0], arr[index - 1])\n        rotate(arr)", "for t in range(int(input())):\n    n = int(input())\n    print(n)\n    a = [i % n + 1 for i in range(n)]\n    for i in range(n):\n        print(n)\n        k = i\n        for j in range(n):\n            print(j + 1, a[k % n], a[(k + 1) % n])\n            k += 1", "for t in range(int(input())):\n    nj = int(input())\n    print(nj)\n    a = [i % nj + 1 for i in range(nj)]\n    for j in range(nj):\n        print(nj)\n        c = j\n        for k in range(nj):\n            print(k + 1, a[c % nj], a[(c + 1) % nj])\n            c += 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, (j + i) % n + 1, (j + i + 1) % n + 1, sep=' ')", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            to = (i + j) % n + 1\n            if to == n:\n                print(j + 1, to, 1)\n            else:\n                print(j + 1, to, to + 1)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            to = (i + j) % n + 1\n            if to == n:\n                print(j + 1, to, 1)\n            else:\n                print(j + 1, to, to + 1)\n    t -= 1", "T = int(input())\nfor eachCase in range(T):\n    n = int(input())\n    print(n)\n    (x, y) = (1, 2)\n    for i in range(n):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, x, y)\n            x = y\n            if y == n:\n                y = 0\n            y += 1\n        x = y\n        if y == n:\n            y = 0\n        y += 1", "for i in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        start = i\n        for j in range(1, n + 1):\n            print(j, start % n + 1, end=' ')\n            start += 1\n            print(start % n + 1)", "for x in range(int(input())):\n    n = int(input())\n    l = [i for i in range(1, n + 1)]\n    l = l + l\n    l.append(1)\n    r = n\n    print(r)\n    for i in range(r):\n        print(n)\n        for j in range(n):\n            print(str(j + 1) + ' ' + str(l[j + i]) + ' ' + str(l[j + i + 1]))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    print(n)\n    for j in range(1, n + 1):\n        print(n)\n        c = j\n        for i in range(1, n + 1):\n            if c == n:\n                print(i, c, 1)\n                c = 1\n            else:\n                print(i, c, c + 1)\n                c += 1\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(1, n + 1):\n        print(n)\n        for j in range(1, n + 1):\n            print(j, i, i % n + 1)", "for t in range(int(input())):\n    n = int(input())\n    rounds = 2 * n // 2\n    print(rounds)\n    c = 1\n    d = 2\n    for j in range(rounds):\n        print(n)\n        for i in range(1, n + 1):\n            print(i, c, d)\n        c = (c + 1) % n + 1\n        d = (d + 1) % n + 1", "for t in range(0, int(input())):\n    n = int(input())\n    print(n)\n    for i in range(0, n):\n        print(n)\n        for j in range(0, n):\n            xx = i + 1\n            yy = i + 2\n            if yy == n + 1:\n                yy = 1\n            print(j + 1, end=' ')\n            print(xx, end=' ')\n            print(yy)", "t = int(input())\nfor _ in range(t):\n    (n, x) = (int(input().strip()), 0)\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, (j + x) % n + 1, (j + x + 1) % n + 1, sep=' ', end='\\n')\n        x += 1", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(n)\n        for i in range(n // 2):\n            for j in range(2):\n                print(n)\n                l = [(i, i + 1) for i in range(1, n, 2)]\n                ln = len(l)\n                c = i\n                for k in range(1, n + 1, 2):\n                    print(k, l[c][0], l[c][1])\n                    print(k + 1, l[c][0], l[c][1])\n                    if c == ln - 1:\n                        c = 0\n                        for nt in range(k + 2, n + 1, 2):\n                            print(nt, l[c][0], l[c][1])\n                            print(nt + 1, l[c][0], l[c][1])\n                            c += 1\n                        break\n                    c += 1\n    else:\n        print(n)\n        l = [(i, i + 1) for i in range(1, n)]\n        l.append((n, 1))\n        ln = len(l)\n        for i in range(n):\n            print(n)\n            c = i\n            for k in range(1, n + 1):\n                print(k, l[c][0], l[c][1])\n                if c == ln - 1:\n                    c = 0\n                    for nt in range(k + 1, n + 1):\n                        print(nt, l[c][0], l[c][1])\n                        c += 1\n                    break\n                c += 1", "for j in range(int(input())):\n    n = int(input())\n    l = []\n    print(n)\n    for i in range(1, n + 1):\n        l.append((i, min(i, i % n + 1), max(i, i % n + 1)))\n    for k in range(n):\n        print(n)\n        for j in l:\n            print(j[0], end=' ')\n            print(j[1] + k if j[1] + k <= n else (j[1] + k) % n, end=' ')\n            print(j[2] + k if j[2] + k <= n else (j[2] + k) % n, end=' ')\n            print()", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print(n - 3 + 3)\n        for x in range(1, n - 3, 2):\n            for t in range(2):\n                print(n)\n                for j in range(n):\n                    print(j + 1, x, x + 1)\n        print(n)\n        for j in range(n):\n            print(j + 1, n - 2, n - 1)\n        print(n)\n        for j in range(n):\n            print(j + 1, n - 2, n)\n        print(n)\n        for j in range(n):\n            print(j + 1, n - 1, n)\n    else:\n        print(n)\n        for x in range(1, n, 2):\n            for t in range(2):\n                print(n)\n                for j in range(n):\n                    print(j + 1, x, x + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(range(1, n + 1))\n    print(n)\n    for _ in range(n):\n        print(n)\n        l.append(l[0])\n        l.pop(0)\n        for i in range(1, n + 1):\n            if i != n:\n                print('%i %i %i' % (l[i - 1], i, i + 1))\n            else:\n                print('%i %i %i' % (l[i - 1], 1, n))", "for t in range(0, int(input())):\n    n = int(input())\n    print(n)\n    for i in range(0, n):\n        print(n)\n        for j in range(0, n):\n            xx = i + 1\n            yy = i + 2\n            if yy == n + 1:\n                yy = 1\n            print(j + 1, end=' ')\n            print(xx, end=' ')\n            print(yy)", "test = int(input())\nfor t in range(0, test):\n    n = int(input())\n    l = []\n    for i in range(1, n):\n        l.append((i, i + 1))\n    l.append((n, 1))\n    print(n)\n    for i in range(0, n):\n        print(n)\n        for j in range(0, n):\n            print(j + 1, end=' ')\n            for x in l[j]:\n                print(x, end=' ')\n            print()\n        l.append(l[0])\n        l.remove(l[0])", "T = int(input())\nfor t in range(T):\n    temp = 0\n    dishes = []\n    n = int(input())\n    for i in range(2):\n        for x in range(n):\n            dishes.append(x + 1)\n    rounds = n\n    print(rounds)\n    for Round in range(1, n + 1):\n        print(n)\n        i = temp\n        for judge in range(1, n + 1):\n            if i >= len(dishes):\n                i = 0\n            print(judge, end='')\n            print(' %d %d' % (dishes[i], dishes[i + 1]))\n            i += 2\n        temp += 2", "T = int(input())\nfor test in range(T):\n    numbers = []\n    N = int(input())\n    for i in range(N):\n        numbers.append(i + 1)\n    print(N)\n    current = 0\n    for i in range(N):\n        print(N)\n        for k in range(N):\n            print(k + 1, numbers[current % N], numbers[(current + 1) % N])\n            current += 1\n        current += 1", "t = int(input())\nl1 = 1\nl2 = 2\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    k = n\n    d1 = 1\n    d2 = 2\n    if n == 1:\n        print(1)\n        print(n)\n        print(1, 1, 1)\n        continue\n    print(k)\n    for i in range(k):\n        print(k)\n        for j in range(k):\n            print(j + 1, d1, d2)\n        d1 = d1 + 1\n        d2 = d2 + 1\n        if d2 > k:\n            d2 = l1", "t = int(input())\nfor _ in range(t):\n    judges = int(input())\n    (start, end) = (1, 2)\n    print(judges)\n    for i in range(judges - 1):\n        print(judges)\n        for j in range(judges):\n            print(j + 1, start, end)\n        start += 1\n        end += 1\n    print(judges)\n    start = 1\n    end -= 1\n    for i in range(judges):\n        print(i + 1, start, end)", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(0, n):\n            print(j + 1, (i + j) % n + 1, (i + j + 1) % n + 1)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    print(n)\n    nums = list(range(1, n + 1))\n    for i in range(n):\n        print(n)\n        tmp = i\n        for j in range(1, n + 1):\n            print(j, nums[tmp], nums[(tmp + 1) % n])\n            tmp = (tmp + 1) % n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = n\n    print(r)\n    l = list(range(1, r + 1))\n    k = []\n    for j in range(r):\n        k.append([l[j], l[(j + 1) % r]])\n    for j in range(r):\n        print(r)\n        for m in range(r):\n            print(m + 1, k[(j + m) % r][0], k[(j + m) % r][1])", "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print((i + j) % n + 1, 2 * j % n + 1, (2 * j + 1) % n + 1, sep=' ')", "from itertools import repeat\nfor _ in repeat(None, int(input())):\n    n = int(input())\n    print(n)\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            print(j + 1, end=' ')\n            print(str(i % n + 1) + ' ' + str((i + 1) % n + 1))", "t = int(input().strip())\nfor a0 in range(t):\n    rounds = int(input().strip())\n    print(rounds)\n    judges = [None] * rounds\n    arr = [j + 1 for j in range(rounds)] + [j + 1 for j in range(rounds)]\n    for i in range(rounds):\n        judges[i] = arr[2 * i:] + arr[:2 * i]\n    for i in range(rounds):\n        print(rounds)\n        for j in range(rounds):\n            print(j + 1, judges[j][2 * i], judges[j][2 * i + 1])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    print(n)\n    j = 1\n    l = 2\n    for k in range(n):\n        print(n)\n        for i in range(1, n + 1):\n            print(i, end=' ')\n            print(j, end=' ')\n            print(l, end=' ')\n            print()\n        j += 1\n        l += 1\n        if l > n:\n            l = 1\n    t -= 1", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('2\\n2\\n3')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            n = int(next(lines))\n            yield (n,)\n\ndef calc(n):\n    rounds = []\n    for i in range(n):\n        rounds.append([])\n        r = rounds[i]\n        for j in range(n):\n            r.append((j + 1, (j + i) % n + 1, (j + i + 1) % n + 1))\n    return rounds\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    rounds = calc(*args)\n    print(len(rounds))\n    for r in rounds:\n        print(len(r))\n        for judge in r:\n            print('{} {} {}'.format(*judge))", "for t in range(int(input())):\n    n = int(input())\n    print(n)\n    offset = 0\n    for i in range(n):\n        print(n)\n        for j in range(n):\n            x = offset + n\n            y = x + 1\n            print(j + 1, x % n + 1, y % n + 1)\n            offset += 1\n        offset += 1"]