["def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(n):\n    st = []\n    for i in n:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(n, k):\n    s = len(n)\n    for i in range(s - 1):\n        if n[i] == ')' and n[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return s - 1\n    k -= 1\n    for i in range(s - 1, 0, -1):\n        if n[i] == '(' and n[i + 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    n = input()\n    k = int(input())\n    if bal(n):\n        if k == 1:\n            print(n)\n        else:\n            print(-1)\n    else:\n        i = fun(n, k)\n        if i == -1:\n            print(-1)\n        else:\n            n = n[:i] + n[i + 1:]\n            print(n)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(n):\n    st = []\n    for i in n:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(n, k):\n    s = len(n)\n    for i in range(s - 1):\n        if n[i] == ')' and n[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return s - 1\n    k -= 1\n    for i in range(s - 1, 0, -1):\n        if n[i] == '(' and n[i + 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    n = input()\n    k = int(input())\n    if bal(n):\n        if k == 1:\n            print(n)\n        else:\n            print(-1)\n    else:\n        i = fun(n, k)\n        if i == -1:\n            print(-1)\n        else:\n            n = n[:i] + n[i + 1:]\n            print(n)", "def bal(n):\n    st = []\n    for i in n:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(n, k):\n    s = len(n)\n    for i in range(s - 1):\n        if n[i] == ')' and n[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return s - 1\n    k -= 1\n    for i in range(s - 1, 0, -1):\n        if n[i] == '(' and n[i + 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    n = input()\n    k = int(input())\n    if bal(n):\n        if k == 1:\n            print(n)\n        else:\n            print(-1)\n    else:\n        i = fun(n, k)\n        if i == -1:\n            print(-1)\n        else:\n            n = n[:i] + n[i + 1:]\n            print(n)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def ba(s):\n    sta = []\n    for i in s:\n        if i == '(':\n            sta.append(i)\n        elif sta == []:\n            return 1\n        else:\n            sta.pop()\n    return sta != []\n\ndef fun(s, k):\n    l = len(s)\n    for j in range(l - 1):\n        if s[j] == ')' and s[j + 1] == '(':\n            k -= 1\n            if k == 0:\n                return j\n    if k == 1:\n        return l - 1\n    k -= 1\n    for j in range(l - 1, 0, -1):\n        if s[j] == '(' and s[j - 1] == ')':\n            k -= 1\n            if k == 0:\n                return j\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if ba(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return -1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    L = []\n    for i in s:\n        if i == '(':\n            L.append(i)\n        elif L == []:\n            return -1\n        else:\n            L.pop()\n    return len(L)\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nt = int(input())\nfor _ in range(t):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def bal(s):\n    st = []\n    for i in s:\n        if i == '(':\n            st.append(i)\n        elif st == []:\n            return 1\n        else:\n            st.pop()\n    return st != []\n\ndef fun(s, k):\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return n - 1\n    k -= 1\n    for i in range(n - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n            if k == 0:\n                return i\n    if k == 1:\n        return 0\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    k = int(input())\n    if bal(s):\n        if k == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        i = fun(s, k)\n        if i == -1:\n            print(-1)\n        else:\n            s = s[:i] + s[i + 1:]\n            print(s)", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(l - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(l - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(l - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(l - 1, 0, -1):\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n        else:\n            print(-1)\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def is_regular(s):\n    if len(s) % 2 == 1:\n        return False\n    stack = 0\n    for x in s:\n        if x == '(':\n            stack += 1\n        else:\n            if stack == 0:\n                return False\n            stack -= 1\n    return stack == 0\n\ndef give_substring_index(s, k):\n    l = len(s)\n    for i in range(l - 1):\n        if s[i] == ')' and s[i + 1] == '(':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return l - 1\n    k -= 1\n    for i in range(1, l)[::-1]:\n        if s[i] == '(' and s[i - 1] == ')':\n            k -= 1\n        if k == 0:\n            return i\n    if k == 1:\n        return 0\n    return -1\nfor t in range(int(input())):\n    s = input()\n    K = int(input())\n    if not is_regular(s):\n        if K == 1:\n            print(s)\n            pass\n        else:\n            print(-1)\n            pass\n    else:\n        index = give_substring_index(s, K)\n        if index == -1:\n            print(-1)\n        else:\n            print(s[:index] + s[index + 1:])", "def regular(ps):\n    lv = 0\n    for c in ps:\n        if c == '(':\n            lv += 1\n        elif c == ')':\n            lv -= 1\n            if lv < 0:\n                return False\n        else:\n            return False\n    return lv == 0\nfor _ in range(int(input())):\n    pstr = input().strip()\n    lstr = len(pstr)\n    k = int(input())\n    if k > lstr:\n        print(-1)\n    elif regular(pstr):\n        rle = []\n        lc = '('\n        run = 0\n        for c in pstr:\n            if c == lc:\n                run += 1\n            else:\n                rle.append(run)\n                lc = c\n                run = 1\n        rle.append(run)\n        if k > len(rle):\n            print(-1)\n        else:\n            if k > len(rle) / 2:\n                run = 2 * (len(rle) - k)\n            else:\n                run = 2 * k - 1\n            pos = sum(rle[:run])\n            print(pstr[:pos] + pstr[pos + 1:])\n    elif k == 1:\n        print(pstr)\n    else:\n        print(-1)", "def regular(ps):\n    lv = 0\n    for c in ps:\n        if c == '(':\n            lv += 1\n        elif c == ')':\n            lv -= 1\n            if lv < 0:\n                return False\n        else:\n            return False\n    return lv == 0\nfor _ in range(int(input())):\n    pstr = input().strip()\n    lstr = len(pstr)\n    k = int(input())\n    if k > lstr:\n        print(-1)\n    elif regular(pstr):\n        rle = []\n        lc = '('\n        run = 0\n        for c in pstr:\n            if c == lc:\n                run += 1\n            else:\n                rle.append(run)\n                lc = c\n                run = 1\n        rle.append(run)\n        if k > len(rle):\n            print(-1)\n        else:\n            if k > len(rle) / 2:\n                run = 2 * (len(rle) - k)\n            else:\n                run = 2 * k - 1\n            pos = sum(rle[:run])\n            print(pstr[:pos] + pstr[pos + 1:])\n    elif k == 1:\n        print(pstr)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input().strip()\n    k = int(input())\n    sm = alters = 0\n    prev = None\n    for i in s:\n        if i != prev:\n            alters += 1\n        prev = i\n        if i == '(':\n            sm += 1\n        else:\n            sm -= 1\n        if sm < 0:\n            break\n    if sm != 0:\n        if k != 1:\n            print(-1)\n        else:\n            print(s)\n    elif alters < k:\n        print(-1)\n    else:\n        (lo, hi) = (0, alters)\n        prev = None\n        for i in range(len(s)):\n            if prev == '(' and s[i] == ')':\n                lo += 1\n            elif prev == ')' and s[i] == '(':\n                hi -= 1\n            prev = s[i]\n            if lo == k or hi == k:\n                print(s[:i] + s[i + 1:])\n                break"]