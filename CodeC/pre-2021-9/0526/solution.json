["def f(h):\n    if h == 1:\n        return 1\n    elif h == 2:\n        return 1\n    else:\n        a = 1\n        b = 1\n        for i in range(h - 2):\n            c = a + b\n            a = b\n            b = c\n        return b\nfor _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    w = sum(a)\n    e = sum(b)\n    y = 10 ** 9 + 7\n    ans = m * ((f(n - 2) % y * (w % y) % y + f(n - 1) % y * (e % y) % y) % y) % y\n    if n == 1:\n        print(w % y * m % y)\n    elif n == 2:\n        print(e % y * m % y)\n    else:\n        print(ans)", "def multiply(a, m, mod):\n    fst = a[0][0] * m[0][0] + a[0][1] * m[1][0]\n    sec = a[0][0] * m[0][1] + a[0][1] * m[1][1]\n    trd = a[1][0] * m[0][0] + a[1][1] * m[1][0]\n    fur = a[1][0] * m[0][1] + a[1][1] * m[1][1]\n    (a[0][0], a[0][1]) = (fst % mod, sec % mod)\n    (a[1][0], a[1][1]) = (trd % mod, fur % mod)\n\ndef power(a, n, mod):\n    if n == 0 or n == 1:\n        return\n    power(a, n // 2, mod)\n    multiply(a, a, mod)\n    if n % 2 != 0:\n        m = [[1, 1], [1, 0]]\n        multiply(a, m, mod)\n\ndef fib(n, mod):\n    if n == 0:\n        return 0\n    a = [[1, 1], [1, 0]]\n    power(a, n - 1, mod)\n    return a\nt = int(input())\nmod = 10 ** 9 + 7\nwhile t:\n    t -= 1\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    suma = sum(a) * m % mod\n    sumb = sum(b) * m % mod\n    if n == 1:\n        print(suma % mod)\n    elif n == 2:\n        print(sumb % mod)\n    else:\n        matrix = fib(n - 1, mod)\n        ans = (matrix[0][0] * sumb + matrix[0][1] * suma) % mod\n        print(ans)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "t = int(input())\nfor j in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "t = int(input())\nfor j in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "t = int(input())\nfor j in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    M = 1000000007\n    A = [0, 1]\n    B = [1, 0]\n    for i in range(n):\n        A.append(A[-1] + A[-2])\n        B.append(B[-1] + B[-2])\n    u = A[n - 1]\n    v = B[n - 1]\n    print(m * (v * sum(a) + u * sum(b)) % M)", "mod = 1000000007\n\ndef multiply(mat1, mat2):\n    mat3 = [[0, 0], [0, 0]]\n    mat3[0][0] = mat1[0][0] * mat2[0][0] + mat1[0][1] * mat2[1][0]\n    mat3[0][1] = mat1[0][0] * mat2[0][1] + mat1[0][1] * mat2[1][1]\n    mat3[1][0] = mat1[1][0] * mat2[0][0] + mat1[1][1] * mat2[1][0]\n    mat3[1][1] = mat1[1][0] * mat2[0][1] + mat1[1][1] * mat2[1][1]\n    return mat3\n\ndef power(mat, n):\n    if n == 0:\n        a = [[1, 0], [0, 1]]\n        return a\n    if n == 1:\n        return mat\n    y = power(mat, int(n // 2))\n    if n & 1:\n        return multiply(mat, multiply(y, y))\n    else:\n        return multiply(y, y)\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    l1 = list([int(x) for x in input().split()])\n    l2 = list([int(x) for x in input().split()])\n    d1 = dict()\n    d2 = dict()\n    f1 = 0\n    f2 = 0\n    for j in range(0, m):\n        f1 += l1[j]\n        f2 += l2[j]\n    f1 = m * f1 % mod\n    f2 = m * f2 % mod\n    ans = 0\n    mat = [[1, 1], [1, 0]]\n    if n == 1:\n        print(f1 % mod)\n    elif n == 2:\n        print(f2 % mod)\n    elif n > 2:\n        mat = power(mat, n - 2)\n        ans = mat[0][0] * f2 + mat[0][1] * f1\n        print(ans % mod)", "mod = 1000000007\n\ndef multiply(mat1, mat2):\n    mat3 = [[0, 0], [0, 0]]\n    mat3[0][0] = mat1[0][0] * mat2[0][0] + mat1[0][1] * mat2[1][0]\n    mat3[0][1] = mat1[0][0] * mat2[0][1] + mat1[0][1] * mat2[1][1]\n    mat3[1][0] = mat1[1][0] * mat2[0][0] + mat1[1][1] * mat2[1][0]\n    mat3[1][1] = mat1[1][0] * mat2[0][1] + mat1[1][1] * mat2[1][1]\n    return mat3\n\ndef power(mat, n):\n    if n == 0:\n        a = [[1, 0], [0, 1]]\n        return a\n    if n == 1:\n        return mat\n    y = power(mat, int(n // 2))\n    if n & 1:\n        return multiply(mat, multiply(y, y))\n    else:\n        return multiply(y, y)\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    l1 = list([int(x) for x in input().split()])\n    l2 = list([int(x) for x in input().split()])\n    d1 = dict()\n    d2 = dict()\n    f1 = 0\n    f2 = 0\n    for j in range(0, m):\n        f1 += l1[j]\n        f2 += l2[j]\n    f1 = m * f1 % mod\n    f2 = m * f2 % mod\n    ans = 0\n    mat = [[1, 1], [1, 0]]\n    if n == 1:\n        print(f1 % mod)\n    elif n == 2:\n        print(f2 % mod)\n    elif n > 2:\n        mat = power(mat, n - 2)\n        ans = mat[0][0] * f2 + mat[0][1] * f1\n        print(ans % mod)", "mod = 1000000007\n\ndef multiply(mat1, mat2):\n    mat3 = [[0, 0], [0, 0]]\n    mat3[0][0] = mat1[0][0] * mat2[0][0] + mat1[0][1] * mat2[1][0]\n    mat3[0][1] = mat1[0][0] * mat2[0][1] + mat1[0][1] * mat2[1][1]\n    mat3[1][0] = mat1[1][0] * mat2[0][0] + mat1[1][1] * mat2[1][0]\n    mat3[1][1] = mat1[1][0] * mat2[0][1] + mat1[1][1] * mat2[1][1]\n    return mat3\n\ndef power(mat, n):\n    if n == 0:\n        a = [[1, 0], [0, 1]]\n        return a\n    if n == 1:\n        return mat\n    y = power(mat, int(n // 2))\n    if n & 1:\n        return multiply(mat, multiply(y, y))\n    else:\n        return multiply(y, y)\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    l1 = list([int(x) for x in input().split()])\n    l2 = list([int(x) for x in input().split()])\n    d1 = dict()\n    d2 = dict()\n    f1 = 0\n    f2 = 0\n    for j in range(0, m):\n        f1 += l1[j]\n        f2 += l2[j]\n    f1 = m * f1 % mod\n    f2 = m * f2 % mod\n    ans = 0\n    mat = [[1, 1], [1, 0]]\n    if n == 1:\n        print(f1 % mod)\n    elif n == 2:\n        print(f2 % mod)\n    elif n > 2:\n        mat = power(mat, n - 2)\n        ans = mat[0][0] * f2 + mat[0][1] * f1\n        print(ans % mod)", "mod = 1000000007\n\ndef multiply(mat1, mat2):\n    mat3 = [[0, 0], [0, 0]]\n    mat3[0][0] = mat1[0][0] * mat2[0][0] + mat1[0][1] * mat2[1][0]\n    mat3[0][1] = mat1[0][0] * mat2[0][1] + mat1[0][1] * mat2[1][1]\n    mat3[1][0] = mat1[1][0] * mat2[0][0] + mat1[1][1] * mat2[1][0]\n    mat3[1][1] = mat1[1][0] * mat2[0][1] + mat1[1][1] * mat2[1][1]\n    return mat3\n\ndef power(mat, n):\n    if n == 0:\n        a = [[1, 0], [0, 1]]\n        return a\n    if n == 1:\n        return mat\n    y = power(mat, int(n // 2))\n    if n & 1:\n        return multiply(mat, multiply(y, y))\n    else:\n        return multiply(y, y)\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    l1 = list([int(x) for x in input().split()])\n    l2 = list([int(x) for x in input().split()])\n    d1 = dict()\n    d2 = dict()\n    f1 = 0\n    f2 = 0\n    for j in range(0, m):\n        f1 += l1[j]\n        f2 += l2[j]\n    f1 = m * f1 % mod\n    f2 = m * f2 % mod\n    ans = 0\n    mat = [[1, 1], [1, 0]]\n    if n == 1:\n        print(f1 % mod)\n    elif n == 2:\n        print(f2 % mod)\n    elif n > 2:\n        mat = power(mat, n - 2)\n        ans = mat[0][0] * f2 + mat[0][1] * f1\n        print(ans % mod)", "for _ in range(int(input())):\n    (M, N) = map(int, input().split())\n    (A, B, result, a, b) = (list(map(int, input().split())), list(map(int, input().split())), 0, [0, 1], [1, 0])\n    for i in range(N):\n        (a.append(a[-1] + a[-2]), b.append(b[-1] + b[-2]))\n    print(M * (b[N - 1] * sum(A) + a[N - 1] * sum(B)) % 1000000007)", "for _ in range(int(input())):\n    (M, N) = map(int, input().split())\n    (A, B, result, a, b) = (list(map(int, input().split())), list(map(int, input().split())), 0, [0, 1], [1, 0])\n    for i in range(N):\n        (a.append(a[-1] + a[-2]), b.append(b[-1] + b[-2]))\n    print(M * (b[N - 1] * sum(A) + a[N - 1] * sum(B)) % 1000000007)", "for _ in range(int(input())):\n    (M, N) = map(int, input().split())\n    (A, B, result, a, b) = (list(map(int, input().split())), list(map(int, input().split())), 0, [0, 1], [1, 0])\n    for i in range(N):\n        (a.append(a[-1] + a[-2]), b.append(b[-1] + b[-2]))\n    print(M * (b[N - 1] * sum(A) + a[N - 1] * sum(B)) % 1000000007)", "def dbfb(A, B, m, n):\n    fibo = [0, 1, 1]\n    MOD = 10 ** 9 + 7\n    for i in range(10 ** 5):\n        fibo.append((fibo[-1] % MOD + fibo[-2] % MOD) % MOD)\n    (Amod, Bmod) = (0, 0)\n    for i in range(m):\n        Amod = (Amod + A[i] % MOD) % MOD\n        Bmod = (Bmod + B[i] % MOD) % MOD\n    if n >= 3:\n        return (fibo[n - 2] * m % MOD * Amod % MOD + fibo[n - 1] * m % MOD * Bmod % MOD) % MOD\n    elif n == 2:\n        return m * Bmod % MOD\n    elif n == 1:\n        return m * Amod % MOD\nt = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(dbfb(A, B, m, n))", "for _ in range(int(input())):\n    (M, N) = map(int, input().split())\n    (A, B, result, a, b) = (list(map(int, input().split())), list(map(int, input().split())), 0, [0, 1], [1, 0])\n    for i in range(N):\n        (a.append(a[-1] + a[-2]), b.append(b[-1] + b[-2]))\n    print(M * (b[N - 1] * sum(A) + a[N - 1] * sum(B)) % 1000000007)", "test = int(input())\nfor _ in range(test):\n    result = 0\n    (M, N) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    a = [0, 1]\n    b = [1, 0]\n    for i in range(N):\n        a.append(a[-1] + a[-2])\n        b.append(b[-1] + b[-2])\n    u = a[N - 1]\n    v = b[N - 1]\n    print(M * (v * sum(A) + u * sum(B)) % 1000000007)", "def fun():\n    test = int(input())\n    for t in range(test):\n        (m, n) = map(int, input().split())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        a = [0, 1]\n        b = [1, 0]\n        for i in range(n):\n            a.append(a[-1] + a[-2])\n            b.append(b[-1] + b[-2])\n        u = a[n - 1]\n        v = b[n - 1]\n        print(m * (v * sum(A) + u * sum(B)) % (pow(10, 9) + 7))\nfun()", "def fibonacci(n, x1a, x2a):\n    a = x1a\n    b = x2a\n    for i in range(2, n):\n        c = a + b\n        a = b\n        b = c\n    return b\nT = int(input())\nfor i in range(T):\n    (M, N) = [int(j) for j in input().split(' ')]\n    A = list(map(int, input().strip().split(' ')))\n    B = list(map(int, input().strip().split(' ')))\n    C = A + B\n    x1 = 0\n    x2 = 0\n    k = 0\n    for i in range(0, M):\n        x1 = x1 + C[i]\n        x2 = x2 + C[i + M]\n    if N == 1:\n        k = k + x1\n    elif N == 2:\n        k = k + x2\n    else:\n        r = fibonacci(N, x1, x2)\n        k = k + r\n    print(k * M % 1000000007)", "def fibo(a, b, n):\n    for i1 in range(3, n + 1):\n        c = a + b\n        (a, b) = (b, c)\n    return b\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    if n > 2:\n        x = fibo(1, 0, n)\n        y = fibo(0, 1, n)\n    elif n == 2:\n        (x, y) = (0, 1)\n    elif n == 1:\n        (x, y) = (1, 0)\n    print((m * x * sum(A) + m * y * sum(B)) % (pow(10, 9) + 7))", "import math\na = int(input())\nfor _ in range(a):\n    aa = list(map(int, input().split()))\n    bb = list(map(int, input().split()))\n    cc = list(map(int, input().split()))\n    arr = [1, 1]\n    brr = [0, 1]\n    if aa[1] >= 3:\n        for i in range(2, aa[1]):\n            arr.append(arr[-1] + arr[-2])\n            brr.append(brr[-1] + brr[-2])\n        num1 = arr[-1] - brr[-1]\n        num2 = brr[-1]\n        result = 0\n        results = sum(cc) * num2\n        result = (sum(bb) * len(cc) * num1 % (10 ** 9 + 7) + results * len(cc) % (10 ** 9 + 7)) % (10 ** 9 + 7)\n        print(result)\n    elif aa[1] == 1:\n        print(sum(bb) * aa[0] % (10 ** 9 + 7))\n    else:\n        print(sum(cc) * aa[0] % (10 ** 9 + 7))", "t = int(input())\nmod = 1000000007\nwhile t > 0:\n    t -= 1\n    (m, n) = input().split()\n    (m, n) = (int(m), int(n))\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    (x, y) = (sum(a) * m, sum(b) * m)\n    for i in range(2, n):\n        (x, y) = (y, (x + y) % mod)\n    if n != 1:\n        print(y)\n    else:\n        print(x)", "def relationa(n):\n    if n == 1:\n        return 1\n    else:\n        return relationb(n - 1)\n\ndef relationb(n):\n    if n == 1:\n        return 0\n    else:\n        return relationa(n - 1) + relationb(n - 1)\n\ndef fibs(n):\n    l = [0, 1]\n    if n == 1 or n == 2:\n        return l\n    else:\n        for i in range(2, n):\n            temp = sum(l)\n            l[0] = l[1]\n            l[1] = temp\n        return l\nn = int(input())\nfor i in range(n):\n    inp = list(map(int, input().split()))\n    m = inp[0]\n    n = inp[1]\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    suma = sum(a)\n    sumb = sum(b)\n    po = fibs(n)\n    summ = m * suma * po[0] + m * sumb * po[1]\n    print(summ % 1000000007)", "def arr_sum(a):\n    s = 0\n    for i in a:\n        s = (s + i) % (10 ** 9 + 7)\n    return s\nfor _ in range(int(input())):\n    (m, n) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    result = 0\n    if n == 1:\n        acoef = 1\n        bcoef = 0\n    elif n == 2:\n        acoef = 0\n        bcoef = 1\n    else:\n        t1 = (1, 0)\n        t2 = (0, 1)\n        for i in range(n - 2):\n            acoef = (t1[0] + t2[0]) % (10 ** 9 + 7)\n            bcoef = (t1[1] + t2[1]) % (10 ** 9 + 7)\n            t1 = t2\n            t2 = (acoef, bcoef)\n    print((acoef * arr_sum(a) + bcoef * arr_sum(b)) % (10 ** 9 + 7) * m % (10 ** 9 + 7))", "t = int(input())\nfor i in range(0, t):\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    result = 0\n    c = sum(a) * m\n    d = sum(b) * m\n    if n is 1:\n        print(c % 1000000007)\n    elif n is 2:\n        print(d % 1000000007)\n    else:\n        for k in range(2, n):\n            result = c + d\n            c = d\n            d = result\n        print(result % 1000000007)", "MOD = 1000000007\nt = int(input())\nwhile t > 0:\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s1 = sum(a) * m\n    s2 = sum(b) * m\n    if n == 1:\n        print(s1)\n    elif n == 2:\n        print(s2)\n    else:\n        for i in range(2, n):\n            s3 = s1 + s2\n            s1 = s2\n            s2 = s3\n        print(s3 % MOD)\n    t -= 1", "z = 1000000007\n\ndef moduloFibo(n):\n    if n == 1 or n == 2:\n        return 1\n    fib = 0\n    fibPrevPrev = 1\n    fibPrev = 1\n    for i in range(3, n + 1):\n        fib = (fibPrevPrev + fibPrev) % z\n        if i == n:\n            return fib\n        fibPrevPrev = fibPrev\n        fibPrev = fib\n\ndef result(a, b, n):\n    if n == 1:\n        m = len(a)\n        sum = 0\n        for i in range(m):\n            sum = (sum + a[i] % z) % z\n        return m % z * sum % z\n    elif n == 2:\n        m = len(b)\n        sum = 0\n        for i in range(m):\n            sum = (sum + b[i] % z) % z\n        return m % z * sum % z\n    else:\n        m = len(a)\n        sa = 0\n        for i in range(m):\n            sa = (sa + a[i] % z) % z\n        sb = 0\n        for i in range(m):\n            sb = (sb + b[i] % z) % z\n        p1 = sa * moduloFibo(n - 2) % z\n        p2 = sb * moduloFibo(n - 1) % z\n        return m % z * (p1 + p2) % z % z\nt = int(input())\nfor i in range(t):\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(result(a, b, n))", "def mul_a_wd_m(a, m):\n    a_new = []\n    for el in a:\n        prod = el * m\n        a_new.append(prod)\n    return a_new\n\ndef sum_of_b(b):\n    sum_b = sum(b)\n    return sum_b\nt = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    modulo = 1000000007\n    sum_b = 0\n    sum_a = 0\n    result = 0\n    if n == 1:\n        result = sum(a) * m\n    elif n == 2:\n        result = sum(b) * m\n    else:\n        a = mul_a_wd_m(a, m)\n        sum_a = sum(a)\n        sum_b = sum_of_b(b) * m\n        sum_ab = sum_a + sum_b\n        rng = n - 3\n        for j in range(rng):\n            sum_a = sum_b\n            sum_b = sum_ab\n            sum_ab = sum_a + sum_b\n        result = sum_ab\n    modulo_result = result % modulo\n    print(modulo_result)", "t = int(input())\nwhile t > 0:\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mod = 1000000007\n    sum1 = 0\n    sum2 = 0\n    for num in a:\n        sum1 += num\n    for num in b:\n        sum2 += num\n    result = []\n    result.append(sum1)\n    result.append(sum2)\n    i = 2\n    while i < n:\n        x = (result[i - 1] + result[i - 2]) % mod\n        result.append(x)\n        i += 1\n    ans = 0\n    for num in range(m):\n        ans = (ans + result[n - 1]) % mod\n    print(ans)\n    t -= 1", "def main():\n    fib = [0, 1]\n    for i in range(100000):\n        fib.append((fib[-2] + fib[-1]) % 1000000007)\n    t = int(input())\n    for _ in range(t):\n        n = input()\n        [m, n] = n.split(' ')\n        m = int(m)\n        n = int(n)\n        a = [int(i) for i in input().split(' ')]\n        b = [int(i) for i in input().split(' ')]\n        sum_a = 0\n        sum_b = 0\n        result = 0\n        for i in a:\n            sum_a += i\n            sum_a = sum_a % 1000000007\n        for i in b:\n            sum_b += i\n            sum_b = sum_b % 1000000007\n        if n == 1:\n            result += sum_a * m % 1000000007\n            result = result % 1000000007\n        elif n == 2:\n            result += sum_b * m % 1000000007\n            result = result % 1000000007\n        else:\n            diff1 = (sum_a - m) * m % 1000000007\n            diff2 = (sum_b - m) * m % 1000000007\n            result += (diff1 * fib[n - 2] % 1000000007 + diff2 * fib[n - 1] % 1000000007) % 1000000007\n            result = result % 1000000007\n            result += m * m % 1000000007 * fib[n] % 1000000007\n            result = result % 1000000007\n        print(result % 1000000007)\nmain()", "t = int(input())\nwhile t > 0:\n    a1 = 1\n    a2 = 1\n    a3 = 0\n    ind = list(map(int, input().split(' ')))\n    m = ind[0]\n    n = ind[1]\n    sum1 = 0\n    sum2 = 0\n    result = 0\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    for j in range(0, m):\n        sum1 = sum1 + a[j]\n        sum2 = sum2 + b[j]\n    for k in range(n - 3):\n        a3 = a1 + a2\n        a1 = a2\n        a2 = a3\n    if n == 1:\n        a1 = 1\n        a2 = 0\n        result = m * sum1 % 1000000007\n    elif n == 2:\n        a1 = 0\n        a2 = 1\n        result = m * sum2 % 1000000007\n    else:\n        result = m * (a1 * sum1 + a2 * sum2) % 1000000007\n    print(result)\n    t = t - 1", "def getNthFib(i, j, n):\n    if n == 1 or n == 2:\n        return n\n    k = i + j\n    count = 3\n    while count < n:\n        i = j\n        j = k\n        k = i + j\n        count += 1\n    return k\n\ndef getResult(a, b, n):\n    result = 0\n    l = len(a)\n    A3 = sum(a) + l * b[0]\n    A4 = A3 + l * b[0]\n    if n == 1:\n        return sum(a) * l\n    elif n == 2:\n        return sum(b) * l\n    if n >= 4:\n        An = getNthFib(A3, A4, n - 2)\n    elif n == 3:\n        An = A3\n    else:\n        An = A4\n    p = 0\n    for i in range(1, l):\n        p += (l - i) * (b[i] - b[i - 1])\n    p = p * getNthFib(1, 2, n - 2) + An\n    result = p * l\n    return result\nt = int(input())\nfor i in range(t):\n    (M, N) = map(int, input().split())\n    a_arr = [int(k) for k in input().split()]\n    b_arr = [int(k) for k in input().split()]\n    print(getResult(a_arr, b_arr, N) % (10 ** 9 + 7))", "T = int(input())\nfor t in range(T):\n    mn = list(map(int, input().split()))\n    m = mn[0]\n    n = mn[1]\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sum(a) * m\n    b = sum(b) * m\n    fib = [0] * max(2, n)\n    fib[0] = a\n    fib[1] = b\n    for j in range(2, n):\n        fib[j] = fib[j - 1] + fib[j - 2]\n    print(fib[n - 1] % 1000000007)", "t = int(input())\nfor i in range(t):\n    d = 10 ** 9 + 7\n    (m, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    s1 = sum(a) * m\n    s2 = sum(b) * m\n    if k == 1:\n        print(s1 % d)\n    if k == 2:\n        print(s2 % d)\n    if k > 2:\n        for i in range(3, k + 1):\n            c = (s1 + s2) % d\n            s1 = s2\n            s2 = c\n        print(s2 % d)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (result, suma, sumb) = (0, 0, 0)\n    fib = [0] * max(2, n)\n    for i in range(m):\n        suma = suma + m * a[i]\n        sumb = sumb + m * b[i]\n        fib[0] = suma\n        fib[1] = sumb\n    for k in range(2, n):\n        fib[k] = fib[k - 1] + fib[k - 2]\n    result = fib[n - 1]\n    print(result % (10 ** 9 + 7))", "def f(s1, s2, t):\n    d = [0] * t + [0]\n    (d[0], d[1]) = (s1, s2)\n    for i in range(2, t):\n        d[i] = d[i - 1] + d[i - 2]\n    return d[t - 1]\nt = int(input())\nwhile t > 0:\n    (m, n) = input().split(' ')\n    a = [int(x) for x in input().split(' ')]\n    b = [int(x) for x in input().split(' ')]\n    sum1 = sum(a) * int(m)\n    sum2 = sum(b) * int(m)\n    res = f(sum1, sum2, int(n))\n    M = 1000000007\n    print(res % M)\n    t -= 1", "def fibs(M, N, A, B):\n    n = 0\n    result = 0\n    fib = [0, 1, 2]\n    n = max(2, N)\n    while len(fib) < n + 1:\n        fib.append(0)\n    fib[1] = A\n    fib[2] = B\n    for k in range(3, n + 1):\n        fib[k] = fib[k - 1] + fib[k - 2]\n    result = fib[n]\n    ans1 = result % (10 ** 9 + 7)\n    print(ans1)\nT = int(input())\nwhile T > 0:\n    sumA = 0\n    sumB = 0\n    mandn = input().split()\n    N = int(mandn[1])\n    M = int(mandn[0])\n    A = input().split()\n    B = input().split()\n    for j in range(0, M):\n        sumA = sumA + M * int(A[j])\n        sumB = sumB + M * int(B[j])\n    fibs(M, N, sumA, sumB)\n    T = T - 1", "test = int(input())\nfor i in range(test):\n    (M, N) = map(int, input().strip().split())\n    A = list(map(int, input().strip().split()))\n    B = list(map(int, input().strip().split()))\n    FibSeries = []\n    result = 0\n    sumB = 0\n    sumA = 0\n    fib = []\n    FibSeries.append(0)\n    FibSeries.append(1)\n    fib.append(A[0])\n    fib.append(B[0])\n    for z in range(2, N, 1):\n        FibSeries.append(FibSeries[z - 1] + FibSeries[z - 2])\n        fib.append(fib[z - 1] + fib[z - 2])\n    for j in range(M):\n        sumB = sumB + (B[j] - B[0])\n        sumA = sumA + (A[j] - A[0])\n    z = sumB * FibSeries[-1]\n    y = sumA * FibSeries[-2] + M * fib[-1]\n    result = M * (y + z)\n    print(result % (10 ** 9 + 7))\n    test = test + 1", "T = int(input())\nfor t in range(T):\n    lis = list(map(int, input().split()))\n    m = lis[0]\n    n = lis[1]\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = 1000000007\n    fiba = [0] * (n + 2)\n    fiba[1] = 1\n    fiba[2] = 0\n    for i in range(3, n + 2):\n        fiba[i] = fiba[i - 1] + fiba[i - 2]\n    print((fiba[n] * sum(a) + fiba[n + 1] * sum(b)) * m % p)", "t = int(input())\nfor i in range(0, t):\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    result = 0\n    c = sum(a) * m\n    d = sum(b) * m\n    if n is 1:\n        print(c % 1000000007)\n    elif n is 2:\n        print(d % 1000000007)\n    else:\n        for k in range(2, n):\n            result = c + d\n            c = d\n            d = result\n        print(result % 1000000007)", "mod = 10 ** 9 + 7\n\ndef fun(a, b, n, m):\n    (res, ax, bx) = (0, 0, 0)\n    for i in range(m):\n        ax += a[i]\n    for i in range(m):\n        bx += b[i]\n    (ax, bx) = (ax * m % mod, bx * m % mod)\n    fib = [ax, bx]\n    for i in range(2, max(2, n)):\n        fib.append(fib[i - 1] % mod + fib[i - 2] % mod)\n    return fib[max(2, n) - 1] % mod\nfor i in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(fun(a, b, n, m))", "t = int(input())\nwhile t > 0:\n    (m, n) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    div = 1000000007\n    fib = [(1, 0), (0, 1)]\n    for i in range(2, 100001):\n        fib.append(((fib[i - 1][0] + fib[i - 2][0]) % div, (fib[i - 1][1] + fib[i - 2][1]) % div))\n    res = 0\n    for i in range(m):\n        res += (A[i] * fib[n - 1][0] + B[i] * fib[n - 1][1]) % div\n    res = res * m\n    res = res % div\n    print(res)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s1 = list(map(int, input().split()))\n    m = int(s1[0])\n    n = int(s1[1])\n    s2 = list(map(int, input().split()))\n    s3 = list(map(int, input().split()))\n    sum1 = sum(s2)\n    sum2 = sum(s3)\n    fib = [0] * max(2, n)\n    fib[0] = m * sum1\n    fib[1] = m * sum2\n    for j in range(2, n):\n        fib[j] = fib[j - 1] + fib[j - 2]\n    print(fib[n - 1] % 1000000007)", "t = int(input())\nfor j in range(t):\n    s1 = [int(i) for i in input().split(' ')]\n    m = s1[0]\n    n = s1[1]\n    s2 = [int(i) for i in input().split(' ')]\n    s3 = [int(i) for i in input().split(' ')]\n    sum1 = sum(s2)\n    sum2 = sum(s3)\n    fib = [0] * max(2, n)\n    fib[0] = m * sum1\n    fib[1] = m * sum2\n    for j in range(2, n):\n        fib[j] = fib[j - 1] + fib[j - 2]\n    print(fib[n - 1] % 1000000007)", "mod = 1000000007\nfibs = [(1, 0), (0, 1)]\nfor i in range(2, 100001):\n    fibs.append(((fibs[i - 1][0] + fibs[i - 2][0]) % mod, (fibs[i - 1][1] + fibs[i - 2][1]) % mod))\nt = int(input())\nwhile t > 0:\n    (m, n) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    res = 0\n    for i in range(m):\n        res = res + (a[i] * fibs[n - 1][0] + b[i] * fibs[n - 1][1]) % mod\n    res = res * m\n    print(res % mod)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (m, n) = [int(x) for x in input().split(' ')]\n    result = 0\n    a = [int(x) for x in input().split(' ')]\n    b = [int(x) for x in input().split(' ')]\n    a1 = 1\n    a2 = 1\n    a3 = 0\n    a_sum = 0\n    b_sum = 0\n    for i in range(m):\n        a_sum = (a_sum + a[i]) % 1000000007\n        b_sum = b_sum + b[i] % 1000000007\n    for i in range(n - 3):\n        a3 = a1 + a2\n        a1 = a2\n        a2 = a3\n    if n == 2:\n        a1 = 0\n        a2 = 1\n        print(m * b_sum % 1000000007)\n    elif n == 1:\n        a1 = 1\n        a2 = 0\n        print(m * a_sum % 1000000007)\n    else:\n        result = m * (a1 * a_sum + a2 * b_sum)\n        print(result % 1000000007)", "modulo = pow(10, 9) + 7\nT = int(input())\nfor j in range(T):\n    s = input()\n    s = s.split()\n    M = int(s[0])\n    N = int(s[1])\n    a = input()\n    a = a.split()\n    b = input()\n    b = b.split()\n    for i in range(M):\n        a[i] = int(a[i])\n        b[i] = int(b[i])\n    sum_a = 0\n    sum_b = 0\n    for i in range(M):\n        sum_a += a[i]\n        sum_b += b[i]\n    result = 0\n    sum_a *= M\n    sum_b *= M\n    if N == 1:\n        result = sum_a % modulo\n    elif N == 2:\n        result = sum_b % modulo\n    else:\n        var = 0\n        x = sum_a\n        y = sum_b\n        k = 2\n        while N > k:\n            var = (x + y) % modulo\n            x = y\n            y = var\n            k += 1\n        result = var % modulo\n    print(result)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    d = 1000000007\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    result = 0\n    sum1 = sum2 = 0\n    for i in range(m):\n        sum1 = (sum1 + a[i]) % d\n        sum2 = (sum2 + b[i]) % d\n    if n == 1:\n        result = sum1 * m % d\n        print(result)\n    elif n == 2:\n        result = sum2 * m % d\n        print(result)\n    else:\n        x = 0\n        y = 1\n        ans = 1\n        k = n - 2\n        while k > 0:\n            ans = (x + y) % d\n            x = y\n            y = ans\n            k = k - 1\n        result = (sum1 * x % d * m % d + sum2 * ans % d * m % d) % d\n        print(result)", "for case in range(int(input())):\n    (m, n) = (int(i) for i in input().split())\n    p = sum([int(i) for i in input().split()]) * m\n    q = sum([int(i) for i in input().split()]) * m\n    for i in range(n - 1):\n        (p, q) = (q, p + q)\n    print(p % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    result = 0\n    t = 0\n    if n > 2:\n        size = n\n    else:\n        size = 2\n    fib1 = 0\n    fib2 = 0\n    for i in range(len(a)):\n        fib1 = fib1 + a[i] * m\n        fib2 = fib2 + b[i] * m\n    for k in range(2, size):\n        s = fib2\n        fib2 = fib1 + fib2\n        fib1 = s\n    result = result + fib2\n    print(result % (10 ** 9 + 7))", "for case in range(int(input())):\n    (m, n) = (int(i) for i in input().split())\n    a = sum([int(i) for i in input().split()]) * m\n    b = sum([int(i) for i in input().split()]) * m\n    for i in range(n - 1):\n        (a, b) = (b, a + b)\n    print(a % (10 ** 9 + 7))", "import math\nimport copy\nt = int(input())\nwhile t > 0:\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    modulo = 1000000007\n    sum_a = 0\n    sum_b = 0\n    for i in a:\n        sum_a += i % modulo\n        sum_a = sum_a % modulo\n    for i in b:\n        sum_b += i % modulo\n        sum_b = sum_b % modulo\n    sum_a = sum_a * m % modulo\n    sum_b = sum_b * m % modulo\n    l = list()\n    l.append(sum_a)\n    l.append(sum_b)\n    for i in range(2, n):\n        l.append((l[i - 1] + l[i - 2]) % modulo)\n    print(l[-1])\n    t -= 1", "test = int(input())\nfor i in range(test):\n    (M, N) = map(int, input().strip().split())\n    A = list(map(int, input().strip().split()))\n    B = list(map(int, input().strip().split()))\n    FibSeries = []\n    result = 0\n    sumB = 0\n    sumA = 0\n    fib = []\n    FibSeries.append(0)\n    FibSeries.append(1)\n    fib.append(A[0])\n    fib.append(B[0])\n    for z in range(2, N, 1):\n        FibSeries.append(FibSeries[z - 1] + FibSeries[z - 2])\n        fib.append(fib[z - 1] + fib[z - 2])\n    for j in range(M):\n        sumB = sumB + (B[j] - B[0])\n        sumA = sumA + (A[j] - A[0])\n    z = sumB * FibSeries[-1]\n    y = sumA * FibSeries[-2] + M * fib[-1]\n    result = M * (y + z)\n    print(result % (10 ** 9 + 7))\n    test = test + 1", "mod = 1000000007\nxCoeff = [0] * 100000\nyCoeff = [0] * 100000\nxCoeff[0] = 1\nyCoeff[0] = 1\nfor i in range(1, 100000):\n    yCoeff[i] = (xCoeff[i - 1] + yCoeff[i - 1]) % mod\n    xCoeff[i] = yCoeff[i - 1] % mod\ntCases = int(input())\nwhile tCases > 0:\n    (M, N) = list(map(lambda x: int(x), input().split()))\n    aryA = list(map(lambda x: int(x), input().split()))\n    aryB = list(map(lambda x: int(x), input().split()))\n    sumA = 0\n    sumB = 0\n    for i in range(M):\n        sumA = (sumA + aryA[i]) % mod\n        sumB = (sumB + aryB[i]) % mod\n    if N >= 3:\n        result = (xCoeff[N - 3] * (sumA % mod) % mod + yCoeff[N - 3] * (sumB % mod) % mod) % mod * M % mod\n    elif N == 1:\n        result = M * sumA % mod\n    elif N == 2:\n        result = M * sumB % mod\n    print(result)\n    tCases = tCases - 1", "import sys\nsys.setrecursionlimit(10 ** 9)\nglobal p\np = 10 ** 9 + 7\n\ndef fib(l, l1, n):\n    if n == 1:\n        return l\n    if n == 2:\n        return l1\n    n -= 2\n    while n > 0:\n        l2 = [(l[0] + l1[0]) % p, (l[1] + l1[1]) % p]\n        (l, l1) = (l1, l2)\n        n -= 1\n    return l2\ntest = int(input())\nwhile test > 0:\n    test -= 1\n    (m, n) = map(int, input().split())\n    a = sum(list(map(int, input().split())))\n    b = sum(list(map(int, input().split())))\n    c = fib([1, 0], [0, 1], n)\n    (c0, c1) = (c[0], c[1])\n    c = 0\n    c = c0 * a % p\n    c += c1 * b % p\n    c = c * m\n    c %= p\n    print(c)", "def method1(A, B):\n    result = 0\n    for i in range(M):\n        for j in range(M):\n            fib = []\n            fib.append(A[i])\n            fib.append(B[j])\n            for k in range(2, N):\n                fib.append(fib[k - 1] + fib[k - 2])\n            result += fib[N - 1]\n    return result % MOD\n\ndef method2(A, B):\n\n    class AB(object):\n\n        def __init__(self, A, B):\n            self.A = A\n            self.B = B\n    if N == 1:\n        fib_n = AB(1, 0)\n    elif N == 2:\n        fib_n = AB(0, 1)\n    else:\n        fib_x_1 = AB(1, 0)\n        fib_x_2 = AB(0, 1)\n        for k in range(N - 2):\n            newA = fib_x_1.A + fib_x_2.A\n            newB = fib_x_1.B + fib_x_2.B\n            fib_x_3 = AB(newA, newB)\n            (fib_x_1, fib_x_2) = (fib_x_2, fib_x_3)\n        fib_n = fib_x_3\n    result = 0\n    result += fib_n.A * sum(A) * M + fib_n.B * sum(B) * M\n    return result % MOD\nT = int(input())\nMOD = 10 ** 9 + 7\nfor _ in range(T):\n    (M, N) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    print(method2(A, B))", "def fib(a, b, n):\n    for _ in range(n):\n        (a, b) = (b, a + b)\n    return a\nModAmt = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (M, N) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    (A, B) = (M * sum(A), M * sum(B))\n    result = fib(A, B, N - 1)\n    result %= ModAmt\n    print(result)", "def fib(a, b, n):\n    for _ in range(n):\n        (a, b) = (b, a + b)\n    return a\nModAmt = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (M, N) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    (A, B) = (M * sum(A), M * sum(B))\n    result = fib(A, B, N - 1)\n    print(divmod(result, ModAmt)[-1])", "def fib(a, b, n):\n    for _ in range(n):\n        (a, b) = (b, a + b)\n    return a\nModAmt = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (M, N) = [int(x) for x in input().split()]\n    A = sum([int(x) for x in input().split()]) * M\n    B = sum([int(x) for x in input().split()]) * M\n    result = fib(A, B, N - 1)\n    result %= ModAmt\n    print(result)", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    i1 = list(map(int, input().split()))\n    i2 = list(map(int, input().split()))\n    googly = 0\n    mod = 1000000007\n    googly1 = 0\n    for j in range(m):\n        googly = (googly + i1[j]) % mod\n        googly1 = (googly1 + i2[j]) % mod\n    if n == 1:\n        print(googly * m % mod)\n        continue\n    if n == 2:\n        print(googly1 * m % mod)\n        continue\n    a = []\n    a.append(1)\n    a.append(1)\n    for j in range(2, n + 2):\n        a.append((a[j - 1] + a[j - 2]) % mod)\n    value = googly * a[n - 3] % mod + googly1 * a[n - 2] % mod\n    value = value * m % mod\n    print(value)", "t = int(input())\nmod = 1000000007\nfor _ in range(t):\n    cnt = 0\n    (m, n) = list(map(int, input().split()))\n    sz = max(2, n)\n    result = 0\n    val = 0\n    init = 0\n    xChange = 0\n    diff = 0\n    u = 0\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    fib1 = a[0]\n    fib2 = b[0]\n    cn = 0\n    for k in range(2, n):\n        cn = (fib1 % mod + fib2 % mod) % mod\n        fib1 = fib2 % mod\n        fib2 = cn % mod\n    if n >= 3:\n        x = 1\n        y = 2\n        if n == 3:\n            diff = 1\n        elif n == 4:\n            diff = 2\n        else:\n            while cnt + 4 < n:\n                diff = (x + y) % mod\n                x = y % mod\n                y = diff % mod\n                cnt = cnt + 1\n    if n == 1:\n        init = a[0]\n    elif n == 2:\n        init = b[0]\n    elif n >= 3:\n        init = cn\n    if n >= 3:\n        for j in range(m):\n            val = diff * (b[j] - b[0]) % mod\n            cool = (init + val) % mod\n            result = (result + cool) % mod\n        u = result\n        for i in range(1, m):\n            if n > 3:\n                xChange = x * (a[i] - a[0]) % mod % mod\n            elif n == 3:\n                xChange = (a[i] - a[0]) % mod\n            xChange = xChange * m % mod\n            xChange = (u + xChange) % mod\n            result = (result + xChange) % mod\n    elif n == 2:\n        for i in range(m):\n            result = (result + b[i]) % mod\n        result = result * m % mod\n    else:\n        for i in range(m):\n            result = (result + a[i]) % mod\n        result = result * m % mod\n    result = result % mod\n    print(result)", "def fib(a, b, n1):\n    l = [a, b]\n    for i in range(2, n1):\n        l.append(l[i - 1] + l[i - 2])\n    return l[n1 - 1]\na1 = int(input())\nfor _ in range(a1):\n    (m, n) = [int(j) for j in input().split()]\n    l1 = [int(j) for j in input().split()]\n    l2 = [int(j) for j in input().split()]\n    c1 = 0\n    d1 = sum(l1)\n    d2 = sum(l2)\n    print(fib(d1, d2, n) * m % (10 ** 9 + 7))", "t = int(input())\nfor q in range(t):\n    (m, n) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f = [0] * max(2, n)\n    f[0] = sum(a) * m\n    f[1] = sum(b) * m\n    for w in range(2, n):\n        f[w] = f[w - 1] + f[w - 2]\n    print(f[n - 1] % (10 ** 9 + 7))", "def fibo(numb):\n    fib = [0, 1]\n    for i in range(2, numb + 1):\n        fib.append(fib[i - 1] + fib[i - 2])\n    return fib[numb]\nfor t in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (res, modafoka) = (0, 1000000007)\n    if n == 1:\n        (ma, mb) = (1, 0)\n    elif n == 2:\n        (ma, mb) = (0, 1)\n    else:\n        (ma, mb) = (fibo(n - 2), fibo(n - 1))\n    result = (ma % modafoka * (m % modafoka) * (sum(a) % modafoka) % modafoka + m % modafoka * (mb % modafoka) * sum(b)) % modafoka\n    print(result)", "def fib(n):\n    a = 0\n    b = 1\n    c = 0\n    for i in range(0, n - 2):\n        c = a + b\n        a = b\n        b = c\n    return (a, c)\nT = int(input())\nfor i in range(T):\n    result = 0\n    (M, N) = input().split()\n    M = int(M)\n    N = int(N)\n    if N == 1:\n        (a, b) = (0, 1)\n    elif N == 2:\n        (a, b) = (0, 1)\n    else:\n        (a, b) = fib(N)\n    A = input().split()\n    B = input().split()\n    for j in range(len(A)):\n        A[j] = int(A[j])\n    for j in range(len(B)):\n        B[j] = int(B[j])\n    sumA = 0\n    sumB = 0\n    for i in A:\n        sumA += i\n    for i in B:\n        sumB += i\n    result += sumA * a\n    result += sumB * b\n    result *= M\n    print(result % 1000000007)", "MOD = 1000000007\nfib = [0, 0, 1]\nfor i in range(3, 100005):\n    fib.append((fib[i - 1] + fib[i - 2]) % MOD)\nT = int(input())\nfor _ in range(T):\n    (M, N) = input().split()\n    (M, N) = (int(M), int(N))\n    sum_a = sum_b = 0\n    A = [int(x) for x in input().split()]\n    sum_a = sum(A) % MOD\n    B = [int(x) for x in input().split()]\n    sum_b = sum(B) % MOD\n    first = sum_a * M % MOD\n    second = sum_b * M % MOD\n    if N is 1:\n        print(first)\n    elif N is 2:\n        print(second)\n    else:\n        print((first * fib[N - 1] % MOD + second * fib[N] % MOD) % MOD)", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = s.split()\n    m = int(s[0])\n    n = int(s[1])\n    a = input()\n    a = a.split()\n    for q in range(m):\n        a[q] = int(a[q])\n    b = input()\n    b = b.split()\n    for q in range(m):\n        b[q] = int(b[q])\n    x = []\n    y = []\n    arr = []\n    x.append(1)\n    x.append(0)\n    y.append(0)\n    y.append(1)\n    arr.append(a[0])\n    arr.append(b[0])\n    result = 0\n    for j in range(2, n):\n        arr.append((arr[j - 1] + arr[j - 2]) % 1000000007)\n        x.append((x[j - 1] + x[j - 2]) % 1000000007)\n        y.append((y[j - 1] + y[j - 2]) % 1000000007)\n    result += arr[n - 1] * m * m % 1000000007\n    for j in range(m):\n        result += ((a[j] - a[0]) * x[n - 1] + (b[j] - b[0]) * y[n - 1]) * m\n    result = result % 1000000007\n    print(result)", "M = 1000000007\nfib_count = [(1, 0), (0, 1)]\nfor i in range(2, 100001):\n    fib_count.append(((fib_count[i - 1][0] + fib_count[i - 2][0]) % M, (fib_count[i - 1][1] + fib_count[i - 2][1]) % M))\nt = int(input())\nwhile t > 0:\n    (m, n) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    result = 0\n    for i in range(m):\n        result += (a[i] * fib_count[n - 1][0] + b[i] * fib_count[n - 1][1]) % M\n    result *= m\n    print(result % M)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    fib = []\n    c = 1000000007\n    (total, sum) = (0, 0)\n    mn = input().split()\n    a = input().split()\n    b = input().split()\n    for j in range(int(mn[0])):\n        a[j] = int(a[j])\n        sum = (sum + int(b[j])) % c\n    for j in range(int(mn[1])):\n        if j == 1 or j == 0:\n            fib.append(j)\n        else:\n            fib.append((fib[j - 1] + fib[j - 2]) % c)\n    for j in range(int(mn[0])):\n        if int(mn[1]) == 1:\n            total = (total + a[j]) % c\n        else:\n            total = (total + int(mn[0]) * fib[int(mn[1]) - 2] % c * a[j] % c + fib[int(mn[1]) - 1] * sum % c) % c\n    print(total)", "import operator\nmod = 1000000007\nt = int(input())\nfor _ in range(t):\n    lol = [int(i) for i in input().split()]\n    m = int(lol[0])\n    n = int(lol[1])\n    asum = 0\n    bsum = 0\n    for i in input().split():\n        asum += int(i)\n    for i in input().split():\n        bsum += int(i)\n    fib = []\n    fib.append((1, 0))\n    fib.append((0, 1))\n    for i in range(2, n + 1):\n        fib.append(tuple(map(operator.add, fib[i - 1], fib[i - 2])))\n    ans = (m * asum * fib[n - 1][0] % mod + m * bsum * fib[n - 1][1] % mod) % mod\n    print(ans)", "t = int(input())\na = [0, 1, 0]\nb = [0, 0, 1]\nfor i in range(3, 100005):\n    a.append(a[i - 1] + a[i - 2])\n    b.append(b[i - 1] + b[i - 2])\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    m = int(m)\n    n = int(n)\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print((sum(B) * b[n] * m + sum(A) * a[n] * m) % 1000000007)", "mod = 10 ** 9 + 7\nfib = [0] * 100000\nfib[1] = 1\nfor k in range(2, 100000):\n    fib[k] = (fib[k - 1] + fib[k - 2]) % mod\nT = int(input())\nfor t in range(T):\n    (m, n) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sum_a = sum(a) % mod\n    sum_b = sum(b) % mod\n    if n == 1:\n        res = sum_a\n    else:\n        res = (a[0] * fib[n - 2] * m + sum_b * fib[n - 1]) % mod\n    res = res * m % mod\n    multiplier = n - 2\n    if multiplier > 0:\n        if multiplier <= 2:\n            multiplier = 1\n        else:\n            multiplier = fib[multiplier] % mod\n        diff = (sum_a - a[0] * m) % mod\n        res = (res + multiplier * diff * m) % mod\n    print(res % mod)", "for t in range(int(input())):\n    (m, n) = [int(m) for m in input().split()]\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    mod = int(1000000000.0 + 7)\n    if n == 1:\n        print(sum(arr1) * m % mod)\n    elif n == 2:\n        print(sum(arr2) * m % mod)\n    else:\n        (f1, f2) = (0, 1)\n        for i in range(n - 2):\n            (f1, f2) = (f2, f1 + f2)\n        print(m * (sum(arr1) * f1 + sum(arr2) * f2) % mod)", "x = int(input())\nfor i in range(x):\n    d = 0\n    f = 0\n    (M, N) = map(int, input().split())\n    fibonacci = [0, 1]\n    for i in range(2, max(2, N)):\n        fibonacci.append(fibonacci[i - 1] + fibonacci[i - 2])\n    array = [int(item) for item in input().split()]\n    d = sum(array)\n    z = int(d) * int(M)\n    t = int(z) * int(fibonacci[max(2, N) - 2])\n    arr = [int(item) for item in input().split()]\n    f = sum(arr)\n    s = int(f) * int(M)\n    q = int(s) * int(fibonacci[max(2, N) - 1])\n    k = int(t) + int(q)\n    print(int(k) % (1000000000 + 7))", "def fibser(n1, n2, con):\n    a = [0] * con\n    a[0] = n1\n    a[1] = n2\n    for i in range(2, con):\n        a[i] = a[i - 1] + a[i - 2]\n    return a[-1]\ntc = int(input())\nwhile tc != 0:\n    sm = 0\n    n = input().split()\n    a = input().split()\n    b = input().split()\n    n = list(map(int, n))\n    a = list(map(int, a))\n    b = list(map(int, b))\n    sma = sum(a)\n    smb = sum(b)\n    if n[1] <= 2:\n        print(sum(b) * len(b))\n        tc -= 1\n        continue\n    res = fibser(sma, smb, n[1])\n    result = res * len(b) % 1000000007\n    print(result)\n    tc -= 1", "T = int(input())\nfor i in range(T):\n    a = input()\n    Q = list(map(int, a.split()))\n    M = Q[0]\n    N = Q[1]\n    a1 = input()\n    A = list(map(int, a1.split()))\n    a2 = input()\n    B = list(map(int, a2.split()))\n    sum1 = 0\n    sum2 = 0\n    for i in range(M):\n        sum1 = sum1 + A[i] * M\n        sum2 = sum2 + B[i] * M\n    if N == 1:\n        print(sum1 % 1000000007)\n    elif N == 2:\n        print(sum2 % 1000000007)\n    elif N > 2:\n        while N > 2:\n            temp = sum1\n            sum1 = sum2\n            sum2 = temp + sum2\n            N = N - 1\n        print(sum2 % 1000000007)", "def fib(n):\n    (a, b) = (0, 1)\n    for i in range(0, n):\n        (a, b) = (b, a + b)\n    return a\n\ndef cal(suma, sumb, n, m):\n    x = 1000000007\n    val = m * (suma * fib(n - 2) + sumb * fib(n - 1)) % x\n    return val\nt = int(input())\nfor i in range(t):\n    v = list(map(int, input().split(' ')))\n    suma = 0\n    sumb = 0\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    for j in range(v[0]):\n        suma += a[j]\n    for j in range(v[0]):\n        sumb += b[j]\n    if v[1] <= 2:\n        if v[1] == 1:\n            print(suma * v[0])\n        else:\n            print(sumb * v[1])\n    else:\n        print(cal(suma, sumb, v[1], v[0]))", "MAX = 100000\nf = [0] * MAX\n\ndef fibo(n):\n    if n == 0:\n        return 0\n    if n == 1 or n == 2:\n        f[n] = 1\n        return f[n]\n    if f[n]:\n        return f[n]\n    if n & 1:\n        k = (n + 1) // 2\n    else:\n        k = n // 2\n    if n & 1:\n        f[n] = fibo(k) * fibo(k) + fibo(k - 1) * fibo(k - 1)\n    else:\n        f[n] = (2 * fibo(k - 1) + fibo(k)) * fibo(k)\n    return f[n]\nfor _ in range(int(input())):\n    (m, n) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    result = 0\n    (sumA, sumB) = (sum(A), sum(B))\n    if n == 1:\n        result = sumA * m\n    else:\n        fib = [0] * n\n        if n >= 3:\n            fib[n - 1] = (fibo(n - 2) * sumA + fibo(n - 1) * sumB) * m\n        if n == 2:\n            fib[n - 1] = sumB * m\n        result += fib[n - 1]\n    print(result % 1000000007)", "import math\nt = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mo = 1000000007\n    sa = 0\n    sb = 0\n    for i in range(m):\n        sa = (sa + a[i]) % mo\n        sb = (sb + b[i]) % mo\n    thr = sa * m % mo\n    fou = sb * m % mo\n    res = 0\n    fib = [0] * max(2, n)\n    fib[0] = thr\n    fib[1] = fou\n    for k in range(2, n):\n        fib[k] = (fib[k - 1] + fib[k - 2]) % mo\n    res = (res + fib[n - 1]) % mo\n    print(res)", "q = 10 ** 9 + 7\n\ndef fib(a, b, n):\n    c = 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return a\n    elif n == 2:\n        return b\n    else:\n        for i in range(3, n + 1):\n            c = a + b\n            a = b\n            b = c\n        return c\nt = int(input())\nfor i in range(0, t):\n    y = []\n    z = []\n    result = 0\n    (m, n) = map(int, input().split())\n    y = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    s = 0\n    t = 0\n    for j in range(0, m):\n        s = s + y[j]\n        t = t + z[j]\n    result = m * (fib(0, 1, n) * t + fib(0, 1, n - 1) * s)\n    print(result % q)", "q = 10 ** 9 + 7\n\ndef fib(a, b, n):\n    c = 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return a\n    elif n == 2:\n        return b\n    else:\n        for i in range(3, n + 1):\n            c = a + b\n            a = b\n            b = c\n        return c\nt = int(input())\nfor i in range(0, t):\n    y = []\n    z = []\n    result = 0\n    (m, n) = map(int, input().split())\n    y = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    s = 0\n    t = 0\n    for j in range(0, m):\n        s = s + y[j]\n        t = t + z[j]\n    result = m * ((fib(0, 1, n) % q * (t % q) % q + fib(0, 1, n - 1) % q * (s % q) % q) % q)\n    print(result % q)", "val = int(input())\nfor i in range(val):\n    N1 = input().split(' ')\n    N = int(N1[0])\n    M = int(N1[1])\n    l1 = []\n    l2 = []\n    l1 = input().split(' ')\n    l2 = input().split(' ')\n    sum3 = 0\n    sum1 = 0\n    sum2 = 0\n    sum4 = 0\n    for u in range(N):\n        sum1 = N * int(l1[u]) + sum1\n        sum2 = N * int(l2[u]) + sum2\n        sum3 = N * (int(l1[u]) + int(l2[u])) + sum3\n        sum4 = N * (int(l1[u]) + 2 * int(l2[u])) + sum4\n    B = 4\n    j = 1000000007\n    if M == 1:\n        print(sum1 % j)\n    elif M == 2:\n        print(sum2 % j)\n    elif M == 3:\n        print(sum3 % j)\n    elif M == 4:\n        print(sum4 % j)\n    else:\n        while M != B:\n            B = B + 1\n            qw = sum4\n            sum4 = sum4 + sum3\n            sum3 = qw\n        print(sum4 % j)", "F = [0] * 100001\nF[0] = 1\nF[1] = 0\nfor i in range(2, 100001):\n    F[i] = (F[i - 1] + F[i - 2]) % 1000000007\nt = int(input().strip())\nfor i in range(t):\n    (m, n) = [int(x) for x in input().strip().split(' ')]\n    a = [int(x) for x in input().strip().split(' ')]\n    b = [int(x) for x in input().strip().split(' ')]\n    r = 0\n    for i in range(m):\n        r += a[i] * F[n - 1] + b[i] * F[n]\n    print(r * m % 1000000007)", "t = int(input())\nfor it in range(t):\n    (m, n) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    a = m * sum(l1)\n    b = m * sum(l2)\n    if n == 1:\n        c = a\n    elif n == 2:\n        c = b\n    for i in range(n - 2):\n        c = a + b\n        a = b\n        b = c\n    print(c % (10 ** 9 + 7))", "mod = 1000000007\nfib_map = {}\nfib_map[-1] = 1\nfib_map[0] = 0\nfib_map[1] = 1\nfor n in range(2, 100001):\n    fib_map[n] = (fib_map[n - 1] + fib_map[n - 2]) % mod\nT = int(input())\nfor i in range(T):\n    (M, N) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    a_times = sum(A) * M % mod\n    b_times = sum(B) * M % mod\n    print((a_times * fib_map[N - 2] % mod + b_times * fib_map[N - 1] % mod) % mod)", "t = int(input())\nr = 10 ** 9 + 7\n\ndef mul(c, d):\n    return [(c[0] * d[0] + c[1] * d[2]) % r, (c[0] * d[1] + c[1] * d[3]) % r, (c[2] * d[0] + c[3] * d[2]) % r, (c[2] * d[1] + c[3] * d[3]) % r]\n\ndef prod(m, n):\n    if n == 0:\n        return [1, 1, 1, 1]\n    if n == 1:\n        return m\n    p = prod(m, n // 2)\n    p = mul(p, p)\n    if n % 2 != 0:\n        p = mul(p, m)\n    return p\n\ndef func1():\n    return [int(x) for x in input().split()]\n\ndef func2():\n    (m, n) = func1()\n    a = func1()\n    b = func1()\n    sa = sum(a) % r\n    sb = sum(b) % r\n    mat = [1, 1, 1, 0]\n    if n == 1:\n        return m * sa\n    if n == 2:\n        return m * sb\n    if n > 2:\n        mat = prod(mat, n - 2)\n    p = mat[1] * (sa + sb) % r\n    p += mat[3] * sb % r\n    return m * p % r\na = []\nfor _ in range(t):\n    a.append(func2())\nfor aa in a:\n    print(aa)", "MOD = int(1000000000.0) + 7\n\ndef fib(n):\n    cur = 1\n    old = 0\n    i = 1\n    while i < n:\n        (cur, old, i) = (cur + old, cur, i + 1)\n    return cur % MOD\nT = int(input())\nfor test_case in range(T):\n    (M, N) = map(int, input().split())\n    A = input().split()\n    B = input().split()\n    (asu, bsu) = (0, 0)\n    for i in range(M):\n        asu += int(A[i])\n        bsu += int(B[i])\n        if asu >= MOD:\n            asu %= MOD\n        if bsu >= MOD:\n            bsu %= MOD\n    if N == 1:\n        print(M * asu % MOD)\n    elif N == 2:\n        print(M * bsu % MOD)\n    else:\n        print(M * ((fib(N - 2) * asu % MOD + fib(N - 1) * bsu % MOD) % MOD) % MOD)", "a = int(input())\nfor i in range(1, a + 1):\n    b = [int(x) for x in input().split()]\n    d = [int(z) for z in input().split()]\n    e = [int(y) for y in input().split()]\n    r = []\n    r.append(sum(d) * b[0])\n    r.append(sum(e) * b[0])\n    for j in range(2, b[1]):\n        r.append((r[j - 1] + r[j - 2]) % 1000000007)\n    if b[1] == 1:\n        print(r[0] % 1000000007)\n    elif b[1] == 2:\n        print(r[1] % 1000000007)\n    else:\n        print(r[b[1] - 1])", "mod = 7 + 10 ** 9\ntest = int(input())\nfor test_case in range(test):\n    (s_arr, s_fib) = map(int, input().split(' '))\n    arr1 = list(map(int, input().split(' ')))\n    arr2 = list(map(int, input().split(' ')))\n    f1 = sum(arr1) * s_arr % mod\n    f2 = sum(arr2) * s_arr % mod\n    f_sum = 0\n    if s_fib >= 1:\n        f_sum = f1\n    if s_fib >= 2:\n        f_sum = f2\n    if s_fib >= 3:\n        f_sum = (f1 + f2) % mod\n        f1 = f2\n        f2 = f_sum\n        for i in range(s_fib - 3):\n            f_sum = (f1 + f2) % mod\n            f1 = f2\n            f2 = f_sum\n    print(f_sum % mod)", "from operator import add\nmod = 7 + 10 ** 9\nt = int(input())\nfor _ in range(t):\n    r = 0\n    (m, n) = map(int, input().split(' '))\n    m1 = list(map(int, input().split(' ')))\n    m2 = list(map(int, input().split(' ')))\n    a = sum(m1) * m % mod\n    b = sum(m2) * m % mod\n    s = 0\n    if n >= 1:\n        s = a\n    if n >= 2:\n        s = b\n    if n >= 3:\n        s = (a + b) % mod\n        a = b\n        b = s\n        for i in range(n - 3):\n            s = (a + b) % mod\n            a = b\n            b = s\n    print(s % mod)", "mod = 1000000007\nF = {}\nF[-1] = 1\nF[0] = 0\nF[1] = 1\n\ndef fib(n):\n    if n in F:\n        return F[n]\n    if n & 1:\n        k = (n + 1) // 2\n    else:\n        k = n // 2\n    if n & 1:\n        F[n] = (fib(k) * fib(k) % mod + fib(k - 1) * fib(k - 1) % mod) % mod\n    else:\n        F[n] = (2 * fib(k - 1) + fib(k)) % mod * fib(k) % mod\n    return F[n]\nT = int(input())\nfor _ in range(T):\n    (M, N) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    X = M * sum(A) % mod\n    Y = M * sum(B) % mod\n    print((X * fib(N - 2) % mod + Y * fib(N - 1) % mod) % mod)", "test = int(input())\nfor i in range(test):\n    helper = input()\n    side = []\n    side = helper.split(' ')\n    M = int(side[0])\n    N = int(side[1])\n    A = []\n    B = []\n    A_sum = 0\n    B_sum = 0\n    val1 = input()\n    A = val1.split(' ')\n    for j in range(M):\n        A_sum = A_sum + int(A[j])\n    val2 = input()\n    B = val2.split(' ')\n    for j in range(M):\n        B_sum = B_sum + int(B[j])\n    A_sum = A_sum * M\n    B_sum = B_sum * M\n    arr = []\n    for k in range(0, max(2, N)):\n        arr.append(0)\n    arr[0] = A_sum\n    arr[1] = B_sum\n    fval = 0\n    for j in range(2, N):\n        arr[j] = arr[j - 1] + arr[j - 2]\n    fval = arr[N - 1] % (10 ** 9 + 7)\n    print(fval)", "t = int(input())\nmc = 10 ** 9 + 7\nfib = [0, 1] + [0 for i in range(10 ** 5)]\nfor i in range(2, len(fib)):\n    fib[i] = (fib[i - 1] + fib[i - 2]) % mc\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = 0\n    if n == 1:\n        res = m * sum(a)\n    elif n == 2:\n        res = m * sum(b)\n    else:\n        res = m * (fib[n - 2] * sum(a) + fib[n - 1] * sum(b))\n    print(res % mc)"]