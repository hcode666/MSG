["import sys\nsys.setrecursionlimit(3 * 10 ** 5)\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef inum():\n    return map(int, input().split())\nmodulo = 10 ** 9 + 7\n\ndef fun(n, k):\n    modulo = 10 ** 9 + 7\n    if n == 0:\n        return 1\n    return (power(k, n - 1, modulo) - fun(n - 1, k) % modulo + modulo) % modulo\nfor _ in range(int(input())):\n    (n, k) = inum()\n    if k == 1:\n        if n % 2 == 0:\n            print(1)\n        else:\n            print(0)\n    elif n == 2:\n        print(k)\n    else:\n        print(fun(n, k) % modulo)", "import sys\nsys.setrecursionlimit(3 * 10 ** 5)\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef inum():\n    return map(int, input().split())\nmodulo = 10 ** 9 + 7\n\ndef fun(n, k):\n    modulo = 10 ** 9 + 7\n    if n == 0:\n        return 1\n    return (power(k, n - 1, modulo) - fun(n - 1, k) % modulo + modulo) % modulo\nfor _ in range(int(input())):\n    (n, k) = inum()\n    if k == 1:\n        if n % 2 == 0:\n            print(1)\n        else:\n            print(0)\n    elif n == 2:\n        print(k)\n    else:\n        print(fun(n, k) % modulo)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    arr = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        arr[i] = (num_players - 1) ** i - arr[i - 1]\n    print(arr[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    arr = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        arr[i] = (num_players - 1) ** i - arr[i - 1]\n    print(arr[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    dp = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        dp[i] = (num_players - 1) ** i - dp[i - 1]\n    print(dp[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    dp = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        dp[i] = (num_players - 1) ** i - dp[i - 1]\n    print(dp[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    dp = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        dp[i] = (num_players - 1) ** i - dp[i - 1]\n    print(dp[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    dp = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(1, N):\n        dp[i] = (num_players - 1) ** i\n        dp[i] -= dp[i - 1]\n    print(dp[-1] % 1000000007)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    dp = [0] * N\n    num_players = K + 1\n    num_passes = N - 1\n    for i in range(N - 1):\n        dp[-i - 1] = (num_players - 1) ** (num_passes - i)\n    for i in range(1, len(dp)):\n        dp[i] -= dp[i - 1]\n    print(dp[-1] % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "MOD = 1000000007\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (a, b) = map(int, input().split())\n        solve(a, b)\n\ndef solve(p, n):\n    cache = [0] * (p + 1)\n    cache[0] = 0\n    cache[1] = 0\n    cache[2] = 1\n    for i in range(3, p + 1):\n        cache[i] = (n ** (i - 2) % MOD - cache[i - 1]) % MOD\n    print(n * cache[p] % MOD)\nmain()", "MOD = 1000000007\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (a, b) = map(int, input().split())\n        solve(a, b)\n\ndef solve(p, n):\n    cache = [0] * (p + 1)\n    cache[0] = 0\n    cache[1] = 0\n    cache[2] = 1\n    for i in range(3, p + 1):\n        cache[i] = (n ** (i - 2) % MOD - cache[i - 1]) % MOD\n    print(n * cache[p] % MOD)\nmain()", "t = int(input())\nfor k in range(t):\n    (passes, players) = map(int, input().split())\n    players += 1\n    dp = [[0 for i in range(players)] for j in range(passes)]\n    for i in range(1, players):\n        dp[0][i] = 1\n    prev_sum = players - 1\n    for i in range(1, passes):\n        cur_sum = 0\n        for j in range(players):\n            dp[i][j] = prev_sum - dp[i - 1][j]\n            cur_sum += dp[i][j]\n        prev_sum = cur_sum % (10 ** 9 + 7)\n    print(dp[passes - 1][0] % (10 ** 9 + 7))", "t = int(input())\nfor k in range(t):\n    (passes, players) = map(int, input().split())\n    players += 1\n    dp = [[0 for i in range(players)] for j in range(passes)]\n    for i in range(1, players):\n        dp[0][i] = 1\n    prev_sum = players - 1\n    for i in range(1, passes):\n        cur_sum = 0\n        for j in range(players):\n            dp[i][j] = prev_sum - dp[i - 1][j]\n            cur_sum += dp[i][j]\n        prev_sum = cur_sum % (10 ** 9 + 7)\n    print(dp[passes - 1][0] % (10 ** 9 + 7))", "t = int(input())\nfor k in range(t):\n    (passes, players) = map(int, input().split())\n    players += 1\n    dp = [[0 for i in range(players)] for j in range(passes)]\n    for i in range(1, players):\n        dp[0][i] = 1\n    prev_sum = players - 1\n    for i in range(1, passes):\n        cur_sum = 0\n        for j in range(players):\n            dp[i][j] = prev_sum - dp[i - 1][j]\n            cur_sum += dp[i][j]\n        prev_sum = cur_sum % (10 ** 9 + 7)\n    print(dp[passes - 1][0] % (10 ** 9 + 7))", "t = int(input())\nfor k in range(t):\n    (passes, players) = map(int, input().split())\n    players += 1\n    dp = [[0 for i in range(players)] for j in range(passes)]\n    for i in range(1, players):\n        dp[0][i] = 1\n    prev_sum = players - 1\n    for i in range(1, passes):\n        cur_sum = 0\n        for j in range(players):\n            dp[i][j] = prev_sum - dp[i - 1][j]\n            cur_sum += dp[i][j]\n        prev_sum = cur_sum % (10 ** 9 + 7)\n    print(dp[passes - 1][0] % (10 ** 9 + 7))", "t = int(input())\nfor k in range(t):\n    (passes, players) = map(int, input().split())\n    players += 1\n    dp = [[0 for i in range(players)] for j in range(passes)]\n    for i in range(1, players):\n        dp[0][i] = 1\n    prev_sum = players - 1\n    for i in range(1, passes):\n        cur_sum = 0\n        for j in range(players):\n            dp[i][j] = prev_sum - dp[i - 1][j]\n            cur_sum += dp[i][j]\n        prev_sum = cur_sum % (10 ** 9 + 7)\n    print(dp[passes - 1][0] % (10 ** 9 + 7))", "import sys\n\ndef win(player, passleft, dp):\n    if (player, passleft) in dp:\n        return dp[player, passleft]\n    if passleft == 0 and player == 0:\n        return 1\n    elif passleft == 0 and player != 0:\n        return 0\n    dp[player, passleft] = 0\n    for p in players:\n        if p != player:\n            dp[player, passleft] += win(p, passleft - 1, dp)\n    dp[player, passleft] = dp[player, passleft] % 1000000007\n    return dp[player, passleft]\nsys.setrecursionlimit(1500)\nt = int(input())\nfor _ in range(t):\n    (passes, nop) = list(map(int, input().split()))\n    players = [i for i in range(nop + 1)]\n    print(win(0, passes, {}))", "mod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter, defaultdict\n\ndef main():\n    dp = [[0, 0] for i in range(p + 1)]\n    dp[0][0] = 1\n    for i in range(1, p + 1):\n        dp[i][0] = dp[i - 1][1] * k % mod\n        dp[i][1] = dp[i - 1][1] * (k - 1) % mod + dp[i - 1][0] % mod\n    print(dp[p][0] % mod)\nt = int(input())\nfor _ in range(t):\n    (p, k) = integer_list()\n    main()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    c = k\n    s = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for j in range(n - 1):\n        s = c\n        ans *= k\n        c = ans - s\n    print(s % 1000000007)", "T = int(input())\ncounter = 0\nwhile counter < T:\n    (n, k) = map(int, input().split())\n    currpos = 0\n    non_zeroes = k\n    zeroes = 0\n    ans = k\n    if n <= 1:\n        print('0')\n        continue\n    for i in range(0, n - 1):\n        zeroes = non_zeroes\n        ans = ans * k\n        non_zeroes = ans - zeroes\n    print(zeroes % 1000000007)\n    counter += 1", "import sys\nsys.setrecursionlimit(10 ** 9)\n\ndef dfs(n, index):\n    if (n, index) in m:\n        return m[n, index]\n    if n == 0:\n        if index == k:\n            return 1\n        else:\n            return 0\n    res = 0\n    for j in range(k + 1):\n        if index != j:\n            res = (res + dfs(n - 1, j)) % mod\n    m[n, index] = res\n    return res\nt = int(input())\nmod = 10 ** 9 + 7\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    m = {}\n    ans = dfs(n, k)\n    print(ans)", "n = int(input())\nfor i in range(0, n):\n    (k, p) = list(map(int, input().split(' ')))\n    if k == 2:\n        print(p)\n    else:\n        mess = [0] * (k + 1)\n        nonmess = [0] * (k + 1)\n        nonmess[1] = p\n        for i in range(2, k):\n            mess[i] = nonmess[i - 1]\n            nonmess[i] = mess[i - 1] * p + nonmess[i - 1] * (p - 1)\n        print(nonmess[k - 1] % 1000000007)", "MD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    st = input().split()\n    N = int(st[0])\n    K = int(st[1])\n    M = 0\n    B = K\n    for k in range(N - 1):\n        (M, B) = (B, (K * M + (K - 1) * B) % MD)\n    print(M)", "T = int(input())\nfor _ in range(T):\n    (p, n) = map(int, input().split())\n    mod = 1000000007\n    if p == 2:\n        print(n)\n    else:\n        f = n\n        t = n\n        for i in range(p - 2):\n            f = f % mod * n % mod\n            a = (f - t + mod) % mod\n            t = a\n        print(a)", "T = int(input())\nfor _ in range(T):\n    (p, n) = map(int, input().split())\n    mod = 1000000007\n    if p == 2:\n        print(n)\n    else:\n        f = n\n        t = n\n        for i in range(p - 2):\n            f = f % mod * n % mod\n            a = (f - t + mod) % mod\n            t = a\n        print(a)", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    A = [[1], [0]]\n    for i in range(1, n + 1):\n        A[0].append(k * A[1][i - 1])\n        A[1].append(A[0][i - 1] + (k - 1) * A[1][i - 1])\n    print(A[0][n] % (10 ** 9 + 7))", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    messi = 0\n    non_messi = k\n    for i in range(n - 2):\n        z = non_messi\n        non_messi = (messi * k + z * (k - 1)) % e\n        messi = z\n    print(non_messi)", "try:\n    mod = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        ans = (k ** n + k * (-1) ** n) // (k + 1)\n        print(ans % mod)\nexcept:\n    pass", "s = pow(10, 9) + 7\na = [[0 for i in range(11)] for j in range(1001)]\nfor i in range(1, 11):\n    a[2][i] = i\nfor n in range(3, 1001):\n    for k in range(1, 11):\n        a[n][k] = pow(k, n - 1, s) - a[n - 1][k]\n        if a[n][k] < 0:\n            a[n][k] += s\nt = int(input())\nfor i in range(t):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    k = inp[1]\n    print(a[n][k])", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    j = (k ** n + k * (-1) ** n) // (k + 1)\n    j = j % 1000000007\n    print(j)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    sum = 0\n    z = 0\n    while n > 1:\n        sum += k ** (n - 1) * (-1) ** z\n        n -= 1\n        z += 1\n    print(sum % 1000000007)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    dp = [[0, 1]]\n    for i in range(n - 1):\n        dp.append([dp[-1][0] * (k - 1) + dp[-1][1] * k, dp[-1][0]])\n    print(dp[-1][0] % 1000000007)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    j = (k ** n + k * (-1) ** n) // (k + 1)\n    j = j % 1000000007\n    print(j)\n    t -= 1", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = (k ** n + k * (-1) ** n) // (k + 1)\n    print(ans % mod)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ls = [0] * (n + 1)\n    (ls[0], ls[1]) = (1, 0)\n    for i in range(2, n + 1):\n        ls[i] = ((k - 1) * ls[i - 1] + k * ls[i - 2]) % mod\n    print(ls[n])", "t = int(input())\nfor i in range(t):\n    arr = input()\n    l = list(map(int, arr.split(' ')))\n    n = l[0]\n    k = l[1]\n    f = []\n    f.append(k)\n    f.append(k * (k - 1))\n    if n == 2:\n        print(f[0] % 1000000007)\n    if n == 3:\n        print(f[-1] % 1000000007)\n    if n > 3:\n        for j in range(n - 3):\n            f.append(f[-2] * k + (k - 1) * f[-1])\n        print(f[-1] % 1000000007)", "m = 10 ** 9 + 7\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 2:\n        print(k)\n    elif n == 3:\n        print(k * (k - 1))\n    else:\n        a = []\n        a.append(0)\n        a.append(0)\n        a.append(k)\n        a.append(k * (k - 1))\n        i = 4\n        while i <= n:\n            val = (k - 1) * a[i - 1] % m\n            val += k * a[i - 2] % m\n            val %= m\n            a.append(val)\n            i += 1\n        print(a[-1])", "t = int(input())\nwhile t:\n    (n, k) = [int(x) for x in input().split()]\n    table = list()\n    table = [0 for x in range(n + 1)]\n    table[0] = 1\n    table[1] = 0\n    for i in range(1, n):\n        table[i + 1] = (table[i - 1] * k + table[i] * (k - 1)) % 1000000007\n    print(table[n])\n    t = t - 1", "def pulverize(a, b):\n    apair = [1, 0]\n    bpair = [0, 1]\n    while True:\n        if b == 0:\n            return (a, apair[0], apair[1])\n        else:\n            q = a // b\n            a -= b * q\n            apair[0] -= bpair[0] * q\n            apair[1] -= bpair[1] * q\n        if a == 0:\n            return (b, bpair[0], bpair[1])\n        else:\n            q = b // a\n            b -= a * q\n            bpair[0] -= apair[0] * q\n            bpair[1] -= apair[1] * q\n\ndef inverse(a, m):\n    (g, x, y) = pulverize(a, m)\n    if g == 1:\n        return x % m\n    else:\n        return 0\nmbase = 10 ** 9 + 7\n\ndef main():\n    t = int(input())\n    for it in range(t):\n        (n, k) = [int(x) for x in input().split()]\n        res = pow(k, n, mbase)\n        if n % 2 == 0:\n            res += k\n        else:\n            res -= k\n        res = res * inverse(k + 1, mbase) % mbase\n        print(res)\nmain()", "import sys\nfuck_messi = 1\nt = int(input())\n\ndef power(a, b):\n    p = 1\n    while b > 0:\n        p = p * a % 1000000007\n        p = p % 1000000007\n        b = b - 1\n    p = p % 1000000007\n    return p\nwhile t > 0:\n    a = sys.stdin.readline().split()\n    (n, k) = (int(a[0]), int(a[1]))\n    messi = 0\n    players = 0\n    i = 1\n    w = 1\n    if n % 2 == 0:\n        o = 1\n    else:\n        o = -1\n    while i < n - 2:\n        w = w * k % 1000000007\n        messi += o * w\n        messi = messi % 1000000007\n        o *= -1\n        i = i + 1\n    players = power(k, n - 2) % 1000000007\n    ans = ((players - messi) * (k - 1) % 1000000007 + messi * k % 10000000007) % 1000000007\n    if n == 2:\n        ans = k\n    ans = ans % 1000000007\n    print(ans)\n    t = t - 1", "import sys\nt = int(input())\n\ndef power(a, b):\n    p = 1\n    while b > 0:\n        p = p * a % 1000000007\n        p = p % 1000000007\n        b = b - 1\n    p = p % 1000000007\n    return p\nwhile t > 0:\n    a = sys.stdin.readline().split()\n    (n, k) = (int(a[0]), int(a[1]))\n    messi = 0\n    players = 0\n    i = 1\n    w = 1\n    if n % 2 == 0:\n        o = 1\n    else:\n        o = -1\n    while i < n - 2:\n        w = w * k % 1000000007\n        messi += o * w\n        messi = messi % 1000000007\n        o *= -1\n        i = i + 1\n    players = power(k, n - 2) % 1000000007\n    ans = ((players - messi) * (k - 1) % 1000000007 + messi * k % 10000000007) % 1000000007\n    if n == 2:\n        ans = k\n    ans = ans % 1000000007\n    print(ans)\n    t = t - 1", "t = int(input())\nif t >= 1 and t <= 100:\n    while t > 0:\n        (n, k) = input().split()\n        n = int(n)\n        k = int(k)\n        if n >= 2 and n <= 1000 and (k >= 1) and (k <= 10):\n            j = 1\n            i = 2\n            while i <= n:\n                if i != 2:\n                    if i % 2 != 0:\n                        j = j * k - 1\n                    else:\n                        j = j * k + 1\n                i = i + 1\n            print(k * j % 1000000007)\n        t = t - 1", "import sys\n\ndef passes(N, K):\n    res = 0\n    alt = 1\n    for i in range(1, N):\n        res += alt * K ** i\n        alt = -alt\n    return abs(res) % 1000000007\n\ndef process(input):\n    nb_of_cases = int(input.readline().rstrip())\n    for n in range(1, nb_of_cases + 1):\n        (N, K) = (int(i) for i in input.readline().rstrip().split())\n        answer = passes(N, K)\n        print(answer)\ninput_file = sys.stdin\nprocess(input_file)", "mod = 1000000007\n\ndef powmod(k, n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return k\n    if n % 2 == 1:\n        return k * powmod(k * k % mod, (n - 1) / 2) % mod\n    else:\n        return powmod(k * k % mod, n / 2) % mod\nt = int(input())\nwhile t:\n    t -= 1\n    line = input().split()\n    n = int(line[0])\n    k = int(line[1])\n    invmod = powmod(k + 1, mod - 2)\n    if n % 2 == 0:\n        ans = (powmod(k, n) + k) * invmod % mod\n    else:\n        ans = (powmod(k, n) + mod - k) * invmod % mod\n    print(ans)", "final = []\nfor j in range(2, 11):\n    li = []\n    li.append(0)\n    li.append(0)\n    li.append(j)\n    for i in range(3, 1001):\n        li.append(j * li[i - 2] + (j - 1) * li[i - 1])\n        li[i] = li[i] % 1000000007\n    final.append(li)\nfrom sys import stdin\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, stdin.readline().split(' '))\n    if k == 1:\n        if n % 2 == 0:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(final[k - 2][n])"]