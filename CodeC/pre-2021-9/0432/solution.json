["def Solve(s, n):\n    if len(s) != 5 or s.count('-') != 1:\n        return 'Error'\n    (start, destination) = s.split('-')\n    if len(start) != 2 or len(destination) != 2:\n        return 'Error'\n    if ord('a') <= ord(start[0]) <= ord('h') and ord('a') <= ord(destination[0]) <= ord('h') and (ord('1') <= ord(start[1]) <= ord('8')) and (ord('1') <= ord(destination[1]) <= ord('8')):\n        diff1 = abs(ord(start[0]) - ord(destination[0]))\n        diff2 = abs(ord(start[1]) - ord(destination[1]))\n        if diff1 == 1 and diff2 == 2 or (diff1 == 2 and diff2 == 1):\n            return 'Yes'\n        return 'No'\n    return 'Error'\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s, len(s)))", "def Solve(s, n):\n    if len(s) != 5 or s.count('-') != 1:\n        return 'Error'\n    (start, destination) = s.split('-')\n    if len(start) != 2 or len(destination) != 2:\n        return 'Error'\n    if ord('a') <= ord(start[0]) <= ord('h') and ord('a') <= ord(destination[0]) <= ord('h') and (ord('1') <= ord(start[1]) <= ord('8')) and (ord('1') <= ord(destination[1]) <= ord('8')):\n        diff1 = abs(ord(start[0]) - ord(destination[0]))\n        diff2 = abs(ord(start[1]) - ord(destination[1]))\n        if diff1 == 1 and diff2 == 2 or (diff1 == 2 and diff2 == 1):\n            return 'Yes'\n        return 'No'\n    return 'Error'\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s, len(s)))", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) == 5 and s[2] == '-' and (s[0] in 'abcdefgh') and (s[3] in 'abcdefgh') and (s[1] in '12345678') and (s[4] in '12345678'):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "(ch, dg) = ('abcdefgh', '12345678')\nans = []\nIn = [input() for _ in range(int(input()))]\nfor A in In:\n    if len(A) != 5:\n        an = 'Error'\n    elif A[0] not in ch or A[3] not in ch or A[1] not in dg or (A[4] not in dg) or (A[2] != '-'):\n        an = 'Error'\n    else:\n        (c, d) = (abs(ord(A[0]) - ord(A[3])), abs(int(A[1]) - int(A[4])))\n        if c != 0 and d != 0 and (c + d == 3):\n            an = 'Yes'\n        else:\n            an = 'No'\n    ans.append(an)\nprint(*ans, sep='\\n')", "(ch, dg) = ('abcdefgh', '12345678')\nans = []\nfor _ in range(int(input())):\n    A = input()\n    if len(A) != 5:\n        an = 'Error'\n    elif A[0] not in ch or A[3] not in ch or A[1] not in dg or (A[4] not in dg) or (A[2] != '-'):\n        an = 'Error'\n    else:\n        (c, d) = (abs(ord(A[0]) - ord(A[3])), abs(int(A[1]) - int(A[4])))\n        if c != 0 and d != 0 and (c + d == 3):\n            an = 'Yes'\n        else:\n            an = 'No'\n    ans.append(an)\nprint(*ans, sep='\\n')", "(ch, dg) = ('abcdefgh', '12345678')\nfor _ in range(int(input())):\n    A = input()\n    if len(A) != 5:\n        an = 'Error'\n    elif A[0] not in ch or A[3] not in ch or A[1] not in dg or (A[4] not in dg) or (A[2] != '-'):\n        an = 'Error'\n    else:\n        (c, d) = (abs(ord(A[0]) - ord(A[3])), abs(int(A[1]) - int(A[4])))\n        if c != 0 and d != 0 and (c + d == 3):\n            an = 'Yes'\n        else:\n            an = 'No'\n    print(an)", "def isValid(str):\n    if len(str) == 5 and str[2] == '-':\n        if (str[0] >= 'a' and str[0] <= 'h') and (str[3] >= 'a' and str[3] <= 'h'):\n            if (str[1] >= '1' and str[1] <= '8') and (str[4] >= '1' and str[4] <= '8'):\n                return True\n            else:\n                return False\n        else:\n            return False\n    else:\n        return False\n\ndef isKnightMove(str):\n    if abs(ord(str[0]) - ord(str[3])) == 1 and abs(ord(str[1]) - ord(str[4])) == 2:\n        return True\n    elif abs(ord(str[0]) - ord(str[3])) == 2 and abs(ord(str[1]) - ord(str[4])) == 1:\n        return True\n    else:\n        return False\nT = int(input())\nfor i in range(T):\n    move = input()\n    if isValid(move):\n        if isKnightMove(move):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and 'a' <= s[3] <= 'h' and ('1' <= s[1] <= '8') and ('1' <= s[4] <= '8') and (s[2] == '-'):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for x in range(int(input())):\n    a = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n    b = ['1', '2', '3', '4', '5', '6', '7', '8']\n    s = input()\n    l = len(s)\n    if l != 5:\n        print('Error')\n    elif s[0] in a and s[1] in b and (s[2] == '-') and (s[3] in a) and (s[4] in b):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "tests = int(input())\nfor i in range(tests):\n    string = input()\n    ans = 'No'\n    if not (len(string) == 5 and 97 <= ord(string[0]) <= 104 and (49 <= ord(string[1]) <= 56) and (string[2] == '-') and (97 <= ord(string[3]) <= 104) and (49 <= ord(string[4]) <= 56)):\n        ans = 'Error'\n    else:\n        start_x = ord(string[0])\n        start_y = int(string[1])\n        end_x = ord(string[3])\n        end_y = int(string[4])\n        if start_x + 2 == end_x and (end_y == start_y + 1 or end_y == start_y - 1) or (start_x - 2 == end_x and (end_y == start_y + 1 or end_y == start_y - 1)) or (start_x + 1 == end_x and (end_y == start_y + 2 or end_y == start_y - 2)) or (start_x - 1 == end_x and (end_y == start_y + 2 or end_y == start_y - 2)):\n            ans = 'Yes'\n    print(ans)", "for x in range(int(input())):\n    a = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n    b = ['1', '2', '3', '4', '5', '6', '7', '8']\n    s = input()\n    l = len(s)\n    if l != 5:\n        print('Error')\n    elif s[0] in a and s[1] in b and (s[2] == '-') and (s[3] in a) and (s[4] in b):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for x in range(int(input())):\n    a = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n    b = ['1', '2', '3', '4', '5', '6', '7', '8']\n    s = input()\n    l = len(s)\n    if l != 5:\n        print('Error')\n    elif s[0] in a and s[1] in b and (s[2] == '-') and (s[3] in a) and (s[4] in b):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s1 = input()\n    tmp = 'abcdefgh'\n    tmp2 = '12345678'\n    flag = 1\n    if len(s1) != 5 or s1[0] not in tmp or s1[4] not in tmp2 or (s1[2] != '-') or (s1[1] not in tmp2) or (s1[3] not in tmp):\n        flag = -1\n    else:\n        sol = []\n        if chr(ord(s1[0]) - 2) in tmp and chr(ord(s1[1]) + 1) in tmp2:\n            sol.append(chr(ord(s1[0]) - 2) + chr(ord(s1[1]) + 1))\n        if chr(ord(s1[0]) - 2) in tmp and chr(ord(s1[1]) - 1) in tmp2:\n            sol.append(chr(ord(s1[0]) - 2) + chr(ord(s1[1]) - 1))\n        if chr(ord(s1[0]) - 1) in tmp and chr(ord(s1[1]) + 2) in tmp2:\n            sol.append(chr(ord(s1[0]) - 1) + chr(ord(s1[1]) + 2))\n        if chr(ord(s1[0]) - 1) in tmp and chr(ord(s1[1]) - 2) in tmp2:\n            sol.append(chr(ord(s1[0]) - 1) + chr(ord(s1[1]) - 2))\n        if chr(ord(s1[0]) + 1) in tmp and chr(ord(s1[1]) + 2) in tmp2:\n            sol.append(chr(ord(s1[0]) + 1) + chr(ord(s1[1]) + 2))\n        if chr(ord(s1[0]) + 1) in tmp and chr(ord(s1[1]) - 2) in tmp2:\n            sol.append(chr(ord(s1[0]) + 1) + chr(ord(s1[1]) - 2))\n        if chr(ord(s1[0]) + 2) in tmp and chr(ord(s1[1]) + 1) in tmp2:\n            sol.append(chr(ord(s1[0]) + 2) + chr(ord(s1[1]) + 1))\n        if chr(ord(s1[0]) + 2) in tmp and chr(ord(s1[1]) - 1) in tmp2:\n            sol.append(chr(ord(s1[0]) + 2) + chr(ord(s1[1]) - 1))\n        if s1[3:5] not in sol:\n            flag = 0\n    if flag == -1:\n        print('Error')\n    elif flag == 0:\n        print('No')\n    else:\n        print('Yes')", "def valid_cell(a, b):\n    return a >= 97 and a <= 104 and (b >= 49) and (b <= 56)\n\ndef valid_move(a, b, c, d):\n    diffA = abs(c - a)\n    diffB = abs(d - b)\n    if diffA == 2 and diffB == 1 or (diffB == 2 and diffA == 1):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    string = input()\n    if len(string) != 5 or string[2] != '-':\n        print('Error')\n        continue\n    else:\n        cell = string.split('-')\n        if len(cell) == 2:\n            a = ord(cell[0][0])\n            b = ord(cell[0][1])\n            c = ord(cell[1][0])\n            d = ord(cell[1][1])\n        else:\n            print('Error')\n            continue\n        if valid_cell(a, b) and valid_cell(c, d):\n            if valid_move(a, b, c, d):\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Error')", "def valid_cell(a, b):\n    return a >= 97 and a <= 104 and (b >= 49) and (b <= 56)\n\ndef valid_move(a, b, c, d):\n    diffA = abs(c - a)\n    diffB = abs(d - b)\n    if diffA == 2 and diffB == 1 or (diffB == 2 and diffA == 1):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    string = input()\n    if len(string) != 5 or string[2] != '-':\n        print('Error')\n        continue\n    else:\n        cell = string.split('-')\n        if len(cell) == 2:\n            a = ord(cell[0][0])\n            b = ord(cell[0][1])\n            c = ord(cell[1][0])\n            d = ord(cell[1][1])\n        else:\n            print('Error')\n            continue\n        if valid_cell(a, b) and valid_cell(c, d):\n            if valid_move(a, b, c, d):\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Error')", "for x in range(int(input())):\n    a = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n    b = ['1', '2', '3', '4', '5', '6', '7', '8']\n    s = input()\n    l = len(s)\n    if l != 5:\n        print('Error')\n    elif s[0] in a and s[1] in b and (s[2] == '-') and (s[3] in a) and (s[4] in b):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and ord('1') <= ord(s[1]) <= ord('8') and (s[2] == '-') and ('a' <= s[3] <= 'h') and (ord('1') <= ord(s[4]) <= ord('8')):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and ord('1') <= ord(s[1]) <= ord('8') and (s[2] == '-') and ('a' <= s[3] <= 'h') and (ord('1') <= ord(s[4]) <= ord('8')):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    f = True\n    if len(s) == 5:\n        q = 'abcdefgh'\n        n = '12345678'\n        if s[0] in q and s[3] in q and (s[1] in n) and (s[4] in n) and (s[2] == '-'):\n            pass\n        else:\n            f = False\n    else:\n        f = False\n    if f:\n        x = abs(ord(s[0]) - ord(s[3]))\n        y = abs(int(s[1]) - int(s[4]))\n        if x == 2 and y == 1 or (x == 1 and y == 2):\n            pass\n        else:\n            f = False\n        if f:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\nfor _ in range(int(input())):\n    S = input()\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and ord('1') <= ord(s[1]) <= ord('8') and (s[2] == '-') and ('a' <= s[3] <= 'h') and (ord('1') <= ord(s[4]) <= ord('8')):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and ord('1') <= ord(s[1]) <= ord('8') and (s[2] == '-') and ('a' <= s[3] <= 'h') and (ord('1') <= ord(s[4]) <= ord('8')):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif 'a' <= s[0] <= 'h' and ord('1') <= ord(s[1]) <= ord('8') and (s[2] == '-') and ('a' <= s[3] <= 'h') and (ord('1') <= ord(s[4]) <= ord('8')):\n        if abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1 or (abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for i in range(int(input())):\n    s = input()\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    elif (s[0] >= 'a' and s[0] <= 'h') and (s[3] >= 'a' and s[3] <= 'h') and (s[1] >= '1' and s[1] <= '8') and (s[4] >= '1' and s[4] <= '8'):\n        if abs(ord(s[0]) - ord(s[3])) * abs(ord(s[4]) - ord(s[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for i in range(int(input())):\n    s = input()\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    elif (s[0] >= 'a' and s[0] <= 'h') and (s[3] >= 'a' and s[3] <= 'h') and (s[1] >= '1' and s[1] <= '8') and (s[4] >= '1' and s[4] <= '8'):\n        if abs(ord(s[0]) - ord(s[3])) * abs(ord(s[4]) - ord(s[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for i in range(int(input())):\n    s = input()\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    elif (s[0] >= 'a' and s[0] <= 'h') and (s[3] >= 'a' and s[3] <= 'h') and (s[1] >= '1' and s[1] <= '8') and (s[4] >= '1' and s[4] <= '8'):\n        if abs(ord(s[0]) - ord(s[3])) * abs(ord(s[4]) - ord(s[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nimport re\nregex = '^([a-h])([1-8])\\\\-([a-h])([1-8])$'\n\ndef column(c):\n    return ord(c) - 96\n\ndef solve(mv):\n    r = re.findall(regex, mv)\n    if len(r) == 0:\n        return 'Error'\n    (fc, fr, tc, tr) = r[0]\n    col_diff = abs(column(fc) - column(tc))\n    row_diff = abs(int(fr) - int(tr))\n    if col_diff > row_diff:\n        (col_diff, row_diff) = (row_diff, col_diff)\n    if (col_diff, row_diff) == (1, 2):\n        return 'Yes'\n    else:\n        return 'No'\n\ndef do_codechef():\n    for t in rii():\n        print(solve(input()))\ndo_codechef()\nexit()", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "def checkAlpha(ch):\n    return ord(ch) >= ord('a') and ord(ch) <= ord('h')\n\ndef checkNumber(ch):\n    return ord(ch) >= ord('1') and ord(ch) <= ord('8')\n\ndef solve(S):\n    if len(S) == 5 and checkAlpha(S[0]) and checkNumber(S[1]) and checkAlpha(S[3]) and checkNumber(S[4]) and (S[2] == '-'):\n        if abs(ord(S[0]) - ord(S[3])) == 1 and abs(ord(S[1]) - ord(S[4])) == 2:\n            print('Yes')\n        elif abs(ord(S[0]) - ord(S[3])) == 2 and abs(ord(S[1]) - ord(S[4])) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nT = int(input())\nfor _ in range(T):\n    S = input()\n    solve(S)", "for i in range(int(input())):\n    s = input()\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    elif (s[0] >= 'a' and s[0] <= 'h') and (s[3] >= 'a' and s[3] <= 'h') and (s[1] >= '1' and s[1] <= '8') and (s[4] >= '1' and s[4] <= '8'):\n        if abs(ord(s[0]) - ord(s[3])) * abs(ord(s[4]) - ord(s[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "d = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\ncheck = range(1, 9)\nt = int(input())\nfor _ in range(t):\n    try:\n        move = input()\n        if len(move) != 5 or move[2] != '-' or int(move[1]) not in check or (int(move[4]) not in check):\n            print('Error')\n            continue\n        else:\n            (start_1, start_2, end_1, end_2) = (move[0], int(move[1]), move[3], int(move[4]))\n            if abs(d[start_1] - d[end_1]) == 1:\n                if abs(start_2 - end_2) == 2:\n                    print('Yes')\n                else:\n                    print('No')\n            elif abs(d[start_1] - d[end_1]) == 2:\n                if abs(start_2 - end_2) == 1:\n                    print('Yes')\n                else:\n                    print('No')\n            else:\n                print('No')\n    except:\n        print('Error')", "for i in range(int(input())):\n    s = input()\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    elif (s[0] >= 'a' and s[0] <= 'h') and (s[3] >= 'a' and s[3] <= 'h') and (s[1] >= '1' and s[1] <= '8') and (s[4] >= '1' and s[4] <= '8'):\n        if abs(ord(s[0]) - ord(s[3])) * abs(ord(s[4]) - ord(s[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for _ in range(int(input())):\n    s = input()\n    l = s.split('-')\n    if len(l) != 2:\n        print('Error')\n        continue\n    s1 = l[0]\n    s2 = l[1]\n    eB = len(s1) == 2\n    fB = len(s2) == 2\n    aB = False\n    bB = False\n    cB = False\n    dB = False\n    if eB == True:\n        x1 = ord(s1[0]) - ord('a')\n        y1 = ord(s1[1]) - ord('0')\n        aB = s1[0].isalpha() and 0 <= x1 <= 7\n        bB = s1[1].isdigit() and 1 <= y1 <= 8\n    if fB == True:\n        x2 = ord(s2[0]) - ord('a')\n        y2 = ord(s2[1]) - ord('0')\n        cB = s2[0].isalpha() and 0 <= x2 <= 7\n        dB = s2[1].isdigit() and 1 <= y2 <= 8\n    if (aB and bB and cB and dB and eB and fB) == False:\n        print('Error')\n        continue\n    if abs(x2 - x1) == 1 and abs(y2 - y1) == 2 or (abs(x2 - x1) == 2 and abs(y2 - y1) == 1):\n        print('Yes')\n    else:\n        print('No')", "from sys import stdin as sin\n\ndef aint():\n    return int(input())\n\ndef amap():\n    return map(int, sin.readline().split())\n\ndef alist():\n    return list(map(int, sin.readline().split()))\n\ndef astr():\n    return input()\nfor _ in range(int(input())):\n    s = astr()\n    if len(s) == 5 and ord(s[0]) in range(97, 105) and (ord(s[3]) in range(97, 105)) and (ord(s[1]) in range(49, 57)) and (ord(s[4]) in range(49, 57)) and (int(s[1]) in range(1, 9)) and (int(s[4]) in range(1, 9)) and (s[2] == '-'):\n        if abs(ord(s[3]) - ord(s[0])) == 1 and abs(int(s[1]) - int(s[4])) == 2 or (abs(ord(s[3]) - ord(s[0])) == 2 and abs(int(s[1]) - int(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "def check_pair(s):\n    if len(s) == 5 and s[0] >= 'a' and (s[0] <= 'h') and (s[1] >= '1') and (s[1] <= '8') and (s[2] == '-') and (s[3] >= 'a') and (s[3] <= 'h') and (s[4] >= '1') and (s[4] <= '8'):\n        return True\n    else:\n        return False\n\ndef check_move(s):\n    if abs(ord(s[0]) - ord(s[3])) == 1 and abs(int(s[1]) - int(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(int(s[1]) - int(s[4])) == 1):\n        return True\n    else:\n        return False\nT = int(input())\nans = []\nfor _ in range(T):\n    S = input()\n    if not check_pair(S):\n        ans.append('Error')\n    elif check_move(S):\n        ans.append('Yes')\n    else:\n        ans.append('No')\nfor i in ans:\n    print(i)", "t = int(input())\nwhile t > 0:\n    str = input()\n    if len(str) != 5 or str[2] != '-':\n        print('Error')\n    elif (str[0] >= 'a' and str[0] <= 'h') and (str[3] >= 'a' and str[3] <= 'h') and (str[1] >= '1' and str[1] <= '8') and (str[4] >= '1' and str[4] <= '8'):\n        if abs(ord(str[0]) - ord(str[3])) * abs(ord(str[4]) - ord(str[1])) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\n    t -= 1", "from sys import maxsize, stdout, stdin\nmod = int(1000000000.0 + 7)\nfrom collections import Counter, deque, defaultdict, OrderedDict\nfrom math import factorial, gcd, log2, ceil, floor, inf, sqrt\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right\nfrom itertools import combinations, permutations\n\ndef intp():\n    return int(stdin.readline())\n\ndef lint():\n    return [int(x) for x in stdin.readline().split()]\n\ndef strp():\n    return input().strip()\n\ndef grid(r, c):\n    return [lint() for i in range(r)]\nmov2 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nmov1 = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8}\nfor _ in range(int(input())):\n    s = list(input())\n    f = 1\n    if len(s) == 5:\n        if s[0] in mov2 and s[1] in mov1 and (s[2] == '-') and (s[3] in mov2) and (s[4] in mov1):\n            r1 = mov2[s[0]]\n            r2 = mov2[s[3]]\n            c1 = mov1[s[1]]\n            c2 = mov1[s[4]]\n            a = abs(r1 - r2)\n            b = abs(c1 - c2)\n            if a == 1 and b == 2 or (a == 2 and b == 1):\n                final = 1\n            else:\n                final = 0\n        else:\n            f = 0\n    else:\n        f = 0\n    if f == 0:\n        print('Error')\n    elif final == 0:\n        print('No')\n    else:\n        print('Yes')", "from sys import maxsize, stdout, stdin\nmod = int(1000000000.0 + 7)\nfrom collections import Counter, deque, defaultdict, OrderedDict\nfrom math import factorial, gcd, log2, ceil, floor, inf, sqrt\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right\nfrom itertools import combinations, permutations\n\ndef intp():\n    return int(stdin.readline())\n\ndef lint():\n    return [int(x) for x in stdin.readline().split()]\n\ndef strp():\n    return input().strip()\n\ndef grid(r, c):\n    return [lint() for i in range(r)]\nmov2 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nmov1 = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8}\nfor _ in range(int(input())):\n    s = list(input())\n    f = 1\n    if len(s) == 5:\n        if s[0] in mov2 and s[1] in mov1 and (s[2] == '-') and (s[3] in mov2) and (s[4] in mov1):\n            r1 = mov2[s[0]]\n            r2 = mov2[s[3]]\n            c1 = mov1[s[1]]\n            c2 = mov1[s[4]]\n            a = abs(r1 - r2)\n            b = abs(c1 - c2)\n            if a == 1 and b == 2 or (a == 2 and b == 1):\n                final = 1\n            else:\n                final = 0\n        else:\n            f = 0\n    else:\n        f = 0\n    if f == 0:\n        print('Error')\n    elif final == 0:\n        print('No')\n    else:\n        print('Yes')", "d = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    a = input()\n    try:\n        if len(a) == 5 and a[0] in d and (a[1] in '12345678') and (a[2] == '-') and (a[3] in d) and (a[4] in '12345678'):\n            y = [-2, -2, 2, 2, -1, 1, -1, 1]\n            x = [1, -1, 1, -1, 2, 2, -2, -2]\n            i = int(a[1])\n            j = d[a[0]]\n            p = int(a[4])\n            q = d[a[3]]\n            for k in range(len(x)):\n                if i + x[k] == p and j + y[k] == q:\n                    print('Yes')\n                    break\n            else:\n                print('No')\n        else:\n            print('Error')\n    except:\n        print('Error')", "d = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    a = input()\n    try:\n        if len(a) == 5 and a[0] in d and (a[1] in '12345678') and (a[2] == '-') and (a[3] in d) and (a[4] in '12345678'):\n            x = [-2, -2, 2, 2, -1, 1, -1, 1]\n            y = [1, -1, 1, -1, 2, 2, -2, -2]\n            i = int(a[1])\n            j = d[a[0]]\n            p = int(a[4])\n            q = d[a[3]]\n            for k in range(len(x)):\n                if i + x[k] == p and j + y[k] == q:\n                    print('Yes')\n                    break\n            else:\n                print('No')\n        else:\n            print('Error')\n    except:\n        print('Error')", "d = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    a = input()\n    try:\n        if len(a) == 5 and a[0] in d and (a[1] in '12345678') and (a[2] == '-') and (a[3] in d) and (a[4] in '12345678'):\n            try:\n                x = [-2, -2, 2, 2, -1, 1, -1, 1]\n                y = [1, -1, 1, -1, 2, 2, -2, -2]\n                i = int(a[1])\n                j = d[a[0]]\n                p = int(a[4])\n                q = d[a[3]]\n                for k in range(len(x)):\n                    if i + x[k] == p and j + y[k] == q:\n                        print('Yes')\n                        break\n                else:\n                    print('No')\n            except:\n                print('Error')\n        else:\n            print('Error')\n    except:\n        print('Error')", "d = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    a = input()\n    try:\n        if len(a) == 5 and a[0] in d and (a[1] in '12345678') and (a[2] == '-') and (a[3] in d) and (a[4] in '12345678'):\n            try:\n                x = [-2, -2, 2, 2, -1, 1, -1, 1]\n                y = [1, -1, 1, -1, 2, 2, -2, -2]\n                i = int(a[1])\n                j = d[a[0]]\n                destx = int(a[4])\n                desty = d[a[3]]\n                for ind in range(len(x)):\n                    newx = i + x[ind]\n                    newy = j + y[ind]\n                    if destx == newx and desty == newy:\n                        print('Yes')\n                        break\n                else:\n                    print('No')\n            except:\n                print('No')\n        else:\n            print('Error')\n    except:\n        print('Error')", "map1 = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8}\nmap2 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nt = int(input())\nfor _ in range(t):\n    list1 = list(input())\n    inp = 1\n    if len(list1) == 5:\n        if list1[0] in map2 and list1[1] in map1 and (list1[2] == '-') and (list1[3] in map2) and (list1[4] in map1):\n            row1 = map2[list1[0]]\n            row2 = map2[list1[3]]\n            col1 = map1[list1[1]]\n            col2 = map1[list1[4]]\n            row_diff = abs(row1 - row2)\n            col_diff = abs(col1 - col2)\n            if row_diff == 1 and col_diff == 2 or (row_diff == 2 and col_diff == 1):\n                move = 1\n            else:\n                move = 0\n        else:\n            inp = 0\n    else:\n        inp = 0\n    if inp == 0:\n        print('Error')\n    elif move == 0:\n        print('No')\n    else:\n        print('Yes')", "def solve():\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    s = list(input())\n    if len(s) == 5:\n        flag = 0\n        for i in range(5):\n            try:\n                ord(s[i])\n            except:\n                flag = 1\n                break\n        if flag == 1:\n            print('Error')\n            continue\n        if (ord(s[0]) >= 97 and ord(s[0]) <= 104) and (ord(s[1]) >= 49 and ord(s[1]) <= 56) and (ord(s[2]) == 45) and (ord(s[3]) >= 97 and ord(s[3]) <= 104) and (ord(s[4]) >= 49 and ord(s[4]) <= 56):\n            if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Error')\n    else:\n        print('Error')", "T = int(input())\nfor i in range(T):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')", "colConv = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\ncol = set(list('abcdefgh'))\nrow = set(list('12345678'))\ntest = int(input())\nfor _ in range(test):\n    m = input()\n    if len(m) != 5:\n        print('Error')\n        continue\n    if m[2] != '-' or m[0] not in col or m[3] not in col or (m[1] not in row) or (m[4] not in row):\n        print('Error')\n        continue\n    (x1, y1, x2, y2) = (colConv[m[0]], int(m[1]), colConv[m[3]], int(m[4]))\n    if abs(x1 - x2) == 2 and abs(y1 - y2) == 1 or (abs(x1 - x2) == 1 and abs(y1 - y2) == 2):\n        print('Yes')\n    else:\n        print('No')", "colConv = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\ncol = set(list('abcdefgh'))\nrow = set(list('12345678'))\nfor _ in range(int(input())):\n    m = input()\n    if len(m) != 5:\n        print('Error')\n        continue\n    if m[2] != '-' or m[0] not in col or m[3] not in col or (m[1] not in row) or (m[4] not in row):\n        print('Error')\n        continue\n    (x1, y1, x2, y2) = (colConv[m[0]], int(m[1]), colConv[m[3]], int(m[4]))\n    if abs(x1 - x2) == 2 and abs(y1 - y2) == 1 or (abs(x1 - x2) == 1 and abs(y1 - y2) == 2):\n        print('Yes')\n    else:\n        print('No')", "T = int(input())\nfor i in range(T):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')", "dic = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    string = input()\n    if len(string) != 5:\n        print('Error')\n    elif string[2] != '-' or string[0] not in 'abcdefgh' or string[3] not in 'abcdefgh' or (string[1] not in '12345678') or (string[4] not in '12345678'):\n        print('Error')\n    else:\n        array = [dic[string[0]], int(string[1]), dic[string[3]], int(string[4])]\n        aa = [abs(array[0] - array[2]), abs(array[1] - array[3])]\n        aa.sort()\n        if aa == [1, 2]:\n            print('Yes')\n        else:\n            print('No')", "dic = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nfor _ in range(int(input())):\n    string = input()\n    if len(string) != 5:\n        print('Error')\n    elif string[2] != '-' or string[0] not in 'abcdefgh' or string[3] not in 'abcdefgh' or (string[1] not in '12345678') or (string[4] not in '12345678'):\n        print('Error')\n    else:\n        array = [dic[string[0]], int(string[1]), dic[string[3]], int(string[4])]\n        aa = [abs(array[0] - array[2]), abs(array[1] - array[3])]\n        aa.sort()\n        if aa == [1, 2]:\n            print('Yes')\n        else:\n            print('No')", "def getCoords(text):\n    if len(text) != 5:\n        return (None, None, None, None)\n    if text[2] != '-' or not text[1].isdigit() or (not text[4].isdigit()):\n        return (None, None, None, None)\n    r1 = ord(text[0]) - ord('a')\n    c1 = int(text[1]) - 1\n    r2 = ord(text[3]) - ord('a')\n    c2 = int(text[4]) - 1\n    r1 = r1 if r1 >= 0 and r1 < 8 else None\n    r2 = r2 if r2 >= 0 and r2 < 8 else None\n    c1 = c1 if c1 >= 0 and c1 < 8 else None\n    c2 = c2 if c2 >= 0 and c2 < 8 else None\n    return (r1, c1, r2, c2)\n\ndef isValidKnightMove(r1, c1, r2, c2):\n    d1 = abs(r1 - r2)\n    d2 = abs(c1 - c2)\n    return d1 == 2 and d2 == 1 or (d1 == 1 and d2 == 2)\nTC = int(input())\nfor _ in range(TC):\n    text = input()\n    (r1, c1, r2, c2) = getCoords(text)\n    if r1 == None or c1 == None or r2 == None or (c2 == None):\n        print('Error')\n    elif isValidKnightMove(r1, c1, r2, c2):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n    elif (s[0] < 'a' or s[0] > 'h') or (s[1] < '1' or s[1] > '8') or s[2] != '-' or (s[3] < 'a' or s[3] > 'h') or (s[4] < '1' or s[4] > '8'):\n        print('Error')\n    else:\n        c1 = ord(s[0])\n        c2 = ord(s[3])\n        d1 = int(s[1])\n        d2 = int(s[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            print('Yes')\n        else:\n            print('No')", "def move(mv):\n    err = 'Error'\n    no = 'No'\n    yes = 'Yes'\n    if len(mv) != 5:\n        return err\n    elif (mv[0] < 'a' or mv[0] > 'h') or (mv[1] < '1' or mv[1] > '8') or mv[2] != '-' or (mv[3] < 'a' or mv[3] > 'h') or (mv[4] < '1' or mv[4] > '8'):\n        return err\n    else:\n        c1 = ord(mv[0])\n        c2 = ord(mv[3])\n        d1 = int(mv[1])\n        d2 = int(mv[4])\n        if abs((c1 - c2) * (d1 - d2)) == 2:\n            return yes\n        else:\n            return no\ntc = int(input())\nfor _ in range(tc):\n    s = input()\n    print(move(s))", "for i in range(int(input())):\n    s = input()\n    if len(s) == 5 and 'a' <= s[0] and (s[0] <= 'h') and ('1' <= s[1]) and (s[1] <= '8') and (s[2] == '-') and ('a' <= s[3]) and (s[3] <= 'h') and ('1' <= s[4]) and (s[4] <= '8'):\n        if abs((ord(s[0]) - ord(s[3])) * (ord(s[1]) - ord(s[4]))) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for i in range(int(input())):\n    s = input()\n    if len(s) == 5 and 'a' <= s[0] and (s[0] <= 'h') and ('1' <= s[1]) and (s[1] <= '8') and (s[2] == '-') and ('a' <= s[3]) and (s[3] <= 'h') and ('1' <= s[4]) and (s[4] <= '8'):\n        if abs((ord(s[0]) - ord(s[3])) * (ord(s[1]) - ord(s[4]))) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "import re\nvalids = re.compile('[a-h][1-8]-[a-h][1-8]')\nfor _ in range(int(input())):\n    expr = input()\n    if valids.match(expr) and len(expr) == 5:\n        (row_from, col_from) = (expr[0], int(expr[1]))\n        (row_to, col_to) = (expr[3], int(expr[4]))\n        a = abs(ord(row_to) - ord(row_from))\n        b = abs(col_to - col_from)\n        if a == 1 and b == 2 or (a == 2 and b == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "T = int(input())\nfor t in range(T):\n    s = input()\n    if len(s) == 5 and 'a' <= s[0] and (s[0] <= 'h') and ('1' <= s[1]) and (s[1] <= '8') and (s[2] == '-') and ('a' <= s[3]) and (s[3] <= 'h') and ('1' <= s[4]) and (s[4] <= '8'):\n        if abs((ord(s[0]) - ord(s[3])) * (ord(s[1]) - ord(s[4]))) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "t = int(input())\n\ndef knight(s):\n    flag = 1\n    if len(s) == 5:\n        if ord(s[0]) in range(ord('a'), ord('h') + 1) and ord(s[3]) in range(ord('a'), ord('h') + 1):\n            if s[2] == '-':\n                if ord(s[1]) in range(ord('1'), ord('8') + 1) and ord(s[4]) in range(ord('1'), ord('8') + 1):\n                    flag = 0\n    if flag == 1:\n        return 'Error'\n    elif abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2:\n        return 'Yes'\n    elif abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1:\n        return 'Yes'\n    else:\n        return 'No'\nfor i in range(t):\n    xx = input()\n    print(knight(xx))", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nin_range = lambda x: x >= 1 and x <= 8\nlist_in_range = lambda l: len(list(filter(in_range, l))) == len(l)\nfor _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    (sc, sr, dc, dr) = (ord(s[0]) - 96, ord(s[1]) - 48, ord(s[3]) - 96, ord(s[4]) - 48)\n    if not (s[2] == '-' and list_in_range([sc, sr, dc, dr])):\n        print('Error')\n        continue\n    print('Yes' if abs((sc - dc) * (sr - dr)) == 2 else 'No')", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nin_range = lambda x: x >= 1 and x <= 8\nfor _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    (sc, sr, dc, dr) = (ord(s[0]) - 96, ord(s[1]) - 48, ord(s[3]) - 96, ord(s[4]) - 48)\n    if not (s[2] == '-' and in_range(sc) and in_range(sr) and in_range(dc) and in_range(dr)):\n        print('Error')\n        continue\n    print('Yes' if abs((sc - dc) * (sr - dr)) == 2 else 'No')", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    (sc, sr, dc, dr) = (ord(s[0]) - 97, ord(s[1]) - 48, ord(s[3]) - 97, ord(s[4]) - 48)\n    if not (s[2] == '-' and sc in range(0, 8) and (sr in range(1, 9)) and (dc in range(0, 8)) and (dr in range(1, 9))):\n        print('Error')\n        continue\n    print('Yes' if abs(sc - dc) * abs(sr - dr) == 2 else 'No')", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    (sc, sr, dc, dr) = (ord(s[0]) - 97, ord(s[1]) - 48, ord(s[3]) - 97, ord(s[4]) - 48)\n    if not (s[2] == '-' and sc in range(0, 8) and (sr in range(1, 9)) and (dc in range(0, 8)) and (dr in range(1, 9))):\n        print('Error')\n        continue\n    if dc == sc - 1 and (dr == sr + 2 or dr == sr - 2) or (dc == sc + 1 and (dr == sr + 2 or dr == sr - 2)) or (dc == sc - 2 and (dr == sr - 1 or dr == sr + 1)) or (dc == sc + 2 and (dr == sr - 1 or dr == sr + 1)):\n        print('Yes')\n    else:\n        print('No')", "def main():\n    from sys import stdin, stdout\n    inp = stdin.readline\n    out = stdout.write\n    res = []\n    t = int(inp().strip())\n    for i in range(t):\n        s = input()\n        if len(s) != 5 or s[2] != '-':\n            res.append('Error\\n')\n        elif not 49 <= ord(s[1]) <= 56 or not 49 <= ord(s[4]) <= 56:\n            res.append('Error\\n')\n        elif not 97 <= ord(s[0]) <= 104 or not 97 <= ord(s[3]) <= 104:\n            res.append('Error\\n')\n        elif (ord(s[0]) + 1 == ord(s[3]) or ord(s[0]) - 1 == ord(s[3])) and ord(s[1]) + 2 == ord(s[4]):\n            res.append('Yes\\n')\n        elif (ord(s[1]) + 1 == ord(s[4]) or ord(s[1]) - 1 == ord(s[4])) and ord(s[0]) + 2 == ord(s[3]):\n            res.append('Yes\\n')\n        elif (ord(s[1]) + 1 == ord(s[4]) or ord(s[1]) - 1 == ord(s[4])) and ord(s[0]) - 2 == ord(s[3]):\n            res.append('Yes\\n')\n        elif (ord(s[0]) + 1 == ord(s[3]) or ord(s[0]) - 1 == ord(s[3])) and ord(s[1]) - 2 == ord(s[4]):\n            res.append('Yes\\n')\n        else:\n            res.append('No\\n')\n    for i in range(t):\n        out(res[i])\nmain()", "def main():\n    from sys import stdin, stdout\n    inp = stdin.readline\n    out = stdout.write\n    col = ['1', '2', '3', '4', '5', '6', '7', '8']\n    row = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\n    move = [[2, 1], [2, -1], [1, 2], [1, -2], [-2, 1], [-2, -1], [-1, 2], [-1, -2]]\n    t = int(inp())\n    for _ in range(t):\n        n = input()\n        if len(n) != 5:\n            out('Error\\n')\n            continue\n        (a, b, c, d, e) = list(n)\n        if a not in row or d not in row:\n            out('Error\\n')\n            continue\n        elif b not in col or e not in col:\n            out('Error\\n')\n            continue\n        elif c != '-':\n            out('Error\\n')\n            continue\n        start = [row[a], int(b)]\n        end = [row[d], int(e)]\n        for i in move:\n            new_ = [start[0] + i[0], start[1] + i[1]]\n            if new_ == end:\n                out('Yes\\n')\n                break\n        else:\n            out('No\\n')\nmain()", "def main():\n    from sys import stdin, stdout\n    inp = stdin.readline\n    out = stdout.write\n    col = ['1', '2', '3', '4', '5', '6', '7', '8']\n    row = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\n    move = [[2, 1], [2, -1], [1, 2], [1, -2], [-2, 1], [-2, -1], [-1, 2], [-1, -2]]\n    t = int(inp())\n    for _ in range(t):\n        n = input()\n        if len(n) != 5:\n            print('Error')\n            continue\n        (a, b, c, d, e) = list(n)\n        if a not in row or d not in row:\n            print('Error')\n            continue\n        elif b not in col or e not in col:\n            print('Error')\n            continue\n        elif c != '-':\n            print('Error')\n            continue\n        start = [row[a], int(b)]\n        end = [row[d], int(e)]\n        for i in move:\n            new_ = [start[0] + i[0], start[1] + i[1]]\n            if new_ == end:\n                print('Yes')\n                break\n        else:\n            print('No')\nmain()", "col = ['1', '2', '3', '4', '5', '6', '7', '8']\nrow = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nmove = [[2, 1], [2, -1], [1, 2], [1, -2], [-2, 1], [-2, -1], [-1, 2], [-1, -2]]\nt = int(input())\nfor _ in range(t):\n    n = input()\n    if len(n) != 5:\n        print('Error')\n        continue\n    (a, b, c, d, e) = list(n)\n    if a not in row or d not in row:\n        print('Error')\n        continue\n    elif b not in col or e not in col:\n        print('Error')\n        continue\n    elif c != '-':\n        print('Error')\n        continue\n    start = [row[a], int(b)]\n    end = [row[d], int(e)]\n    for i in move:\n        new_ = [start[0] + i[0], start[1] + i[1]]\n        if new_ == end:\n            print('Yes')\n            break\n    else:\n        print('No')", "col = ['1', '2', '3', '4', '5', '6', '7', '8']\nrow = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nmove = [[2, 1], [2, -1], [1, 2], [1, -2], [-2, 1], [-2, -1], [-1, 2], [-1, -2]]\nt = int(input())\nfor _ in range(t):\n    n = input()\n    if len(n) != 5:\n        print('Error')\n        continue\n    (a, b, c, d, e) = list(n)\n    if a not in row or d not in row:\n        print('Error')\n        continue\n    elif b not in col or e not in col:\n        print('Error')\n        continue\n    elif c != '-':\n        print('Error')\n        continue\n    start = [row[a], int(b)]\n    end = [row[d], int(e)]\n    for i in move:\n        new_ = [start[0] + i[0], start[1] + i[1]]\n        if new_ == end:\n            print('Yes')\n            break\n    else:\n        print('No')", "row = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\ncol = ['1', '2', '3', '4', '5', '6', '7', '8']\ndic = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}\nmove = [(-2, -1), (-2, 1), (2, -1), (2, 1), (-1, 2), (1, 2), (-1, -2), (1, -2)]\n\ndef move_path(x, y):\n    path = []\n    for m in move:\n        co = y + m[0]\n        ro = x + m[1]\n        if co > 0 and co < 9 and (ro > 0) and (ro < 9):\n            path += [[ro, co]]\n    return path\nfor _ in range(int(input())):\n    inn = input()\n    err = 0\n    if len(inn) != 5:\n        err = 1\n    else:\n        (a, b, c, d, e) = list(inn)\n        if a not in row or d not in row:\n            err = 1\n        elif c != '-':\n            err = 1\n        elif b not in col or e not in col:\n            err = 1\n    if not err:\n        aa = dic.get(a)\n        dd = dic.get(d)\n        next = move_path(aa, int(b))\n        next_in = [dd, int(e)]\n        print('Yes' if next_in in next else 'No')\n    else:\n        print('Error')", "def main():\n    from re import fullmatch\n    testCases = int(input())\n    while testCases:\n        string = input()\n        match = fullmatch('[a-h][1-8]-[a-h][1-8]', string)\n        if match != None:\n            a1 = ord(string[0]) - 96\n            b1 = ord(string[1]) - 96\n            a2 = ord(string[3]) - 96\n            b2 = ord(string[4]) - 96\n            if abs((a1 - a2) * (b1 - b2)) == 2:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Error')\n        testCases -= 1\nmain()", "def main():\n    from re import fullmatch\n    testCases = int(input())\n    while testCases:\n        string = input()\n        match = fullmatch('[a-h][1-8]-[a-h][1-8]', string)\n        XandYshift = [(-1, -2), (1, -2), (-2, -1), (2, -1), (-2, 1), (2, 1), (-1, 2), (1, 2)]\n        if match != None:\n            flag = -1\n            currentPosition = (ord(string[0]) - 96, int(string[1]))\n            destinationPosition = (ord(string[3]) - 96, int(string[4]))\n            for index in XandYshift:\n                posAfterShift = (currentPosition[0] + index[0], currentPosition[1] + index[1])\n                if posAfterShift == destinationPosition:\n                    print('Yes')\n                    flag = 0\n                    break\n            if flag == -1:\n                print('No')\n        else:\n            print('Error')\n        testCases -= 1\nmain()", "def diff(x, y):\n    return abs(ord(x) - ord(y))\n\ndef isValid(x):\n    if len(x) == 5:\n        if x[0] in 'abcdefgh' and x[1] in '12345678' and (x[2] == '-') and (x[3] in 'abcdefgh') and (x[4] in '12345678'):\n            return 1\n    return 0\n\ndef fun(x):\n    if isValid(x) == 1:\n        if diff(x[0], x[3]) == 1 and diff(x[1], x[4]) == 2 or (diff(x[0], x[3]) == 2 and diff(x[1], x[4]) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')\nt = int(input(''))\nfor i in range(t):\n    x = input()\n    fun(x)", "for t in range(int(input())):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    if s[2] != '-'[0]:\n        print('Error')\n        continue\n    elif s[0] in 'abcdefgh' and s[1] in '12345678' and (s[3] in 'abcdefgh') and (s[4] in '12345678'):\n        s1 = ord(s[0])\n        s2 = int(s[1])\n        s3 = ord(s[3])\n        s4 = int(s[4])\n        if abs(s1 - s3) == 2 and abs(s2 - s4) == 1 or (abs(s1 - s3) == 1 and abs(s2 - s4) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for t in range(int(input())):\n    s = input()\n    if len(s) == 5 and s[0] >= 'a' and (s[0] <= 'h') and (s[1] >= '1') and (s[1] <= '8') and (s[2] == '-') and (s[3] >= 'a') and (s[3] <= 'h') and (s[4] >= '1') and (s[4] <= '8'):\n        if abs(int(s[4]) - int(s[1])) == 2 and abs(ord(s[0]) - ord(s[3])) == 1 or (abs(int(s[4]) - int(s[1])) == 1 and abs(ord(s[0]) - ord(s[3])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for t in range(int(input())):\n    s = str(input())\n    if len(s) != 5 or s[2] != '-':\n        print('Error')\n    else:\n        a = ord(s[0])\n        b = ord(s[1])\n        c = ord(s[3])\n        d = ord(s[4])\n        if a >= 97 and a <= 104 and (c >= 97) and (c <= 104) and (b >= 49) and (b <= 56) and (d >= 49) and (d <= 56):\n            ans = []\n            ans.append(abs(a - c))\n            ans.append(abs(b - d))\n            ans.sort()\n            if ans[0] == 1 and ans[1] == 2:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Error')", "t = int(input())\nld = [1, 2, -1, -2]\nfor ic in range(t):\n    s = input()\n    if len(s) != 5:\n        print('Error')\n        continue\n    if s[2] != '-':\n        print('Error')\n    else:\n        a = s[0]\n        b = s[1]\n        c = s[3]\n        d = s[4]\n        if a not in 'abcdefgh' or c not in 'abcdefgh' or b not in '12345678' or (d not in '12345678'):\n            print('Error')\n        else:\n            a = ord(a)\n            c = ord(c)\n            b = int(b)\n            d = int(d)\n            ac = a - c\n            bd = b - d\n            abcd = ac + bd\n            if ac in ld and bd in ld and (abcd in [1, 3, -1, -3]):\n                print('Yes')\n            else:\n                print('No')", "l1 = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\nl2 = ['1', '2', '3', '4', '5', '6', '7', '8']\nfor t in range(int(input())):\n    mov = input()\n    if len(mov) != 5 or mov[0] not in l1 or mov[1] not in l2 or (mov[2] != '-') or (mov[3] not in l1) or (mov[4] not in l2):\n        print('Error')\n    else:\n        x = abs(l1.index(mov[0]) - l1.index(mov[3]))\n        y = abs(l2.index(mov[1]) - l2.index(mov[4]))\n        if x > 2 or y > 2 or x + y != 3:\n            print('No')\n        else:\n            print('Yes')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    if l is 5 and s[0] >= 'a'[0] and (s[0] <= 'h'[0]) and (s[1] >= '1'[0]) and (s[1] <= '8'[0]) and (s[2] == '-'[0]) and (s[3] >= 'a'[0]) and (s[3] <= 'h'[0]) and (s[4] >= '1'[0]) and (s[4] <= '8'[0]):\n        if abs((ord(s[0]) - ord(s[3])) * (ord(s[1]) - ord(s[4]))) == 2:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "for t in range(int(input())):\n    s = input()\n    if len(s) == 5 and s[0] >= 'a' and (s[0] <= 'h') and (s[1] >= '1') and (s[1] <= '8') and (s[2] == '-') and (s[3] >= 'a') and (s[3] <= 'h') and (s[4] >= '1') and (s[4] <= '8'):\n        if abs(int(s[4]) - int(s[1])) == 2 and abs(ord(s[0]) - ord(s[3])) == 1 or (abs(int(s[4]) - int(s[1])) == 1 and abs(ord(s[0]) - ord(s[3])) == 2):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')", "def findit(s):\n    if len(s) == 5 and s[0] <= 'h' and (s[0] >= 'a') and (s[3] <= 'h') and (s[3] >= 'a') and (s[1] < '9') and (s[1] > '0') and (s[4] < '9') and (s[4] > '0') and (s[2] == '-'):\n        x1 = ord(s[0]) - ord('a')\n        y1 = int(s[1]) - 1\n        x2 = ord(s[3]) - ord('a')\n        y2 = int(s[4]) - 1\n        if x1 - 2 >= 0 and y1 - 1 >= 0 and (x2 == x1 - 2) and (y2 == y1 - 1):\n            print('Yes')\n            return\n        if x1 - 1 >= 0 and y1 - 2 >= 0 and (x2 == x1 - 1) and (y2 == y1 - 2):\n            print('Yes')\n            return\n        if x1 - 2 >= 0 and y1 + 1 < 8 and (x2 == x1 - 2) and (y2 == y1 + 1):\n            print('Yes')\n            return\n        if x1 - 1 >= 0 and y1 + 2 < 8 and (x2 == x1 - 1) and (y2 == y1 + 2):\n            print('Yes')\n            return\n        if x1 + 1 < 8 and y1 + 2 < 8 and (x2 == x1 + 1) and (y2 == y1 + 2):\n            print('Yes')\n            return\n        if x1 + 2 < 8 and y1 + 1 < 8 and (x2 == x1 + 2) and (y2 == y1 + 1):\n            print('Yes')\n            return\n        if x1 + 2 < 8 and y1 - 1 >= 0 and (x2 == x1 + 2) and (y2 == y1 - 1):\n            print('Yes')\n            return\n        if x1 + 1 < 8 and y1 - 2 >= 0 and (x2 == x1 + 1) and (y2 == y1 - 2):\n            print('Yes')\n            return\n        print('No')\n        return\n    else:\n        print('Error')\nt = int(input())\nfor i in range(t):\n    s = input()\n    findit(s)", "def findit(s):\n    if len(s) == 5 and s[0] <= 'h' and (s[0] >= 'a') and (s[3] <= 'h') and (s[3] >= 'a') and (s[1] < '9') and (s[1] > '0') and (s[4] < '9') and (s[4] > '0') and (s[2] == '-'):\n        x1 = ord(s[0]) - ord('a')\n        y1 = int(s[1]) - 1\n        x2 = ord(s[3]) - ord('a')\n        y2 = int(s[4]) - 1\n        if x1 - 2 >= 0 and y1 - 1 >= 0 and (x2 == x1 - 2) and (y2 == y1 - 1):\n            print('Yes')\n            return\n        if x1 - 1 >= 0 and y1 - 2 >= 0 and (x2 == x1 - 1) and (y2 == y1 - 2):\n            print('Yes')\n            return\n        if x1 - 2 >= 0 and y1 + 1 < 8 and (x2 == x1 - 2) and (y2 == y1 + 1):\n            print('Yes')\n            return\n        if x1 - 1 >= 0 and y1 + 2 < 8 and (x2 == x1 - 1) and (y2 == y1 + 2):\n            print('Yes')\n            return\n        if x1 + 1 < 8 and y1 + 2 < 8 and (x2 == x1 + 1) and (y2 == y1 + 2):\n            print('Yes')\n            return\n        if x1 + 2 < 8 and y1 + 1 < 8 and (x2 == x1 + 2) and (y2 == y1 + 1):\n            print('Yes')\n            return\n        if x1 + 2 < 8 and y1 - 1 >= 0 and (x2 == x1 + 2) and (y2 == y1 - 1):\n            print('Yes')\n            return\n        if x1 + 1 < 8 and y1 - 2 >= 0 and (x2 == x1 + 1) and (y2 == y1 - 2):\n            print('Yes')\n            return\n        print('No')\n        return\n    else:\n        print('Error')\nt = int(input())\nfor i in range(t):\n    s = input()\n    findit(s)", "for ijk in range(0, int(input())):\n    a = input()\n    if len(a) == 5:\n        if a[2] == '-':\n            if ord('a') <= ord(a[0]) <= ord('h') and ord('a') <= ord(a[3]) <= ord('h'):\n                if ord('1') <= ord(a[1]) <= ord('8') and ord('1') <= ord(a[4]) <= ord('8'):\n                    if abs(ord(a[0]) - ord(a[3])) == 2 and abs(ord(a[1]) - ord(a[4])) == 1 or (abs(ord(a[0]) - ord(a[3])) == 1 and abs(ord(a[1]) - ord(a[4])) == 2):\n                        print('Yes')\n                    else:\n                        print('No')\n                else:\n                    print('Error')\n            else:\n                print('Error')\n        else:\n            print('Error')\n    else:\n        print('Error')", "a = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h')\nb = ('1', '2', '3', '4', '5', '6', '7', '8')\nfor case in range(int(input())):\n    s = input()\n    if len(s) == 5 and s[0] in a and (s[1] in b) and (s[2] == '-') and (s[3] in a) and (s[4] in b):\n        if abs(ord(s[0]) - ord(s[3])) == 1 and abs(ord(s[1]) - ord(s[4])) == 2 or (abs(ord(s[0]) - ord(s[3])) == 2 and abs(ord(s[1]) - ord(s[4])) == 1):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Error')"]