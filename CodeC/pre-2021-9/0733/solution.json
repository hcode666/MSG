["n = int(input())\nfor i in range(n):\n    val = input()\n    count = {}\n    for i in val:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n    odds = 0\n    for i in count:\n        if count[i] % 2 == 1:\n            odds += 1\n    if (len(val) - odds) // 2 >= odds and len(val) != odds:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    val = input()\n    count = {}\n    for i in val:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n    odds = 0\n    for i in count:\n        if count[i] % 2 == 1:\n            odds += 1\n    if (len(val) - odds) // 2 >= odds and len(val) != odds:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    val = input()\n    count = {}\n    for i in val:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n    odds = 0\n    for i in count:\n        if count[i] % 2 == 1:\n            odds += 1\n    if (len(val) - odds) // 2 >= odds and len(val) != odds:\n        print('YES')\n    else:\n        print('NO')", "from bisect import bisect_left, bisect_right\nimport math\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    s = ip()\n    d = {}\n    for i in s:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    e = 0\n    o = 0\n    one = 0\n    for (k, v) in d.items():\n        if v == 1:\n            one += 1\n        elif v % 2 == 0:\n            e += v // 2\n        elif v % 2 != 0:\n            e += v // 2 - 1\n    if one <= e:\n        print('YES')\n    else:\n        print('NO')", "def li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    s = ip()\n    dic = {}\n    odds = 0\n    pairs = 0\n    for i in s:\n        dic[i] = dic.get(i, 0) + 1\n    for (k, v) in dic.items():\n        pair = v // 2\n        odd = v - pair * 2\n        pairs += pair\n        odds += odd\n    if odds <= pairs:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    frq = [0] * 26\n    for i in range(len(s)):\n        frq[ord(s[i]) - 97] += 1\n    odd = 0\n    for f in range(26):\n        if frq[f] % 2 != 0:\n            odd += 1\n    pairs = (len(s) - odd) // 2\n    if pairs < odd:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nwhile t:\n    s = input()\n    frq = [0] * 26\n    for i in range(len(s)):\n        frq[ord(s[i]) - 97] += 1\n    odd = 0\n    for f in range(26):\n        if frq[f] % 2 != 0:\n            odd += 1\n    pairs = (len(s) - odd) // 2\n    if pairs < odd:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nwhile t:\n    s = input()\n    frq = [0] * 26\n    for i in range(len(s)):\n        frq[ord(s[i]) - 97] += 1\n    odd = 0\n    for f in range(26):\n        if frq[f] % 2 != 0:\n            odd += 1\n    pairs = (len(s) - odd) // 2\n    if pairs < odd:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "from sys import stdin, stdout\nfrom collections import Counter\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    s = input().strip()\n    d = Counter(s)\n    (odd, pair) = (0, 0)\n    for key in d:\n        value = d[key]\n        if value % 2 != 0:\n            odd += 1\n        pair += value // 2\n    if odd > pair:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    s = input()\n    frq = [0] * 26\n    for i in range(len(s)):\n        frq[ord(s[i]) - 97] += 1\n    odd = 0\n    for f in range(26):\n        if frq[f] % 2 != 0:\n            odd += 1\n    pairs = (len(s) - odd) // 2\n    if pairs < odd:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    hash = {}\n    for i in s:\n        if i not in hash:\n            hash[i] = 1\n        else:\n            hash[i] += 1\n    even = 0\n    odd = 0\n    one = 0\n    for (k, v) in hash.items():\n        if v == 1:\n            one += 1\n        elif v % 2 == 0:\n            even += v // 2\n        elif v % 2 != 0:\n            even += v // 2 - 1\n    if one <= even:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    hash = {}\n    for i in s:\n        if i not in hash:\n            hash[i] = 1\n        else:\n            hash[i] += 1\n    even = 0\n    odd = 0\n    one = 0\n    for (k, v) in hash.items():\n        if v == 1:\n            one += 1\n        elif v % 2 == 0:\n            even += v // 2\n        elif v % 2 != 0:\n            even += v // 2 - 1\n    if one <= even:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    d = {}\n    ans = 'YES'\n    for j in s:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    o = 0\n    e = 0\n    for k in d.values():\n        if k == 1:\n            o += 1\n        elif k % 2 == 0:\n            e += k // 2\n        else:\n            e += k // 2 - 1\n    if o > e:\n        ans = 'NO'\n    print(ans)", "def solve(s):\n    d = {}\n    ans = 'YES'\n    for i in s:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    (one, even) = (0, 0)\n    for v in d.values():\n        if v == 1:\n            one += 1\n        elif v % 2 == 0:\n            even += v // 2\n        else:\n            even += v // 2 - 1\n    if one > even:\n        ans = 'NO'\n    print(ans)\nfor _ in range(int(input())):\n    s = input()\n    solve(s)", "t = int(input())\nfor i in range(t):\n    a = input()\n    p = 0\n    up = 0\n    for x in a:\n        p += a.count(x) // 2\n        up += a.count(x) % 2\n        a = a.replace(x, '')\n    if p >= up:\n        print('YES')\n    else:\n        print('NO')", "try:\n    t = int(input())\n    i = 1\n    while i <= t:\n        i = i + 1\n        s = input()\n        uniq = []\n        uniq_frq = []\n        dick = {}\n        for x in s:\n            if x not in dick.keys():\n                dick[x] = 1\n            else:\n                dick[x] = dick[x] + 1\n        uniq_frq = list(dick.values())\n        count1 = 0\n        count2 = 0\n        o = 0\n        for p in range(0, len(uniq_frq)):\n            if int(uniq_frq[p]) % 2 == 0:\n                count2 = count2 + int(uniq_frq[p]) // 2\n            elif int(uniq_frq[p]) % 2 != 0:\n                o = int(uniq_frq[p] // 2) - 1\n                if o < 0:\n                    o = 0\n                count2 = count2 + o\n        for u in range(0, len(uniq_frq)):\n            if uniq_frq[u] == 1:\n                count1 = count1 + 1\n        if count2 >= count1:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "try:\n    t = int(input())\n    i = 1\n    while i <= t:\n        i = i + 1\n        s = []\n        a = input()\n        for z in a:\n            s.append(z)\n        uni = []\n        for x in range(0, len(s)):\n            if s[x] not in uni:\n                uni.append(s[x])\n        count1 = 0\n        count2 = 0\n        frq = []\n        for u in range(0, len(uni)):\n            count = 0\n            for v in range(0, len(s)):\n                if uni[u] == s[v]:\n                    count = count + 1\n            frq.append(count)\n        for k in range(0, len(frq)):\n            if frq[k] == 1:\n                count1 = count1 + 1\n            elif frq[k] % 2 == 0:\n                count2 = count2 + frq[k] // 2\n            elif frq[k] % 2 != 0:\n                count2 = count2 + (frq[k] // 2 - 1)\n        if len(s) == 1:\n            print('NO')\n        elif count1 > count2:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "try:\n    for t in range(int(input())):\n        s = str(input())\n        dic = {}\n        for i in s:\n            if i not in dic:\n                dic[i] = 0\n            dic[i] += 1\n        single = 0\n        double = 0\n        for i in dic.keys():\n            if dic.get(i) == 1:\n                single += 1\n            if dic.get(i) >= 2 and dic.get(i) % 2 == 0:\n                double += dic.get(i) / 2\n            elif dic.get(i) >= 2 and dic.get(i) % 2 != 0:\n                double += dic.get(i) // 2 - 1\n        if single <= double:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "from collections import Counter\nfor _ in range(int(input())):\n    ls = list(map(str, input().split()))\n    lss = list(ls[0])\n    check = Counter(sorted(lss))\n    hmm = [cnt for (word, cnt) in check.most_common(len(check))]\n    single = 0\n    pair = 0\n    for item in hmm:\n        if item == 1:\n            single += 1\n        if item % 2 == 0:\n            pair += item // 2\n        if item % 2 != 0 and item > 3:\n            pair += (item - 3) // 2\n    print('YES' if single <= pair else 'NO')", "n = int(input())\nfor i in range(n):\n    cntodd = 0\n    e = 0\n    pal = input()\n    s = set(pal)\n    for i in s:\n        if pal.count(i) % 2 != 0:\n            cntodd += 1\n            e += pal.count(i) - 1\n        else:\n            e += pal.count(i)\n    if e // 2 >= cntodd:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    cntodd = 0\n    e = 0\n    pal = input()\n    s = set(pal)\n    for i in s:\n        if pal.count(i) % 2 != 0:\n            cntodd += 1\n            e += pal.count(i) - 1\n        else:\n            e += pal.count(i)\n    if e // 2 >= cntodd:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    odd = 0\n    even = 0\n    for i in range(97, 123):\n        x = s.count(chr(i))\n        even = even + x // 2\n        odd = odd + x % 2\n    if odd > even:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    freq = [0] * 26\n    for i in s:\n        freq[ord(i) - 97] += 1\n    (single, couple) = (0, 0)\n    for j in freq:\n        single += j // 2\n        couple += j % 2\n    if single >= couple:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    s = input()\n    a = [0] * 26\n    for i in s:\n        a[ord(i) - 97] += 1\n    e = 0\n    o = 0\n    for j in a:\n        e += j // 2\n        o += j % 2\n    if e >= o:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    arr = [0] * 26\n    for ch in s:\n        arr[ord(ch) - 97] += 1\n    (even, odd) = (0, 0)\n    for num in arr:\n        even += num // 2\n        odd += num % 2\n    if even >= odd:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    s = list(input().strip())\n    dic = Counter(s)\n    (e, f) = (0, 0)\n    for v in dic.values():\n        e += v // 2\n        f += v % 2\n    if f > e:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    (d, a, b) = ({}, 0, 0)\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        a = a + d[i] % 2\n        b = b + d[i] // 2\n    if a <= b:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input().strip())):\n    s = input().strip()\n    alpha = 'qwertyuiopasdfghjklmnbvczx'\n    e = 0\n    o = 0\n    for i in alpha:\n        x = s.count(i)\n        if x % 2 == 0:\n            e += x // 2\n        else:\n            e += (x - 1) // 2\n            o += 1\n    if e >= o:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    s = sys.stdin.readline().strip()\n    d = dict.fromkeys(s, 0)\n    (single, couple) = (0, 0)\n    for i in s:\n        d[i] += 1\n    for i in d:\n        if d[i] == 1:\n            single += 1\n        elif d[i] % 2 == 0:\n            couple += d[i] // 2\n        elif d[i] > 3 and d[i] % 2 == 1:\n            couple += (d[i] - 3) // 2\n    if couple >= single:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    s = sys.stdin.readline().strip()\n    d = dict.fromkeys(s, 0)\n    (single, couple) = (0, 0)\n    for i in s:\n        d[i] += 1\n    for i in d:\n        if d[i] == 1:\n            single += 1\n        elif d[i] % 2 == 0:\n            couple += d[i] // 2\n        elif d[i] > 3 and d[i] % 2 == 1:\n            couple += (d[i] - 3) // 2\n    if couple >= single:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input().strip())):\n    s = input().strip()\n    alpha = 'qwertyuiopasdfghjklmnbvczx'\n    e = 0\n    o = 0\n    for i in alpha:\n        x = s.count(i)\n        if x % 2 == 0:\n            e += x // 2\n        else:\n            e += (x - 1) // 2\n            o += 1\n    if e >= o:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    s = sys.stdin.readline().strip()\n    d = dict.fromkeys(s, 0)\n    for i in s:\n        d[i] += 1\n    lst = list(d.values())\n    if len(s) == len(set(s)):\n        print('NO')\n    else:\n        even = 0\n        odd = 0\n        for i in lst:\n            if i % 2 != 0:\n                odd += 1\n            even += i // 2\n        if odd <= even:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nt = int(input())\nans = []\nfor _ in range(t):\n    s = input()\n    d = Counter(s)\n    (one, two) = (0, 0)\n    for i in d:\n        one += d[i] % 2\n        two += d[i] // 2\n    if one <= two:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor _ in ans:\n    print(_)", "from collections import defaultdict\nfor i in range(int(input())):\n    s = input()\n    dis = defaultdict(int)\n    for i in s:\n        dis[i] += 1\n    od = 0\n    for (k, v) in dis.items():\n        if v % 2 != 0:\n            od += 1\n    x = (len(s) - od) / 2\n    if od <= x:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    ss = input()\n    hp = {}\n    for i in ss:\n        if i in hp:\n            hp[i] += 1\n        else:\n            hp[i] = 1\n    even = 0\n    odd = 0\n    for i in hp:\n        even += hp[i] // 2\n        if hp[i] % 2:\n            odd += 1\n    if odd <= even:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    a = Counter(s)\n    (l, m, n) = (0, 0, 0)\n    for i in a:\n        l += a[i] % 2\n        m += a[i] // 2\n    if m >= l:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    s = sorted(s)\n    x = len(s)\n    l = []\n    i = 0\n    while i < x:\n        c = 1\n        j = i + 1\n        while j < x:\n            if s[i] != s[j]:\n                break\n            c += 1\n            j += 1\n        i = j\n        l.append(c)\n    even = ones = 0\n    for i in range(len(l)):\n        if l[i] == 1:\n            ones += 1\n        if l[i] % 2 == 0:\n            even += l[i]\n        if l[i] != 1 and l[i] >= 3 and (l[i] % 2 != 0):\n            even += l[i] - 1\n            ones += 1\n    finall = even / 2\n    if ones <= finall:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    s = sorted(s)\n    x = len(s)\n    l = []\n    i = 0\n    while i < x:\n        c = 1\n        j = i + 1\n        while j < x:\n            if s[i] != s[j]:\n                break\n            c += 1\n            j += 1\n        i = j\n        l.append(c)\n    even = ones = 0\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            even += l[i]\n        elif l[i] >= 3:\n            even += l[i] - 1\n            ones += 1\n        else:\n            ones += 1\n    finall = even // 2\n    print\n    if ones <= finall:\n        print('YES')\n    else:\n        print('NO')", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfrom collections import Counter\nfor _ in range(RI()):\n    inps = Counter(input())\n    single = 0\n    double = 0\n    for k in inps.keys():\n        (d, s) = divmod(inps[k], 2)\n        double += d\n        single += s\n    print('YES' if single <= double else 'NO')", "from collections import defaultdict\nfor _ in range(int(input())):\n    s = input()\n    mp = defaultdict(int)\n    for i in s:\n        mp[i] += 1\n    od = 0\n    for (k, v) in mp.items():\n        if v % 2 != 0:\n            od += 1\n    x = (len(s) - od) // 2\n    if od <= x:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict\nfor _ in range(int(input())):\n    s = input()\n    mp = defaultdict(int)\n    for i in s:\n        mp[i] += 1\n    od = 0\n    for (k, v) in mp.items():\n        if v % 2 != 0:\n            od += 1\n    x = (len(s) - od) / 2\n    if od <= x:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    s = input()\n    mp = {}\n    for i in s:\n        mp.setdefault(i, 0)\n        mp[i] += 1\n    od = 0\n    for (k, v) in mp.items():\n        if v % 2 != 0:\n            od += 1\n    x = (len(s) - od) / 2\n    if od <= x:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    mp = {}\n    for i in s:\n        mp.setdefault(i, 0)\n        mp[i] += 1\n    od = 0\n    for (k, v) in mp.items():\n        if v % 2 != 0:\n            od += 1\n    x = (len(s) - od) / 2\n    if od <= x:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    se = set(s)\n    l = list(se)\n    odcount = 0\n    evec = 0\n    for i in l:\n        c = s.count(i)\n        evec = evec + c // 2\n        odcount = odcount + c % 2\n    if evec >= odcount:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    d = {}\n    for j in range(0, len(s)):\n        if d.get(s[j]) == None:\n            d[s[j]] = s.count(s[j])\n    k = list(d.values())\n    even = 0\n    odd = 0\n    for z in range(0, len(k)):\n        if k[z] % 2 == 0:\n            even += k[z] // 2\n        elif k[z] == 1:\n            odd += 1\n        elif k[z] > 3:\n            re = k[z] - 3\n            even += re // 2\n    if even >= odd:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        li = [i for i in input()]\n        li.sort()\n        count = 0\n        k = len(li)\n        n = 0\n        for i in range(k - 1):\n            if li[i] == li[i + 1]:\n                count += 1\n                if n == 1:\n                    n -= 1\n                    count -= 1\n                    continue\n                n += 1\n                continue\n            if n == 1:\n                n -= 1\n        if count >= k - 2 * count:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "for _ in range(int(input())):\n    s = input()\n    (d, a, b) = ({}, 0, 0)\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        a += d[i] % 2\n        b += d[i] // 2\n    if a > b:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    a = [0] * 26\n    s = input()\n    for i in s:\n        a[ord(i) - 97] += 1\n    (odd, even) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            even += i\n        else:\n            even += i - 1\n            odd += 1\n    even //= 2\n    if odd <= even:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    s = input()\n    dict1 = {}\n    odd = 0\n    even = 0\n    for j in s:\n        if j not in dict1:\n            dict1[j] = s.count(j)\n    for j in dict1:\n        if dict1[j] == 1:\n            odd += 1\n        elif dict1[j] % 2 == 0:\n            even += dict1[j] // 2\n        else:\n            even += dict1[j] // 2\n            odd += 1\n    if odd > even:\n        print('NO')\n    else:\n        print('YES')", "i = int(input())\nwhile i > 0:\n    dict1 = {}\n    s = input()\n    for j in s:\n        if j not in dict1:\n            dict1[j] = s.count(j)\n    odd = 0\n    even = 0\n    for j in dict1:\n        if dict1[j] == 1:\n            odd += 1\n        elif dict1[j] % 2 == 0:\n            even += dict1[j] // 2\n        else:\n            even += dict1[j] // 2\n            odd += 1\n    if odd > even:\n        print('NO')\n    else:\n        print('YES')\n    i = i - 1", "for _ in range(int(input())):\n    arr = [w for w in input()]\n    from collections import Counter\n    d = Counter(arr)\n    (ava, req) = (0, 0)\n    for (k, v) in d.items():\n        req = req + v % 2\n        ava = ava + v // 2\n    if req <= ava:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t != 0:\n    s = input()\n    d = {}\n    for j in s:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    l = list(d.values())\n    if 1 not in l:\n        print('YES')\n    else:\n        e = 0\n        o = 0\n        for j in l:\n            if j % 2 == 0:\n                e += j // 2\n            else:\n                e += j // 2\n                o += 1\n        if o <= e:\n            print('YES')\n        else:\n            print('NO')\n    t = t - 1", "for t in range(int(input())):\n    s = input()\n    a = [0] * 26\n    for i in s:\n        a[ord(i) - 97] += 1\n    for i in range(26):\n        a[i] %= 2\n    if (len(s) - sum(a)) / 2 < sum(a):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = input()\n    freq = {}\n    for j in s:\n        if j not in freq:\n            freq[j] = 1\n        else:\n            freq[j] += 1\n    l = list(freq.values())\n    if 1 not in l:\n        print('YES')\n    else:\n        evencount = 0\n        oddcount = 0\n        for j in l:\n            if j % 2 == 0:\n                evencount += j // 2\n            else:\n                evencount += j // 2\n                oddcount += 1\n        if oddcount <= evencount:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    d = [0] * 26\n    s = input()\n    for i in range(len(s)):\n        d[ord(s[i]) - ord('a')] += 1\n    even = 0\n    odd = 0\n    for i in d:\n        if i % 2 != 0:\n            odd += 1\n        elif i != 0:\n            even += 1\n    total = len(s) - odd\n    total = total // 2\n    if total >= odd:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    dct = {}\n    for i in range(len(s)):\n        if dct.get(s[i]) == None:\n            dct[s[i]] = 1\n        else:\n            dct[s[i]] += 1\n    odd = 0\n    for i in dct.keys():\n        if dct[i] % 2 != 0:\n            odd += 1\n    len_ = len(s) - odd\n    len_ = len_ // 2\n    if len_ < odd:\n        print('NO')\n    else:\n        print('YES')", "i = int(input())\nwhile i > 0:\n    dict1 = {}\n    s = input()\n    for j in s:\n        if j not in dict1:\n            dict1[j] = s.count(j)\n    odd = 0\n    even = 0\n    for j in dict1:\n        if dict1[j] == 1:\n            odd += 1\n        elif dict1[j] % 2 == 0:\n            even += dict1[j] // 2\n        else:\n            even += dict1[j] // 2\n            odd += 1\n    if odd > even:\n        print('NO')\n    else:\n        print('YES')\n    i = i - 1", "for _ in range(int(input())):\n    s = list(input())\n    s.sort()\n    flag = True\n    for i in set(s):\n        if s.count(i) < 2:\n            flag = False\n            break\n    if flag == True:\n        print('YES')\n    else:\n        p = 0\n        up = 0\n        for i in set(s):\n            p += s.count(i) // 2\n            up += s.count(i) % 2\n        if up <= p:\n            print('YES')\n        else:\n            print('NO')", "def prog_name():\n    s = input()\n    final = []\n    paired = 0\n    unpaired = 0\n    for x in s:\n        if x not in final:\n            paired += s.count(x) // 2\n            unpaired += s.count(x) % 2\n            final.append(x)\n    if paired >= unpaired:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor unique in range(t):\n    prog_name()", "def palpal(s):\n    mydict = {}\n    odd = 0\n    even = 0\n    for char in s:\n        if char in mydict:\n            mydict[char] += 1\n        else:\n            mydict[char] = 1\n    for key in mydict:\n        if mydict[key] % 2 == 0:\n            even += int(mydict[key] / 2)\n        else:\n            even += mydict[key] // 2\n            odd += 1\n    if even >= odd:\n        return 'YES'\n    else:\n        return 'NO'\nT = int(input())\nfor i in range(T):\n    s = str(input())\n    print(palpal(s))", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    x2 = 0\n    x1 = 0\n    for i in d.keys():\n        if d[i] > 1 and d[i] % 2 == 0:\n            x2 += d[i] // 2\n        elif d[i] > 1 and d[i] % 2 != 0:\n            x2 += d[i] // 2\n            x1 += 1\n        elif d[i] <= 1:\n            x1 += 1\n    if x2 >= x1:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\nwhile t:\n    s = input()\n    d = Counter(s)\n    one = 0\n    pair = 0\n    for i in d.keys():\n        if d[i] % 2 == 0:\n            pair += d[i] // 2\n        elif d[i] == 1:\n            one += 1\n        else:\n            y = d[i] - 3\n            pair += y // 2\n    if pair >= one:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    l = [0] * 26\n    single = 0\n    pair = 0\n    for i in range(len(s)):\n        l[ord(s[i]) - 97] += 1\n    for i in range(26):\n        if l[i] == 1:\n            single += 1\n        else:\n            pair += l[i] // 2 - l[i] % 2\n    if pair >= single:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    l = [0] * 26\n    single = 0\n    pair = 0\n    for i in range(len(s)):\n        l[ord(s[i]) - 97] += 1\n    for i in range(26):\n        if l[i] == 1:\n            single += 1\n        elif l[i] % 2 == 0:\n            pair += l[i] / 2\n        else:\n            pair += (l[i] - 3) / 2\n    if pair >= single:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    l = [0] * 26\n    single = 0\n    pair = 0\n    for i in range(len(s)):\n        l[ord(s[i]) - 97] += 1\n    for i in range(26):\n        if l[i] == 1:\n            single += 1\n        else:\n            pair += l[i] // 2 - l[i] % 2\n    if pair >= single:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    count = {}\n    for i in s:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n    c1 = c2 = 0\n    for i in count:\n        c1 += count[i] // 2\n        c2 += count[i] % 2\n    if c1 < c2:\n        print('NO')\n    else:\n        print('YES')", "import sys\nimport math\n\ndef input():\n    return sys.stdin.readline().strip('\\n')\n\ndef I():\n    return input()\n\ndef II():\n    return int(input())\n\ndef MI():\n    return map(int, input().split())\n\ndef LI():\n    return list(map(int, input().split()))\nfrom collections import Counter\nfor _ in range(II()):\n    s = I()\n    n = len(s)\n    c = Counter(s)\n    (x, y) = (0, 0)\n    for i in c.values():\n        if i == 1:\n            x += 1\n        if i % 2 == 0:\n            y += i // 2\n        if i > 3 and i & 1:\n            y += (i - 3) // 2\n    if y >= x:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    arr = {}\n    for i in s:\n        if i in arr:\n            arr[i] += 1\n        else:\n            arr[i] = 1\n    no_even = 0\n    no_odd = 0\n    no = 0\n    for i in arr:\n        if arr[i] % 2:\n            no_odd += 1\n            no = no + arr[i] // 2\n        else:\n            no_even += 1\n            no = no + arr[i] // 2\n    if no >= no_odd:\n        print('YES')\n    else:\n        print('NO')", "def palpal(s):\n    d = {}\n    (odd, even) = (0, 0)\n    for ch in s:\n        if ch in d:\n            d[ch] += 1\n        else:\n            d[ch] = 1\n    for (x, y) in d.items():\n        if y % 2 == 0:\n            even += y / 2\n        else:\n            even += y // 2\n            odd += 1\n    if odd > even:\n        return False\n    return True\nt = int(input())\nfor i in range(t):\n    s = input()\n    if palpal(s) == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    d = [0 for x in range(26)]\n    for x in s:\n        d[ord(x) - 97] += 1\n    ef = 0\n    of = 0\n    oof = 0\n    for j in range(26):\n        if d[j] != 0:\n            if d[j] % 2 == 0:\n                ef += d[j] // 2\n            elif d[j] == 1:\n                of += 1\n            else:\n                ef += (d[j] - 3) // 2\n    if ef >= of:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c = 0\n    f = 0\n    for item in d.values():\n        c = c + item // 2\n    for item in d.values():\n        if item % 2 != 0:\n            f = f + 1\n    if f <= c:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "import sys\nintinp = lambda : int(input())\n\ndef listinp(func=int):\n    return list(map(func, input().split()))\n\ndef nsepline(n, func=str):\n    return [func(input()) for _ in range(n)]\n\ndef printlist(li, glue=' '):\n    return glue.join(list(map(str, li)))\n\ndef fop(s, end='\\n'):\n    sys.stdout.write(str(s) + end)\n\ndef fip():\n    return sys.stdin.readline().strip()\nfintinp = lambda : int(fip())\n\ndef flistinp(func=int):\n    return list(map(func, fip().split()))\n\ndef fnsepline(n, func=str):\n    return [func(fip()) for _ in range(n)]\nfrom collections import defaultdict as df\ntest_cases = fintinp()\nfor _ in range(test_cases):\n    s = list(input())\n    cc = df(int)\n    for i in s:\n        cc[i] += 1\n    pc = oc = 0\n    for i in cc.values():\n        pc += i // 2\n        oc += i % 2\n    if pc >= oc:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    temp = {}\n    s = input()\n    for i in s:\n        temp[i] = temp.setdefault(i, 0) + 1\n    count1 = 0\n    countEven = 0\n    for i in temp:\n        if temp[i] == 1:\n            count1 += 1\n        if temp[i] % 2 == 0:\n            countEven += temp[i] // 2\n        if temp[i] > 1 and temp[i] % 2 == 1:\n            countEven += temp[i] // 2\n            count1 += 1\n    if countEven >= count1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a = input()\n    b = {}\n    for j in a:\n        if j not in b:\n            b[j] = 0\n        b[j] += 1\n    single = 0\n    even = 0\n    for j in b:\n        single += b[j] % 2\n        even += b[j] // 2\n    if single <= even:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input().strip()\n    c = Counter(s)\n    c1 = 0\n    cn1 = 0\n    for i in c:\n        cn1 += c[i] // 2\n        c1 += c[i] % 2\n    if c1 <= cn1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    s = input()\n    d1 = {}\n    for i in s:\n        try:\n            d1[i] += 1\n        except:\n            d1[i] = 1\n    count = 0\n    count1 = 0\n    for i in d1:\n        count += d1[i] // 2\n        d1[i] = d1[i] % 2\n    for i in d1:\n        count1 += d1[i]\n    if count1 <= count:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    s = input()\n    d1 = {}\n    for i in s:\n        try:\n            d1[i] += 1\n        except:\n            d1[i] = 1\n    count = 0\n    count1 = 0\n    for i in d1:\n        count += d1[i] // 2\n        d1[i] = d1[i] % 2\n    for i in d1:\n        count1 += d1[i]\n    if count1 <= count:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(0, int(input())):\n    strr = input()\n    pal = {}\n    pair = single = 0\n    for i in strr:\n        if i in pal:\n            pal[i] += 1\n        else:\n            pal[i] = 1\n    for i in pal.values():\n        if i % 2 == 0:\n            pair += i // 2\n        if i == 1:\n            single += 1\n        if i % 2 != 0 and i > 3:\n            pair += (i - 3) // 2\n    if pair >= single:\n        print('YES')\n    else:\n        print('NO')", "def listed(s):\n    d = {}\n    for i in s:\n        if i not in d:\n            d.setdefault(i, 1)\n        elif i in d:\n            d[i] = d.get(i) + 1\n    return d\n\ndef rearrange(z):\n    count = 0\n    even = 0\n    for (i, j) in z.items():\n        if j == 1:\n            count += 1\n        else:\n            even += j // 2\n            count += j % 2\n    if even - count >= 0:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    s = input()\n    s1 = list(s.lower())\n    z = listed(s1)\n    rearrange(z)", "for _ in range(int(input())):\n    hp = {}\n    ss = input()\n    for i in ss:\n        if i in hp:\n            hp[i] += 1\n        else:\n            hp[i] = 1\n    e = 0\n    o = 0\n    for i in hp:\n        if hp[i] % 2:\n            e += hp[i] // 2\n            o += 1\n        else:\n            e += hp[i] // 2\n    if e >= o:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    dic = {}\n    for i in s:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    even = 0\n    one = 0\n    odd = 0\n    for i in dic.keys():\n        if dic[i] == 1:\n            one += 1\n        elif dic[i] % 2 == 0:\n            even += dic[i] // 2\n        elif dic[i] % 2 == 1:\n            odd += (dic[i] - 3) // 2\n    if one > even + odd:\n        print('NO')\n    else:\n        print('YES')"]