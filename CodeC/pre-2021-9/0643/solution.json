["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s += 1\n        if s > 1:\n            print('NO')\n            break\n    else:\n        if s == 0:\n            print('YES')\n            print(0)\n        elif a[0] < a[-1]:\n            print('NO')\n        else:\n            print('YES')\n            print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s += 1\n        if s > 1:\n            print('NO')\n            break\n    else:\n        if s == 0:\n            print('YES')\n            print(0)\n        elif a[0] < a[-1]:\n            print('NO')\n        else:\n            print('YES')\n            print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s += 1\n        if s > 1:\n            print('NO')\n            break\n    else:\n        if s == 0:\n            print('YES')\n            print(0)\n        elif a[0] < a[-1]:\n            print('NO')\n        else:\n            print('YES')\n            print(s)", "from collections import defaultdict as dd\nt1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    q = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(q - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[q - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(list(a))\n    c = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and a[n - 1] <= a[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            c += 1\n    if c == 0:\n        print('YES')\n        print(0)\n    elif c == 1 and l[-1] <= l[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (b, s) = (10 ** 11, a[0])\n    f = 1\n    c = 0\n    for i in range(n):\n        if a[i] > b:\n            print('NO')\n            f = 0\n            break\n        if i + 1 < n and a[i] > a[i + 1]:\n            b = s\n            s = a[i + 1]\n            c += 1\n    if f:\n        print('YES')\n        print(c)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(10 ** 9)\n    f = 0\n    c = 0\n    big = float('inf')\n    small = a[0]\n    for i in range(n):\n        first = a[i]\n        se = a[i + 1]\n        if first > big:\n            print('NO')\n            f = 1\n            break\n        if first > se:\n            big = small\n            c += 1\n            small = se\n    if f == 0:\n        print('YES')\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    if l1 == l:\n        print('YES')\n        print(0)\n    elif l[0] == min(l):\n        l2 = l[::-1]\n        i = l2.index(max(l))\n        i = n - 1 - i\n        l3 = l[i + 1:]\n        l4 = l[:i + 1]\n        if l3 + l4 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')\n    else:\n        p = l.index(min(l))\n        l5 = l[p:]\n        l6 = l[:p]\n        if l5 + l6 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    if l1 == l:\n        print('YES')\n        print(0)\n    elif l[0] == min(l):\n        l2 = l[::-1]\n        i = l2.index(max(l))\n        i = n - 1 - i\n        l3 = l[i + 1:]\n        l4 = l[:i + 1]\n        if l3 + l4 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')\n    else:\n        p = l.index(min(l))\n        l5 = l[p:]\n        l6 = l[:p]\n        if l5 + l6 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, s) = (10000000000, l[0])\n    l.append(b)\n    c = 0\n    for i in range(n):\n        if l[i] > b:\n            print('NO')\n            break\n        if l[i] > l[i + 1]:\n            b = s\n            c += 1\n            s = l[i + 1]\n    else:\n        print('YES')\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = sorted(arr)\n    if arr == k:\n        print('YES')\n        print(0)\n        continue\n    for i in range(0, n - 1):\n        if arr[i + 1] < arr[i]:\n            idx = i + 1\n    new = arr[idx:n] + arr[0:idx]\n    if new == k:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = sorted(arr)\n    if arr == k:\n        print('YES')\n        print(0)\n        continue\n    for i in range(0, n - 1):\n        if arr[i + 1] < arr[i]:\n            idx = i + 1\n            break\n    new = arr[idx:n] + arr[0:idx]\n    if new == k:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = sorted(arr)\n    if arr == k:\n        print('YES')\n        print(0)\n        continue\n    for i in range(0, n - 1):\n        if arr[i + 1] < arr[i]:\n            idx = i + 1\n    new = arr[idx:n] + arr[0:idx]\n    if new == k:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print(0)\n    else:\n        for i in range(n - 1):\n            if l[i] <= l[i + 1]:\n                pass\n            else:\n                b = l[0:i + 1]\n                c = l[i + 1:n + 1]\n                break\n        if c + b == sorted(l):\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "from sys import stdin, stdout, stderr, setrecursionlimit\nfrom math import pi, sqrt, gcd, ceil, floor, log2, log10, factorial\nfrom math import cos, acos, tan, atan, atan2, sin, asin, radians, degrees, hypot\nfrom bisect import insort, insort_left, insort_right, bisect_left, bisect_right, bisect\nfrom functools import reduce\nfrom itertools import combinations, combinations_with_replacement, permutations\nfrom fractions import Fraction\nfrom random import choice, getrandbits, randint, random, randrange, shuffle\nfrom re import compile, findall, escape, search, match\nfrom statistics import mean, median, mode\nfrom heapq import heapify, heappop, heappush, heappushpop, heapreplace, merge, nlargest, nsmallest\nfrom collections import deque, OrderedDict, defaultdict\nfrom collections import Counter, namedtuple, ChainMap, UserDict, UserList, UserString\nimport time\nimport math\n\ndef prime_number(start, end):\n    l = []\n    for num in range(start, end):\n        if num > 1:\n            for i in range(2, num):\n                if num % i == 0:\n                    break\n            else:\n                l.append(num)\n    return l\n\ndef findbin(a):\n    return bin(a)\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            print(p)\n\ndef primeornot(num):\n    if num > 1:\n        for i in range(2, num):\n            if num % i == 0:\n                print(num, 'is not a prime number')\n                break\n            else:\n                print(num, 'is a prime number')\n    else:\n        print(num, 'is not a prime number')\n\ndef numSubarrayProductLessThanK(nums, k):\n    if k <= 1:\n        return 0\n    prod = 1\n    ans = left = 0\n    for (right, val) in enumerate(nums):\n        prod *= val\n        while prod >= k:\n            prod /= nums[left]\n            left += 1\n        ans += right - left + 1\n    return ans\nmod = 10 ** 9 + 7\nlcm = lambda x, y: x * y // gcd(x, y)\nadd = lambda x, y: (x % mod + y % mod) % mod\nsub = lambda x, y: (x % mod - y % mod + mod) % mod\nmul = lambda x, y: x % mod * (y % mod) % mod\ninverse = lambda x: pow(x, mod - 2, mod)\nsetBitCount = lambda x: bin(x).count('1')\nsumOfDigits = lambda x: sum([int(i) for i in str(x)])\nstart_time = time.time()\nfor _ in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split()))\n    k = -1\n    for i in range(1, x):\n        if arr[i - 1] > arr[i]:\n            k = i\n            break\n    else:\n        print('YES')\n        print(0)\n    if k != -1:\n        for i in range(k + 1, x):\n            if arr[i - 1] > arr[i] or arr[i] > arr[0]:\n                print('NO')\n                break\n        else:\n            print('YES')\n            print(1)\n    end_time = time.time()", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print(0)\n    else:\n        count = 0\n        flag = 0\n        for j in range(k - 1):\n            if l[j] > l[j + 1]:\n                count += 1\n                if count > 1:\n                    print('NO')\n                    flag = 1\n                    break\n        if count == 1 and l[0] >= l[k - 1]:\n            print('YES')\n            print(1)\n        elif flag != 1:\n            print('NO')", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = []\n    l1 = input().split()\n    li = [int(q) for q in l1]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] <= li[w + 1]:\n            continue\n        else:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = deque(li)\n        li.rotate(-(w + 1))\n        li = list(li)\n    flag = 0\n    for e in range(n - 1):\n        if li[e] <= li[e + 1]:\n            flag = 0\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = []\n    l1 = input().split()\n    li = [int(q) for q in l1]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] <= li[w + 1]:\n            continue\n        else:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = deque(li)\n        li.rotate(-(w + 1))\n        li = list(li)\n    flag = 0\n    for e in range(n - 1):\n        if li[e] <= li[e + 1]:\n            flag = 0\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "for i in range(int(input())):\n    N = int(input())\n    s = list(map(int, input().split()))\n    if s == sorted(s):\n        print('YES')\n        print(0)\n    else:\n        for i in range(0, N - 1):\n            if s[i] > s[i + 1]:\n                r = slice(i + 1, N)\n                l = slice(0, i + 1)\n                break\n        f = s[r] + s[l]\n        if f == sorted(s):\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = n - 1\n    x = []\n    d = 0\n    while j >= 0:\n        c = j\n        j -= 1\n        while j >= 0 and l[j] <= l[j + 1]:\n            j -= 1\n        for b in range(j + 1, c + 1):\n            x.append(l[b])\n        d += 1\n    if x == sorted(x):\n        print('YES')\n        print(d - 1)\n    else:\n        print('NO')", "test = int(input())\nwhile test:\n    N = int(input())\n    array = input()\n    array = list(map(int, array.split()))\n    brkFound = -1\n    notPossible = False\n    for i in range(1, N):\n        if array[i] < array[i - 1]:\n            brkFound = i\n            break\n    if brkFound != -1:\n        if array[N - 1] > array[0]:\n            notPossible = True\n        for i in range(brkFound + 1, N):\n            if array[i] < array[i - 1]:\n                notPossible = True\n    else:\n        print('YES')\n        print(0)\n        test -= 1\n        continue\n    if notPossible:\n        print('NO')\n    else:\n        print('YES')\n        print(1)\n    test -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print('0')\n    else:\n        count = 0\n        for j in range(n - 1):\n            if l[j] > l[j + 1]:\n                count += 1\n        if count == 1 and l[n - 1] <= l[0]:\n            print('YES')\n            print('1')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    flag = 0\n    for i in range(1, len(l)):\n        if l[i] < l[i - 1]:\n            l = l[i:] + l[:i]\n            c += 1\n        if c >= len(l):\n            flag = 1\n            break\n    p = l.copy()\n    p.sort()\n    if p == l:\n        print('YES')\n        print(c)\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\nimport math\nfrom collections import Counter, defaultdict\nimport bisect\n\ndef ti():\n    return map(int, input().split(' '))\n\ndef tl():\n    return list(map(int, input().split(' ')))\nfor _ in range(int(input())):\n    n = int(input())\n    a = tl()\n    points = []\n    start = 0\n    end = 0\n    for i in range(n - 1):\n        if a[i] <= a[i + 1]:\n            end = end + 1\n        else:\n            points.append([start, end])\n            start = end = end + 1\n    points.append([start, end])\n    flag = 0\n    for i in range(1, len(points)):\n        if a[points[i][1]] > a[points[i - 1][0]]:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(len(points) - 1)", "import sys\nfrom collections import deque\nfrom queue import PriorityQueue\nfrom math import gcd\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nap = lambda ab, bc, cd: ab[bc].append(cd)\nli = lambda : list(input_())\npr = lambda x: print(x)\nprinT = lambda x: print(x)\nf = lambda : sys.stdout.flush()\nmod = 10 ** 9 + 7\nfor _ in range(ii()):\n    n = ii()\n    a = il()\n    if a == sorted(a):\n        print('YES')\n        print(0)\n        continue\n    p = 0\n    fl = 0\n    mn = a[0]\n    for i in range(1, n):\n        if p == 0:\n            if a[i] < a[i - 1]:\n                if mn < a[i]:\n                    fl = 1\n                    break\n                p = 1\n                continue\n            else:\n                mn = min(mn, a[i])\n        elif a[i] > mn:\n            fl = 1\n            break\n        elif a[i] < a[i - 1]:\n            fl = 1\n            break\n    if fl == 0:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "for u in range(int(input())):\n    n = int(input())\n    x = [int(w) for w in input().split()]\n    if x == sorted(x):\n        print('YES')\n        print(0)\n    else:\n        f = 0\n        for i in range(n - 1):\n            if x[i] > x[i + 1]:\n                f = i\n                break\n        y = x[i + 1:] + x[:i + 1]\n        if y == sorted(x):\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for i in range(int(input())):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    narr = sorted(arr)\n    if arr == narr:\n        print('YES')\n        print(0)\n    else:\n        found = False\n        for i in range(len(arr)):\n            elem = arr.pop()\n            arr.insert(0, elem)\n            if arr == narr:\n                found = True\n                break\n        if not found:\n            print('NO')\n        else:\n            print('YES')\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    if l1 == l:\n        print('YES')\n        print(0)\n    elif l[0] == min(l):\n        l2 = l[::-1]\n        i = l2.index(max(l))\n        i = n - 1 - i\n        l3 = l[i + 1:]\n        l4 = l[:i + 1]\n        if l3 + l4 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')\n    else:\n        p = l.index(min(l))\n        l5 = l[p:]\n        l6 = l[:p]\n        if l5 + l6 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for i in range(int(input())):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    narr = sorted(arr)\n    if arr == narr:\n        print('YES')\n        print(0)\n    else:\n        found = False\n        for i in range(len(arr)):\n            elem = arr.pop()\n            arr.insert(0, elem)\n            if arr == narr:\n                found = True\n                break\n        if not found:\n            print('NO')\n        else:\n            print('YES')\n            print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr == sorted(arr):\n        print('YES\\n0')\n        continue\n    k = 0\n    for i in range(n):\n        if arr[i] > arr[i + 1]:\n            k = i + 1\n            break\n    a1 = arr[0:k]\n    a2 = arr[k:n]\n    if a1 == sorted(a1) and a2 == sorted(a2) and (arr[n - 1] <= arr[0]):\n        print('YES\\n1')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sarr = sorted(arr)\n    if arr == sarr:\n        print('YES\\n0')\n    else:\n        for i in range(n - 1):\n            if arr[i] > arr[i + 1]:\n                a = arr[:i + 1]\n                b = arr[i + 1:]\n                break\n        if b + a == sarr:\n            print('YES\\n1')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    pre = float('inf')\n    last = l[-1]\n    for i in l[::-1]:\n        if i > pre:\n            c += 1\n            if last > i:\n                c = 2\n                break\n            else:\n                last = i\n        pre = i\n        if c == 2:\n            break\n    if c == 2:\n        print('NO')\n    else:\n        print('YES')\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print(0)\n    else:\n        for i in range(n - 1):\n            if l[i] <= l[i + 1]:\n                pass\n            else:\n                b = l[0:i + 1]\n                c = l[i + 1:n + 1]\n                break\n        if c + b == sorted(l):\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "import sys\n\ndef getInput():\n    return sys.stdin.readline().strip()\n\ndef getInt():\n    return int(getInput())\n\ndef getInts():\n    return map(int, getInput().split())\n\ndef getArray():\n    return list(getInts())\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    sortli = sorted(li)\n    count = 0\n    for i in range(n - 1):\n        if li[i] > li[i + 1]:\n            count += 1\n    if count == 0:\n        print('YES')\n        print(0)\n    elif li[0] < li[-1]:\n        print('NO')\n    elif count == 1:\n        print('YES')\n        print(1)\n    else:\n        print('NO')", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = []\n    l1 = input().split()\n    li = [int(q) for q in l1]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] > li[w + 1]:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = li[w + 1:] + li[:w + 1]\n    flag = 0\n    for e in range(n - 1):\n        if li[e] > li[e + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = []\n    l1 = input().split()\n    li = [int(q) for q in l1]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] > li[w + 1]:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = deque(li)\n        li.rotate(-(w + 1))\n        li = list(li)\n    flag = 0\n    for e in range(n - 1):\n        if li[e] > li[e + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = sorted(arr)\n    if arr1 == arr:\n        print('YES')\n        print(0)\n    else:\n        ct = 0\n        arr.append(arr[0])\n        for i in range(n):\n            if arr[i] > arr[i + 1]:\n                ct += 1\n        if ct != 1:\n            print('NO')\n        else:\n            print('YES')\n            print(ct)", "def check(lis):\n    for i in range(len(lis) - 1):\n        if lis[i + 1] < lis[i]:\n            return False\n    return True\n\ndef find(lis):\n    i = len(lis) - 1\n    while i > 0 and lis[i - 1] <= lis[i]:\n        i -= 1\n    return i\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    count = 0\n    while not check(lis):\n        if lis[0] < lis[-1]:\n            break\n        else:\n            i = find(lis)\n            lis = lis[i:] + lis[:i]\n            count += 1\n    if check(lis):\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    x = int(input())\n    sorr = list(map(int, input().split()))\n    if sorr == sorted(sorr):\n        print('YES\\n0')\n    else:\n        for i in range(x - 1):\n            if sorr[i] <= sorr[i + 1]:\n                pass\n            else:\n                sec = sorr[0:i + 1]\n                fir = sorr[i + 1:x + 1]\n                break\n        if fir + sec == sorted(sorr):\n            print('YES\\n1')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    x = int(input())\n    sorr = list(map(int, input().split()))\n    if sorr == sorted(sorr):\n        print('YES\\n0')\n    else:\n        for i in range(x - 1):\n            if sorr[i] <= sorr[i + 1]:\n                pass\n            else:\n                sec = sorr[0:i + 1]\n                fir = sorr[i + 1:x + 1]\n                break\n        if fir + sec == sorted(sorr):\n            print('YES\\n1')\n        else:\n            print('NO')", "from sys import stdin, stdout\nimport math, bisect\nfrom collections import Counter, deque, defaultdict\nL = lambda : list(map(int, stdin.readline().strip().split()))\nM = lambda : map(int, stdin.readline().strip().split())\nI = lambda : int(stdin.readline().strip())\nS = lambda : stdin.readline().strip()\nC = lambda : stdin.readline().strip().split()\n\ndef pr(a):\n    return ' '.join(list(map(str, a)))\n\ndef solve():\n    n = I()\n    a = L()\n    b = 0\n    for i in range(1, n):\n        if a[i - 1] > a[i]:\n            a = a[i:] + a[:i]\n            b += 1\n            break\n    if a == sorted(a):\n        print('YES')\n        print(b)\n    else:\n        print('NO')\nfor _ in range(I()):\n    solve()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    count = 0\n    mi = A[0]\n    for i in range(1, N, 1):\n        if A[i] < A[i - 1]:\n            count += 1\n        elif count > 0 and mi < A[i]:\n            count = 2\n            break\n    if count < 2:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = min(l)\n    x = 0\n    for i in range(n - 1, -1, -1):\n        if l[i] == k and l[i] < l[i - 1]:\n            x = i\n            break\n    l1 = l[x:n] + l[0:x]\n    f = 1\n    for i in range(n - 1):\n        if l1[i] > l1[i + 1]:\n            f = 0\n            break\n    if not f:\n        print('NO')\n    else:\n        print('YES')\n        if x == 0:\n            print(0)\n        else:\n            print(1)", "def check(nums):\n    decreased = False\n    prior_num = nums[-1]\n    for num in nums:\n        if num < prior_num:\n            if decreased:\n                return False\n            decreased = True\n        prior_num = num\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sorted(a) == a:\n        print('YES')\n        print('0')\n    elif check(a):\n        print('YES')\n        print('1')\n    else:\n        print('NO')", "import sys, math\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    sl = sorted(l)\n    if sl == l:\n        print('YES')\n        print(0)\n        t -= 1\n        continue\n    minval = float('inf')\n    minidx = -1\n    for i in range(1, n - 1):\n        if l[i] > l[i + 1]:\n            minidx = i + 1\n            break\n    if minidx == -1:\n        print('NO')\n    else:\n        nl = [l[minidx]]\n        mc = (minidx + 1) % n\n        while mc != minidx:\n            nl.append(l[mc])\n            mc = (mc + 1) % n\n        if nl == sl:\n            print('YES')\n            print(1)\n        else:\n            print('NO')\n    t -= 1", "def answer():\n    if a == sorted(a):\n        print('YES')\n        print(0)\n        return\n    c = 0\n    for i in range(n):\n        if a[i % n] > a[(i + 1) % n]:\n            if c == 1:\n                print('NO')\n                return\n            c += 1\n    print('YES')\n    print(1)\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(0)\n    else:\n        count = 0\n        for i in range(1, n):\n            if l[i] < l[i - 1]:\n                count += 1\n        if count == 1 and l[0] >= l[-1]:\n            print('YES')\n            print(count)\n        elif count == 0:\n            print('YES')\n            print(0)\n        else:\n            print('NO')", "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log, trunc\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\n\ndef inp():\n    return stdin.readline().strip()\n\ndef iinp():\n    return int(inp())\n\ndef out(var, end='\\n'):\n    stdout.write(str(var) + '\\n')\n\ndef outa(*var, end='\\n'):\n    stdout.write(' '.join(map(str, var)) + end)\n\ndef lmp():\n    return list(mp())\n\ndef mp():\n    return map(int, inp().split())\n\ndef smp():\n    return map(str, inp().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [l1d(m, val) for j in range(n)]\n\ndef remadd(x, y):\n    return 1 if x % y else 0\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\ndef isprime(x):\n    if x <= 1:\n        return False\n    if x in (2, 3):\n        return True\n    if x % 2 == 0:\n        return False\n    for i in range(3, int(sqrt(x)) + 1, 2):\n        if x % i == 0:\n            return False\n    return True\nfor _ in range(int(inp())):\n    n = iinp()\n    arr = lmp()\n    sarr = sorted(arr)\n    flg = True\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            flg = False\n            break\n    if flg:\n        print('YES', 0, sep='\\n')\n    elif arr[i:] + arr[:i] == sarr:\n        print('YES', 1, sep='\\n')\n    else:\n        print('NO')", "from collections import deque\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    p = sorted(arr)\n    fans = []\n    ans = deque([arr[n - 1]])\n    if arr == p:\n        print('YES')\n        print('0')\n    else:\n        l = 0\n        moves = 0\n        for x in range(n - 2, -1, -1):\n            if arr[x] <= arr[x + 1]:\n                ans.appendleft(arr[x])\n            else:\n                for z in list(ans):\n                    fans.append(z)\n                moves += 1\n                ans = deque([arr[x]])\n        for z in list(ans):\n            fans.append(z)\n        for x in range(1, n):\n            if fans[x] < fans[x - 1]:\n                print('NO')\n                return\n            else:\n                continue\n        print('YES')\n        print(moves)\nfor _ in range(int(input())):\n    solve()", "from collections import deque\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    p = sorted(arr)\n    fans = []\n    ans = deque([arr[n - 1]])\n    if arr == p:\n        print('YES')\n        print('0')\n    else:\n        l = 0\n        moves = 0\n        for x in range(n - 2, -1, -1):\n            if arr[x] <= arr[x + 1]:\n                ans.appendleft(arr[x])\n            else:\n                for z in list(ans):\n                    fans.append(z)\n                moves += 1\n                ans = deque([arr[x]])\n        for z in list(ans):\n            fans.append(z)\n        for x in range(1, n):\n            if fans[x] < fans[x - 1]:\n                print('NO')\n                return\n            else:\n                continue\n        print('YES')\n        print(moves)\nfor _ in range(int(input())):\n    solve()", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = [int(x) for x in input().split()]\n        i = 0\n        while i < n - 1 and l[i] <= l[i + 1]:\n            i += 1\n        if i == n - 1:\n            print('YES')\n            print(0)\n            continue\n        j = i + 1\n        while j < n - 1 and l[j] <= l[j + 1]:\n            j += 1\n        if j == n - 1 and l[i + 1] <= l[0] and (l[n - 1] <= l[0]):\n            print('YES')\n            print(1)\n            continue\n        print('NO')\nexcept EOFError:\n    pass", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = []\n    l1 = input().split()\n    li = [int(q) for q in l1]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] <= li[w + 1]:\n            continue\n        else:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = deque(li)\n        li.rotate(-(w + 1))\n        li = list(li)\n    flag = 0\n    for e in range(n - 1):\n        if li[e] <= li[e + 1]:\n            flag = 0\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(10 ** 9)\n    f = 0\n    c = 0\n    big = float('inf')\n    small = a[0]\n    for i in range(n):\n        first = a[i]\n        se = a[i + 1]\n        if first > big:\n            print('NO')\n            f = 1\n            break\n        if first > se:\n            big = small\n            c += 1\n            small = se\n    if f == 0:\n        print('YES')\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(0)\n    else:\n        count = 0\n        for i in range(1, n):\n            if l[i] < l[i - 1]:\n                count += 1\n        if count == 1 and l[0] >= l[-1]:\n            print('YES')\n            print(count)\n        elif count == 0:\n            print('YES')\n            print(0)\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(10 ** 9)\n    f = 0\n    c = 0\n    big = float('inf')\n    small = a[0]\n    for i in range(n):\n        first = a[i]\n        se = a[i + 1]\n        if first > big:\n            print('NO')\n            f = 1\n            break\n        if first > se:\n            big = small\n            c += 1\n            small = se\n    if f == 0:\n        print('YES')\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print(0)\n    else:\n        for i in range(n - 1):\n            if l[i] <= l[i + 1]:\n                pass\n            else:\n                b = l[0:i + 1]\n                c = l[i + 1:n + 1]\n                break\n        if c + b == sorted(l):\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))[:n]\n    lst2 = []\n    flag = 0\n    for i in range(n - 1):\n        if lst[i] > lst[i + 1]:\n            lst2 = lst[i + 1:] + lst[0:i + 1]\n            flag = 1\n            break\n    if len(lst2) == 0:\n        print('YES')\n        print('0')\n    elif flag == 1:\n        for i in range(n - 1):\n            if lst2[i] > lst2[i + 1]:\n                print('NO')\n                flag = 0\n                break\n        if flag == 1:\n            print('YES')\n            print('1')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == sorted(l):\n        print('YES')\n        print(0)\n    else:\n        for i in range(1, n):\n            if l[i] < l[i - 1]:\n                x = slice(i, n + 1)\n                a = slice(0, i)\n                break\n        b = l[x] + l[a]\n        l.sort()\n        if l == b:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))[:n]\n    lst2 = []\n    flag = 0\n    for i in range(n - 1):\n        if lst[i] > lst[i + 1]:\n            lst2 = lst[i + 1:] + lst[0:i + 1]\n            flag = 1\n            break\n    if len(lst2) == 0:\n        print('YES')\n        print('0')\n    elif flag == 1:\n        for i in range(n - 1):\n            if lst2[i] > lst2[i + 1]:\n                print('NO')\n                flag = 0\n                break\n        if flag == 1:\n            print('YES')\n            print('1')", "def check(nums):\n    decreased = False\n    prior_num = nums[-1]\n    for num in nums:\n        if num < prior_num:\n            if decreased:\n                return False\n            decreased = True\n        prior_num = num\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sorted(a) == a:\n        print('YES')\n        print('0')\n    elif check(a):\n        print('YES')\n        print('1')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    p = -1\n    flag = 1\n    for i in range(1, n):\n        if l[i] >= l[i - 1]:\n            continue\n        else:\n            p = i\n            break\n    if p > -1:\n        for i in range(p + 1, n):\n            if l[i] >= l[i - 1]:\n                continue\n            else:\n                flag = 0\n                break\n    if flag == 0:\n        print('NO')\n    elif p == -1:\n        print('YES')\n        print(0)\n    elif l[n - 1] <= l[0]:\n        print('YES')\n        print(1)\n    else:\n        print('NO')\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    if l1 == l:\n        print('YES')\n        print(0)\n    elif l[0] == min(l):\n        l2 = l[::-1]\n        i = l2.index(max(l))\n        i = n - 1 - i\n        l3 = l[i + 1:]\n        l4 = l[:i + 1]\n        if l3 + l4 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')\n    else:\n        p = l.index(min(l))\n        l5 = l[p:]\n        l6 = l[:p]\n        if l5 + l6 == l1:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "from collections import deque\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    l = input().split()\n    li = [int(q) for q in l]\n    index = 0\n    flag1 = 0\n    for w in range(n - 1):\n        if li[w] <= li[w + 1]:\n            continue\n        else:\n            flag1 = 1\n            index = w\n            break\n    if flag1 == 1:\n        li = deque(li)\n        li.rotate(-(w + 1))\n        li = list(li)\n    flag = 0\n    for e in range(n - 1):\n        if li[e] <= li[e + 1]:\n            flag = 0\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    elif flag1 == 1:\n        print('YES')\n        print(1)\n    else:\n        print('YES')\n        print(0)", "def suffix_sort(n, arr):\n    inc1 = [arr[0]]\n    inc2 = []\n    for i in range(1, n):\n        if arr[i] >= arr[i - 1]:\n            inc1.append(arr[i])\n        else:\n            inc2 = arr[i:]\n            break\n    if len(inc2) == 0:\n        print('YES')\n        print('0')\n    else:\n        t = len(inc2)\n        acc = 1\n        for j in range(t - 1):\n            if inc2[j] <= inc2[j + 1]:\n                acc += 1\n        if acc == t and inc2[-1] <= inc1[0]:\n            print('YES')\n            print('1')\n        else:\n            print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    suffix_sort(n, arr)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = 0\n    val = max(arr)\n    for i in range(len(arr) - 1):\n        if arr[i] <= arr[i + 1] and arr[i + 1] <= val:\n            pass\n        else:\n            val = arr[i]\n            flag += 1\n            if flag > 1:\n                print('NO')\n                break\n    else:\n        print('YES')\n        print(flag)\n    t -= 1", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    count = 0\n    flag = 0\n    for i in range(0, n - 1):\n        if arr[i] > arr[i + 1]:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n        print('0')\n    elif arr[n - 1] > arr[0]:\n        print('NO')\n    else:\n        for i in range(0, n - 1):\n            if arr[i] > arr[i + 1]:\n                count += 1\n        if count == 1:\n            print('YES')\n            print('1')\n        else:\n            print('NO')", "T = int(input())\nwhile T:\n    N = int(input())\n    A = list(map(int, input().split()))\n    flag = 0\n    f1 = 0\n    count = 0\n    for i in range(1, N):\n        if A[i - 1] > A[i]:\n            flag = 1\n            if count == 0:\n                count += 1\n                continue\n        if flag == 1:\n            if A[i - 1] > A[i] or A[i] > A[0]:\n                f1 = 1\n                break\n    if f1 == 1:\n        print('NO')\n    else:\n        print('YES')\n        if flag == 1:\n            print(1)\n        else:\n            print(0)\n    T -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    flag = True\n    count = 0\n    maxi = a[-1]\n    for i in range(n - 1, 0, -1):\n        if a[i] < a[i - 1]:\n            if a[i - 1] >= maxi:\n                maxi = a[i - 1]\n                count += 1\n            else:\n                flag = False\n                break\n    if not flag:\n        print('NO')\n    else:\n        print('YES')\n        print(count)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    isincreasing = True\n    i = 0\n    for i in range(N - 1):\n        if A[i + 1] < A[i]:\n            isincreasing = False\n            break\n    if isincreasing == True:\n        print('YES')\n        print('0')\n    else:\n        isincreasing = True\n        for i in range(i + 1, N - 1):\n            if A[i + 1] < A[i]:\n                isincreasing = False\n                break\n        if isincreasing and A[N - 1] <= A[0]:\n            print('YES')\n            print('1')\n        else:\n            print('NO')", "t = int(input())\nfor h in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    x = 0\n    c = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            c = c + 1\n            if c == 1:\n                x = i\n    if c == 0:\n        print('YES\\n0')\n    elif c == 1:\n        if x + 1 == n:\n            print('YES\\n1')\n        elif a[x - 1] >= a[x + 1]:\n            print('YES\\n1')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ctr = 0\n    ind = -1\n    for j in range(n - 1):\n        if s[j] > s[j + 1]:\n            ctr += 1\n            ind = j + 1\n    if ctr >= 2:\n        print('NO')\n    elif ctr == 0:\n        print('YES')\n        print(ctr)\n    else:\n        k = sorted(s)\n        d = ind\n        d1 = 0\n        while d < n:\n            if k[d1] != s[d]:\n                break\n            else:\n                d += 1\n                d1 += 1\n        if d == n:\n            print('YES')\n            print(1)\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    ne = [0] * n\n    ne[n - 1] = n - 1\n    for i in range(n - 2, -1, -1):\n        if a[i] <= a[i + 1]:\n            ne[i] = ne[i + 1]\n        else:\n            ne[i] = i\n    flag = 0\n    tri = 9999999999999999999\n    if ne[0] == n - 1:\n        flag = 1\n        tri = 0\n    for i in range(1, n):\n        if ne[i] == n - 1 and ne[0] >= i - 1 and (a[n - 1] <= a[0]):\n            tri = min(tri, 1)\n            flag = 1\n    if flag == 1:\n        print('YES')\n        print(tri)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (f, f1, c) = (0, 0, 0)\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(1, n):\n        if l[i - 1] > l[i]:\n            f = 1\n            if c == 0:\n                c += 1\n                continue\n        if f == 1:\n            if l[i - 1] > l[i] or l[i] > l[0]:\n                f1 = 1\n                break\n    if f1 == 1:\n        print('NO')\n    else:\n        print('YES')\n        if f == 1:\n            print('1')\n        else:\n            print('0')"]