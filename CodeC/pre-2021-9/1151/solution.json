["N = 10 ** 5 + 10\n\nclass Bit:\n\n    def __init__(self, n):\n        self.n = n\n        self.arr = [0] * (n + 1)\n\n    def update(self, i, v):\n        i += 1\n        while i <= self.n:\n            self.arr[i] += v\n            i += i & -i\n\n    def getsum(self, i):\n        s = 0\n        i = i + 1\n        while i > 0:\n            s += self.arr[i]\n            i -= i & -i\n        return s\n\n    def print(self):\n        print(self.arr)\n\ndef horizontal(x1, y1, x2, y2):\n    return y1 == y2\n\ndef main():\n    tc = int(input())\n    allowed = []\n    blocked = []\n    hevents = []\n    vevents = []\n    hendpoints = {}\n    vendpoints = {}\n    ans = [-1] * tc\n    for t in range(tc):\n        (x1, y1, x2, y2) = tuple(map(int, input().split()))\n        if horizontal(x1, y1, x2, y2):\n            if x1 > x2:\n                (x1, x2) = (x2, x1)\n            vevents.append((y1, (x1, x2), 'Q', t))\n            hevents.append((x1, y1, 'A'))\n            hevents.append((x2, y2, 'S'))\n            hendpoints[x1, y1] = 1\n            hendpoints[x2, y2] = 1\n        else:\n            if y1 > y2:\n                (y1, y2) = (y2, y1)\n            hevents.append((x1, (y1, y2), 'Q', t))\n            vevents.append((y1, x1, 'A'))\n            vevents.append((y2, x2, 'S'))\n            vendpoints[y1, x1] = 1\n            vendpoints[y2, x2] = 1\n    hevents.sort(key=lambda x: (x[0], x[2]))\n    vevents.sort(key=lambda x: (x[0], x[2]))\n    bh = Bit(N)\n    for e in hevents:\n        if e[2] == 'A':\n            bh.update(e[1], 1)\n        if e[2] == 'Q':\n            start = e[1][0] - 1\n            end = e[1][1]\n            if (e[0], start + 1) in hendpoints:\n                start += 1\n            if (e[0], end) in hendpoints:\n                end -= 1\n            sum1 = bh.getsum(end)\n            sum2 = bh.getsum(start)\n            ans[e[3]] = sum1 - sum2\n        if e[2] == 'S':\n            bh.update(e[1], -1)\n    bv = Bit(N)\n    for e in vevents:\n        if e[2] == 'A':\n            bv.update(e[1], 1)\n        if e[2] == 'Q':\n            start = e[1][0] - 1\n            end = e[1][1]\n            if (e[0], start + 1) in vendpoints:\n                start += 1\n            if (e[0], end) in vendpoints:\n                end -= 1\n            sum1 = bv.getsum(end)\n            sum2 = bv.getsum(start)\n            ans[e[3]] = sum1 - sum2\n        if e[2] == 'S':\n            bv.update(e[1], -1)\n    total = sum(ans) // 2\n    print(total)\n    print(*ans, sep=' ')\nmain()", "N = 10 ** 5 + 10\n\nclass Bit:\n\n    def __init__(self, n):\n        self.n = n\n        self.arr = [0] * (n + 1)\n\n    def update(self, i, v):\n        i += 1\n        while i <= self.n:\n            self.arr[i] += v\n            i += i & -i\n\n    def getsum(self, i):\n        s = 0\n        i = i + 1\n        while i > 0:\n            s += self.arr[i]\n            i -= i & -i\n        return s\n\n    def print(self):\n        print(self.arr)\n\ndef horizontal(x1, y1, x2, y2):\n    return y1 == y2\n\ndef main():\n    tc = int(input())\n    allowed = []\n    blocked = []\n    hevents = []\n    vevents = []\n    hendpoints = {}\n    vendpoints = {}\n    ans = [-1] * tc\n    for t in range(tc):\n        (x1, y1, x2, y2) = tuple(map(int, input().split()))\n        if horizontal(x1, y1, x2, y2):\n            if x1 > x2:\n                (x1, x2) = (x2, x1)\n            vevents.append((y1, (x1, x2), 'Q', t))\n            hevents.append((x1, y1, 'A'))\n            hevents.append((x2, y2, 'S'))\n            hendpoints[x1, y1] = 1\n            hendpoints[x2, y2] = 1\n        else:\n            if y1 > y2:\n                (y1, y2) = (y2, y1)\n            hevents.append((x1, (y1, y2), 'Q', t))\n            vevents.append((y1, x1, 'A'))\n            vevents.append((y2, x2, 'S'))\n            vendpoints[y1, x1] = 1\n            vendpoints[y2, x2] = 1\n    hevents.sort(key=lambda x: (x[0], x[2]))\n    vevents.sort(key=lambda x: (x[0], x[2]))\n    bh = Bit(N)\n    for e in hevents:\n        if e[2] == 'A':\n            bh.update(e[1], 1)\n        if e[2] == 'Q':\n            start = e[1][0] - 1\n            end = e[1][1]\n            if (e[0], start + 1) in hendpoints:\n                start += 1\n            if (e[0], end) in hendpoints:\n                end -= 1\n            sum1 = bh.getsum(end)\n            sum2 = bh.getsum(start)\n            ans[e[3]] = sum1 - sum2\n        if e[2] == 'S':\n            bh.update(e[1], -1)\n    bv = Bit(N)\n    for e in vevents:\n        if e[2] == 'A':\n            bv.update(e[1], 1)\n        if e[2] == 'Q':\n            start = e[1][0] - 1\n            end = e[1][1]\n            if (e[0], start + 1) in vendpoints:\n                start += 1\n            if (e[0], end) in vendpoints:\n                end -= 1\n            sum1 = bv.getsum(end)\n            sum2 = bv.getsum(start)\n            ans[e[3]] = sum1 - sum2\n        if e[2] == 'S':\n            bv.update(e[1], -1)\n    total = sum(ans) // 2\n    print(total)\n    print(*ans, sep=' ')\nmain()"]