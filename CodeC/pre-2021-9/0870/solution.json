["from math import log\nT = int(input())\nwhile T > 0:\n    T -= 1\n    n = int(input())\n    (count, incre, value1, value3) = (0, 0, 0, 0)\n    dic1 = {}\n    dic2 = {}\n    x = list(map(int, input().split(' ')))\n    y = list(map(int, input().split(' ')))\n    for i in x:\n        if i == 1:\n            value1 += 1\n        if i == 3:\n            value3 += 1\n        if i in dic1:\n            dic1[i] += 1\n        else:\n            dic1[i] = 1\n    for i in y:\n        if i not in dic1:\n            dic1[i] = 0\n    for i in sorted(dic1):\n        dic2[i] = dic1[i] + incre\n        incre += dic1[i]\n    for i in sorted(y):\n        if i == 1:\n            count += n - value1\n        elif i == 2 or i == 4:\n            count += value3\n        elif i == 3:\n            continue\n        else:\n            if i not in dic2:\n                dic2[i] = 0\n            if i not in dic1:\n                dic1[i] = 0\n            count += dic2[i] - dic1[i] - dic1[1]\n    print(count / n)", "from math import log\nT = int(input())\nwhile T > 0:\n    T -= 1\n    n = int(input())\n    (count, incre) = (0, 0)\n    dic1 = {}\n    dic2 = {}\n    x = list(map(int, input().split(' ')))\n    y = list(map(int, input().split(' ')))\n    for i in x:\n        if i in dic1:\n            dic1[i] += 1\n        else:\n            dic1[i] = 1\n    for i in y:\n        if i not in dic1:\n            dic1[i] = 0\n    for i in sorted(dic1):\n        dic2[i] = dic1[i] + incre\n        incre += dic1[i]\n    for i in sorted(y):\n        if i == 1:\n            count += n - dic1[1]\n        elif i == 2 or i == 4:\n            if 3 not in dic1:\n                dic1[3] = 0\n            count += dic1[3]\n        elif i == 3:\n            continue\n        else:\n            count += dic2[i] - dic1[i] - dic1[1]\n    print(count / n)", "from math import log\nT = int(input())\nwhile T > 0:\n    T -= 1\n    n = int(input())\n    (count, incre, value1, value3) = (0, 0, 0, 0)\n    dic1 = {}\n    dic2 = {}\n    x = list(map(int, input().split(' ')))\n    y = list(map(int, input().split(' ')))\n    for i in x:\n        if i == 1:\n            value1 += 1\n        if i == 3:\n            value3 += 1\n        if i in dic1:\n            dic1[i] += 1\n        else:\n            dic1[i] = 1\n    for i in y:\n        if i not in dic1:\n            dic1[i] = 0\n    for i in sorted(dic1):\n        dic2[i] = dic1[i] + incre\n        incre += dic1[i]\n    for i in sorted(y):\n        if i == 1:\n            count += n - value1\n        elif i == 2 or i == 4:\n            count += value3\n        elif i == 3:\n            continue\n        else:\n            if i not in dic2:\n                dic2[i] = 0\n            if i not in dic1:\n                dic1[i] = 0\n            count += dic2[i] - dic1[i] - dic1[1]\n    print(count / n)", "import bisect\nimport itertools\n\nclass Main:\n\n    def __init__(self):\n        iterable = self.__standard()\n        self.__solution(iterable)\n\n    def __solution(self, iterable):\n        (cases,) = map(int, next(iterable).split())\n        for _test in range(cases):\n            (total,) = map(int, next(iterable).split())\n            girl = map(int, next(iterable).split())\n            boy = map(int, next(iterable).split())\n            kisses = self.__kisses(girl, boy)\n            print('{:.6f}'.format(kisses / total))\n\n    def __kisses(self, girl, boy):\n        girl = sorted(girl)\n        boy = sorted(boy)\n        kisses = 0\n        for (x, group) in itertools.groupby(girl):\n            count = 0\n            for _item in group:\n                count += 1\n            current = 0\n            if x == 1:\n                pass\n            elif x == 2:\n                current += bisect.bisect_right(boy, 1)\n                current += len(boy) - bisect.bisect_left(boy, 5)\n            elif x == 3:\n                current += bisect.bisect_right(boy, 2)\n                current += len(boy) - bisect.bisect_left(boy, 4)\n            else:\n                current += bisect.bisect_right(boy, 1)\n                current += len(boy) - bisect.bisect_right(boy, x)\n            kisses += count * current\n        return kisses\n\n    def __test(self):\n        yield '3'\n        yield '1'\n        yield '3'\n        yield '4'\n        yield '2'\n        yield '2 3'\n        yield '1 4'\n        yield '2'\n        yield '2 4'\n        yield '2 2'\n\n    def __standard(self):\n        try:\n            while True:\n                yield input()\n        except EOFError:\n            pass\nMain()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    (count, count3, num, p, i) = (0, 0, 0, 0, 0)\n    while i < n and a[i] == 1:\n        i += 1\n    while p < n and b[p] == 1:\n        count += n - i\n        p += 1\n    while p < n and b[p] < 5:\n        p += 1\n    while i < n and a[i] == 2:\n        count += n - p\n        i += 1\n    p = 0\n    while i < n and a[i] == 3:\n        count3 += 1\n        i += 1\n    while p < n:\n        if b[p] == 2 or b[p] > 3:\n            num += 1\n        p += 1\n    count += count3 * num\n    p = 0\n    while i < n and p < n:\n        if b[p] > a[i]:\n            count += n - p\n            i += 1\n        else:\n            p += 1\n    print(count / n)"]