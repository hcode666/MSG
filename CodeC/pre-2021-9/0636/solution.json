["for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k, n):\n        a[i] = max(a[i], a[i] + a[i - k])\n    ans = -100000\n    for i in range(n - k, n):\n        ans = max(ans, a[i])\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k, n):\n        a[i] = max(a[i], a[i] + a[i - k])\n    ans = -100000\n    for i in range(n - k, n):\n        ans = max(ans, a[i])\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k, n):\n        a[i] = max(a[i], a[i] + a[i - k])\n    ans = -100000\n    for i in range(n - k, n):\n        ans = max(ans, a[i])\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k, n):\n        a[i] = max(a[i], a[i] + a[i - k])\n    ans = -100000\n    for i in range(n - k, n):\n        ans = max(ans, a[i])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    max_dist = -100000\n    for i in range(k):\n        j = i\n        sm = 0\n        while j < n:\n            sm += arr[j]\n            if sm < arr[j]:\n                sm = arr[j]\n            j = j + k\n        max_dist = max(sm, max_dist)\n    print(max_dist)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    if K >= N:\n        print(max(A))\n        continue\n    dp = [0] * (N - K) + A[-K:]\n    curmax = max(A[-K:])\n    for i in range(N - K - 1, -1, -1):\n        dp[i] = dp[i + K] + A[i]\n        if dp[i] > curmax:\n            curmax = dp[i]\n    print(curmax)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    sums = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            sums[i] = A[i] + sums[i + k]\n        else:\n            sums[i] = A[i]\n    print(max(sums))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    sums = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            sums[i] = A[i] + sums[i + k]\n        else:\n            sums[i] = A[i]\n    print(max(sums))", "t = int(input())\nfor u in range(t):\n    (length, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k > length:\n        print(max(arr))\n    else:\n        dp = [-1000000000 for i in range(length)]\n        for i in range(length):\n            if i - k >= 0:\n                dp[i] = max(0, dp[i - k]) + arr[i]\n            else:\n                dp[i] = arr[i]\n        ans = -100000000\n        for i in range(1, k + 1):\n            ans = max(ans, dp[-i])\n        print(ans)", "t = int(input())\nfor u in range(t):\n    (length, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k > length:\n        print(max(arr))\n    else:\n        dp = [-1000000000 for i in range(length)]\n        for i in range(length):\n            if i - k >= 0:\n                dp[i] = max(0, dp[i - k]) + arr[i]\n            else:\n                dp[i] = arr[i]\n        ans = -100000000\n        for i in range(1, k + 1):\n            ans = max(ans, dp[-i])\n        print(ans)", "t = int(input())\nfor u in range(t):\n    (length, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k > length:\n        print(max(arr))\n    else:\n        dp = [-1000000000 for i in range(length)]\n        for i in range(length):\n            if i - k >= 0:\n                dp[i] = max(0, dp[i - k]) + arr[i]\n            else:\n                dp[i] = arr[i]\n        ans = -100000000\n        for i in range(1, k + 1):\n            ans = max(ans, dp[-i])\n        print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_v = -100000\n    for i in range(k):\n        j = i\n        sm = 0\n        while j < n:\n            sm += a[j]\n            if sm < a[j]:\n                sm = a[j]\n            j = j + k\n        max_v = max(max_v, sm)\n    print(max_v)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_v = -100000\n    for i in range(k):\n        j = i\n        sm = 0\n        while j < n:\n            sm += a[j]\n            if sm < a[j]:\n                sm = a[j]\n            j = j + k\n        max_v = max(max_v, sm)\n    print(max_v)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_v = -100000\n    for i in range(k):\n        j = i\n        sm = 0\n        while j < n:\n            sm += a[j]\n            if sm < a[j]:\n                sm = a[j]\n            j = j + k\n        max_v = max(max_v, sm)\n    print(max_v)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(k):\n        for z in range(n - j - 1, -1, -k):\n            if z + k >= n:\n                d[z] = l[z]\n            else:\n                d[z] = l[z] + d[z + k]\n    print(max(d))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(k):\n        for j in range(n - i - 1, -1, -k):\n            if j + k >= n:\n                d[j] = arr[j]\n            else:\n                d[j] = arr[j] + d[j + k]\n    print(max(d))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_v = -100000\n    for i in range(k):\n        j = i\n        sm = 0\n        while j < n:\n            sm += a[j]\n            if sm < a[j]:\n                sm = a[j]\n            j = j + k\n        max_v = max(sm, max_v)\n    print(max_v)", "t = int(input())\nfor q in range(t):\n    (n, k) = map(int, input().split())\n    s = [0] * k\n    u = []\n    arr = list(map(int, input().split()))\n    v = max(arr)\n    for i in range(n):\n        temp = i % k\n        s[temp] += arr[i]\n    v = max(s)\n    for i in range(n - k):\n        temp = i % k\n        s[temp] -= arr[i]\n        if s[temp] > v:\n            v = s[temp]\n    print(v)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split(' '))\n    ls = [int(i) for i in input().split(' ')]\n    ans = [[0, 0]] * k\n    for i in range(n):\n        ans[i % k] = [ans[i % k][0] + ls[i], ans[i % k][1] + 1]\n    mVal = max(ans, key=lambda x: x[0])[0]\n    for i in range(n):\n        if ans[i % k][1] - 1 > 0:\n            ans[i % k][0] -= ls[i]\n            ans[i % k][1] -= 1\n            mVal = max(mVal, ans[i % k][0])\n    print(mVal)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    nls = [0] * k\n    for i in range(n):\n        nls[i % k] += ls[i]\n    nmax = max(nls)\n    for i in range(n - k):\n        nls[i % k] -= ls[i]\n        if nls[i % k] > nmax:\n            nmax = nls[i % k]\n    print(nmax)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split(' '))\n    ls = [int(i) for i in input().split(' ')]\n    ls.reverse()\n    ans = [0] * n\n    for i in range(n):\n        if i < k:\n            ans[i] = ls[i]\n        else:\n            ans[i] += ans[i - k] + ls[i]\n    print(max(ans))\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(*l)\n        continue\n    pref = []\n    for i in range(len(l)):\n        if i < k:\n            pref.append(l[i])\n        else:\n            q = l[i] + pref[i - k]\n            pref.append(max(q, l[i]))\n    if k >= n:\n        print(max(l))\n    else:\n        u = l[-1]\n        for i in range(1, k + 1):\n            if pref[-i] > u:\n                u = pref[-i]\n        print(u)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            a[i] += a[i + k]\n    print(max(a))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    c = list(map(int, input().split()))\n    for i in range(a, -1, -1):\n        if i + b < a:\n            c[i] += c[i + b]\n    print(max(c))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            a[i] += a[i + k]\n    print(max(a))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            a[i] += a[i + k]\n    print(max(a))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            a[i] += a[i + k]\n    print(max(a))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for j in range(n - 1, -1, -1):\n        if j + k < n:\n            a[j] += a[j + k]\n        else:\n            a[j] = a[j]\n    print(max(a))", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    max_value = lst[-1]\n    store = 0\n    for i in range(len(lst) - 1, -1, -1):\n        if i + k < len(lst):\n            lst[i] += lst[i + k]\n        max_value = max(max_value, lst[i])\n    print(max_value)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maxmum = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            maxmum[i] = arr[i] + maxmum[i + k]\n        else:\n            maxmum[i] = arr[i]\n    print(max(maxmum))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maxmum = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            maxmum[i] = arr[i] + maxmum[i + k]\n        else:\n            maxmum[i] = arr[i]\n    print(max(maxmum))", "T = int(input())\nwhile T != 0:\n    (N, K) = map(int, input().split())\n    value_sqauare = list(map(int, input().split()))\n    value_sqauare = value_sqauare\n    for i in range(N - 1, -1, -1):\n        if i + K < N:\n            value_sqauare[i] = value_sqauare[i] + value_sqauare[i + K]\n        else:\n            value_sqauare[i] = value_sqauare[i]\n    print(max(value_sqauare))\n    T -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    sums = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            sums[i] = A[i] + sums[i + k]\n        else:\n            sums[i] = A[i]\n    print(max(sums))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = []\n    arr.reverse()\n    total = max(arr)\n    for i in range(k):\n        pos = 0\n        for j in range(i, n, k):\n            pos += arr[j]\n            ans.append(pos)\n    print(max(ans))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = []\n    arr.reverse()\n    total = max(arr)\n    for i in range(k):\n        pos = 0\n        for j in range(i, n, k):\n            pos += arr[j]\n            ans.append(pos)\n    print(max(ans))", "def answer():\n    ans = -float('inf')\n    for i in range(min(n, k)):\n        val = 0\n        for j in range(i, n, k):\n            val = max(a[j], val + a[j])\n        ans = max(ans, val)\n    return ans\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.reverse()\n    ar = []\n    for i in range(k):\n        c = 0\n        for j in range(i, n, k):\n            c += a[j]\n            ar.append(c)\n    print(max(ar))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.reverse()\n    ar = []\n    for i in range(k):\n        c = 0\n        for j in range(i, n, k):\n            c += a[j]\n            ar.append(c)\n    print(max(ar))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ma = a[-1]\n    for i in range(n - 1, n - k - 1, -1):\n        if a[i] > ma:\n            ma = a[i]\n    for i in range(n - 1 - k, -1, -1):\n        a[i] = a[i] + a[i + k]\n        if a[i] > ma:\n            ma = a[i]\n    print(ma)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    input1 = list(map(int, input().split()))\n    sum1 = 0\n    max1 = -1000000000.0\n    for i in range(k):\n        for j in range(n - i - 1, -1, -k):\n            sum1 = sum1 + input1[j]\n            max1 = max(max1, sum1)\n        sum1 = 0\n    print(max1)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(k):\n        for j in range(n - i - 1, -1, -k):\n            if j + k >= n:\n                d[j] = arr[j]\n            else:\n                d[j] = arr[j] + d[j + k]\n    print(max(d))", "T = int(input())\nans = []\nfor _ in range(T):\n    (N, K) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    S = [[] for i in range(K)]\n    for i in range(N):\n        S[i % K].append(A[i])\n    m = -float('inf')\n    for i in range(K):\n        s = 0\n        smax = -float('inf')\n        for j in range(len(S[i]) - 1, -1, -1):\n            s += S[i][j]\n            if s > smax:\n                smax = s\n        if smax > m:\n            m = smax\n    ans.append(m)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        if i < k:\n            l.append(a[i])\n        else:\n            l.append(max(a[i] + l[i - k], a[i]))\n    m = float('-Inf')\n    while l and k:\n        m = max(l.pop(), m)\n        k -= 1\n    print(m)", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    s = [0] * n\n    for i in range(k):\n        for j in range(n - 1 - i, -1, -k):\n            if j + k >= n:\n                s[j] = ls[j]\n            else:\n                s[j] = ls[j] + s[j + k]\n    print(max(s))", "import sys\nt = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    spaces = list(map(int, input().split()))\n    points = [0] * n\n    for i in range(k):\n        for j in range(n - 1 - i, -1, -k):\n            if j + k >= n:\n                points[j] = spaces[j]\n            else:\n                points[j] = spaces[j] + points[j + k]\n    print(max(points))", "import numpy as np\nimport string\nimport sys\nfrom collections import defaultdict\nfrom bisect import bisect_left\nfrom collections import Counter, deque\nfrom queue import Queue\nimport math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    arr = a[:]\n    for i in range(n - 1 - k, -1, -1):\n        arr[i] = arr[i + k] + a[i]\n    print(max(arr))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = -99999999\n    for i in range(k):\n        s = 0\n        for j in range(n - i - 1, -1, -k):\n            s += l[j]\n            x = max(x, s)\n    print(x)\n    t -= 1", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    score = [0] * N\n    for i in range(K):\n        score[N - 1 - i] = A[N - i - 1]\n    for i in range(N - 1 - K, -1, -1):\n        score[i] = A[i] + score[i + K]\n    print(max(score))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    z = [0 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        if i + k > n - 1:\n            z[i] = l[i]\n            continue\n        z[i] = z[i + k] + l[i]\n    print(max(z))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    z = [0 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        if i + k > n - 1:\n            z[i] = l[i]\n            continue\n        z[i] = z[i + k] + l[i]\n    print(max(z))", "for _ in range(int(input())):\n    (n, step) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    idds = [i for i in range(0, n - step)]\n    sums = [-(int(1000000000.0) + 69)] * n\n    sums += arr[n - step:]\n    modfied_ids = []\n    idd = 0\n    for i in range(n):\n        modfied_ids.append(idd)\n        idd += 1\n        if idd == step:\n            idd = 0\n    for i in range(n):\n        temp = max(sums[modfied_ids[i]], sums[modfied_ids[i]] + arr[i])\n        if temp < arr[i]:\n            sums[modfied_ids[i]] = arr[i]\n        else:\n            sums[modfied_ids[i]] += arr[i]\n    print(max(sums))", "for _ in range(int(input())):\n    (n, step) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    idds = [i for i in range(0, n - step)]\n    sums = [-(int(1000000000.0) + 69)] * n\n    sums += arr[n - step:]\n    modfied_ids = []\n    idd = 0\n    for i in range(n):\n        modfied_ids.append(idd)\n        idd += 1\n        if idd == step:\n            idd = 0\n    for i in range(n):\n        temp = max(sums[modfied_ids[i]], sums[modfied_ids[i]] + arr[i])\n        if temp < arr[i]:\n            sums[modfied_ids[i]] = arr[i]\n        else:\n            sums[modfied_ids[i]] += arr[i]\n    print(max(max(sums[0:max(modfied_ids) + 1]), max(arr[n - step:])))", "from math import sqrt\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    x = list(map(int, input().split()))\n    y = n * [-1]\n    for i in range(n - k, n):\n        y[i] = x[i]\n    for i in range(n - k - 1, -1, -1):\n        if y[i] == -1:\n            y[i] = x[i] + y[i + k]\n    print(max(y))\nt = int(input())\nfor tt in range(0, t):\n    solve()", "def findsum(b):\n    c = g = b[0]\n    n = len(b)\n    for i in range(1, n):\n        c += b[i]\n        if g < c:\n            g = c\n    return g\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = -10 ** 15\n    if k >= n:\n        print(max(a))\n        continue\n    a.reverse()\n    for i in range(k):\n        ans = max(ans, findsum(a[i::k]))\n    print(ans)", "def findsum(b):\n    c = g = b[0]\n    n = len(b)\n    for i in range(1, n):\n        c += b[i]\n        if g < c:\n            g = c\n    return g\n\ndef solve():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans = -10 ** 15\n        if k >= n:\n            print(max(a))\n            continue\n        a.reverse()\n        for i in range(k):\n            ans = max(ans, findsum(a[i::k]))\n        print(ans)\nsolve()", "import numpy as np\nfrom sys import stdin, stdout\n\ndef solve():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans = -10 ** 15\n        if k >= n:\n            print(max(a))\n            continue\n        a.reverse()\n        for i in range(k):\n            c = g = a[i]\n            b = a[i:n:k]\n            for j in range(1, len(b)):\n                c += b[j]\n                if g < c:\n                    g = c\n            ans = max(ans, g)\n        print(ans)\nsolve()", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = list(map(int, input().split()))\n    c = [0] * N\n    for i in range(N - 1, -1, -1):\n        c[i] = s[i]\n        if i + K < N:\n            c[i] += c[i + K]\n    print(max(c))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    cost = list(map(int, input().split()))\n    finalans = [-1] * n\n    for i in range(n - 1, -1, -1):\n        finalans[i] = cost[i]\n        if i + k < n:\n            finalans[i] += finalans[i + k]\n    print(max(finalans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n - 1, -1, -1):\n        ans[i] = arr[i]\n        if i + k < n:\n            ans[i] += ans[i + k]\n    print(max(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n - 1, -1, -1):\n        ans[i] = arr[i]\n        if i + k < n:\n            ans[i] += ans[i + k]\n    print(max(ans))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    for i in range(n - k - 1, -1, -1):\n        l[i] = l[i] + l[i + k]\n    print(max(l))", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    score = list(map(int, input().split()))\n    array = [0] * N\n    for i in range(N - 1, -1, -1):\n        array[i] = score[i]\n        if i + K < N:\n            array[i] = array[i] + array[i + K]\n    print(max(array))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    for i in range(1, k + 1):\n        for j in range(n - i - k, -1, -k):\n            arr[j] = arr[j] + arr[j + k]\n    print(max(arr))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    dp = [0] * n\n    for i in range(n - 1, -1, -1):\n        dp[i] = arr[i]\n        if i + k < n:\n            dp[i] = dp[i] + dp[i + k]\n    print(max(dp))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = []\n    if m > n:\n        print(max(l))\n    else:\n        for i in range(m):\n            a = l[i]\n            for j in range(i + m, n, m):\n                a = max(l[j] + a, l[j])\n            l1.append(a)\n        print(max(l1))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    score = []\n    jump = 0\n    for i in range(1, k + 1):\n        jump = -i\n        sum1 = 0\n        while jump >= -n:\n            sum1 += arr[jump]\n            score.append(sum1)\n            jump -= k\n    print(max(score))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    squareValues = input().split()\n    A = list(map(int, squareValues))\n    for i in range(n - k - 1, -1, -1):\n        A[i] = A[i] + A[i + k]\n    print(max(A))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    squareValues = input().split()\n    A = list(map(int, squareValues))\n    p = {}\n    for i in range(n - 1, n - k - 1, -1):\n        p[i] = A[i]\n    for i in range(n - k - 1, -1, -1):\n        p[i] = A[i] + p[i + k]\n    print(max(p.values()))", "t = int(input())\nfor test in range(t):\n    (n, k) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    for start in range(n - k - 1, -1, -1):\n        A[start] += A[start + k]\n    print(max(A))", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    dp = l[:]\n    for i in range(n):\n        if i - k >= 0:\n            dp[i] = max(l[i], dp[i - k] + l[i])\n    if k >= n:\n        print(max(l))\n    else:\n        print(max(dp[n - k:n]))", "t = int(input())\nwhile t > 0:\n    b = []\n    tot = 0\n    (n, k) = map(int, input().split())\n    a = [int(k) for k in input().split()]\n    for i in range(0, k):\n        tot = sum(a[i:n:k])\n        b.append(tot)\n        tot = 0\n    for i in range(k, n):\n        b.append(b[i - k] - a[i - k])\n    print(max(b))\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = []\n    if m > n:\n        print(max(l))\n    else:\n        for i in range(m):\n            a = l[i]\n            for j in range(i + m, n, m):\n                a = max(l[j] + a, l[j])\n            l1.append(a)\n        print(max(l1))", "tc = int(input())\nls = []\nm = 0\nfor i in range(tc):\n    (n, k) = map(int, input().split())\n    for m in range(0, n):\n        ls.append(0)\n    all = [int(i) for i in input().split()]\n    for j in range(len(all) - 1, -1, -1):\n        if j + k < n:\n            ls[j] = all[j] + ls[j + k]\n        else:\n            ls[j] = all[j]\n    print(max(ls))\n    ls.clear()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    bs = [-9999999] * k\n    cs = [0] * k\n    for i in range(len(a) - 1, -1, -1):\n        j = i % k\n        cs[j] += a[i]\n        if bs[j] < cs[j]:\n            bs[j] = cs[j]\n    print(max(bs))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    bs = [-9999999] * k\n    cs = [0] * k\n    for i in range(len(a) - 1, -1, -1):\n        j = i % k\n        cs[j] += a[i]\n        if bs[j] < cs[j]:\n            bs[j] = cs[j]\n    print(max(bs))", "def summ(b):\n    s = 0\n    for i in b:\n        if s < 0:\n            s = 0\n        s += i\n    return s\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    step = list(map(int, input().split(' ')))\n    a = []\n    for j in range(k):\n        b = step[j::k]\n        s1 = summ(b)\n        a.append(s1)\n    print(max(a))", "def getMax(arr):\n    s = -999999999\n    sm = 0\n    for i in range(len(arr)):\n        if sm < 0:\n            sm = 0\n        sm += arr[i]\n    return sm\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k >= n:\n        print(max(a))\n    else:\n        s = -9999999\n        for i in range(k):\n            sm = getMax(a[i::k])\n            s = max(s, sm)\n        print(s)", "def getMax(arr):\n    s = -9999999999999999999\n    sm = 0\n    for i in range(len(arr)):\n        sm += arr[i]\n        s = max(s, sm)\n    return s\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxi = 0\n    a = a[::-1]\n    if k >= n:\n        print(max(a))\n    else:\n        s = -9999999999999\n        for i in range(k):\n            sm = getMax(a[i::k])\n            s = max(s, sm)\n        print(s)", "t = int(input())\nfor i in range(t):\n    (a, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    final = [0] * k\n    for j in range(len(l)):\n        a = j % k\n        if final[a] + l[j] > l[j]:\n            final[a] = final[a] + l[j]\n        else:\n            final[a] = l[j]\n    print(max(final))", "MIN = -100000\n\ndef maximum(a):\n    s = MIN\n    sa = 0\n    for ai in a:\n        sa += ai\n        s = max(s, sa)\n    return s\nfor T in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(reversed(list(map(int, input().split()))))\n    score = MIN\n    if K >= N:\n        score = max(A)\n    else:\n        for i in range(K):\n            score = max(score, maximum(A[i::K]))\n    print(score)", "MIN = -1000000\n\ndef maximum(a):\n    s = MIN\n    sa = 0\n    for ai in a:\n        sa += ai\n        s = max(s, sa)\n    return s\nfor T in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    score = MIN\n    if N > 1000:\n        jumps = list()\n        for i in range(K + 1):\n            jumps.append(list(reversed(A[i::K])))\n        for jump in jumps:\n            score = max(score, maximum(jump))\n        score = max(max(A), score)\n    else:\n        for i in range(N):\n            score = max(score, sum(A[i::K]))\n    print(score)", "MIN = -1000000\n\ndef maximum(a):\n    s = MIN\n    sa = 0\n    for ai in a:\n        sa += ai\n        s = max(s, sa)\n    return s\nfor T in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    score = MIN\n    if N > 1000:\n        jumps = list()\n        for i in range(2 * K):\n            jumps.append(list(reversed(A[i::K])))\n        for jump in jumps:\n            score = max(score, maximum(jump))\n        score = max(max(A), score)\n    else:\n        for i in range(N):\n            score = max(score, sum(A[i::K]))\n    print(score)", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k > n:\n        print(max(arr))\n        continue\n    for i in range(n - k - 1, -1, -1):\n        arr[i] = arr[i] + arr[i + k]\n    print(max(arr))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    dp = []\n    ans = A[n - 1]\n    for i in range(n - 1, -1, -1):\n        if i + k < n:\n            A[i] += A[i + k]\n        ans = max(ans, A[i])\n    print(ans)", "t = int(input())\nfor z in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(0, k):\n        b.append(sum(a[i:n:k]))\n    for i in range(k, n):\n        b.append(b[i - k] - a[i - k])\n    print(max(b))", "import sys\nt = int(input())\nfor i in range(t):\n    list1 = list(map(int, input().split()))\n    n = int(list1[0])\n    k = int(list1[1])\n    s = list(map(int, input().split()))\n    s1 = [-sys.maxsize - 1 for i in range(n)]\n    for j in range(n):\n        loc = j % k\n        if s[j] + s1[loc] < s[j]:\n            s1[loc] = s[j]\n        else:\n            s1[loc] += s[j]\n    s5 = s1[0:k + 1]\n    max1 = max(s5)\n    print(max1)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pref = [0] * n\n    maxi = -10001\n    for j in range(k):\n        pref[n - j - 1] = a[n - j - 1]\n    for j in range(n - k - 1, -1, -1):\n        pref[j] = pref[j + k] + a[j]\n    for j in range(n):\n        if maxi < pref[j]:\n            maxi = pref[j]\n    print(maxi)", "T = int(input())\nwhile T:\n    (N, K) = input().split()\n    N = int(N)\n    K = int(K)\n    A = input().split()\n    for i in range(N):\n        A[i] = int(A[i])\n    if K > N:\n        print(max(A))\n    else:\n        sum1 = [0 for i in range(K)]\n        sum2 = []\n        for i in range(N):\n            sum1[(N - 1 - i) % K] += A[N - 1 - i]\n            sum2.append(sum1[(N - 1 - i) % K])\n        print(max(sum2))\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = []\n    ans = []\n    a = list(map(int, input().split()))\n    for i in range(k):\n        jump = i\n        sum = 0\n        while jump < n:\n            sum += a[jump]\n            jump += k\n        ans.append(sum)\n        if i == 0:\n            max = sum\n        elif sum > max:\n            max = sum\n    for i in range(k, n):\n        ans.append(ans[i - k] - a[i - k])\n        if ans[i] > max:\n            max = ans[i]\n    print(max)", "t = int(input())\nwhile t != 0:\n    list_a = [int(x) for x in input().split()]\n    (n, k) = list_a\n    list_b = [int(x) for x in input().split()]\n    if n == k:\n        cur_max = max(list_b)\n    else:\n        dist_first_k_ele = []\n        for i in range(k):\n            dist_first_k_ele.append(sum(list_b[i:len(list_b):k]))\n        cur_max = max(dist_first_k_ele)\n        for i in range(k, len(list_b)):\n            dist_first_k_ele[i % k] = dist_first_k_ele[i % k] - list_b[i - k]\n            if cur_max < dist_first_k_ele[i % k]:\n                cur_max = dist_first_k_ele[i % k]\n    t -= 1\n    print(cur_max)", "import math\nfor testcases in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.reverse()\n    maxi = a[0]\n    temp = a[0]\n    flag = 1\n    j = k\n    while j < n:\n        temp = temp + a[j]\n        j = j + k\n        maxi = max(maxi, temp)\n    temp = 0\n    for i in range(1, k):\n        j = i\n        while j < n:\n            temp = temp + a[j]\n            j += k\n            maxi = max(maxi, temp)\n        temp = 0\n    print(maxi)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    for j in range(n - 1, -1, -1):\n        if j + k < n:\n            arr[j] += arr[j + k]\n    print(max(arr))", "tests = int(input())\nfor te in range(tests):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if arr[i] < 0:\n            count += 1\n    ans = -10 ** 18\n    for i in range(k):\n        j = i\n        suma = 0\n        while j < n:\n            suma += arr[j]\n            if suma < 0 and j + k < n:\n                suma = 0\n            j = j + k\n        ans = max(ans, suma)\n    print(ans)"]