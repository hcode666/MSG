["def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nwhile t:\n    t -= 1\n    (a, b) = input().split()\n    (a, b) = (int(a), int(b))\n    lis = list(map(int, input().split()))\n    bit = [0 for _ in range(32)]\n    for i in range(32):\n        for j in lis:\n            if j & 1 << i:\n                bit[i] += 1\n    cnt = 0\n    for i in bit:\n        cnt += (i + b - 1) // b\n    print(cnt)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(32):\n        cnt = 0\n        for j in l:\n            if j >> i & 1 == 1:\n                cnt += 1\n        ans = ans + math.ceil(cnt / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits_arr = [0] * 32\n    for j in arr:\n        count = 0\n        while j != 0:\n            if j & 1:\n                bits_arr[count] += 1\n            count += 1\n            j >>= 1\n    ans = 0\n    for j in bits_arr:\n        ans += math.ceil(j / k)\n    print(ans)", "import sys\nimport math\nfrom functools import cmp_to_key\nfrom collections import OrderedDict\nsys.setrecursionlimit(10 ** 9)\n\ndef solve():\n    for t in range(int(input())):\n        (n, k) = list(map(int, input().split()))\n        arr = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(0, 32):\n            x = 1 << i\n            setBits = 0\n            for i in arr:\n                if i & x:\n                    setBits += 1\n            ans += math.ceil(setBits / k)\n        print(ans)\nsolve()", "import sys\nimport math\nfrom functools import cmp_to_key\nfrom collections import OrderedDict\nsys.setrecursionlimit(10 ** 9)\n\ndef solve():\n    for t in range(int(input())):\n        (n, k) = list(map(int, input().split()))\n        arr = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(0, 32):\n            x = 1 << i\n            setBits = 0\n            for i in arr:\n                if i & x:\n                    setBits += 1\n            ans += math.ceil(setBits / k)\n        print(ans)\nsolve()", "import math\n\ndef xor(j):\n    lo = mo = 0\n    lu = []\n    k = -1\n    for i in j:\n        i = int(i)\n        while i > 0:\n            k = k + 1\n            if i % 2 == 1:\n                lu.append(k)\n            i = i // 2\n        k = -1\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))\nfor forbid in range(int(input())):\n    l = input().split()\n    xor(input().split())", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    lo = mo = 0\n    lu = []\n    k = -1\n    j = input().split()\n    for i in j:\n        i = int(i)\n        while i > 0:\n            k = k + 1\n            if i % 2 == 1:\n                lu.append(k)\n            i = i // 2\n        k = -1\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    k = lo = mo = 0\n    lu = []\n    j = input().split()\n    for i in j:\n        k = bin(int(i))[2:]\n        for i in range(len(k)):\n            if k[i] == '1':\n                lu.append(len(k) - i - 1)\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    k = lo = mo = 0\n    lu = []\n    j = input().split()\n    for i in j:\n        for j in range(len(bin(int(i))) - 2):\n            if bin(int(i))[j + 2] == '1':\n                lu.append(len(bin(int(i))) - 2 - j - 1)\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    k = lo = mo = 0\n    lu = []\n    j = input().split()\n    for i in j:\n        k = bin(int(i))[2:]\n        for i in range(len(k)):\n            if k[i] == '1':\n                lu.append(len(k) - i - 1)\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    k = lo = mo = 0\n    lu = []\n    j = input().split()\n    for i in j:\n        k = bin(int(i))[2:]\n        for i in range(len(k)):\n            if k[i] == '1':\n                lu.append(len(k) - i - 1)\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "import math\nfor forbid in range(int(input())):\n    l = input().split()\n    k = lo = mo = 0\n    lu = []\n    j = input().split()\n    for i in j:\n        k = bin(int(i))[2:]\n        for i in range(len(k)):\n            if k[i] == '1':\n                lu.append(len(k) - i - 1)\n    lu.sort()\n    for i in range(len(lu) - 1):\n        if lu[i] != lu[i + 1]:\n            lo += math.ceil((i - mo + 1) / int(l[1]))\n            mo = i + 1\n    print(lo + math.ceil((len(lu) - mo) / int(l[1])))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    bit = [0 for i in range(32)]\n    for i in l:\n        for x in range(0, 32):\n            val = i & 1 << x\n            if val != 0:\n                bit[x] += 1\n    ans = 0\n    for i in bit:\n        if i % k == 0:\n            ans += i // k\n        else:\n            ans += i // k + 1\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    bit = [0 for i in range(32)]\n    for i in l:\n        for x in range(0, 32):\n            val = i & 1 << x\n            if val != 0:\n                bit[x] += 1\n    ans = 0\n    for i in bit:\n        ans += i // k\n        if i % k != 0:\n            ans += 1\n    print(ans)\n    t -= 1", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    m = bin(max(li)).lstrip('0b')\n    ans = [0] * len(m)\n    result = 0\n    for i in range(len(ans)):\n        for j in range(len(li)):\n            if li[j] & 1 << i:\n                ans[i] += 1\n        result += ceil(ans[i] / k)\n    print(result)", "import sys\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    m = max(a)\n    if m == 0:\n        print(0)\n        continue\n    m = len('{0:b}'.format(m))\n    for x in range(n):\n        a[x] = '{0:b}'.format(a[x])\n        a[x] = '0' * (m - len(a[x])) + a[x]\n    r = [0] * m\n    for x in range(m):\n        for l in a:\n            if l[x] == '1':\n                r[x] += 1\n    ans = 0\n    for x in r:\n        while x > 0:\n            ans += 1\n            x -= k\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if m == 0:\n        print(0)\n        continue\n    m = len('{0:b}'.format(m))\n    for x in range(n):\n        a[x] = '{0:b}'.format(a[x])\n        a[x] = '0' * (m - len(a[x])) + a[x]\n    r = [0] * m\n    for x in range(m):\n        for l in a:\n            if l[x] == '1':\n                r[x] += 1\n    ans = 0\n    for x in r:\n        while x > 0:\n            ans += 1\n            x -= k\n    print(ans)", "import math\n\ndef function(A, N, K):\n    arr = [0 for i in range(50)]\n    for num in A:\n        i = 0\n        while num:\n            arr[i] += num & 1\n            i += 1\n            num = num >> 1\n    ans = 0\n    for i in range(len(arr)):\n        ans += math.ceil(arr[i] / K)\n    return ans\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        (N, K) = list(map(int, input().split(' ')))\n        A = list(map(int, input().split(' ')))\n        val = function(A, N, K)\n        print(val)\nmain()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if max(a) == 0:\n        print(0)\n        continue\n    x = int(math.log(max(a), 2))\n    d = {}\n    for i in range(x + 1):\n        d[i] = 0\n        for j in range(n):\n            if a[j] % 2:\n                d[i] += 1\n            a[j] //= 2\n    ans = 0\n    for i in d:\n        ans += math.ceil(d[i] / k)\n    print(ans)", "import math\nfrom bisect import bisect_left\nfrom code import interact\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom pydoc import plain\nfrom re import X\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, k) = il()\n    a = il()\n    l = [0] * 30\n    for i in range(n):\n        b = '{0:b}'.format(a[i])\n        b = list(map(int, str(b)))\n        p = len(l) - 1\n        for j in range(len(b) - 1, -1, -1):\n            l[p] += b[j]\n            p -= 1\n    s = 0\n    for i in range(len(l)):\n        s += math.ceil(l[i] / k)\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    q = [0] * 32\n    for i in a:\n        p = 0\n        while i:\n            q[p] += i & 1\n            i >>= 1\n            p += 1\n    print(sum(((i + k - 1) // k for i in q)))", "import math\na = int(input())\nfor i in range(a):\n    (n, k) = map(int, input().split())\n    v = list(map(int, input().split()))\n    bits = [0 for j in range(32)]\n    for u in range(32):\n        for p in range(len(v)):\n            if v[p] % 2 != 0:\n                bits[u] += 1\n            v[p] = v[p] // 2\n    print(sum([math.ceil(hey / k) for hey in bits]))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    r = 0\n    for j in range(32):\n        ans = 0\n        for z in a:\n            ans += z & pow(2, j) > 0\n        r += math.ceil(ans / k)\n    print(r)", "import math\n\ndef solve(n, k, arr):\n    res = 0\n    for idx in range(32):\n        ans = 0\n        for num in arr:\n            ans += num & pow(2, idx) > 0\n        res += math.ceil(ans / k)\n    return res\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))", "import math\n\ndef solve(n, k, arr):\n    res = 0\n    for idx in range(32):\n        ans = 0\n        for num in arr:\n            ans += num & pow(2, idx) > 0\n        res += math.ceil(ans / k)\n    return res\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))", "import math\ntestcase = int(input())\nfor t in range(testcase):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    ans = 0\n    for i in range(32):\n        bit_sum = 0\n        for j in range(n):\n            bit = ar[j] & pow(2, i) > 0\n            bit_sum += bit\n        ans += int(math.ceil(bit_sum / k))\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (p, h) = (0, len(bin(max(arr))) - 2)\n    ans = 0\n    while p < h:\n        cur = 1 << p\n        cnt = 0\n        for i in range(n):\n            if arr[i] & cur == cur:\n                arr[i] ^= cur\n                cnt += 1\n        ans += math.ceil(cnt / k)\n        p += 1\n    print(ans)", "import math\nfor i in range(int(input())):\n    (N, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    m = array.index(max(array))\n    array = list(map(lambda x: str(bin(x)[2:]), array))\n    total = [0] * 32\n    for j in range(len(array)):\n        array[j] = array[j].rjust(len(array[m]), '0')\n    for i in range(len(array[m])):\n        for j in array:\n            total[i] += int(j[i])\n    result = 0\n    for j in total:\n        result += math.ceil(int(j) / float(k))\n    print(result)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    cnt = [0] * 30\n    A = [*map(int, input().split())]\n    for x in A:\n        for j in range(30):\n            if x >> j & 1:\n                cnt[j] += 1\n    print(sum(((x + K - 1) // K for x in cnt)))", "import math\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    msb = [0 for i in range(40)]\n    for i in range(n):\n        for j in range(30, -1, -1):\n            if arr[i] & 1 << j:\n                msb[j] += 1\n    ans = 0\n    for i in msb:\n        if i:\n            if i <= k:\n                ans += 1\n            else:\n                ans += math.ceil(i / k)\n    print(ans)\n    t -= 1", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    f = [0] * 32\n    for ele in l:\n        b = '{:032b}'.format(ele)\n        for (ind, ch) in enumerate(b):\n            if ch == '1':\n                f[ind] += 1\n    ans = 0\n    for i in f:\n        ans += ceil(i / k)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k = float(k)\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(len(bin(max(a))) - 2):\n        c = 0\n        for j in a:\n            p = 2 ** i\n            if j & p != 0:\n                c += 1\n        c = float(c)\n        res += math.ceil(c / k)\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    bin = [0] * 32\n    for y in range(32):\n        for j in a:\n            if j & 1 << y:\n                bin[y] += 1\n    res = 0\n    for i in bin:\n        if i % k == 0:\n            res += i // k\n        else:\n            res += i // k + 1\n    print(res)", "import math\nT = int(input())\nfor tc in range(T):\n    (n, k) = map(int, input().split(' '))\n    seq = list(map(int, input().split(' ')))\n    count = 0\n    bit_count = [0] * 32\n    for j in range(32):\n        for i in range(n):\n            if seq[i] & 1 == 1:\n                bit_count[j] = bit_count[j] + 1\n            seq[i] = seq[i] >> 1\n        count = count + math.ceil(bit_count[j] / k)\n    print(count)", "import math\nT = int(input())\nfor tc in range(T):\n    (n, k) = map(int, input().split(' '))\n    seq = list(map(int, input().split(' ')))\n    count = 0\n    bit_count = [0] * 32\n    for j in range(32):\n        for i in range(n):\n            if seq[i] & 1 == 1:\n                bit_count[j] = bit_count[j] + 1\n            seq[i] = seq[i] >> 1\n        count = count + math.ceil(bit_count[j] / k)\n    print(count)", "import math\ntry:\n    for _ in range(int(input())):\n        (n, k) = list(map(int, input().split()))\n        arr = list(map(int, input().split()))\n        temp = []\n        for i in arr:\n            if i == 1:\n                binary_form = '0' * 31 + '1'\n            else:\n                bits = len(bin(i).replace('0b', ''))\n                binary_form = '0' * (32 - bits) + bin(i).replace('0b', '')\n            temp.append(binary_form)\n        cnt = []\n        for i in range(32):\n            ones = 0\n            for j in range(n):\n                if temp[j][i] == '1':\n                    ones += 1\n            if ones % k == 0:\n                cnt.append(ones // k)\n            else:\n                cnt.append(ones // k + 1)\n        print(sum(cnt))\nexcept:\n    pass", "import math\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    (a, b) = (list(map(int, input().split())), [0] * 32)\n    for z in a:\n        p = 0\n        while z > 0:\n            if z & 1:\n                b[p] += 1\n            z = z >> 1\n            p += 1\n    print(sum([math.ceil(z / k) for z in b]))", "n = int(input())\nfor i in range(n):\n    (N, P) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    q = []\n    for i in range(N):\n        p = bin(l[i])\n        p = p[2:]\n        W = len(p)\n        q.append((32 - W) * '0' + p)\n    for i in range(32):\n        c = 0\n        for j in range(N):\n            if q[j][i] == '1':\n                c += 1\n        if c % P == 0:\n            a += c // P\n        else:\n            a += c // P + 1\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    xd = {}\n    for i in range(n):\n        if x[i] > 0:\n            temp = bin(x[i])[2:]\n            for j in range(len(temp) - 1, -1, -1):\n                if temp[j] == '1':\n                    xd[len(temp) - 1 - j] = xd.setdefault(len(temp) - 1 - j, 0) + 1\n    ans = 0\n    for i in xd.values():\n        if i % k > 0:\n            ans += i // k + 1\n        else:\n            ans += i // k\n    print(ans)", "for t in range(int(input())):\n    (N, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    data = {}\n    for x in l:\n        b = str(bin(x))\n        w = b[2:][::-1]\n        q = 0\n        for i in w:\n            if i == '1':\n                try:\n                    data[q] += 1\n                except:\n                    data[q] = 1\n            q += 1\n    ans = 0\n    for i in data.keys():\n        if data[i] % k == 0:\n            ans += data[i] // k\n        else:\n            ans += data[i] // k + 1\n    print(ans)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    one = {}\n    for i in l:\n        p = str(bin(i))\n        w = p[2:][::-1]\n        q = 0\n        for j in w:\n            if j == '1':\n                try:\n                    one[q] += 1\n                except:\n                    one[q] = 1\n            q += 1\n    total = 0\n    for i in one.keys():\n        if one[i] % k == 0:\n            total += one[i] // k\n        else:\n            total += one[i] // k + 1\n    print(total)", "from collections import defaultdict\n\ndef seal(a, b):\n    return (a + b - 1) // b\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    d = defaultdict(int)\n    for i in arr:\n        pos = 0\n        while i != 0:\n            if i & 1:\n                d[pos] += 1\n            i >>= 1\n            pos += 1\n    ans = 0\n    for (key, value) in d.items():\n        ans += seal(value, k)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k = float(k)\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(len(bin(max(a))) - 2):\n        c = 0\n        for j in a:\n            p = 2 ** i\n            if j & p != 0:\n                c += 1\n        c = float(c)\n        res += math.ceil(c / k)\n    print(res)", "from sys import stdin, stdout\nfrom heapq import heapify, heappush, heappop\nimport sys\nfrom collections import Counter\nfrom copy import deepcopy\nimport math\nsys.setrecursionlimit(10 ** 5)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    ans = []\n    for p in range(n + 1):\n        if prime[p]:\n            ans.append(p)\n    return ans\n\ndef mapinput():\n    return map(int, stdin.readline().split())\n\ndef strinput():\n    return stdin.readline().strip()\n\ndef listinput():\n    return list(map(int, stdin.readline().split()))\n\ndef intinput():\n    return int(stdin.readline().strip())\nfor test in range(intinput()):\n\n    def solve():\n        (n, k) = mapinput()\n        arr = listinput()\n        posi = Counter()\n        for tt in range(35):\n            for i in range(n):\n                if arr[i] & 1 == 1:\n                    posi[tt] += 1\n                arr[i] = arr[i] >> 1\n        ans = 0\n        for i in posi:\n            ans += math.ceil(posi[i] / k)\n        print(ans)\n    solve()", "no_of_cases = int(input())\nfor i in range(0, no_of_cases):\n    (lenght, operation) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    steps = 0\n    for k in range(0, 32):\n        count = 0\n        for index in range(0, lenght):\n            if arr[index] % 2 == 0:\n                arr[index] = arr[index] / 2\n            else:\n                count += 1\n                arr[index] = arr[index] // 2\n        steps += count / operation if count % operation == 0 else count // operation + 1\n    print(int(steps))", "t = int(input())\nwhile t:\n    t -= 1\n    ans = 0\n    (N, K) = input().split()\n    n = int(N)\n    k = int(K)\n    arr = [int(i) for i in input().split()]\n    for i in range(32):\n        count = 0\n        for j in range(n):\n            if arr[j] != 0:\n                if arr[j] & 1:\n                    count += 1\n                arr[j] = int(arr[j] / 2)\n        ans += int((count + k - 1) / k)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    ans = 0\n    (N, K) = input().split()\n    n = int(N)\n    k = int(K)\n    arr = [int(i) for i in input().split()]\n    for i in range(32):\n        count = 0\n        for j in range(n):\n            if arr[j] != 0:\n                if arr[j] & 1:\n                    count += 1\n                arr[j] = int(arr[j] / 2)\n        ans += int(count / k)\n        if count % k != 0:\n            ans += 1\n    print(ans)", "import math\nnoOfTestCases = int(input())\nfor i in range(noOfTestCases):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    res = 0\n    for j in range(max(a) // 2 + 1):\n        cnt = 0\n        for i in range(n):\n            if a[i] & 1:\n                cnt += 1\n            a[i] = a[i] // 2\n        res = res + math.ceil(cnt / k)\n        if sum(a) == 0:\n            break\n    print(res)", "import math\nk = int(input())\nfor a in range(k):\n    s = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    dic = {}\n    for i in range(s[0]):\n        num = d[i]\n        k = 1\n        while num != 0:\n            if num % 2 == 1:\n                if k in dic:\n                    dic[k] += 1\n                else:\n                    dic[k] = 1\n            num = num // 2\n            k += 1\n    total = 0\n    for i in dic:\n        total += math.ceil(dic[i] / s[1])\n    print(total)", "import math\nk = int(input())\nfor a in range(k):\n    s = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    dic = {}\n    for i in range(s[0]):\n        num = d[i]\n        k = 1\n        while num != 0:\n            if num % 2 == 1:\n                if k in dic:\n                    dic[k] += 1\n                else:\n                    dic[k] = 1\n            num = num // 2\n            k += 1\n    total = 0\n    for i in dic:\n        total += math.ceil(dic[i] / s[1])\n    print(total)", "import math\nk = int(input())\nfor a in range(k):\n    s = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    dic = {}\n    for i in range(s[0]):\n        num = d[i]\n        k = 1\n        while num != 0:\n            if num % 2 == 1:\n                if k in dic:\n                    dic[k] += 1\n                else:\n                    dic[k] = 1\n            num = num // 2\n            k += 1\n    total = 0\n    for i in dic:\n        total += math.ceil(dic[i] / s[1])\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    tot = [0] * 32\n    for item in arr:\n        z = item\n        ind = 0\n        while z:\n            if z & 1:\n                tot[ind] += 1\n            z = z >> 1\n            ind += 1\n    ans = 0\n    for item in tot:\n        if item % k == 0:\n            ans += item // k\n        else:\n            ans += item // k + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    one = {}\n    for i in l:\n        num = str(bin(i))\n        bNum = num[2:][::-1]\n        q = 0\n        for j in bNum:\n            if j == '1':\n                try:\n                    one[q] += 1\n                except:\n                    one[q] = 1\n            q += 1\n    total = 0\n    for i in one.keys():\n        if one[i] % k == 0:\n            total += one[i] // k\n        else:\n            total += one[i] // k + 1\n    print(total)", "t = int(input())\nwhile t:\n    t -= 1\n    l = [int(i) for i in input().split(' ')]\n    n = l[0]\n    k = l[1]\n    a = [int(i) for i in input().split(' ')]\n    sm = 0\n    for _ in range(32):\n        count = 0\n        for i in range(n):\n            if a[i] != 0:\n                count += a[i] & 1\n            a[i] = a[i] >> 1\n        sm = sm + (count + k - 1) // k\n    print(sm)", "from math import *\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    bit = [0] * 32\n    for i in range(32):\n        for j in range(n):\n            if a[j] % 2 != 0:\n                bit[i] += 1\n            a[j] = a[j] // 2\n    ans = 0\n    for i in range(32):\n        ans += ceil(bit[i] / k)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = []\n    for i in range(0, 31):\n        b.append(0)\n        for j in range(n):\n            if a[j] % 2 != 0:\n                b[i] += 1\n            a[j] = a[j] // 2\n    ans = 0\n    for i in range(0, 31):\n        if b[i] % k == 0:\n            ans += b[i] // k\n        else:\n            ans += b[i] // k + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    binary = []\n    for i in l:\n        binary.append(bin(i).replace('0b', ''))\n    res = [0 for i in range(32)]\n    for i in range(n):\n        tmp = binary[i]\n        c = 31\n        for i in range(len(tmp) - 1, -1, -1):\n            if tmp[i] == '1':\n                res[c] += 1\n            c -= 1\n    ans = 0\n    for i in res:\n        if i > 0:\n            if i % k == 0:\n                ans += i // k\n            else:\n                ans += i // k + 1\n    print(ans)", "import math\n\ndef solve():\n    (n, k) = [int(x) for x in input().split()]\n    a = list(map(int, input().split()))\n    c = [0] * 32\n    for x in a:\n        for i in range(30):\n            if x & 1 << i > 0:\n                c[i] += 1\n    ans = 0\n    for x in c:\n        ans = ans + math.ceil(x / k)\n    print(ans)\n    return\nt = int(input())\nfor i in range(t):\n    solve()", "from math import *\nfor j in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bitarr = [0] * 32\n    for i in range(32):\n        for item in arr:\n            if item & 1 << i:\n                bitarr[i] += 1\n    total = 0\n    for item in bitarr:\n        total += ceil(item / k)\n    print(total)", "from math import *\nfor j in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bitarr = [0] * 32\n    for i in range(32):\n        for item in arr:\n            if item & 1 << i:\n                bitarr[i] += 1\n    total = 0\n    for item in bitarr:\n        total += ceil(item / k)\n    print(total)", "from math import *\nfor j in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bitarr = [0] * 32\n    for i in range(32):\n        for item in arr:\n            if item & 1 << i:\n                bitarr[i] += 1\n    total = 0\n    for item in bitarr:\n        total += ceil(item / k)\n    print(total)", "from sys import stdin\nfrom collections import defaultdict\nimport math\n\ndef highestPowerof2(n):\n    p = int(math.log(n, 2))\n    return [p, int(pow(2, p))]\n\ndef processNum(num, dic, n, k):\n    nearest2pow = highestPowerof2(num)\n    tmp = num - nearest2pow[1]\n    dic[str(nearest2pow[0])] += 1\n    while tmp != 0:\n        nearest2pow = highestPowerof2(tmp)\n        tmp = tmp - nearest2pow[1]\n        dic[str(nearest2pow[0])] += 1\ndic = defaultdict(int)\nt = int(stdin.readline())\nwhile t:\n    dic.clear()\n    (n, k) = [int(x) for x in stdin.readline().split()]\n    arr = [int(x) for x in stdin.readline().split()]\n    for num in arr:\n        if num > 0:\n            processNum(num, dic, n, k)\n    final_ans = 0\n    for (key, val) in dic.items():\n        if val % k == 0:\n            final_ans += val // k\n        else:\n            final_ans += val // k + 1\n    print(final_ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, ki) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = []\n    for j in range(n):\n        l.append(bin(a[j]).replace('0b', ''))\n    for b in range(n):\n        l[b] = int(l[b])\n    ans = 0\n    m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    for x in range(0, n):\n        for k in range(0, 31):\n            if l[x] != 0:\n                m[k] += l[x] % 10\n                l[x] = l[x] // 10\n    for z in range(0, 31):\n        if m[z] % ki == 0:\n            ans += m[z] // ki\n        else:\n            ans += m[z] // ki + 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = [0] * 30\n    for i in a:\n        s = bin(i)\n        s = s[:1:-1]\n        for c in range(len(s)):\n            p[c] += int(s[c])\n    ans = 0\n    for i in p:\n        ans += math.ceil(i / k)\n    print(ans)", "we = int(input())\nfor i in range(we):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    g = []\n    for i in l:\n        d = str(bin(i))\n        d = d[2:]\n        g.append([d, len(d)])\n        if len(d) > c:\n            c = len(d)\n    r = []\n    for i in g:\n        y = []\n        for j in range(c - i[1]):\n            y.append('0')\n        for j in i[0]:\n            y.append(j)\n        r.append(y)\n    s = 0\n    for i in range(c):\n        f = 0\n        for j in range(len(l)):\n            if r[j][i] == '1':\n                f += 1\n        if f % k != 0:\n            s = s + 1 + f // k\n        else:\n            s = s + f // k\n    print(s)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    one = {}\n    for i in l:\n        p = str(bin(i))\n        w = p[2:][::-1]\n        q = 0\n        for j in w:\n            if j == '1':\n                try:\n                    one[q] += 1\n                except:\n                    one[q] = 1\n            q += 1\n    total = 0\n    for i in one.keys():\n        if one[i] % k == 0:\n            total += one[i] // k\n        else:\n            total += one[i] // k + 1\n    print(total)", "import math\n\ndef ans():\n\n    def binary(a):\n        bn = bin(a).replace('0b', '')\n        x = bn[::-1]\n        while len(x) < 8:\n            x += '0'\n        bn = x[::-1]\n        return bn\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    plraw = []\n    for i in A:\n        bi = binary(i)\n        bir = bi[::-1]\n        for j in range(len(bi)):\n            if bir[j] == '1':\n                plraw.append(j)\n    plc = []\n    for i in plraw:\n        if i not in plc:\n            plc.append(i)\n    sum = 0\n    for i in plc:\n        cnt = plraw.count(i)\n        sum = sum + math.ceil(cnt / K)\n    return sum\nT = int(input())\nfor i in range(T):\n    an = ans()\n    print(an)", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    (n, k) = tuple(map(int, x))\n    x = input().split()\n    a = list(map(int, x))\n    ele = []\n    for j in range(0, 31):\n        ele.append(0)\n        for p in range(0, n):\n            if a[p] % 2 != 0:\n                ele[j] += 1\n            a[p] = int(a[p] / 2)\n        res = 0\n    for j in range(0, 31):\n        if ele[j] % k == 0:\n            res += ele[j] / k\n        else:\n            res += int(ele[j] / k) + 1\n    print(int(res))", "from math import *\nfor u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = []\n    m = 0\n    for i in range(n):\n        b = bin(l[i])[2:]\n        m = max(len(b), m)\n        s.append(b)\n    for i in range(n):\n        if len(s[i]) < m:\n            s[i] = '0' * (m - len(s[i])) + s[i]\n    d = []\n    for j in range(m):\n        c = 0\n        for i in range(n):\n            if s[i][j] == '1':\n                c += 1\n        d.append(c)\n    q = 0\n    for i in range(m):\n        q += ceil(d[i] / k)\n    print(q)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = [0 for i in range(32)]\n    for i in a:\n        temp = bin(i).replace('b', '0')\n        l = 0\n        for i in range(len(temp) - 1, -1, -1):\n            s[31 - l] += int(temp[i])\n            l += 1\n    ans = 0\n    for i in s:\n        if i > 0:\n            if i > k:\n                if i % k == 0:\n                    ans += i // k\n                else:\n                    ans += i // k + 1\n            else:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    inn = input()\n    (n, k) = map(int, inn.split(' '))\n    inn = input()\n    arr = list(map(int, inn.split(' ')))\n    total = 0\n    res = 0\n    for i in range(0, 32):\n        total = 0\n        for j in range(0, len(arr)):\n            if arr[j] & 1:\n                total += 1\n            arr[j] = arr[j] >> 1\n        if total % k == 0:\n            res += total // k\n        else:\n            res += total // k + 1\n    print(res)", "T = int(input())\nwhile T:\n    (n, k) = map(int, input().split(' '))\n    arr = map(int, input().split(' '))\n    ans = 0\n    d = {}\n    for i in arr:\n        bn = bin(i).replace('0b', '')[::-1]\n        for j in range(len(bn)):\n            if bn[j] == '0':\n                continue\n            if j in d:\n                d[j] += 1\n            else:\n                d[j] = 1\n    for (key, itm) in d.items():\n        if itm <= k:\n            ans += 1\n        else:\n            while itm > k:\n                itm = itm - k\n                ans += 1\n            if itm > 0:\n                ans += 1\n    print(ans)\n    T -= 1", "T = int(input())\nwhile T:\n    (n, k) = map(int, input().split(' '))\n    arr = map(int, input().split(' '))\n    ans = 0\n    d = {}\n    for i in arr:\n        bn = bin(i).replace('0b', '')[::-1]\n        for j in range(len(bn)):\n            if bn[j] == '0':\n                continue\n            if j in d:\n                d[j] += 1\n            else:\n                d[j] = 1\n    for (key, itm) in d.items():\n        if itm <= k:\n            ans += 1\n        else:\n            while itm > k:\n                itm = itm - k\n                ans += 1\n            if itm > 0:\n                ans += 1\n    print(ans)\n    T -= 1", "t = int(input())\nfor i in range(0, t):\n    x = input().split()\n    (n, K) = tuple(map(int, x))\n    x = input().split()\n    a = list(map(int, x))\n    ele = []\n    for j in range(0, 31):\n        ele.append(0)\n        for p in range(0, n):\n            if a[p] % 2 != 0:\n                ele[j] += 1\n            a[p] = int(a[p] / 2)\n    res = 0\n    for j in range(0, 31):\n        if ele[j] % K == 0:\n            res += ele[j] / K\n        else:\n            res += int(ele[j] / K) + 1\n    print(int(res))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bits = [0] * 32\n    for i in range(n):\n        for j in range(32):\n            if arr[i] & 1 << j:\n                bits[j] += 1\n    ans = 0\n    for i in range(32):\n        ans = ans + math.ceil(bits[i] / k)\n    print(ans)", "t = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_len = len(bin(max(a))[2:])\n    for x in range(n):\n        a[x] = bin(a[x])[2:]\n    for x in range(n):\n        if len(a[x]) < max_len:\n            p = max_len - len(a[x])\n            a[x] = '0' * p + a[x]\n    ans = 0\n    for x in range(max_len):\n        count = 0\n        for y in range(n):\n            if a[y][x] == '1':\n                count += 1\n        if int(count / k) == count / k:\n            ans += int(count / k)\n        else:\n            ans += int(count / k) + 1\n    final.append(ans)\nfor _ in range(t):\n    print(final[_])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    lst = [0] * 32\n    for x in arr:\n        i = 0\n        while x:\n            lst[i] += x & 1\n            x >>= 1\n            i += 1\n    ans = 0\n    for x in lst:\n        ans += (x + k - 1) // k\n    print(ans)", "t = int(input())\nfor x in range(t):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    one = {}\n    for i in l:\n        p = str(bin(i))\n        w = p[2:][::-1]\n        q = 0\n        for j in w:\n            if j == '1':\n                try:\n                    one[q] += 1\n                except:\n                    one[q] = 1\n            q += 1\n    total = 0\n    for i in one.keys():\n        if one[i] % k == 0:\n            total += one[i] // k\n        else:\n            total += one[i] // k + 1\n    print(total)", "from collections import Counter\nfrom math import ceil\n\ndef go():\n    (n, k) = map(int, input().split())\n    count = Counter()\n    for x in map(int, input().split()):\n        i = 0\n        while x:\n            if x & 1:\n                count[i] += 1\n            x >>= 1\n            i += 1\n    return sum((ceil(v / k) for v in count.values()))\ncases = int(input())\nfor _ in range(cases):\n    print(go())", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef count(A, K):\n    A_bin = []\n    p = len(str(decimalToBinary(max(A))))\n    for i in A:\n        A_bin.append(str(decimalToBinary(i)).rjust(p, '0'))\n    ans = 0\n    for i in range(p):\n        count = 0\n        for j in A_bin:\n            if j[i] == '1':\n                count += 1\n        ans += (count + K - 1) // K\n    return ans\nT = int(input())\nfor _ in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    A = [int(y) for y in input().split()]\n    print(count(A, K))", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef count(A, K):\n    A_bin = []\n    p = len(str(decimalToBinary(max(A))))\n    for i in A:\n        A_bin.append(str(decimalToBinary(i)).rjust(p, '0'))\n    ans = 0\n    for i in range(p):\n        count = 0\n        for j in A_bin:\n            if j[i] == '1':\n                count += 1\n        ans += (count + K - 1) // K\n    return ans\nT = int(input())\nfor _ in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    A = [int(y) for y in input().split()]\n    print(count(A, K))", "try:\n    for i in range(int(input())):\n        (n, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        binary = []\n        for i in range(0, 31):\n            binary.append(0)\n            for j in range(n):\n                if arr[j] % 2 != 0:\n                    binary[i] += 1\n                arr[j] = arr[j] // 2\n        ans = 0\n        for i in range(0, 31):\n            if binary[i] % k == 0:\n                ans += binary[i] // k\n            else:\n                ans += binary[i] // k + 1\n        print(ans)\nexcept:\n    pass", "import math\nt = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    a = list(map(int, input().split()))\n    bitcnt = [0] * 32\n    for i in a:\n        bitpos = 0\n        while i > 0:\n            if i & 1:\n                bitcnt[bitpos] += 1\n            i >>= 1\n            bitpos += 1\n    ans = 0\n    for i in bitcnt:\n        ans += -1 * i // K * -1\n    print(ans)", "from collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    D = defaultdict(lambda : 0)\n    for i in range(n):\n        val = bin(arr[i])[2:].rjust(30, '0')\n        for j in range(30):\n            if val[29 - j] == '1':\n                D[j] += 1\n    ans = 0\n    for ele in D:\n        x = math.ceil(D[ele] / k)\n        ans += x\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    bin_count = {}\n    res = 0\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    for number in array:\n        bin_num = bin(number)[2:]\n        length = len(bin_num)\n        for (index, i) in enumerate(bin_num):\n            if i == '1':\n                bin_count[length - index] = bin_count.get(length - index, 0) + 1\n    for value in bin_count.values():\n        if value == 1:\n            res += 1\n        else:\n            res += math.ceil(value / k)\n    print(res)", "import math\nt = int(input())\nfor i in range(t):\n    bin_count = {}\n    res = 0\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    for number in array:\n        bin_num = bin(number)[2:]\n        length = len(bin_num)\n        for (index, i) in enumerate(bin_num):\n            if i == '1':\n                bin_count[length - index] = bin_count.get(length - index, 0) + 1\n    for value in bin_count.values():\n        res += math.ceil(value / k)\n    print(res)", "from math import ceil\ntc = 1\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    bit_cnt = [0] * 32\n    for i in a:\n        bit_pos = 0\n        while i > 0:\n            if i & 1:\n                bit_cnt[bit_pos] += 1\n            i >>= 1\n            bit_pos += 1\n    ans = 0\n    for i in bit_cnt:\n        ans += ceil(i / k)\n    print(ans)", "test_case = int(input())\nfor i in range(test_case):\n    (n, k) = map(int, input().split())\n    lst = tuple(map(int, input().split()))\n    binary_cnt = [0] * 32\n    for j in lst:\n        count = 0\n        while j > 0:\n            if j & 1 == 1:\n                binary_cnt[count] += 1\n            j = j // 2\n            count += 1\n    ans = 0\n    for l in binary_cnt:\n        if l > 0:\n            ka = min(l, k)\n            if l % ka == 0:\n                ans += l // ka\n            else:\n                ans += l // ka + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    carr = [0 for i in range(32)]\n    for i in arr:\n        bnum = bin(i)[2:][::-1]\n        for j in range(len(bnum)):\n            carr[j] += int(bnum[j])\n    ans = 0\n    for i in carr:\n        ans += (i + k - 1) // k\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    arr = list(map(int, input().split()))\n    count_arr = [0 for _ in range(32)]\n    for v in arr:\n        for i in range(32):\n            if v & 1 << i:\n                count_arr[i] += 1\n    ans = 0\n    for i in range(32):\n        if count_arr[i] >= k:\n            ans += count_arr[i] // k\n            if count_arr[i] % k != 0:\n                ans += 1\n        elif count_arr[i] != 0:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    op_num = 0\n    p = 0\n    while p != -1:\n        ones_to_change = 0\n        for j in range(n):\n            if a[j]:\n                ones_to_change += a[j] % 2\n                a[j] //= 2\n        op_num += -(-ones_to_change // k)\n        p += 1\n        if any(a):\n            continue\n        break\n    print(op_num)", "import math\nI = input\n\ndef solve():\n    (n, k) = map(int, I().split())\n    a = list(map(int, I().split()))\n    sol = 0\n    for i in range(0, 32):\n        count = 0\n        for j in range(n):\n            if a[j] != 0:\n                if a[j] & 1:\n                    count += 1\n                a[j] = a[j] // 2\n        sol += math.ceil(count / k)\n    return sol\nfor _ in range(int(I())):\n    print(solve())"]