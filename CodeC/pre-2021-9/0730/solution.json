["t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    v = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * v - (n - 1) * v * (v - 1) // 2\n    print(ans % mod)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    v = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * v - (n - 1) * v * (v - 1) // 2\n    print(ans % mod)", "def ti():\n    return tuple(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, k) = li()\n    nn = n - 1\n    kk = k - 1\n    x = (kk - n) // nn + 1\n    xx = x - 1\n    inf = 1000000007\n    if n >= k:\n        print((k - 1) % inf)\n    else:\n        print((kk + (k - n) * x - nn * x * xx // 2) % inf)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    v = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * v - (n - 1) * v * (v - 1) // 2\n    print(ans % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    val = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * val - (n - 1) * val * (val - 1) // 2\n    print(ans % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    val = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * val - (n - 1) * val * (val - 1) // 2\n    print(ans % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    val = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * val - (n - 1) * val * (val - 1) // 2\n    print(ans % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    val = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * val - (n - 1) * val * (val - 1) // 2\n    print(ans % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    val = (k - n - 1) // (n - 1) + 1\n    mod = 1000000007\n    if n >= k:\n        ans = k - 1\n    else:\n        ans = k - 1 + (k - n) * val - (n - 1) * val * (val - 1) // 2\n    print(ans % mod)", "__author__ = 'Prateek'\nMOD = int(10 ** 9 + 7)\n\ndef test():\n    (n, k) = map(int, input().split())\n    l = k\n    d = n - 1\n    ans = l - 1\n    ans = ans % MOD\n    a = k - n\n    term = (d + a) // d\n    ll = (a % MOD - (term - 1) % MOD * (d % MOD) % MOD) % MOD\n    if ll < 0:\n        ll = (ll + MOD) % MOD\n    m = term % MOD * ((a % MOD + ll % MOD) % MOD) % MOD\n    m = m * pow(2, MOD - 2, MOD) % MOD\n    ans += m\n    ans = ans % MOD\n    print(ans)\nif __author__ == 'Prateek':\n    t = int(input())\n    for _ in range(t):\n        test()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    remainder = (k - 2) % (n - 1)\n    quotient = (k - 2) // (n - 1)\n    k += remainder\n    if quotient % 2 == 1:\n        feast = (1 + quotient) // 2\n        print(k % 1000000007 * (feast % 1000000007) % 1000000007)\n    else:\n        feast = 1 + quotient\n        k = k // 2\n        print(k % 1000000007 * (feast % 1000000007) % 1000000007)", "import math\nt = int(input())\nfor _ in range(t):\n    m = 10 ** 9 + 7\n    s = 0\n    (n, k) = map(int, input().split())\n    if n == 2:\n        print(k * (k - 1) // 2 % m)\n    else:\n        p = (k - 1) // (n - 1)\n        s = (p + 1) * (2 * k - n * p + p - 2) // 2 % m\n        print(s)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k <= n:\n        print((k - 1) % mod)\n        continue\n    x = (k - 1) // (n - 1) + 1\n    if x % 2:\n        d = (x - 1) // 2 % mod * (x % mod)\n    else:\n        d = x // 2 % mod * ((mod + x - 1) % mod)\n    d = d % mod\n    x = x % mod\n    k = (k - 1) % mod\n    n = (n - 1) % mod\n    ans = k * x % mod - d * n % mod\n    if ans < 0:\n        ans = mod + ans\n    print(ans % mod)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = k\n    b = n + k - 1\n    c = (a - 1) % MOD\n    req = a * 2 - b - 1\n    d = n - 1\n    if req > 0:\n        if req % d == 0:\n            nt = req // d\n        else:\n            nt = req // d + 1\n        c += nt * (2 * req + (nt - 1) * -d) // 2 % MOD % MOD\n    print(c % MOD)", "t = int(input())\nfor i in range(t):\n    [n, k] = input().split()\n    n = int(n)\n    k = int(k)\n    a = k - 1\n    d = 1 - n\n    x = a // (n - 1) + 1\n    ans = x * (2 * a + (x - 1) * d) // 2 % 1000000007\n    print(ans)", "def main():\n    from sys import stdin, stdout\n    Mod = 10 ** 9 + 7\n    t = int(stdin.readline())\n    for i in range(t):\n        (n, k) = list(map(int, stdin.readline().split()))\n        a = (k - 1) % (n - 1)\n        d = n - 1\n        num = (k - 1) // (n - 1) + 1\n        res = num * (2 * a + (num - 1) * d) // 2\n        stdout.write(str(res % Mod) + '\\n')\nmain()", "def main():\n    Mod = 10 ** 9 + 7\n    t = int(input())\n    for i in range(t):\n        (n, k) = list(map(int, input().split()))\n        a = (k - 1) % (n - 1)\n        d = n - 1\n        num = (k - 1) // (n - 1) + 1\n        res = num * (2 * a + (num - 1) * d) // 2\n        print(res % Mod)\nmain()", "for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    mod = 1000000007\n    c = (k - 1) % mod\n    dif = 2 * k - (n + k - 1) - 1\n    if dif > 0:\n        no = dif // (n - 1)\n        if dif % (n - 1) != 0:\n            no += 1\n        c = (c + no * (2 * dif - (no - 1) * (n - 1)) // 2 % mod) % mod\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    summation = 0\n    last_term = k - 1\n    common_difference = n - 1\n    first_term = last_term % common_difference\n    if first_term == 0:\n        first_term = common_difference\n    no_of_terms = (last_term - first_term) // common_difference + 1\n    summation = no_of_terms * (first_term + last_term) // 2 % 1000000007\n    print(summation)", "import math\nimport bisect\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef inn():\n    return int(input())\n\ndef inl():\n    return list(map(int, input().split()))\nMOD = 10 ** 9 + 7\nINF = inf = 10 ** 18 + 5\nfor t in range(int(input())):\n    (n, k) = inl()\n    a = k - 1\n    d = n - 1\n    m = a // d + 1\n    ans = m * (2 * a - (m - 1) * d) // 2 % MOD\n    print(ans)", "t = int(input())\nmod = 10 ** 9 + 7\nfor i in range(t):\n    (n, k) = input().split(' ')\n    ki = int(k)\n    ni = int(n)\n    km = ki - 1\n    nm = ni - 1\n    q = km // nm\n    r = km % nm\n    a = km + q * r + nm * q * (q - 1) // 2\n    ans = a % mod\n    print(ans)", "t = int(input())\nmod = 10 ** 9 + 7\nfor i in range(t):\n    (n, k) = input().split(' ')\n    ki = int(k)\n    ni = int(n)\n    km = ki - 1\n    nm = ni - 1\n    q = km // nm\n    r = km % nm\n    a = km + q * r + nm * q * (q - 1) // 2\n    if ni == 2:\n        a = ki * (ki - 1) // 2 % mod\n    ans = a % mod\n    print(ans)", "MOD = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    last_term = k - 1\n    if n == 2:\n        ans = last_term * (last_term + 1) // 2\n        print(ans % MOD)\n    else:\n        diff = n - 1\n        first_term = last_term % diff\n        if first_term == 0:\n            first_term = diff\n        no_of_terms = (last_term - first_term) // diff + 1\n        ans = (2 * first_term + (no_of_terms - 1) * diff) * no_of_terms // 2\n        print(ans % MOD)", "from decimal import Decimal\nimport math\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    tot = k - 1\n    if n < k:\n        left = k - n\n        extra = n - 1\n        if left <= extra:\n            tot += left\n        else:\n            y = math.ceil(Decimal(left) / Decimal(extra))\n            tot += y * left - y * (y - 1) * extra // 2\n    print(tot % 1000000007)", "t = int(input())\nwhile t:\n    (na, k) = input().split()\n    na = int(na)\n    k = int(k)\n    m = 10 ** 9 + 7\n    a = k - 1\n    d = na - 1\n    n = a // d + 1\n    sum = n * (2 * a - (n - 1) * d)\n    sum = sum // 2\n    print(sum % m)\n    t -= 1", "t = int(input())\nwhile t:\n    (N, K) = map(int, input().split())\n    m = 10 ** 9 + 7\n    (ans, s, n, p, a, d) = (0, 0, 0, 0, 0, 0)\n    if N - 1 >= K - 1:\n        print((K - 1) % m)\n    else:\n        n = (K - 1) // (N - 1)\n        d = N - 1\n        a = K - 1\n        if (K - 1) % (N - 1):\n            n += 1\n        s = n * (2 * a - (n - 1) * d)\n        ans = s // 2\n        print(ans % m)\n    t -= 1", "import math\nMOD = 1000000007\ntest = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    first = k - 1\n    diff = n - 1\n    t = (first + diff) // diff\n    y = 2 * first - (t - 1) * diff\n    ans = y * t // 2\n    ans = ans % MOD\n    print(ans)", "import math\nMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    first = k - 1\n    diff = n - 1\n    t = (first + diff) // diff\n    y = 2 * first - (t - 1) * diff\n    ans = y * t // 2\n    ans = ans % MOD\n    print(ans)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    l = K - 1\n    d = N - 1\n    a = l % d\n    if a == 0:\n        a = d\n    n = (l - a) // d + 1\n    S = n * (a + l) // 2\n    print(S % 1000000007)", "import math\nMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    if k == 1:\n        ans = 0\n    elif n == 2:\n        ans = k * (k - 1)\n        ans = ans // 2\n        ans = ans % MOD\n    elif n >= k:\n        ans = k - 1\n        ans = ans % MOD\n    else:\n        t = int(math.floor((k - 1) // (n - 1))) + 1\n        last_term = k - 1 + (t - 1) * (1 - n)\n        ans = (k - 1 + last_term) * t // 2\n        ans = ans % MOD\n    print(ans)", "import math\nMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    if k == 1:\n        ans = 0\n    elif n == 2:\n        ans = k * (k - 1)\n        ans = ans // 2\n        ans = ans % MOD\n    elif n >= k:\n        ans = k - 1\n        ans = ans % MOD\n    else:\n        t = (k - 1) // (n - 1) + 1\n        last_term = k - 1 + (t - 1) * (1 - n)\n        ans = (k - 1 + last_term) * t // 2\n        ans = ans % MOD\n    print(ans)", "t = int(input())\nfor itt in range(t):\n    (a, b) = map(int, input().split())\n    n = int(a)\n    k = int(b)\n    end = k - 1\n    diff = n - 1\n    start = end % diff\n    num_of_terms = (end - start) // diff + 1\n    ans = num_of_terms * (end + start)\n    ans = ans // 2\n    ans = int(ans % 1000000007)\n    print(ans)", "import math\nMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    first = k - 1\n    diff = n - 1\n    t = (first + diff) // diff\n    y = 2 * first - (t - 1) * diff\n    if y % 2 == 0:\n        y = y // 2\n    else:\n        t = t // 2\n    ans = y * t\n    ans = ans % MOD\n    print(ans)", "import math\nMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    first = k - 1\n    diff = n - 1\n    t = (first + diff) // diff\n    y = 2 * first - (t - 1) * diff\n    if y % 2 == 0:\n        y = y // 2\n    else:\n        t = t // 2\n    ans = y * t\n    ans = ans % MOD\n    print(ans)", "from math import *\nmod = 1000000007\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = input().split()\n    n = int(n) - 1\n    k = int(k) - 1\n    y = k // n\n    tot = (1 + y) * k - n * y * (y + 1) // 2\n    print(tot % mod)", "from math import floor as flr, ceil\nmodv = 1000000007\nmmi2 = pow(2, modv - 2, modv)\nfor tnum in range(int(input())):\n    ipstr = [int(elem) for elem in input().strip().split(' ')]\n    (nvar, kvar) = ipstr\n    cdiff = nvar - 1\n    a_n = kvar - 1\n    a_first = a_n % cdiff\n    if a_first == 0:\n        a_first = cdiff\n    nval = (a_n - a_first) // cdiff + 1\n    res = nval * (a_first + a_n) // 2\n    if res < 0:\n        res = 0\n    print(int(res) % modv)", "from math import *\nmod = 1000000007\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = input().split()\n    n = int(n) - 1\n    k = int(k) - 1\n    y = k // n\n    tot = (1 + y) * k - n * y * (y + 1) // 2\n    print(tot % mod)", "import math\nt = int(input())\nwhile t:\n    (n, k) = input().split()\n    n = int(n) - 1\n    k = int(k) - 1\n    x = k // n\n    a = (x + 1) * k - n * x * (x + 1) // 2\n    print(a % 1000000007)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    ni = input().split()\n    n = int(ni[0])\n    k = int(ni[1])\n    d = 1 - n\n    a = k - 1\n    r = int(a % (-1 * d))\n    ter = int((r - a) // d + 1)\n    sum1 = ter * (a + r) // 2\n    print(int(sum1 % 1000000007))", "T = int(input())\nfor qwqwwwq in range(T):\n    (n, k) = map(int, input().split(' '))\n    r = (k - 1) // (n - 1)\n    a = (r + 1) * (k - 1)\n    b = (n - 1) * r * (r + 1)\n    b = b // 2\n    a = a - b\n    a = a % 1000000007\n    print(a)", "t = int(input())\nmod = 10 ** 9 + 7\ns = pow(2, mod - 2, mod)\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(0)\n    elif k == 2:\n        print(1)\n    elif n == 2:\n        num = (k - 1) % mod * (k % mod) * s\n        num = num % mod\n        print(num)\n    elif k == 3:\n        print(2)\n    elif n >= k:\n        print((k - 1) % mod)\n    else:\n        inv = pow(n - 1, mod - 2, mod)\n        pos = (k - 1) % (n - 1)\n        if pos == 0:\n            pos = n - 1\n        add = (k - 1) // (n - 1) % mod\n        if pos != n - 1:\n            add += 1\n        add = add % mod * (pos % mod) % mod\n        groups = (k % mod - pos % mod - 1) % mod * inv % mod\n        sm = groups * ((groups + 1) % mod) * s\n        sm = sm % mod\n        sm = sm * ((n - 1) % mod)\n        sm = sm % mod\n        final = sm + add\n        final = final % mod\n        print(final)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    M = 1000000007\n    first_term = k - 1\n    differnce = 1 - n\n    last_term = first_term % -differnce\n    if last_term == 0:\n        last_term = -differnce\n    nth_digit = (last_term - first_term) // differnce + 1\n    summ = nth_digit * (last_term + first_term) // 2 % M\n    print(summ)", "t = int(input())\nm = 1000000007\nfor i in range(0, t):\n    (n, k) = list(map(int, input().split()))\n    s = 0\n    l = k - n\n    if l < 0:\n        print((k - 1) % m)\n    else:\n        n1 = l // (n - 1)\n        if l % (n - 1) != 0:\n            n1 += 1\n        f = k - n - (n1 - 1) * (n - 1)\n        s = n1 * (f + l) // 2\n        print((k - 1 + s) % m)", "q = int(input())\nfor i in range(0, q):\n    (a, b) = map(int, input().split())\n    l = b + a - 2\n    pl = l // (a - 1)\n    ans = pl * (2 * b - 2 + (pl - 1) * (1 - a)) // 2\n    ans = ans % 1000000007\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    summation = 0\n    last_term = k - 1\n    common_difference = n - 1\n    first_term = last_term % common_difference\n    if first_term == 0:\n        first_term = common_difference\n    no_of_terms = (last_term - first_term) // common_difference + 1\n    summation = no_of_terms * (first_term + last_term) // 2 % 1000000007\n    print(summation)", "T = int(input())\nfor t in range(T):\n    A = list(map(int, input().split()))\n    (N, K) = (A[0], A[1])\n    if K == 1:\n        print(0)\n    elif N == 2:\n        a = K % 1000000007\n        b = (K - 1) % 1000000007\n        if a == 0 or b == 0:\n            print(0)\n        else:\n            print(a * b // 2 % 1000000007)\n    else:\n        d = N - 1\n        l = K - 1\n        a = l % d\n        n = (l - a) // d + 1\n        s = (a + l) * n // 2\n        print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    m = pow(10, 9) + 7\n    (N, K) = map(int, input().split())\n    if N == 2:\n        r = K - 1\n        t = r * (r + 1) // 2 % m\n        print(t)\n    elif N - 1 >= K - 1:\n        print((K - 1) % m)\n    else:\n        n = (K - 1) // (N - 1)\n        w = N - 1\n        a = K - 1\n        if (K - 1) % (N - 1):\n            n += 1\n        p = n * (2 * a - (n - 1) * w)\n        ans = p // 2\n        print(ans % m)", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    n = n - 1\n    if k % n == 0:\n        z = k // n - 1\n    else:\n        z = k // n\n    if z == 0:\n        print((k - 1) % mod)\n    else:\n        l = (k * z - n * z * (z + 1) // 2) % mod\n        print(((l - z) % mod + (k - 1) % mod) % mod)", "def modInverse(a, m):\n    g = gcd(a, m)\n    if g != 1:\n        print(\"Inverse doesn't exist\")\n    else:\n        return power(a, m - 2, m)\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nt = int(input())\nwhile t:\n    mod = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    if n >= k:\n        print((k % mod - 1 % mod) % mod)\n    else:\n        d = n - 1\n        u = k - n\n        if u % d == 0:\n            no = u // d\n        else:\n            no = u // d + 1\n        m = no % mod * ((2 % mod * u % mod % mod - (no % mod - 1 % mod) % mod * d % mod % mod) % mod) % mod\n        o = modInverse(2, 10 ** 9 + 7)\n        print(((k % mod - 1 % mod) % mod + m % mod * o % mod % mod) % mod)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    summation = 0\n    last_term = k - 1\n    common_difference = n - 1\n    first_term = last_term % common_difference\n    if first_term == 0:\n        first_term = common_difference\n    no_of_terms = (last_term - first_term) // common_difference + 1\n    summation = no_of_terms * (first_term + last_term) // 2 % 1000000007\n    print(summation)", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n - 1 >= k - 1:\n        print((k - 1) % M)\n        continue\n    val = (k - 1) // (n - 1)\n    a = k - 1\n    d = n - 1\n    if (k - 1) % (n - 1):\n        val += 1\n    sm = val * (2 * a - (val - 1) * d)\n    ans = sm // 2\n    print(ans % M)", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n - 1 >= k - 1:\n        print((k - 1) % M)\n        continue\n    val = (k - 1) // (n - 1)\n    a = k - 1\n    d = n - 1\n    if (k - 1) % (n - 1):\n        val += 1\n    sm = val * (2 * a - (val - 1) * d)\n    ans = sm // 2\n    print(ans % M)", "M = 10 ** 9 + 7\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n - 1 >= k - 1:\n        print((k - 1) % M)\n        continue\n    val = (k - 1) // (n - 1)\n    a = k - 1\n    d = n - 1\n    if (k - 1) % (n - 1):\n        val += 1\n    sm = val * (2 * a - (val - 1) * d)\n    ans = sm // 2\n    print(ans % M)", "from sys import stdin, stdout\nimport math\nMOD = 1000000007\nt = input()\nt = int(t)\nwhile t > 0:\n    t = t - 1\n    (n, k) = map(int, input().strip().split())\n    if (k - 1) % (n - 1) == 0:\n        final = n - 1\n    else:\n        final = (k - 1) % (n - 1)\n    d = (k - 1 - final) // (n - 1) + 1\n    ans = d * (k - 1 + final) % MOD % MOD * 500000004 % MOD\n    print(int(ans))", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = 1000000007\n    if n >= k:\n        print((k - 1) % m)\n    else:\n        x = (n + k - 2) // (n - 1)\n        s = 2 * (k - 1) - (x - 1) * (n - 1)\n        s = x * s\n        s = s // 2\n        print(s % m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    summation = 0\n    last_term = k - 1\n    mod = 1000000007\n    common_difference = n - 1\n    first_term = last_term % common_difference\n    if first_term == 0:\n        first_term = common_difference\n    no_of_terms = (last_term - first_term) // common_difference + 1\n    summation = no_of_terms * ((first_term + last_term) % mod) % mod * 500000004 % mod\n    print(summation)", "for _ in range(int(input())):\n    (n, k) = input().split()\n    m = 10 ** 9 + 7\n    n = int(n) - 1\n    k = int(k) - 1\n    if n >= k:\n        print(k % m)\n    else:\n        t = k // n\n        if k % n:\n            t += 1\n        ans = t * (2 * k - (t - 1) * n)\n        ans = ans // 2\n        print(ans % m)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    m = 10 ** 9 + 7\n    (ans, s, n, p, a, d) = (0, 0, 0, 0, 0, 0)\n    if N - 1 >= K - 1:\n        print((K - 1) % m)\n    else:\n        n = (K - 1) // (N - 1)\n        d = N - 1\n        a = K - 1\n        if (K - 1) % (N - 1):\n            n += 1\n        s = n * (2 * a - (n - 1) * d)\n        ans = s // 2\n        print(ans % m)", "import math\nMOD = 1000000000 + 7\n\ndef myCeiling(a, b):\n    d = a // b\n    if d * b < a:\n        return d + 1\n    else:\n        return d\n\ndef getMissing(n, k):\n    d = myCeiling(k, n - 1)\n    ans = d * (k + n - 2) - (n - 1) * d * (d + 1) // 2\n    return ans % MOD\ntc = int(input())\nfor t in range(tc):\n    inp = input().split()\n    n = int(inp[0])\n    k = int(inp[1])\n    ans = getMissing(n, k)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    ans = 0\n    last = k - 1\n    com_dif = n - 1\n    first = last % com_dif\n    if first == 0:\n        first = com_dif\n    terms = (last - first) // com_dif + 1\n    ans = terms * (last + first) // 2 % 1000000007\n    print(ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    summation = 0\n    last_term = k - 1\n    common_difference = n - 1\n    first_term = last_term % common_difference\n    if first_term == 0:\n        first_term = common_difference\n    no_of_terms = (last_term - first_term) // common_difference + 1\n    summation = no_of_terms * (first_term + last_term) // 2 % 1000000007\n    print(summation)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    m = 10 ** 9 + 7\n    (ans, s, n, p, a, d) = (0, 0, 0, 0, 0, 0)\n    if N - 1 >= K - 1:\n        print((K - 1) % m)\n    else:\n        n = (K - 1) // (N - 1)\n        d = N - 1\n        a = K - 1\n        if (K - 1) % (N - 1):\n            n += 1\n        s = n * (2 * a - (n - 1) * d)\n        ans = s // 2\n        print(ans % m)", "for i in range(int(input())):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    a = k - 1\n    d = n - 1\n    num = a // d + 1\n    sum = num * (2 * a - (num - 1) * d) // 2\n    print(sum % 1000000007)", "MOD = 1000000007\ntestcases = int(input())\nwhile testcases > 0:\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    if n >= k:\n        print((k - 1) % MOD)\n    else:\n        terms = int((k - 1) // (n - 1))\n        s1 = 2 * (k - n)\n        s2 = terms - 1\n        s3 = 1 - n\n        sum = k - 1 + terms * 500000004 * (s1 + s2 * s3)\n        sum %= MOD\n        print(sum)\n    testcases = testcases - 1", "MOD = 1000000007\ntestcases = int(input())\nwhile testcases > 0:\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    if n >= k:\n        print((k - 1) % MOD)\n    else:\n        terms = int((k - 1) // (n - 1))\n        s1 = 2 * (k - n)\n        s2 = terms - 1\n        s3 = 1 - n\n        sum = k - 1 + terms * 500000004 * (s1 + s2 * s3)\n        sum %= MOD\n        print(sum)\n    testcases = testcases - 1", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    (l, r) = (k, k + n - 1)\n    m = (l - 1) // (r - l)\n    ans = ((m + 1) * (m + 2) * l - 2 - 2 * m - m * (m + 1) * r) // 2\n    print(ans % (10 ** 9 + 7))", "m = 1000000007\nimport math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, ans, N, d, a) = (0, 0, 0, 0, 0)\n    if n - 1 > k:\n        print((k - 1) % m)\n    else:\n        N = (k - 1) // (n - 1)\n        d = n - 1\n        a = k - 1\n        if (k - 1) % (n - 1):\n            N += 1\n        ans = N * (2 * a - (N - 1) * d) // 2\n        print(ans % m)", "m = 1000000007\nimport math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, ans, N, d, a) = (0, 0, 0, 0, 0)\n    if n - 1 >= k - 1:\n        print((k - 1) % m)\n    else:\n        N = (k - 1) // (n - 1)\n        d = n - 1\n        a = k - 1\n        if (k - 1) % (n - 1):\n            N += 1\n        ans = N * (2 * a - (N - 1) * d) // 2\n        print(ans % m)", "m = 1000000007\nimport math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, ans, N, d, a) = (0, 0, 0, 0, 0)\n    if n - 1 >= k - 1:\n        print((k - 1) % m)\n    else:\n        N = (k - 1) // (n - 1)\n        d = n - 1\n        a = k - 1\n        if (k - 1) % (n - 1):\n            N += 1\n        s = N * (2 * a - (N - 1) * d)\n        ans = s // 2\n        print(ans % m)", "test = int(input())\nx = int(1000000000.0 + 7)\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(0)\n    else:\n        d = 1 - n\n        a = k - n\n        m = (d - a) // d\n        sumval = (m * (2 * a + (m - 1) * d) // 2 + k - 1) % x\n        print(sumval)", "import math\nMOD = 1000000007\nt = int(input())\nwhile t > 0:\n    (d, k) = input().split()\n    d = int(d)\n    k = int(k)\n    k = k - 1\n    d = d - 1\n    if d >= k:\n        print(k % MOD)\n        t = t - 1\n        continue\n    x = k // d\n    if k % d:\n        x += 1\n    ans = x * (2 * k - (x - 1) * d)\n    ans = ans // 2\n    ans = int(ans % MOD)\n    print(ans)\n    t = t - 1", "t = int(input())\nmood = 1000000007\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    h = (b + a - 2) // (a - 1)\n    l = h * (h + 1) // 2 * b - h - h * (h - 1) // 2 * (b + a - 1)\n    l %= mood\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(0)\n    else:\n        m = 1000000007\n        a = k - 1\n        d = n - 1\n        N = a // d + 1\n        sum = N * (2 * a - N * d + d) // 2\n        print(sum % m)", "e = 1000000007\n\ndef foo(a, d):\n    l = a % d\n    n = (a - l) // d + 1\n    return (a + l) * n // 2\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(foo(k - 1, n - 1) % e)", "from math import *\nmod = 10 ** 9 + 7\n\ndef find_x(n, k):\n    x = (k - 1) // (n - 1)\n    return x\ntc = int(input())\nwhile tc:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n > k:\n        ans = (k - 1) % mod\n    else:\n        x = int(find_x(n, k))\n        ans = k - 1 + x * k - x * (x + 1) // 2 * n + x * (x - 1) // 2\n        ans %= mod\n    print(ans)\n    tc -= 1", "t = int(input())\nwhile t:\n    t = t - 1\n    m = 1000000007\n    (n, k) = list(map(int, input().split()))\n    l = k - 1\n    d = n - 1\n    if l % d == 0:\n        nt = l // d\n        f = d\n    else:\n        f = l % d\n        nt = l // d + 1\n    if nt % 2 == 0:\n        n1 = nt // 2\n        ans = (2 % m * (f % m) % m + (nt - 1) % m * (d % m) % m) % m * (n1 % m) % m\n    else:\n        n1 = (nt - 1) // 2\n        ans = (f % m + n1 % m * (d % m) % m) % m * (nt % m) % m\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n >= k:\n        ans = (k - 1) % mod\n    else:\n        start = k - 1\n        diff = n - 1\n        terms = start // diff\n        if start % diff != 0:\n            terms = terms + 1\n        p2 = (2 * start - (terms - 1) * diff) * terms // 2\n        ans = p2 % mod\n    print(ans)", "import math\nfor i in range(int(input().strip())):\n    ans = 0\n    data = input().split()\n    n = int(data[0])\n    k = int(data[1])\n    high = (k - 2) // (n - 1)\n    ans = (k * high - (n - 1) * high * (high + 1) // 2 - high) % 1000000007\n    print((ans + (k - 1)) % 1000000007)", "from math import ceil\nT = int(input())\nm = 1000000007\nwhile T > 0:\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(0)\n    elif n == 2:\n        ans = (k - 1) % m * (k % m) // 2\n        print(ans % m)\n    else:\n        u = (k - 1) // (n - 1) + 1\n        a = k - 1\n        l = (k - 1) % (n - 1)\n        ans = u * (a + l) // 2 % m\n        print(int(ans))\n    T -= 1", "import math\nfor i in range(int(input().strip())):\n    ans = 0\n    data = input().split()\n    n = int(data[0])\n    k = int(data[1])\n    high = (k - 2) // (n - 1)\n    ans = (k * high - (n - 1) * high * (high + 1) // 2 - high) % 1000000007\n    print((ans + (k - 1)) % 1000000007)", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n - 1 >= k - 1:\n        print((k - 1) % mod)\n    else:\n        a = k - 1\n        d = n - 1\n        n = a // d\n        if a % d != 0:\n            n = n + 1\n        sum = n * (2 * a - (n - 1) * d)\n        result = sum // 2\n        print(result % mod)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k <= n:\n        print((k - 1) % 1000000007)\n    else:\n        x = (k - 1) // (n - 1)\n        print((k - 1 + int(x * k - n * x * (x + 1) // 2 + x * (x - 1) // 2)) % 1000000007)", "import math\nt = int(input())\nmod = 1000000007\nwhile t > 0:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    d1 = k - 1\n    d2 = max(0, 2 * k - (k + n - 1) - 1)\n    ans = 0\n    if d2 > 1:\n        d3 = 3 * k - 2 * (k + n - 1) - 1\n        diff = d2 - d3\n        nt = d2 // diff + 1\n        ans = nt * (2 * d2 - (nt - 1) * diff) // 2\n        fin = ans + d1\n        fin = fin % mod\n        print(fin)\n    else:\n        fin = d1 + d2\n        print(fin % mod)", "import math\nt = input()\nMOD = 1000000007\nfor T in range(int(t)):\n    inp = input()\n    N = int(inp.split()[0])\n    K = int(inp.split()[1])\n    result = 0\n    result = result + max(K - 1, 0)\n    d = N - 1\n    firstDifference = K - N\n    num = firstDifference // d + 1\n    if K > N:\n        lastDifference = firstDifference - (num - 1) * d\n        result = result + num * (firstDifference + lastDifference) // 2\n    print(result % MOD)", "mod = 10 ** 9 + 7\nfor T in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    if N >= K:\n        print((K - 1) % mod)\n    else:\n        A = K - N\n        R = N - 1\n        X = A // R + 1\n        S = X * (2 * A - (X - 1) * R)\n        print((S * pow(2, mod - 2, mod) % mod + (K - 1)) % mod)", "mod = 10 ** 9 + 7\nfor T in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    if N >= K:\n        print((K - 1) % mod)\n    else:\n        A = K - N\n        R = N - 1\n        X = A // R + 1\n        S = X % mod * ((2 * A - (X - 1) * R) % mod) % mod\n        print((S * pow(2, mod - 2, mod) % mod + (K - 1)) % mod)", "M = 10 ** 9 + 7\nfor T in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    S = K - 1\n    if N == 1 or K == 1:\n        print(0)\n    elif N == 2:\n        print(K * S // 2 % M)\n    elif N >= K:\n        print(S % M)\n    else:\n        K -= N\n        N -= 1\n        T = K // N + 1\n        S += K * T - N * (T * (T - 1) // 2)\n        print(S % M)", "mod = 10 ** 9 + 7\nfor T in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    if N >= K:\n        print((K - 1) % mod)\n    else:\n        A = K - N\n        R = N - 1\n        X = A // R + 1\n        S = X % mod * ((2 * A - (X - 1) * R) % mod) % mod\n        print((S * pow(2, mod - 2, mod) % mod + (K - 1)) % mod)", "mod = 10 ** 9 + 7\nfor T in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    if K == 1:\n        print(0)\n    else:\n        A = K - N\n        R = N - 1\n        X = A // R + 1\n        S = X % mod * ((2 * A - (X - 1) * R) % mod) % mod\n        print((S * pow(2, mod - 2, mod) % mod + (K - 1)) % mod)", "import sys\nimport math\n\ndef modInverse(a):\n    m = 1000000007\n    g = gcd(a, m)\n    return power(a, m - 2, m)\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nn = sys.stdin.readline()\nfor i in range(int(n)):\n    arr = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    n = arr[0]\n    k = arr[1]\n    high = (k - 1) // (n - 1)\n    ans = (k * high - (n - 1) * high * (high + 1) * modInverse(2) - high + 1000000007) % 1000000007\n    print((ans + (k - 1)) % 1000000007)", "import sys\nimport math\n\ndef modInverse(a):\n    m = 1000000007\n    g = gcd(a, m)\n    return power(a, m - 2, m)\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nn = sys.stdin.readline()\nfor i in range(int(n)):\n    arr = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    n = arr[0]\n    k = arr[1]\n    if k <= n | k == 1:\n        print((k - 1) % 1000000007)\n        continue\n    high = (k - 1) // (n - 1)\n    ans = (k * high - (n - 1) * high * (high + 1) * modInverse(2) - high + 1000000007) % 1000000007\n    print((ans + (k - 1)) % 1000000007)", "import sys\nimport math\n\ndef modInverse(a):\n    m = 1000000007\n    g = gcd(a, m)\n    return power(a, m - 2, m)\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nn = sys.stdin.readline()\nfor i in range(int(n)):\n    arr = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    n = arr[0]\n    k = arr[1]\n    if k <= n | k == 1:\n        print((k - 1) % 1000000007)\n        continue\n    high = (k - 1) // (n - 1)\n    ans = (k * high - (n - 1) * high * (high + 1) * modInverse(2) - high + 1000000007) % 1000000007\n    print((ans + (k - 1)) % 1000000007)", "import math\nt = int(input().strip())\nfor i in range(0, t):\n    (n, k) = map(int, input().strip().split())\n    d = n - 1\n    l = k - 1\n    p = 10 ** 9 + 7\n    if n == 2:\n        s = k * (k - 1) // 2\n    else:\n        a = l // d + 1\n        s = a * (2 * l + (a - 1) * (d * -1)) // 2\n        s = int(s)\n    print(s % p)", "mods = 1000000007\nnb_Test = int(input())\nfor _ in range(nb_Test):\n    (N, K) = [int(x) for x in input().split()]\n    d = N - 1\n    a = K - 1\n    if d > a:\n        print(a % mods)\n    else:\n        n = a // d\n        n += a % d > 0\n        ans = n * (2 * a - (n - 1) * d) // 2\n        print(ans % mods)", "def main():\n    for i in range(int(input())):\n        (n, k) = map(int, input().split())\n        ans = k - 1\n        if n == 1 | k == 1:\n            print(0)\n        elif n == 2:\n            print(k * (k - 1) // 2 % 1000000007)\n        elif n >= k:\n            print((k - 1) % 1000000007)\n        elif k > n:\n            k = k - n\n            n -= 1\n            time = k // n\n            ans += k + k * time - n * (time * (time + 1) // 2)\n            print(ans % 1000000007)\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = k - 1\n    if n == 1 | k == 1:\n        print(0)\n    elif n == 2:\n        print(k * (k - 1) // 2 % 1000000007)\n    elif n >= k:\n        print((k - 1) % 1000000007)\n    elif k > n:\n        k = k - n\n        n -= 1\n        time = k // n\n        ans += k + k * time - n * (time * (time + 1) // 2)\n        print(ans % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k <= n:\n        print((k - 1) % 1000000007)\n    else:\n        x = (k - 1) // (n - 1)\n        print((k - 1 + int(x * k - n * x * (x + 1) // 2 + x * (x - 1) // 2)) % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k <= n:\n        print((k - 1) % 1000000007)\n    else:\n        x = (k - 1) // (n - 1)\n        print((k - 1 + int(x * k - n * x * (x + 1) // 2 + x * (x - 1) // 2)) % 1000000007)"]