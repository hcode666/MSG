["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    m = min(b) - min(a)\n    M = max(b) - max(a)\n    if M <= 0:\n        print(m)\n    elif n == 2:\n        print(min(m, M))\n    elif b[0] - a[1] == M:\n        print(M)\n    else:\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr1.sort()\n    arr2 = list(map(int, input().split()))\n    arr2.sort()\n    if n == 2:\n        if arr2[0] > arr1[1]:\n            print(arr2[0] - arr1[1])\n        else:\n            print(arr2[0] - arr1[0])\n        continue\n    arr3 = []\n    arr4 = []\n    for i in range(1, n - 1):\n        arr3.append(arr1[i + 1] - arr1[i])\n    for i in range(n - 2):\n        arr4.append(arr2[i + 1] - arr2[i])\n    if arr3 == arr4:\n        if arr2[0] - arr1[1] > 0:\n            print(arr2[0] - arr1[1])\n        else:\n            print(arr2[0] - arr1[0])\n        continue\n    else:\n        print(arr2[0] - arr1[0])", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    s = float('inf')\n    d = defaultdict(int)\n    for j in range(n - 1):\n        m1 = b[j] - a[j]\n        m2 = b[j] - a[j + 1]\n        if m1 != m2:\n            if m1 > 0:\n                d[m1] += 1\n            if m2 > 0:\n                d[m2] += 1\n        elif m1 > 0:\n            d[m1] += 1\n    for j in d.keys():\n        if d[j] == n - 1:\n            s = min(s, j)\n    print(s)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "import sys\n\ndef find_x(n, la, lb):\n    la.sort()\n    lb.sort()\n    result = {}\n    for i in range(n - 1):\n        diff1 = lb[i] - la[i]\n        diff2 = lb[i] - la[i + 1]\n        if diff1 > 0:\n            if diff1 in result:\n                result[diff1] = result[diff1] + 1\n            else:\n                result[diff1] = 1\n        if diff2 > 0:\n            if diff2 in result:\n                result[diff2] = result[diff2] + 1\n            else:\n                result[diff2] = 1\n    for key in sorted(result.keys()):\n        if result[key] == n - 1:\n            return key\nt = int(sys.stdin.readline().strip())\nlines = sys.stdin.readlines()\nfor i in range(t):\n    n = int(lines[i * 3])\n    la = list((int(e) for e in lines[i * 3 + 1].split()))\n    lb = list((int(e) for e in lines[i * 3 + 2].split()))\n    result = find_x(n, la, lb)\n    print(result)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        if b[0] > a[1]:\n            print(b[0] - a[1])\n        else:\n            print(b[0] - a[0])\n    else:\n        s1 = b[0] - a[0]\n        s2 = b[0] - a[1]\n        if s1 > 0 and s2 > 0:\n            cnt = 0\n            i = 0\n            j = 0\n            while j < n and i < n - 1:\n                if a[j] + s1 != b[i]:\n                    cnt += 1\n                    i -= 1\n                if cnt >= 2:\n                    break\n                i += 1\n                j += 1\n            cnt1 = 0\n            i = 0\n            j = 1\n            while j < n and i < n - 1:\n                if a[j] + s2 != b[i]:\n                    cnt1 += 1\n                    i -= 1\n                if cnt1 >= 1:\n                    break\n                i += 1\n                j += 1\n            if cnt1 == 0 and cnt == 1:\n                print(min(s1, s2))\n            elif cnt1 == 0:\n                print(s2)\n            else:\n                print(s1)\n        else:\n            print(max(s1, s2))", "def plag(a, b):\n    c = max(b) - max(a)\n    if c > 0:\n        d = []\n        for i in range(len(a)):\n            d.append(a[i] + c)\n        if sum(d) - sum(b) - c in a:\n            return c\n        else:\n            a.remove(max(a))\n            return max(b) - max(a)\n    else:\n        a.remove(max(a))\n        return max(b) - max(a)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(plag(a, b))", "def alg(a, b):\n    a = [int(i) for i in a]\n    b = [int(i) for i in b]\n    c = max(b) - max(a)\n    if c > 0:\n        d = [i + c for i in a]\n        if sum(d) - sum(b) - c in a:\n            return c\n        else:\n            a.remove(max(a))\n            return max(b) - max(a)\n    else:\n        a.remove(max(a))\n        return max(b) - max(a)\nt = int(input())\na = []\nb = []\nfor i in range(t):\n    n = input()\n    a.append(input().split())\n    b.append(input().split())\nfor i in range(t):\n    print(alg(a[i], b[i]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        print(b[0] - a[1] if b[0] - a[1] > 0 else b[0] - a[0])\n    else:\n        ans1 = 9999999999999\n        ans2 = 9999999999999\n        val1 = b[0] - a[0]\n        val2 = b[-1] - a[-1]\n        if val1 < 0:\n            print(val2)\n            continue\n        if val2 < 0:\n            print(val1)\n            continue\n        if val1 == val2:\n            print(val1)\n            continue\n        myset = set(a)\n        cnt1 = 0\n        cnt2 = 0\n        check1 = True\n        check2 = True\n        for val in b:\n            if val - val1 not in myset:\n                check1 = False\n        for val in b:\n            if val - val2 not in myset:\n                check2 = False\n        if check1 and val1 > 0:\n            ans1 = val1\n        if check2 and val2 > 0:\n            ans2 = val2\n        print(min(ans1, ans2))", "def function():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        print(b[0] - a[1]) if b[0] - a[1] > 0 else print(b[0] - a[0])\n        return\n    dif = []\n    for i in range(3):\n        for j in range(2):\n            dif.append(b[j] - a[i])\n    dif.sort()\n    for i in range(5):\n        if dif[i] == dif[i + 1] and dif[i] > 0:\n            print(dif[i])\n            return\nt = int(input())\nwhile t != 0:\n    function()\n    t -= 1", "import math\nimport random\nimport statistics\nimport operator\nimport itertools\nimport sys\nimport copy\nfrom collections import defaultdict, Counter, deque, OrderedDict\nfrom heapq import heapify, heappush, heappop\nfrom functools import lru_cache, reduce\nfrom bisect import bisect_left, bisect_right\nKPMOD1 = 1000000007\nKPMOD2 = 998244353\n\ndef modinverse(a, mod):\n    return binpow(a, mod - 2)\n\ndef mult(a, b):\n    return a % KPMOD1 * (b % KPMOD1) % KPMOD1\n\ndef add(a, b):\n    return (a % KPMOD1 + b % KPMOD1) % KPMOD1\n\ndef binpow(a, b):\n    if b == 0:\n        return 1\n    res = binpow(a, b // 2) % KPMOD1\n    if b % 2:\n        return res * res * a % KPMOD1\n    else:\n        return res * res % KPMOD1\n\ndef fact(a):\n    if a == 0 or a == 1:\n        return 1\n    return a * (fact(a) % KPMOD1) % KPMOD1\n\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\nMAX = 100\nfact = [1] * MAX\ninvfact = [1] * MAX\nfor i in range(1, MAX):\n    fact[i] = fact[i - 1] * i % KPMOD1\n    invfact[i] = invfact[i - 1] * modinverse(i, KPMOD1) % KPMOD1\n\ndef factors(n):\n    if n == 0:\n        return set()\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\nfor _ in range(int(input())):\n    KPN = int(input())\n    KPA = [int(x) for x in input().split()]\n    KPB = [int(x) for x in input().split()]\n    KPA.sort()\n    KPB.sort()\n    KPD = KPB[0] - KPA[1]\n    KPF = 0\n    for i in range(KPN - 1):\n        if KPB[i] - KPA[i + 1] != KPD:\n            KPF = 1\n    if not KPF and KPD > 0:\n        print(KPD)\n    else:\n        print(KPB[0] - KPA[0])", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    length = int(input())\n    arr3 = []\n    ans = float('inf')\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    arr1.sort()\n    arr2.sort()\n    for i in range(length - 1):\n        arr3.append(arr2[i] - arr1[i])\n    for i in range(1, length):\n        arr3.append(arr2[-i] - arr1[-i])\n    arr4 = dict(Counter(arr3))\n    for (k, v) in arr4.items():\n        if v >= length - 1 and k > 0:\n            ans = min(ans, k)\n    print(ans)", "def function():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        print(b[0] - a[1]) if b[0] - a[1] > 0 else print(b[0] - a[0])\n        return\n    dif = []\n    for i in range(3):\n        for j in range(2):\n            dif.append(b[j] - a[i])\n    dif.sort()\n    for i in range(5):\n        if dif[i] == dif[i + 1] and dif[i] > 0:\n            print(dif[i])\n            return\nt = int(input())\nwhile t != 0:\n    function()\n    t -= 1", "def function():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        print(b[0] - a[1]) if b[0] - a[1] > 0 else print(b[0] - a[0])\n        return\n    dif = []\n    for i in range(3):\n        for j in range(2):\n            dif.append(b[j] - a[i])\n    dif.sort()\n    for i in range(5):\n        if dif[i] == dif[i + 1] and dif[i] > 0:\n            print(dif[i])\n            return\nt = int(input())\nwhile t != 0:\n    function()\n    t -= 1", "import math\nimport bisect\n\nclass Fenwick_tree:\n\n    def __init__(self, nums):\n        self.N = len(nums)\n        self.nums = nums\n        self.fenwick = [0] * (self.N + 1)\n\n    def inc(self, i, diff):\n        i += 1\n        while i <= self.N:\n            self.fenwick[i] += diff\n            i += i & -i\n\n    def cumsum(self, i):\n        res = 0\n        while i > 0:\n            res += self.fenwick[i]\n            i -= i & -i\n        return res\n\n    def sumRange(self, low, hi):\n        return self.cumsum(bisect.bisect_right(self.nums, hi)) - self.cumsum(bisect.bisect_left(self.nums, low))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = sorted([int(i) for i in input().split(' ')])\n    sum1 = 0\n    arr2 = sorted([int(i) for i in input().split(' ')])\n    sum2 = 0\n    ans = 0\n    for i in range(n):\n        sum1 += arr1[i]\n    for i in range(n - 1):\n        sum2 += arr2[i]\n    for i in range(n):\n        if sum2 - (sum1 - arr1[i]) <= 0:\n            continue\n        q = (sum2 - (sum1 - arr1[i])) % (n - 1)\n        d = int((sum2 - (sum1 - arr1[i])) / (n - 1))\n        if q == 0:\n            k = 0\n            invalid = False\n            for j in range(n):\n                if i == j:\n                    continue\n                if arr2[k] - arr1[j] != d:\n                    invalid = True\n                k += 1\n            if invalid:\n                continue\n            ans = min(ans, d) if ans != 0 else d\n    print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr1 = sorted([int(i) for i in input().split(' ')])\n        sum1 = 0\n        arr2 = sorted([int(i) for i in input().split(' ')])\n        sum2 = 0\n        ans = 0\n        for i in range(n):\n            sum1 += arr1[i]\n        for i in range(n - 1):\n            sum2 += arr2[i]\n        for i in range(n):\n            if sum2 - (sum1 - arr1[i]) <= 0:\n                continue\n            q = (sum2 - (sum1 - arr1[i])) % (n - 1)\n            d = int((sum2 - (sum1 - arr1[i])) / (n - 1))\n            if q == 0:\n                k = 0\n                invalid = False\n                for j in range(n):\n                    if i == j:\n                        continue\n                    if arr2[k] - arr1[j] != d:\n                        invalid = True\n                    k += 1\n                if invalid:\n                    continue\n                ans = min(ans, d) if ans != 0 else d\n        print(ans)\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr1 = sorted([int(i) for i in input().split(' ')])\n        sum1 = 0\n        arr2 = sorted([int(i) for i in input().split(' ')])\n        sum2 = 0\n        ans = 0\n        for i in range(n):\n            sum1 += arr1[i]\n        for i in range(n - 1):\n            sum2 += arr2[i]\n        for i in range(n):\n            if sum2 - (sum1 - arr1[i]) <= 0:\n                continue\n            q = (sum2 - (sum1 - arr1[i])) % (n - 1)\n            d = int((sum2 - (sum1 - arr1[i])) / (n - 1))\n            if q == 0:\n                k = 0\n                invalid = False\n                for j in range(n):\n                    if i == j:\n                        continue\n                    if arr2[k] - arr1[j] != d:\n                        invalid = True\n                    k += 1\n                if invalid:\n                    continue\n                ans = min(ans, d) if ans != 0 else d\n        print(ans)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c = []\n    for i in range(len(b)):\n        c.append([b[i] - a[i], b[i] - a[i + 1]])\n    d = {}\n    for i in c:\n        for j in i:\n            if j > 0:\n                if j in d:\n                    d[j] += 1\n                else:\n                    d[j] = 1\n    m = 0\n    ans = 0\n    for i in d:\n        if d[i] > m:\n            m = d[i]\n            ans = i\n        if d[i] == m:\n            ans = min(ans, i)\n    print(ans)", "from collections import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a.sort()\n    b.sort()\n    if n == 2:\n        if b[0] > a[1]:\n            print(b[0] - a[1])\n        else:\n            print(b[0] - a[0])\n    else:\n        (d1, d2, d3) = (defaultdict(int), defaultdict(int), defaultdict(int))\n        d1[b[0] - a[0]] = 1\n        f = 0\n        for i in range(1, n - 1):\n            if b[i] - a[i] not in d1:\n                f = 1\n            if f == 1:\n                d1[b[i] - a[i + 1]] += 1\n            else:\n                d1[b[i] - a[i]] += 1\n        for i in range(n - 1):\n            d2[b[i] - a[i + 1]] += 1\n        for i in range(n - 1):\n            if i == 0:\n                d3[b[i] - a[i]] += 1\n            else:\n                d3[b[i] - a[i + 1]] += 1\n        ans = []\n        for i in d1:\n            if d1[i] >= n - 1:\n                ans.append(i)\n        for i in d2:\n            if d2[i] >= n - 1:\n                ans.append(i)\n        for i in d3:\n            if d3[i] >= n - 1:\n                ans.append(i)\n        ans.sort()\n        if len(ans) >= 2:\n            if ans[0] == 0:\n                print(ans[1])\n            else:\n                print(ans[0])\n        else:\n            print(ans[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x = y = float('inf')\n    if n == 2:\n        x = b[0] - a[0] if b[0] - a[0] > 0 else float('inf')\n        y = b[0] - a[1] if b[0] - a[1] > 0 else float('inf')\n    else:\n        if b[0] - a[0] > 0 and (b[0] - a[0] == b[1] - a[1] or b[0] - a[0] == b[1] - a[2]):\n            x = b[0] - a[0]\n        if b[0] - a[1] > 0 and b[0] - a[1] == b[1] - a[2]:\n            y = b[1] - a[2]\n    print(min(x, y))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x = y = float('inf')\n    if n == 2:\n        x = b[0] - a[0] if b[0] - a[0] > 0 else float('inf')\n        y = b[0] - a[1] if b[0] - a[1] > 0 else float('inf')\n    else:\n        if b[0] - a[0] > 0 and (b[0] - a[0] == b[1] - a[1] or b[0] - a[0] == b[1] - a[2]):\n            x = b[0] - a[0]\n        if b[0] - a[1] > 0 and b[0] - a[1] == b[1] - a[2]:\n            y = b[1] - a[2]\n    print(min(x, y))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x = y = float('inf')\n    if n == 2:\n        x = b[0] - a[0] if b[0] - a[0] > 0 else float('inf')\n        y = b[0] - a[1] if b[0] - a[1] > 0 else float('inf')\n    else:\n        if b[0] - a[0] > 0 and (b[0] - a[0] == b[1] - a[1] or b[0] - a[0] == b[1] - a[2]):\n            x = b[0] - a[0]\n        if b[0] - a[1] > 0 and b[0] - a[1] == b[1] - a[2]:\n            y = b[1] - a[2]\n    print(min(x, y))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    l = []\n    if n == 2:\n        l.append(b[0] - a[0]) if b[0] - a[0] > 0 else None\n        l.append(b[0] - a[1]) if b[0] - a[1] > 0 else None\n    else:\n        if b[0] - a[0] > 0 and (b[0] - a[0] == b[1] - a[1] or b[0] - a[0] == b[1] - a[2]):\n            l.append(b[0] - a[0])\n        if b[0] - a[1] > 0 and b[0] - a[1] == b[1] - a[2]:\n            l.append(b[0] - a[1])\n    print(min(l))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c = list()\n    for i in range(len(b)):\n        c.append([b[i] - a[i], b[i] - a[i + 1]])\n    d = {}\n    for i in c:\n        for j in i:\n            if j > 0:\n                if j in d:\n                    d[j] += 1\n                else:\n                    d[j] = 1\n    ans = 0\n    m = 0\n    for i in d:\n        if d[i] > m:\n            m = d[i]\n            ans = i\n        if d[i] == m:\n            ans = min(ans, i)\n    print(ans)", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    A = sorted([int(j) for j in input().split()])\n    B = sorted([int(k) for k in input().split()])\n    X = []\n    if N == 2:\n        if B[0] - A[0] > 0:\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0:\n            X.append(B[0] - A[1])\n    else:\n        if B[0] - A[0] > 0 and (B[0] - A[0] == B[1] - A[1] or B[0] - A[0] == B[1] - A[2]):\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0 and B[0] - A[1] == B[1] - A[2]:\n            X.append(B[0] - A[1])\n    print(min(X))", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    A = sorted([int(j) for j in input().split()])\n    B = sorted([int(k) for k in input().split()])\n    X = []\n    if N == 2:\n        if B[0] - A[0] > 0:\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0:\n            X.append(B[0] - A[1])\n    else:\n        if B[0] - A[0] > 0 and (B[0] - A[0] == B[1] - A[1] or B[0] - A[0] == B[1] - A[2]):\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0 and B[0] - A[1] == B[1] - A[2]:\n            X.append(B[0] - A[1])\n    print(min(X))", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    A = sorted([int(j) for j in input().split()])\n    B = sorted([int(k) for k in input().split()])\n    X = []\n    if N == 2:\n        if B[0] - A[0] > 0:\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0:\n            X.append(B[0] - A[1])\n    else:\n        if B[0] - A[0] > 0 and (B[0] - A[0] == B[1] - A[1] or B[0] - A[0] == B[1] - A[2]):\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0 and B[0] - A[1] == B[1] - A[2]:\n            X.append(B[0] - A[1])\n    print(min(X))", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    A = sorted([int(j) for j in input().split()])\n    B = sorted([int(k) for k in input().split()])\n    X = []\n    if N == 2:\n        if B[0] - A[0] > 0:\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0:\n            X.append(B[0] - A[1])\n    else:\n        if B[0] - A[0] > 0 and (B[0] - A[0] == B[1] - A[1] or B[0] - A[0] == B[1] - A[2]):\n            X.append(B[0] - A[0])\n        if B[0] - A[1] > 0 and B[0] - A[1] == B[1] - A[2]:\n            X.append(B[0] - A[1])\n    print(min(X))", "for _ in range(int(input())):\n    n = int(input())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    l = []\n    if len(A) == 2:\n        l.append(B[0] - A[0]) if B[0] - A[0] > 0 else None\n        l.append(B[0] - A[1]) if B[0] - A[1] > 0 else None\n    else:\n        if B[0] - A[0] > 0 and (B[0] - A[0] == B[1] - A[1] or B[0] - A[0] == B[1] - A[2]):\n            l.append(B[0] - A[0])\n        if B[0] - A[1] > 0 and B[0] - A[1] == B[1] - A[2]:\n            l.append(B[0] - A[1])\n    print(min(l))", "for _ in range(int(input())):\n    n = int(input())\n    d1 = map(int, input().split())\n    d2 = map(int, input().split())\n    ans = []\n    if n == 2:\n        (x, y) = d1\n        a = list(d2)[0]\n        if a > y:\n            ans += [a - y]\n        if a > x:\n            ans += [a - x]\n    else:\n        (x, y, z, *trash) = sorted(d1)\n        (a, b, *trash) = sorted(d2)\n        if a - x > 0 and (a - x == b - y or a - x == b - z):\n            ans += [a - x]\n        if a - y > 0 and a - y == b - z:\n            ans += [a - y]\n    print(min(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    found1 = True\n    poss1 = b[0] - a[0]\n    used = False\n    (i, j) = (0, 0)\n    while i < n and j < n - 1:\n        if b[j] - a[i] != poss1:\n            if used:\n                found1 = False\n                break\n            else:\n                used = True\n                i += 1\n        else:\n            i += 1\n            j += 1\n    if poss1 <= 0:\n        found1 = False\n    found2 = True\n    poss2 = b[0] - a[1]\n    used = False\n    (i, j) = (0, 0)\n    while i < n and j < n - 1:\n        if b[j] - a[i] != poss2:\n            if used:\n                found2 = False\n                break\n            else:\n                used = True\n                i += 1\n        else:\n            i += 1\n            j += 1\n    if poss2 <= 0:\n        found2 = False\n    if found1 and found2:\n        print(min(poss1, poss2))\n    elif found1:\n        print(poss1)\n    else:\n        print(poss2)", "def solution(N, A, B):\n    vote = {}\n    for i in range(N // 2):\n        diff_1 = B[i] - A[i]\n        diff_2 = B[-(i + 1)] - A[-(i + 1)]\n        if diff_1 > 0:\n            if diff_1 not in vote:\n                vote[diff_1] = 1\n            else:\n                vote[diff_1] += 1\n        if diff_2 > 0:\n            if diff_2 not in vote:\n                vote[diff_2] = 1\n            else:\n                vote[diff_2] += 1\n    max_votes = max(vote.values())\n    print(min([k for (k, v) in vote.items() if v == max_votes]))\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    solution(N, A, B)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = sorted([int(i.strip()) for i in input().split()])\n    b = sorted([int(i.strip()) for i in input().split()])\n    if n == 2:\n        x = b[0] - a[0]\n        d2 = b[0] - a[1]\n        if d2 > 0 and d2 < x:\n            x = d2\n    else:\n        d11 = b[0] - a[0]\n        d22 = b[1] - a[1]\n        d12 = b[0] - a[1]\n        d23 = b[1] - a[2]\n        if d11 == d22 or d11 == d23:\n            x = d11\n        if d12 == d23 and d12 > 0:\n            x = d12\n    print(x)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\nfrom math import inf\n\ndef check(a, b, x):\n    if x <= 0:\n        return inf\n    done = False\n    for i in range(len(b)):\n        if b[i] - a[i] != x:\n            b.insert(i, a[i] + x)\n            done = not done\n            break\n    flag = True\n    if not done:\n        b.append(a[-1] + x)\n    for i in range(len(a)):\n        if b[i] - a[i] != x:\n            flag = False\n    if flag:\n        return x\n    return inf\nfor t in range(int(input())):\n    n = ni()\n    a = li()\n    b = li()\n    a.sort()\n    b.sort()\n    (x, y) = (b[0] - a[0], b[0] - a[1])\n    ansx = check(a.copy(), b.copy(), x)\n    ansy = check(a, b, y)\n    print(min(ansx, ansy))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(h) for h in input().split()]\n    arr1 = [int(h) for h in input().split()]\n    arr.sort()\n    arr1.sort()\n    u = arr[0] - arr1[0]\n    v = arr[1] - arr1[0]\n    u = -u\n    v = -v\n    u1 = [f + u for f in arr]\n    v1 = [f + v for f in arr]\n    u1 = sum(u1) - sum(arr1) - u\n    v1 = sum(v1) - sum(arr1) - v\n    flag1 = 0\n    flag2 = 0\n    if u1 in arr and u > 0:\n        flag1 = 1\n    if v1 in arr and v > 0:\n        flag2 = 1\n    if flag1 * flag2 == 1:\n        print(min(u, v))\n    elif flag1 == 1:\n        print(u)\n    else:\n        print(v)", "def decodeX(aliceArray, bobArray):\n    if not isinstance(aliceArray, list) or not isinstance(bobArray, list):\n        raise ValueError\n    aliceArray.sort()\n    bobArray.sort()\n    deltaX1 = bobArray[0] - aliceArray[0]\n    deltaX2 = bobArray[0] - aliceArray[1]\n    if deltaX2 <= 0:\n        return deltaX1\n    for i in range(0, len(bobArray)):\n        deltaX = bobArray[i] - aliceArray[i + 1]\n        if deltaX != deltaX2:\n            return deltaX1\n    return deltaX2\n\ndef solve():\n    input()\n    aliceArray = list(map(int, input().split()))\n    bobArray = list(map(int, input().split()))\n    x = decodeX(aliceArray, bobArray)\n    print(x)\n\ndef main():\n    test_cases = int(input())\n    for t in range(test_cases):\n        solve()\nmain()", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        if max(b) > max(a):\n            print(max(b) - max(a))\n        else:\n            print(max(b) - min(a))\n    else:\n        x = max(a)\n        y = max(b)\n        d = y - x\n        if d <= 0:\n            print(y - a[len(a) - 2])\n        elif d == b[len(b) - 2] - a[len(a) - 2] or d == b[len(b) - 2] - a[len(a) - 3]:\n            print(d)\n        else:\n            print(y - a[len(a) - 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        if max(b) > max(a):\n            print(max(b) - max(a))\n        else:\n            print(max(b) - min(a))\n    else:\n        x = max(a)\n        y = max(b)\n        d = y - x\n        if d <= 0:\n            print(y - a[len(a) - 2])\n        elif d == b[len(b) - 2] - a[len(a) - 2] or d == b[len(b) - 2] - a[len(a) - 3]:\n            print(d)\n        else:\n            print(y - a[len(a) - 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    if n == 2:\n        if max(b) > max(a):\n            print(max(b) - max(a))\n        else:\n            print(max(b) - min(a))\n    else:\n        x = max(a)\n        y = max(b)\n        d = y - x\n        if d <= 0:\n            print(y - a[len(a) - 2])\n        elif d == b[len(b) - 2] - a[len(a) - 2] or d == b[len(b) - 2] - a[len(a) - 3]:\n            print(d)\n        else:\n            print(y - a[len(a) - 2])", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a_min = min(a)\n    a_max = max(a)\n    b_min = min(b)\n    b_max = max(b)\n    min_diff = b_min - a_min\n    max_diff = b_max - a_max\n    result = None\n    if min_diff == max_diff:\n        result = min_diff\n    else:\n        a_sum = sum(a)\n        b_sum = sum(b)\n        n = len(b)\n        result = min((x for (x, mx) in ((min_diff, a_max), (max_diff, a_min)) if x > 0 and b_sum - x * n == a_sum - mx))\n    print(result)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a_min = min(a)\n    a_max = max(a)\n    b_min = min(b)\n    b_max = max(b)\n    min_diff = b_min - a_min\n    max_diff = b_max - a_max\n    result = None\n    if min_diff == max_diff:\n        result = min_diff\n    else:\n        a_sum = sum(a)\n        b_sum = sum(b)\n        n = len(b)\n        result = min((x for (x, mx) in ((min_diff, a_max), (max_diff, a_min)) if x > 0 and b_sum - x * n == a_sum - mx))\n    print(result)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a_min = min(a)\n    a_max = max(a)\n    b_min = min(b)\n    b_max = max(b)\n    min_diff = b_min - a_min\n    max_diff = b_max - a_max\n    result = None\n    if min_diff == max_diff:\n        result = min_diff\n    else:\n        a_sum = sum(a)\n        b_sum = sum(b)\n        n = len(b)\n        result = min((x for (x, mx) in ((min_diff, a_max), (max_diff, a_min)) if x > 0 and b_sum - x * n == a_sum - mx))\n    print(result)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a_list = [int(x) for x in input().split()]\n    b_list = [int(x) for x in input().split()]\n    amin = min(a_list)\n    amax = max(a_list)\n    bmin = min(b_list)\n    bmax = max(b_list)\n    min_diff = bmin - amin\n    max_diff = bmax - amax\n    result = None\n    if min_diff == max_diff:\n        result = min_diff\n    else:\n        asum = sum(a_list)\n        bsum = sum(b_list)\n        n = len(b_list)\n        result = min((x for (x, mx) in ((min_diff, amax), (max_diff, amin)) if x > 0 and bsum - x * n == asum - mx))\n    print(result)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x1 = b[0] - a[0]\n    x2 = b[0] - a[1]\n    if x2 <= 0 or (n > 2 and b[1] - a[2] != x2):\n        print(x1)\n    else:\n        print(x2)\n    t -= 1", "def result(A, B):\n    dictionary = {}\n    for i in range(len(A)):\n        if str(A[i]) not in dictionary:\n            dictionary[str(A[i])] = 1\n        else:\n            dictionary[str(A[i])] += 1\n    maximum_A = max(A)\n    maximum_B = max(B)\n    possible_i_values = [maximum_B - maximum_A]\n    A.remove(maximum_A)\n    possible_i_values.append(maximum_B - max(A))\n    possible_i_values = [x for x in possible_i_values if x > 0]\n    final_vals = []\n    for value in possible_i_values:\n        dict2 = dictionary.copy()\n        current_value = True\n        for j in B:\n            if str(j - value) in dict2:\n                x = dict2[str(j - value)]\n                if x == 0:\n                    current_value = False\n                    break\n                dict2[str(j - value)] -= 1\n            else:\n                current_value = False\n                break\n        if current_value == True:\n            final_vals.append(value)\n    return min(final_vals)\nfor i in range(int(input())):\n    ignore = input()\n    A = [int(m) for m in input().split()]\n    B = [int(m) for m in input().split()]\n    result_ = result(A, B)\n    print(str(result_))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x1 = b[0] - a[0]\n    x2 = b[0] - a[1]\n    if x2 <= 0 or (n > 2 and b[1] - a[2] != x2):\n        print(x1)\n    else:\n        print(x2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    l.sort()\n    lst.sort()\n    v1 = lst[0] - l[0]\n    v2 = lst[0] - l[1]\n    if v2 <= 0 or (n > 2 and lst[1] - l[2] != v2):\n        print(v1)\n    else:\n        print(v2)", "n = int(input())\nfor i in range(n):\n    useless = int(input())\n    n = list(map(int, input().split(' ')))\n    j = list(map(int, input().split(' ')))\n    n.sort()\n    j.sort()\n    jj = j[0] - n[0]\n    nn = j[0] - n[1]\n    if useless > 2 and j[1] - n[2] != nn or nn <= 0:\n        print(jj)\n    else:\n        print(nn)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))[:n]\n    arr2 = list(map(int, input().split()))[:n - 1]\n    arr1.sort()\n    arr2.sort()\n    ans1 = arr2[0] - arr1[0]\n    ans2 = arr2[0] - arr1[1]\n    if n > 2 and arr2[1] - arr1[2] != ans2 or ans2 <= 0:\n        print(ans1)\n    else:\n        print(ans2)", "n = int(input())\nfor i in range(n):\n    useless = int(input())\n    n = list(map(int, input().split(' ')))\n    j = list(map(int, input().split(' ')))\n    n.sort()\n    j.sort()\n    jj = j[0] - n[0]\n    nn = j[0] - n[1]\n    if useless > 2 and j[1] - n[2] != nn or nn <= 0:\n        print(jj)\n    else:\n        print(nn)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a.sort()\n    b.sort()\n    temp = b[0] - a[1]\n    flag = True\n    for j in range(1, n - 1):\n        if b[j] - a[j + 1] != temp:\n            flag = False\n    if temp <= 0 or flag == False:\n        print(b[0] - a[0])\n    else:\n        print(b[0] - a[1])", "for i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a.sort()\n    b.sort()\n    temp = b[0] - a[1]\n    flag = True\n    for j in range(1, n - 1):\n        if b[j] - a[j + 1] != temp:\n            flag = False\n    if temp <= 0 or flag == False:\n        print(b[0] - a[0])\n    else:\n        print(b[0] - a[1])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr_original = list(map(int, input().split()))\n    arr_result = list(map(int, input().split()))\n    sum_original = sum(arr_original)\n    sum_result = sum(arr_result)\n    arr_original.sort()\n    arr_result.sort()\n    temp = {}\n    for i in range(n):\n        res = (sum_result - sum_original + arr_original[i]) // (n - 1)\n        res_mod = (sum_result - sum_original + arr_original[i]) % (n - 1)\n        if res_mod == 0 and res > 0:\n            if res not in temp:\n                temp[res] = [i]\n            else:\n                temp[res].append(i)\n    var = []\n    for i in temp:\n        arr_dup = []\n        for k in range(n):\n            arr_dup.append(arr_original[k] + i)\n        arr_dup_dup = arr_dup[:]\n        for j in range(len(temp[i])):\n            arr_dup.pop(temp[i][j])\n            if arr_dup == arr_result:\n                var.append(i)\n            else:\n                arr_dup = arr_dup_dup\n    print(min(var))\n    t -= 1", "def get_dif(nums1, nums2):\n    nums1.sort(reverse=True)\n    nums2.sort(reverse=True)\n    if len(nums1) == 2:\n        if nums2[0] - nums1[0] > 0:\n            return nums2[0] - nums1[0]\n        else:\n            return nums2[0] - nums1[1]\n    if nums2[0] - nums1[0] == nums2[1] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    if nums2[0] - nums1[0] == nums2[2] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    return nums2[0] - nums1[1]\nfor _ in range(int(input())):\n    input()\n    nums1 = [int(x) for x in input().split()]\n    nums2 = [int(x) for x in input().split()]\n    d = get_dif(nums1, nums2)\n    print(d)", "def get_dif(nums1, nums2):\n    nums1.sort(reverse=True)\n    nums2.sort(reverse=True)\n    if len(nums1) == 2:\n        if nums2[0] - nums1[0] > 0:\n            return nums2[0] - nums1[0]\n        else:\n            return nums2[0] - nums1[1]\n    if nums2[0] - nums1[0] == nums2[1] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    if nums2[0] - nums1[0] == nums2[2] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    return nums2[0] - nums1[1]\nfor _ in range(int(input())):\n    input()\n    nums1 = [int(x) for x in input().split()]\n    nums2 = [int(x) for x in input().split()]\n    d = get_dif(nums1, nums2)\n    print(d)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    x = 0\n    v1 = b[0] - a[0]\n    v2 = b[0] - a[1]\n    if v1 <= 0:\n        x = v2\n    elif v2 <= 0:\n        x = v1\n    else:\n        sb = sum(b)\n        sa = sum(a)\n        if v1 * (n - 1) - (sb - sa) in a:\n            x = v1\n        else:\n            x = v2\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    x = 0\n    v1 = b[0] - a[0]\n    v2 = b[0] - a[1]\n    if v1 <= 0:\n        x = v2\n    else:\n        sb = sum(b)\n        sa = sum(a)\n        if v1 * (n - 1) - (sb - sa) in a:\n            x = v1\n        else:\n            x = v2\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    x = 0\n    v1 = b[0] - a[0]\n    v2 = b[0] - a[1]\n    if v1 <= 0:\n        x = v2\n    else:\n        sb = sum(b)\n        sa = sum(a)\n        if v1 * (n - 1) - (sb - sa) in a:\n            x = v1\n        else:\n            x = v2\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "for z in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a.sort()\n    b.sort()\n    m = 10 ** 9\n    d = {}\n    d[b[0] - a[0]] = 1\n    p = b[n - 2] - a[n - 1]\n    if p in d:\n        d[p] += 1\n    else:\n        d[p] = 1\n    for i in range(1, n - 1):\n        p = b[i] - a[i]\n        q = b[i] - a[i + 1]\n        if p not in d:\n            d[p] = 1\n        else:\n            d[p] += 1\n        if q not in d:\n            d[q] = 1\n        else:\n            d[q] += 1\n    for x in d.keys():\n        if x > 0 and d[x] >= n - 1:\n            m = min(m, x)\n    print(m)", "import numpy\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    b = sorted(list(map(int, input().split())))\n    if len(a) > 2:\n        A = numpy.array(a[:-1] + a[1:])\n        B = numpy.array(b + b)\n        possible = [sol for (sol, cnt) in Counter(B - A).items() if cnt >= n - 1 and sol > 0]\n        print(min(possible))\n    else:\n        x = b[0] - a[0]\n        y = b[0] - a[1]\n        if x > 0 and y > 0:\n            print(min(x, y))\n        elif x <= 0:\n            print(y)\n        else:\n            print(x)", "def identify_num(a, b, n):\n    possible = []\n    a_x = set(a)\n    a_total = sum(a)\n    b_total = sum(b)\n    for val in a:\n        if (b_total - (a_total - val)) % (n - 1) == 0 and (b_total - (a_total - val)) / (n - 1) > 0:\n            x = int((b_total - (a_total - val)) / (n - 1))\n            flag = True\n            for itm in b:\n                if itm - x not in a_x:\n                    flag = False\n                    break\n            if flag:\n                possible.append(x)\n    return min(possible)\nt = input()\nfor i in range(int(t)):\n    n = int(input())\n    a = input().split(' ')\n    b = input().split(' ')\n    a = list(map(lambda x: int(x), a))\n    b = list(map(lambda x: int(x), b))\n    print(identify_num(a, b, n))", "import numpy\nfrom collections import Counter\n\ndef readline():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    N = int(input())\n    A = readline()\n    B = readline()\n    A.sort()\n    B.sort()\n    if N == 2:\n        (x, y) = (B[0] - A[0], B[0] - A[1])\n        if x >= 0 and y >= 0:\n            print(min(x, y))\n        elif x < 0:\n            print(y)\n        else:\n            print(x)\n    else:\n        A = numpy.array(A[:-1] + A[1:])\n        B = numpy.array(B + B)\n        poss_sol = [sol for (sol, cnt) in Counter(B - A).items() if cnt >= N - 1 and sol > 0]\n        print(min(poss_sol))", "from collections import defaultdict\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = 9999999999\n    if n == 2:\n        ans1 = b[0] - a[0]\n        ans2 = b[0] - a[1]\n        if ans1 > 0 and ans2 > 0:\n            print(min(ans1, ans2))\n        elif ans1 > 0:\n            print(ans1)\n        else:\n            print(ans2)\n    else:\n        if b[0] > a[0] and b[0] - a[0] == b[1] - a[1]:\n            ans = min(ans, b[0] - a[0])\n        if b[0] > a[0] and b[0] - a[0] == b[1] - a[2]:\n            ans = min(ans, b[0] - a[0])\n        if b[0] > a[1] and b[0] - a[1] == b[1] - a[2]:\n            ans = min(ans, b[0] - a[1])\n        print(ans)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    d = defaultdict(int)\n    X = float('inf')\n    for i in range(n - 1):\n        x1 = B[i] - A[i]\n        x2 = B[i] - A[i + 1]\n        if x1 != x2:\n            if x1 > 0:\n                d[x1] += 1\n            if x2 > 0:\n                d[x2] += 1\n        elif x1 > 0:\n            d[x1] += 1\n    for newX in d.keys():\n        if d[newX] == n - 1:\n            X = min(X, newX)\n    print(X)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    d = defaultdict(int)\n    X = float('inf')\n    for i in range(n - 1):\n        x1 = B[i] - A[i]\n        x2 = B[i] - A[i + 1]\n        if x1 != x2:\n            if x1 > 0:\n                d[x1] += 1\n            if x2 > 0:\n                d[x2] += 1\n        elif x1 > 0:\n            d[x1] += 1\n    for newX in d.keys():\n        if d[newX] == n - 1:\n            X = min(X, newX)\n    print(X)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from collections import *\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = float('inf')\n    a.sort()\n    b.sort()\n    m = defaultdict(int)\n    for i in range(n - 1):\n        m1 = b[i] - a[i]\n        m2 = b[i] - a[i + 1]\n        if m1 != m2:\n            if m1 > 0:\n                m[m1] += 1\n            if m2 > 0:\n                m[m2] += 1\n        elif m1 > 0:\n            m[m1] += 1\n    for i in m.keys():\n        if m[i] == n - 1:\n            x = min(x, i)\n    print(x)", "from sys import stdin, stdout\nimport sys\n\ndef fxn(n, arr1, arr2):\n    arr1.sort()\n    arr2.sort()\n    for i in range(1, n + 1):\n        x = arr2[-1] - arr1[-i]\n        if n > 2:\n            y = arr2[-2] - arr1[-(i + 1)]\n        else:\n            y = x\n        if x > 0 and x == y:\n            return x\n        else:\n            continue\n\ndef main():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        arr1 = [int(x) for x in input().split()]\n        arr2 = [int(x) for x in input().split()]\n        print(fxn(n, arr1, arr2))\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    x.sort()\n    y.sort()\n    p = set(x)\n    ans = y[0] - x[1]\n    for i in y:\n        if i - ans not in p:\n            ans = y[0] - x[0]\n            break\n    if ans <= 0:\n        ans = y[0] - x[0]\n    print(ans)", "def get_dif(nums1, nums2):\n    nums1.sort(reverse=True)\n    nums2.sort(reverse=True)\n    if len(nums1) == 2:\n        if nums2[0] - nums1[0] > 0:\n            return nums2[0] - nums1[0]\n        else:\n            return nums2[0] - nums1[1]\n    if nums2[0] - nums1[0] == nums2[1] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    if nums2[0] - nums1[0] == nums2[2] - nums1[1] and nums2[0] - nums1[0] > 0:\n        return nums2[0] - nums1[0]\n    return nums2[0] - nums1[1]\nfor _ in range(int(input())):\n    input()\n    nums1 = [int(x) for x in input().split()]\n    nums2 = [int(x) for x in input().split()]\n    d = get_dif(nums1, nums2)\n    print(d)", "import collections\nimport heapq\nfrom pickle import FALSE\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\n\ndef values():\n    return map(int, sys.stdin.readline().split())\n\ndef inlsts():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef instr():\n    return sys.stdin.readline().strip()\n\ndef words():\n    return [i for i in sys.stdin.readline().strip().split()]\n\ndef chars():\n    return [i for i in sys.stdin.readline().strip()]\n\ndef solve():\n    n = inp()\n    l1 = sorted(values())\n    l2 = sorted(values())\n    x = l2[0] - l1[1]\n    if x > 0:\n        tmp = l2[0] - l1[1]\n        for i in range(n - 1):\n            if l2[i] - l1[i + 1] != tmp:\n                print(l2[0] - l1[0])\n                return\n        print(x)\n    else:\n        print(l2[0] - l1[0])\nfor i in range(inp()):\n    solve()", "def solve():\n    n = int(input())\n    (a, b) = (list(map(int, input().split())), list(map(int, input().split())))\n    a.sort()\n    b.sort()\n    if n == 2:\n        ans1 = b[0] - a[-1]\n        ans2 = b[0] - a[0]\n        if ans1 > 0 and ans2 > 0:\n            print(min(ans1, ans2))\n        elif ans1 > 0:\n            print(ans1)\n        elif ans2 > 0:\n            print(ans2)\n    else:\n        ans = 2 ** 63\n        if b[0] > a[0] and b[0] - a[0] == b[1] - a[1]:\n            ans = min(ans, b[0] - a[0])\n        if b[0] > a[0] and b[0] - a[0] == b[1] - a[2]:\n            ans = min(ans, b[1] - a[2])\n        if b[0] > a[1] and b[0] - a[1] == b[1] - a[2]:\n            ans = min(ans, b[0] - a[1])\n        print(ans)\nfor _ in range(int(input())):\n    solve()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = b[0] - a[1]\n    d = defaultdict(lambda : 0)\n    for i in a:\n        d[i] += 1\n    for i in b:\n        if d[i - ans] == 0:\n            ans = b[0] - a[0]\n            break\n    if ans <= 0:\n        ans = b[0] - a[0]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr_original = list(map(int, input().split()))\n    arr_result = list(map(int, input().split()))\n    sum_original = sum(arr_original)\n    sum_result = sum(arr_result)\n    arr_original.sort()\n    arr_result.sort()\n    temp = {}\n    for i in range(n):\n        res = (sum_result - sum_original + arr_original[i]) // (n - 1)\n        res_mod = (sum_result - sum_original + arr_original[i]) % (n - 1)\n        if res_mod == 0 and res > 0:\n            if res not in temp:\n                temp[res] = [i]\n            else:\n                temp[res].append(i)\n    var = []\n    for i in temp:\n        arr_dup = []\n        for k in range(n):\n            arr_dup.append(arr_original[k] + i)\n        arr_dup_dup = arr_dup[:]\n        for j in range(len(temp[i])):\n            arr_dup.pop(temp[i][j])\n            if arr_dup == arr_result:\n                var.append(i)\n            else:\n                arr_dup = arr_dup_dup\n    print(min(var))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr_original = list(map(int, input().split()))\n    arr_result = list(map(int, input().split()))\n    sum_original = sum(arr_original)\n    sum_result = sum(arr_result)\n    arr_original.sort()\n    arr_result.sort()\n    temp = {}\n    for i in range(n):\n        res = (sum_result - sum_original + arr_original[i]) // (n - 1)\n        res_mod = (sum_result - sum_original + arr_original[i]) % (n - 1)\n        if res_mod == 0 and res > 0:\n            if res not in temp:\n                temp[res] = [i]\n            else:\n                temp[res].append(i)\n    var = []\n    for i in temp:\n        arr_dup = []\n        for k in range(n):\n            arr_dup.append(arr_original[k] + i)\n        arr_dup_dup = arr_dup[:]\n        for j in range(len(temp[i])):\n            arr_dup.pop(temp[i][j])\n            if arr_dup == arr_result:\n                var.append(i)\n            else:\n                arr_dup = arr_dup_dup\n    print(min(var))\n    t -= 1", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    if N == 2:\n        if A[0] < B[0] <= A[1]:\n            print(B[0] - A[0])\n        else:\n            print(B[0] - A[1])\n    else:\n        anss = []\n        cnds = []\n        asum = sum(A)\n        bsum = sum(B)\n        for i in range(N):\n            dif = (bsum - asum + A[i]) // (N - 1)\n            mod = (bsum - asum + A[i]) % (N - 1)\n            if dif > 0 and mod == 0:\n                cnds.append((dif, i))\n        for cn in cnds:\n            f1 = True\n            f2 = True\n            for i in range(cn[1]):\n                if B[i] - A[i] != cn[0]:\n                    f1 = False\n                    f2 = False\n                    break\n            if f1:\n                for i in range(cn[1] + 1, N):\n                    if B[i - 1] - A[i] != cn[0]:\n                        f2 = False\n                        break\n            if f2:\n                anss.append(cn[0])\n        print(min(anss))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr_original = list(map(int, input().split()))\n    arr_result = list(map(int, input().split()))\n    sum_original = sum(arr_original)\n    sum_result = sum(arr_result)\n    arr_original.sort()\n    arr_result.sort()\n    temp = {}\n    for i in range(n):\n        res = (sum_result - sum_original + arr_original[i]) // (n - 1)\n        res_mod = (sum_result - sum_original + arr_original[i]) % (n - 1)\n        if res_mod == 0 and res > 0:\n            if res not in temp:\n                temp[res] = [i]\n            else:\n                temp[res].append(i)\n    var = []\n    for i in temp:\n        arr_dup = []\n        for k in range(n):\n            arr_dup.append(arr_original[k] + i)\n        arr_dup_dup = arr_dup[:]\n        for j in range(len(temp[i])):\n            arr_dup.pop(temp[i][j])\n            if arr_dup == arr_result:\n                var.append(i)\n            else:\n                arr_dup = arr_dup_dup\n    print(min(var))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr_original = list(map(int, input().split()))\n    arr_result = list(map(int, input().split()))\n    sum_original = sum(arr_original)\n    sum_result = sum(arr_result)\n    arr_original.sort()\n    arr_result.sort()\n    temp = {}\n    for i in range(n):\n        res = (sum_result - sum_original + arr_original[i]) // (n - 1)\n        res_mod = (sum_result - sum_original + arr_original[i]) % (n - 1)\n        if res_mod == 0 and res > 0:\n            if res not in temp:\n                temp[res] = [i]\n            else:\n                temp[res].append(i)\n    var = []\n    for i in temp:\n        arr_dup = []\n        for k in range(n):\n            arr_dup.append(arr_original[k] + i)\n        arr_dup_dup = arr_dup[:]\n        for j in range(len(temp[i])):\n            arr_dup.pop(temp[i][j])\n            if arr_dup == arr_result:\n                var.append(i)\n            else:\n                arr_dup = arr_dup_dup\n    print(min(var))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    b = sorted(map(int, input().split()))\n    if n == 2:\n        if a[1] < b[0]:\n            print(b[0] - a[1])\n        else:\n            print(b[0] - a[0])\n    else:\n        li = []\n        if b[0] - a[0] > 0 and b[1] - a[1] > 0:\n            if b[0] - a[0] == b[1] - a[1]:\n                li.append(b[0] - a[0])\n        if b[-1] - a[-1] > 0 and b[-2] - a[-2] > 0:\n            if b[-2] - a[-2] == b[-1] - a[-1]:\n                li.append(b[-1] - a[-1])\n        print(min(li))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    b = sorted(map(int, input().split()))\n    if n == 2:\n        if a[1] < b[0]:\n            print(b[0] - a[1])\n        else:\n            print(b[0] - a[0])\n    else:\n        li = []\n        if b[0] - a[0] > 0 and b[1] - a[1] > 0:\n            if b[0] - a[0] == b[1] - a[1]:\n                li.append(b[0] - a[0])\n        if b[-1] - a[-1] > 0 and b[-2] - a[-2] > 0:\n            if b[-2] - a[-2] == b[-1] - a[-1]:\n                li.append(b[-1] - a[-1])\n        print(min(li))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    b = sorted(map(int, input().split()))\n    if n == 2:\n        if a[1] < b[0]:\n            print(b[0] - a[1])\n        else:\n            print(b[0] - a[0])\n    else:\n        li = []\n        if b[0] - a[0] > 0 and b[-1] - a[-1] > 0:\n            if b[0] - a[0] == b[-1] - a[-1]:\n                li.append(b[0] - a[0])\n        if b[0] - a[0] > 0 and b[1] - a[1] > 0:\n            if b[0] - a[0] == b[1] - a[1]:\n                li.append(b[0] - a[0])\n        if b[-1] - a[-1] > 0 and b[-2] - a[-2] > 0:\n            if b[-2] - a[-2] == b[-1] - a[-1]:\n                li.append(b[-1] - a[-1])\n        print(min(li))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()[:n]))\n    arr2 = list(map(int, input().split()[:n - 1]))\n    arr1.sort()\n    arr2.sort()\n    s = set(arr1)\n    ans = arr2[0] - arr1[1]\n    for j in arr2:\n        if j - ans not in s:\n            ans = arr2[0] - arr1[0]\n            break\n    if ans <= 0:\n        ans = arr2[0] - arr1[0]\n    print(ans)"]