["t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "t = int(input())\nn = 1001\nl = [[0 for i in range(n)] for i in range(n)]\nfor i in range(1, n):\n    l[i][1] = i * (i + 1) // 2\nfor j in range(1, n):\n    for k in range(2, n):\n        l[j][k] = l[j][k - 1] + (k - 1) + (j - 1)\nfor z in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    s = 0\n    for a in range(r1, r2 + 1):\n        s += l[a][c1]\n    for b in range(c1 + 1, c2 + 1):\n        s += l[r2][b]\n    print(s)", "T = int(input())\nN = 1001\ninf = [[0 for _ in range(N)] for _ in range(N)]\nfor i in range(1, N):\n    inf[i][1] = i * (i + 1) // 2\nfor i in range(1, N):\n    for j in range(2, N):\n        inf[i][j] = inf[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(T):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][i]\n    print(Sum)", "T = int(input())\nN = 1001\ninf = [[0 for _ in range(N)] for _ in range(N)]\nfor i in range(1, N):\n    inf[i][1] = i * (i + 1) // 2\nfor i in range(1, N):\n    for j in range(2, N):\n        inf[i][j] = inf[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(T):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][i]\n    print(Sum)", "t = int(input())\nN = 1001\ninf = [[0] * N for i in range(N)]\nfor i in range(1, N):\n    inf[i][1] = i * (i + 1) / 2\nfor i in range(1, N):\n    for j in range(2, N):\n        inf[i][j] = inf[i][j - 1] + j - 1 + i - 1\nfor _ in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][i]\n    print(int(Sum))", "t = int(input())\nN = 1001\ninf = [[0] * N for i in range(N)]\nfor i in range(1, N):\n    inf[i][1] = i * (i + 1) / 2\nfor i in range(1, N):\n    for j in range(2, N):\n        inf[i][j] = inf[i][j - 1] + j - 1 + i - 1\nfor _ in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][i]\n    print(int(Sum))", "T = int(input())\nN = 1001\ninf = [[0] * N for i in range(N)]\nfor i in range(1, N):\n    inf[i][1] = abs(i * (i + 1)) / 2\nfor i in range(1, N):\n    for j in range(2, N):\n        inf[i][j] = inf[i][j - 1] + j - 1 + i - 1\nfor i in range(T):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][i]\n    print(int(Sum))", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (x1, y1, x2, y2) = list(map(int, input().strip().split()))\n    point1 = (1, y1)\n    point2 = (x1, y1)\n    point2 = (x2, y1)\n    point1_value = 1 + (y1 - 1) * y1 // 2\n    diff1 = 1 + y1\n    diff2 = x1 + y1\n    diff3 = x2 + y1 - 1\n    point2_value = point1_value + (x1 - 1) * (2 * diff1 + x1 - 2) // 2\n    point3_value = point1_value + (x2 - 1) * (2 * diff1 + x2 - 2) // 2\n    ans = 0\n    for i in range(x2 - x1 + 1):\n        ans += point2_value + i * (2 * diff2 + i - 1) // 2\n    for i in range(y2 - y1 + 1):\n        ans += point3_value + i * (2 * diff3 + i - 1) // 2\n    ans = ans - point3_value\n    print(ans)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (x1, y1, x2, y2) = list(map(int, input().strip().split()))\n    point1 = (1, y1)\n    point2 = (x1, y1)\n    point2 = (x2, y1)\n    point1_value = 1 + (y1 - 1) * y1 // 2\n    diff1 = 1 + y1\n    diff2 = x1 + y1\n    diff3 = x2 + y1 - 1\n    point2_value = point1_value + (x1 - 1) * (2 * diff1 + x1 - 2) // 2\n    point3_value = point1_value + (x2 - 1) * (2 * diff1 + x2 - 2) // 2\n    ans = 0\n    for i in range(x2 - x1 + 1):\n        ans += point2_value + i * (2 * diff2 + i - 1) // 2\n    for i in range(y2 - y1 + 1):\n        ans += point3_value + i * (2 * diff3 + i - 1) // 2\n    ans = ans - point3_value\n    print(ans)", "from itertools import accumulate\n\ndef val_at(x, y, trs):\n    return trs[y + x - 2] + x\ntri = list(accumulate(range(2 * 1000 + 1)))\nactri = [0] + list(accumulate(tri))\nT = int(input())\nfor tx in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    if x2 < x1:\n        (x1, y1, x2, y2) = (x2, y2, x1, y1)\n    res = tri[x2 - 1] - tri[x1 - 1] + actri[y1 + x2 - 2] - actri[y1 + x1 - 2]\n    if y2 < y1:\n        (y1, y2) = (y2, y1)\n    res += x2 * (y2 + 1 - y1) + actri[y2 + 1 + x2 - 2] - actri[y1 + x2 - 2]\n    print(res)", "from itertools import accumulate\n\ndef val_at(x, y, trs):\n    return trs[y + x - 2] + x\ntri = list(accumulate(range(2 * 1000 + 1)))\nT = int(input())\nfor tx in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    if x2 < x1:\n        (x1, y1, x2, y2) = (x2, y2, x1, y1)\n    res = sum((val_at(x, y1, tri) for x in range(x1, x2)))\n    if y2 < y1:\n        (y1, y2) = (y2, y1)\n    res += sum((val_at(x2, y, tri) for y in range(y1, y2 + 1)))\n    print(res)", "matrix = [[0 for i in range(1000)] for i in range(1000)]\nmatrix[0][0] = 1\nfor i in range(1, 1000):\n    matrix[i][0] += matrix[i - 1][0] + i + 1\nfor i in range(0, 1000):\n    for j in range(1, 1000):\n        matrix[i][j] = matrix[i][j - 1] + j + i\nt = int(input())\nfor _ in range(t):\n    x1x2y1y2 = list(map(int, input().split()))\n    x1 = x1x2y1y2[0]\n    y1 = x1x2y1y2[1]\n    x2 = x1x2y1y2[2]\n    y2 = x1x2y1y2[3]\n    sum1 = 0\n    for i in range(x1 - 1, x2):\n        sum1 += matrix[i][y1 - 1]\n    for j in range(y1, y2):\n        sum1 += matrix[x2 - 1][j]\n    print(sum1)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (x1, y1, x2, y2) = map(int, stdin.readline().split())\n    d2 = x1 + y1\n    t2 = y1 + 1\n    d1 = x2 + y1 - 1\n    q = 0\n    v = y1 * y1 / 2 - y1 / 2 + 1\n    for i in range(1, x1):\n        v += t2\n        t2 += 1\n    for i in range(x1, x2):\n        q += v\n        v += d2\n        d2 += 1\n    for i in range(y1, y2 + 1):\n        q += v\n        v += d1\n        d1 += 1\n    print(int(q))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (x1, y1, x2, y2) = map(int, stdin.readline().split())\n    d2 = x1 + y1\n    t2 = y1 + 1\n    d1 = x2 + y1 - 1\n    q = 0\n    v = y1 * y1 / 2 - y1 / 2 + 1\n    for i in range(1, x1):\n        v += t2\n        t2 += 1\n    for i in range(x1, x2):\n        q += v\n        v += d2\n        d2 += 1\n    for i in range(y1, y2 + 1):\n        q += v\n        v += d1\n        d1 += 1\n    print(int(q))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (x1, y1, x2, y2) = map(int, stdin.readline().split())\n    d2 = x1 + y1\n    t2 = y1 + 1\n    d1 = x2 + y1 - 1\n    q = 0\n    v = y1 * y1 / 2 - y1 / 2 + 1\n    for i in range(1, x1):\n        v += t2\n        t2 += 1\n    for i in range(x1, x2):\n        q += v\n        v += d2\n        d2 += 1\n    for i in range(y1, y2 + 1):\n        q += v\n        v += d1\n        d1 += 1\n    print(int(q))", "def maximum(r1, c1, r2, c2, inf):\n    Sum = 0\n    for i in range(r1, r2 + 1):\n        Sum += inf[i][c1]\n    for j in range(c1 + 1, c2 + 1):\n        Sum += inf[r2][j]\n    return Sum\ninf = [[0 for i in range(1001)] for i in range(1001)]\nfor i in range(1, 1001):\n    inf[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        inf[i][j] = inf[i][j - 1] + (i - 1) + (j - 1)\nfor _ in range(int(input())):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    print(maximum(r1, c1, r2, c2, inf))", "for i in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    lvl = x1 + y1 - 2\n    ans = lvl * (lvl + 1) // 2 + x1\n    while x1 < x2:\n        x1 += 1\n        lvl = x1 + y1 - 2\n        ans += lvl * (lvl + 1) // 2 + x1\n    while y1 < y2:\n        y1 += 1\n        lvl = x1 + y1 - 2\n        ans += lvl * (lvl + 1) // 2 + x1\n    print(ans)", "arr = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(1, 1001):\n    arr[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        arr[i][j] = arr[i][j - 1] + (i - 1) + (j - 1)\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    sumup = arr[x1][y1]\n    while x1 < x2 and y1 < y2:\n        right = arr[x1][y1 + 1]\n        down = arr[x1 + 1][y1]\n        if right > down:\n            y1 += 1\n            sumup += arr[x1][y1]\n        if down >= right:\n            x1 += 1\n            sumup += arr[x1][y1]\n    if x1 == x2 and y1 != y2:\n        sumup += sum(arr[x1][y1 + 1:y2 + 1])\n    if y1 == y2 and x1 != x2:\n        for k in range(x1 + 1, x2 + 1):\n            sumup += arr[k][y1]\n    print(sumup)", "S = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(1, 1001):\n    S[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        S[i][j] = S[i][j - 1] + (i - 1) + (j - 1)\nT = int(input())\nfor i in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    max_path = 0\n    for i in range(x1, x2 + 1):\n        max_path += S[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        max_path += S[x2][i]\n    print(max_path)", "S = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(1, 1001):\n    S[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        S[i][j] = S[i][j - 1] + (i - 1) + (j - 1)\nT = int(input())\nfor i in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    max_path = 0\n    for i in range(x1, x2 + 1):\n        max_path += S[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        max_path += S[x2][i]\n    print(max_path)", "a = [[0 for i in range(1000)] for j in range(1000)]\na[0][0] = 1\nfor i in range(1, 1000):\n    a[i][0] = a[i - 1][0] + i + 1\nfor i in range(1000):\n    for j in range(1, 1000):\n        a[i][j] = a[i][j - 1] + i + j\nt = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = 0\n    for j in range(x1 - 1, x2):\n        ans += a[j][y1 - 1]\n    for j in range(y1, y2):\n        ans += a[x2 - 1][j]\n    print(ans)", "t = int(input())\ninfiniteMat = [[0 for i in range(1001)] for i in range(1001)]\ninfiniteMat[1][1] = 1\nfor i in range(2, 1001):\n    infiniteMat[i][1] = infiniteMat[i - 1][1] + i\nfor i in range(1, 1001):\n    for j in range(2, 1001):\n        infiniteMat[i][j] = infiniteMat[i][j - 1] + i + j - 2\nfor _ in range(t):\n    (x1, y1, x2, y2) = list(map(int, input().split()))\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += infiniteMat[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        ans += infiniteMat[x2][i]\n    print(ans)", "arr = [[0 for i in range(1000)] for j in range(1000)]\nfor i in range(1000):\n    arr[i][0] = (i + 1) * (i + 2) // 2\nfor i in range(1000):\n    for j in range(1, 1000, 1):\n        arr[i][j] = arr[i][j - 1] + j + i\nfor i in range(int(input())):\n    (r1, c1, r2, c2) = [int(x) for x in input().split()]\n    r1 -= 1\n    c1 -= 1\n    r2 -= 1\n    c2 -= 1\n    sum = arr[r1][c1]\n    for j in range(r1 + 1, r2 + 1, 1):\n        sum += arr[j][c1]\n    for j in range(c1 + 1, c2 + 1, 1):\n        sum += arr[r2][j]\n    print(sum)", "for _ in range(int(input())):\n    (x, y, x1, y1) = map(int, input().split())\n    n = 0\n    for i in range(x):\n        n += i + 1\n    for i in range(y - 1):\n        n += x + i\n    ans = n\n    diff = x + y\n    for i in range(x1 - x):\n        n += diff + i\n        ans += n\n    diff = x1 + y - 1\n    for i in range(y1 - y):\n        n += diff + i\n        ans += n\n    print(ans)", "inf = []\nfor i in range(1000):\n    for j in range(1000):\n        if j == 0:\n            temp = []\n            temp.append((i + 1) * (i + 2) // 2)\n            inf.append(temp)\n        else:\n            inf[i].append(inf[i][j - 1] + i + j)\nt = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = [int(x) - 1 for x in input().split()]\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += inf[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        ans += inf[x2][j]\n    print(ans)", "m = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(1, 1001):\n    m[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        m[i][j] = m[i][j - 1] + (i - 1) + (j - 1)\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += m[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        ans += m[x2][i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    p = x1 + y1\n    sum = 0\n    for i in range(x1, x2 + 1):\n        sum += p * (p - 1) // 2 - y1 + 1\n        p += 1\n    p = x2 + y1 + 1\n    for i in range(y1 + 1, y2 + 1):\n        sum += p * (p - 1) // 2 - i + 1\n        p += 1\n    print(sum)", "t = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    p = x1 + y1\n    sum = 0\n    for i in range(x1, x2 + 1):\n        sum += p * (p - 1) // 2 - y1 + 1\n        p += 1\n    p = x2 + y1 + 1\n    for i in range(y1 + 1, y2 + 1):\n        sum += p * (p - 1) // 2 - i + 1\n        p += 1\n    print(sum)", "t = int(input())\nfor case in range(t):\n    (x1, y1, x2, y2) = map(lambda x: int(x) - 1, input().split())\n    pathSum = 0\n    for row in range(x1, x2 + 1):\n        x = row + y1 + 1\n        cur = x * (x - 1) // 2 + row + 1\n        pathSum += cur\n    for col in range(y1 + 1, y2 + 1):\n        x = x2 + col + 1\n        cur = x * (x - 1) // 2 + x2 + 1\n        pathSum += cur\n    print(pathSum)", "m = []\nfor i in range(1000):\n    n = []\n    for j in range(1000):\n        n.append(0)\n    m.append(n)\nm[0][0] = 1\nt = 1\nfor i in range(1, 1000):\n    m[0][i] = m[0][i - 1] + t\n    t += 1\nt = 2\nfor i in range(1, 1000):\n    m[i][0] = m[i - 1][0] + t\n    t += 1\nfor i in range(1, 1000):\n    t = i + 1\n    for j in range(1, 1000):\n        m[i][j] = m[i][j - 1] + t\n        t += 1\ntest = int(input())\nwhile test:\n    (x1, y1, x2, y2) = input().split()\n    x1 = int(x1) - 1\n    x2 = int(x2) - 1\n    y1 = int(y1) - 1\n    y2 = int(y2) - 1\n    s = m[x1][y1]\n    while x1 != x2:\n        x1 += 1\n        s += m[x1][y1]\n    while y1 != y2:\n        y1 += 1\n        s += m[x1][y1]\n    print(s)\n    test -= 1", "(i1, j1) = (1001, 1001)\ninf = [[0 for x in range(i1)] for y in range(j1)]\nfor i in range(1, 1000 + 1):\n    inf[i][1] = i * (i + 1) / 2\n    for j in range(2, 1000 + 1):\n        inf[i][j] = inf[i][j - 1] + (j - 1) + (i - 1)\nt = int(input())\nfor z in range(t):\n    sum = 0\n    (x1, y1, x2, y2) = tuple(map(int, input().split()))\n    i = x1\n    while i <= x2:\n        sum = sum + inf[i][y1]\n        i += 1\n    i = y1 + 1\n    while i <= y2:\n        sum = sum + inf[x2][i]\n        i += 1\n    print(int(sum))", "t = int(input())\nfor case in range(t):\n    (x1, y1, x2, y2) = map(lambda x: int(x) - 1, input().split())\n    pathSum = 0\n    for row in range(x1, x2 + 1):\n        x = row + y1 + 1\n        cur = x * (x - 1) // 2 + row + 1\n        pathSum += cur\n    for col in range(y1 + 1, y2 + 1):\n        x = x2 + col + 1\n        cur = x * (x - 1) // 2 + x2 + 1\n        pathSum += cur\n    print(pathSum)", "mx = 1003\nmat = [[0 for i in range(mx)] for j in range(mx)]\npre_r = [[0 for i in range(mx)] for j in range(mx)]\npre_c = [[0 for i in range(mx)] for j in range(mx)]\ninc_col = 1\ninc_row = 0\ncurr_col = 0\ncurr_row = 1\nfor i in range(1, mx):\n    inc_row = inc_col\n    curr_col += inc_col\n    curr_row = curr_col\n    inc_col += 1\n    for j in range(1, mx):\n        mat[i][j] = curr_row\n        pre_r[i][j] = pre_r[i][j - 1] + mat[i][j]\n        pre_c[i][j] = pre_c[i - 1][j] + mat[i][j]\n        curr_row += inc_row\n        inc_row += 1\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().strip().split())\n    if x1 == x2 and y1 == y2:\n        print(0)\n    else:\n        val1 = pre_c[x2][y1] - pre_c[x1][y1] + mat[x1][y1]\n        val2 = pre_r[x2][y2] - pre_r[x2][y1]\n        val = val2 + val1\n        print(val)", "mat = [[[] for i in range(1005)] for j in range(1005)]\nfor i in range(1, 1001):\n    mat[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        mat[i][j] = mat[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    s = 0\n    for i in range(x1, x2 + 1):\n        s += mat[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        s += mat[x2][j]\n    print(s)", "matrix = [[0 for i in range(2000)] for j in range(2000)]\nfor i in range(1, 2000):\n    matrix[i][1] = i * (i + 1) // 2\n    for j in range(2, 2000):\n        matrix[i][j] = matrix[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(int(input())):\n    s = 0\n    (x1, y1, x2, y2) = map(int, input().split())\n    for i in range(x1, x2 + 1):\n        s += matrix[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        s += matrix[x2][j]\n    print(s)", "t = int(input())\nfor k in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    a = 0\n    for i in range(x1):\n        a += i + 1\n    for j in range(y1 - 1):\n        a += x1 + j\n    a1 = a\n    b1 = x1 + y1\n    for i in range(x2 - x1):\n        a += b1 + i\n        a1 += a\n    b1 = x2 + y1 - 1\n    for i in range(y2 - y1):\n        a += b1 + i\n        a1 += a\n    print(a1)", "T = int(input())\nlst = [[0 for i in range(1000)] for j in range(1000)]\nlst[0][0] = 1\nm = 2\nfor i in range(1, 1000):\n    lst[i][0] = lst[i - 1][0] + m\n    m += 1\nfor i in range(1000):\n    k = i + 1\n    for j in range(1, 1000):\n        lst[i][j] = lst[i][j - 1] + k\n        k += 1\nwhile T > 0:\n    T = T - 1\n    (x1, y1, x2, y2) = map(int, input().split())\n    sum = 0\n    for i in range(x1 - 1, x2):\n        sum += lst[i][y1 - 1]\n    for i in range(y1, y2):\n        sum += lst[x2 - 1][i]\n    print(sum)", "matrix = [[0 for _ in range(1001)] for _ in range(1001)]\nfor i in range(1, 1001):\n    matrix[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        matrix[i][j] = matrix[i][j - 1] + (i - 1) + (j - 1)\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    sum_ = 0\n    for i in range(x1, x2 + 1):\n        sum_ += matrix[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        sum_ += matrix[x2][i]\n    print(sum_)", "l = [[0] * 1000 for i in range(1000)]\nfor i in range(0, 1000):\n    l[i][0] = (i + 1) * (i + 2) // 2\n    for j in range(1, 1000):\n        l[i][j] = l[i][j - 1] + j + i\nfor t in range(int(input())):\n    (r1, c1, r2, c2) = map(int, input().split())\n    ans = 0\n    for i in range(r1 - 1, r2 - 1):\n        ans += l[i][c1 - 1]\n    for j in range(c1 - 1, c2):\n        ans += l[r2 - 1][j]\n    print(ans)", "matrix = [[None for y in range(1005)] for x in range(1005)]\n\ndef genInfMat():\n    for i in range(1, 1001):\n        matrix[i][1] = i * (i + 1) // 2\n        for j in range(2, 1001):\n            matrix[i][j] = matrix[i][j - 1] + (j - 1) + (i - 1)\ngenInfMat()\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    score = 0\n    while x1 <= x2:\n        score += matrix[x1][y1]\n        x1 += 1\n    while y1 < y2:\n        y1 += 1\n        score += matrix[x2][y1]\n    print(score)", "l = [[0] * 1000 for i in range(1000)]\nfor i in range(0, 1000):\n    l[i][0] = (i + 1) * (i + 2) // 2\n    for j in range(1, 1000):\n        l[i][j] = l[i][j - 1] + j + i\nfor t in range(int(input())):\n    (r1, c1, r2, c2) = map(int, input().split())\n    ans = 0\n    for i in range(r1 - 1, r2 - 1):\n        ans += l[i][c1 - 1]\n    for j in range(c1 - 1, c2):\n        ans += l[r2 - 1][j]\n    print(ans)", "l = [[0] * 1001 for i in range(1001)]\nfor i in range(1, 1001):\n    l[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        l[i][j] = l[i][j - 1] + j - 1 + i - 1\nfor t in range(int(input())):\n    (r1, c1, r2, c2) = map(int, input().split())\n    ans = 0\n    for i in range(r1, r2):\n        ans += l[i][c1]\n    for j in range(c1, c2 + 1):\n        ans += l[r2][j]\n    print(ans)", "t = int(input())\narr = []\nmk = 2 * 1000\nfor i in range(mk + 1):\n    arr.append([0] * (mk + 1))\nn = 1\nfor k in range(2, 2 * mk + 1):\n    i = 1\n    while k - i > mk:\n        i += 1\n    while i < k and i < mk + 1:\n        arr[i][k - i] = n\n        i += 1\n        n += 1\nfor l in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += arr[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        ans += arr[x2][i]\n    print(ans)", "def matCalc():\n    m = []\n    r = []\n    c = []\n    n = 1\n    i = 0\n    j = 0\n    for k in range(0, 2000):\n        m.append([])\n        while j >= 0:\n            m[i].append(n)\n            j -= 1\n            i += 1\n            n += 1\n        j = k + 1\n        i = 0\n    return m\n\ndef printMaxSum(x1, y1, x2, y2, m):\n    val = 0\n    for i in range(x1 - 1, x2):\n        val += m[i][y1 - 1]\n    for j in range(y1, y2):\n        val += m[x2 - 1][j]\n    print(val)\nm = matCalc()\nnt = int(input())\nfor i in range(0, nt):\n    l = list(map(int, input().strip().split(' ')))\n    x1 = l[0]\n    y1 = l[1]\n    x2 = l[2]\n    y2 = l[3]\n    printMaxSum(x1, y1, x2, y2, m)", "T = int(input())\ndp = [[1] * 1000 for i in range(1000)]\nfor i in range(1, 1000):\n    dp[i][0] = dp[i - 1][0] + i + 1\nfor j in range(1, 1000):\n    dp[0][j] = dp[0][j - 1] + j\nfor i in range(1, 1000):\n    for j in range(1, 1000):\n        dp[i][j] = dp[i][j - 1] + i + j\nfor i in range(T):\n    a = [int(s) for s in input().split()]\n    (x_1, y_1, x_2, y_2) = (a[0], a[1], a[2], a[3])\n    ans = 0\n    for k in range(x_1 - 1, x_2):\n        ans += dp[k][y_1 - 1]\n    for k in range(y_1, y_2):\n        ans += dp[x_2 - 1][k]\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    x = 1\n    for i in range(1, b):\n        x = x + i\n    for i in range(1, a):\n        x = x + i + b\n    y = x\n    for i in range(a, c):\n        x = x + i + b\n        y += x\n    for i in range(b, d):\n        x = x + i + (c - 1)\n        y += x\n    print(y)", "l = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(0, 1001):\n    l[i][0] = (i + 1) * (i + 2) // 2\n    for j in range(1, 1001):\n        l[i][j] = l[i][j - 1] + j + i\nt = int(input())\nwhile t:\n    (a, b, c, d) = map(int, input().split())\n    s = 0\n    for i in range(a - 1, c):\n        s += l[i][b - 1]\n    for i in range(b, d):\n        s += l[c - 1][i]\n    print(s)\n    t -= 1", "l = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(0, 1001):\n    l[i][0] = (i + 1) * (i + 2) // 2\n    for j in range(1, 1001):\n        l[i][j] = l[i][j - 1] + j + i\nt = int(input())\nwhile t:\n    (a, b, c, d) = map(int, input().split())\n    s = 0\n    for i in range(a - 1, c):\n        s += l[i][b - 1]\n    for i in range(b, d):\n        s += l[c - 1][i]\n    print(s)\n    t -= 1", "matrix = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(0, 1001):\n    matrix[i][0] = (i + 1) * (i + 2) // 2\n    for j in range(1, 1001):\n        matrix[i][j] = matrix[i][j - 1] + j + i\nt = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split(' '))\n    summ = 0\n    for i in range(x1 - 1, x2):\n        summ += matrix[i][y1 - 1]\n    for j in range(y1, y2):\n        summ += matrix[x2 - 1][j]\n    print(summ)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = list(map(int, input().split()))\n    (v, i, j) = (0, 1, 1)\n    while i != x1 + 1:\n        v = v + i\n        i += 1\n    i -= 1\n    while j != y1:\n        v = v + i\n        i += 1\n        j += 1\n    s = v\n    while x1 != x2:\n        v = v + x1 + y1\n        s = s + v\n        x1 += 1\n    x1 -= 1\n    while y1 != y2:\n        v = v + x1 + y1\n        s = s + v\n        y1 += 1\n    print(s)", "def num(x, y):\n    n = (x + y - 2) * (x + y - 1)\n    n = n / 2\n    n = n + y\n    return int(n)\nt = int(input())\nwhile t > 0:\n    ans = 0\n    t = t - 1\n    (p, q, r, s) = input().split()\n    p = int(p)\n    q = int(q)\n    r = int(r)\n    s = int(s)\n    for i in range(p, r):\n        ans = ans + num(q, i)\n    for j in range(q, s + 1):\n        ans = ans + num(j, r)\n    print(ans)", "import numpy as np\na = np.zeros((1001, 1001))\nfor i in range(1, 1001):\n    a[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        a[i][j] = a[i][j - 1] + j - 1 + i - 1\nt = int(input())\nfor k in range(0, t):\n    (x, y, x_, y_) = map(int, input().split())\n    ans = 0\n    while x < x_:\n        ans += a[x][y]\n        x += 1\n    while y <= y_:\n        ans += a[x_][y]\n        y += 1\n    print(int(ans))", "import numpy as np\na = np.zeros((1001, 1001))\nfor i in range(1, 1001):\n    a[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        a[i][j] = a[i][j - 1] + j - 1 + i - 1\nt = int(input())\nfor k in range(0, t):\n    (x, y, x_, y_) = map(int, input().split())\n    ans = 0\n    while x < x_:\n        ans += a[x][y]\n        x += 1\n    while y <= y_:\n        ans += a[x_][y]\n        y += 1\n    print(int(ans))", "def array():\n    arr = [[0 for i in range(1001)] for j in range(1001)]\n    for i in range(1, 1001):\n        arr[i][1] = i * (i + 1) // 2\n        for j in range(2, 1001):\n            arr[i][j] = arr[i][j - 1] + (j - 1) + (i - 1)\n    return arr\na = array()\nt = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    sum = 0\n    for i in range(x1, x2 + 1):\n        sum += a[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        sum += a[x2][i]\n    print(sum)", "matrix = [[0 for i in range(1001)] for j in range(1001)]\nfor i in range(1, 1001):\n    matrix[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        matrix[i][j] = matrix[i][j - 1] + j - 1 + i - 1\nt = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split(' '))\n    summ = 0\n    for i in range(x1, x2 + 1):\n        summ += matrix[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        summ += matrix[x2][j]\n    print(summ)", "def val(x, y):\n    if y > 1:\n        return x * (x + 1) // 2 + (y - 1) * x + (y - 1) * (y - 2) // 2\n    else:\n        return x * (x + 1) // 2\nt = int(input())\nfor k in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = 0\n    if x1 == x2 and y1 != y2:\n        for i in range(y1, y2 + 1):\n            ans += val(x1, i)\n    elif y1 == y2 and x1 != x2:\n        for i in range(x1, x2 + 1):\n            ans += val(i, y1)\n    else:\n        for i in range(x1, x2 + 1):\n            ans += val(i, y1)\n        for i in range(y1 + 1, y2 + 1):\n            ans += val(x2, i)\n    print(ans)", "lst = [[0 for j in range(1001)] for i in range(1001)]\nfor i in range(1, 1001):\n    lst[i][1] = int(i * (i + 1) / 2)\n    for j in range(2, 1001):\n        lst[i][j] = int(lst[i][j - 1] + (j - 1) + (i - 1))\nfor t in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    m = x2 + y2\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += lst[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        ans += lst[x2][i]\n    print(ans)", "n = 1000\nL = []\n(c, d) = (1, 1)\nfor i in range(n):\n    (a, b) = (c, d)\n    L.append([])\n    for j in range(n):\n        L[i].append(a)\n        a += b\n        b += 1\n    d += 1\n    c = c + i + 2\nfor i in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    s = 0\n    for i in range(x1 - 1, x2):\n        s += L[i][y1 - 1]\n    for i in range(y1, y2):\n        s += L[x2 - 1][i]\n    print(s)", "def val(x, y):\n    s = x + y\n    return x + (s - 1) * (s - 2) // 2\nT = int(input())\nfor _ in range(T):\n    (a, b, p, q) = map(int, input().split())\n    res = 0\n    for x in range(a, p + 1):\n        res += val(x, b)\n    for y in range(b + 1, q + 1):\n        res += val(p, y)\n    print(res)", "try:\n    li = []\n    for i in range(1, 1001):\n        li.append([int(i * (i + 1) / 2)])\n    for i in range(1000):\n        prev = li[i][0]\n        for j in range(2, 1001):\n            a = prev + j - 1 + i\n            li[i].append(a)\n            prev = a\n    for _ in range(int(input())):\n        (x1, y1, x2, y2) = map(int, input().split())\n        ans = 0\n        for i in range(x1 - 1, x2):\n            ans = ans + li[i][y1 - 1]\n        for i in range(y1, y2):\n            ans = ans + li[x2 - 1][i]\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    m = list(map(int, input().split()))\n    x1 = m[0]\n    y1 = m[1]\n    x2 = m[2]\n    y2 = m[3]\n    s = 1\n    for i in range(1, x1):\n        s = s + i + 1\n    for i in range(x1, x1 + y1 - 1):\n        s = s + i\n    sum = s\n    for i in range(x1 + y1, x2 + y1):\n        s = s + i\n        sum = sum + s\n    for i in range(x2 + y1 - 1, x2 + y2 - 1):\n        s = s + i\n        sum = sum + s\n    print(sum)", "from copy import deepcopy\nMAX = 1001\nmat = [[0 for j in range(MAX + 1)] for i in range(MAX + 1)]\npre_r = deepcopy(mat)\npre_c = deepcopy(mat)\n\ndef pre_compute():\n    for r in range(1, MAX + 1):\n        mat[r][1] = r * (r + 1) // 2\n        for c in range(2, MAX + 1):\n            mat[r][c] = mat[r][c - 1] + r + c - 2\n    for r in range(1, MAX + 1):\n        pre_r[r][1] = mat[r][1]\n        for c in range(2, MAX + 1):\n            pre_r[r][c] = pre_r[r][c - 1] + mat[r][c]\n    for c in range(1, MAX + 1):\n        pre_c[1][c] = mat[1][c]\n        for r in range(2, MAX + 1):\n            pre_c[r][c] = pre_c[r - 1][c] + mat[r][c]\n\ndef solve():\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = pre_c[x2][y1] - pre_c[x1 - 1][y1] + pre_r[x2][y2] - pre_r[x2][y1]\n    print(ans)\npre_compute()\nfor tc in range(int(input())):\n    solve()", "t = int(input())\nb = []\nfor i in range(0, 1000):\n    s = (i + 1) * (i + 2) // 2\n    k = []\n    k.append(s)\n    for j in range(1, 1000):\n        s = k[j - 1] + j + i\n        k.append(s)\n    b.append(k)\nwhile t > 0:\n    t = t - 1\n    a = [int(x) for x in input().split()]\n    s = 0\n    for i in range(a[0] - 1, a[2]):\n        s = s + b[i][a[1] - 1]\n    for i in range(a[1], a[3]):\n        s = s + b[a[2] - 1][i]\n    print(s)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    v = 1\n    for i in range(1, y1):\n        v += i\n    for i in range(1, x1):\n        v += i + y1\n    u = v\n    for i in range(x1, x2):\n        v += i + y1\n        u += v\n    for i in range(y1 - 1, y2 - 1):\n        v += i + x2\n        u += v\n    print(u)", "def f(x, y):\n    return (x + y) * (x + y - 1) // 2 - y + 1\nn = int(input())\nfor j in range(n):\n    (y, x, y2, x2) = map(int, input().strip().split())\n    s = f(y, x)\n    while x != x2 or y != y2:\n        if y != y2:\n            y += 1\n        else:\n            x += 1\n        s += f(y, x)\n    print(s)\n    s = 0", "def f(x, y):\n    return (x + y) * (x + y - 1) // 2 - y + 1\n(n, l) = (int(input()), [])\nfor j in range(n):\n    (y, x, y2, x2) = map(int, input().strip().split())\n    s = f(y, x)\n    while x != x2 or y != y2:\n        if y != y2:\n            y += 1\n        else:\n            x += 1\n        s += f(y, x)\n    l.append(s)\n    s = 0\nfor i in l:\n    print(int(i))", "(n, l) = (int(input()), [])\nfor j in range(n):\n    (y, x, y2, x2) = map(int, input().strip().split())\n    s = ((x + y) ** 2 - 3 * x - y) / 2 + 1\n    while x != x2 or y != y2:\n        if y != y2:\n            y += 1\n        else:\n            x += 1\n        s += ((x + y) ** 2 - 3 * x - y) / 2 + 1\n    l.append(s)\n    s = 0\nfor i in l:\n    print(int(i))", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef im():\n    return map(int, input().split())\n\ndef ii():\n    return int(input())\n\ndef il():\n    return list(map(int, input().split()))\n\ndef ins():\n    return input()[:-1]\nlis = [[0] * 1005 for _ in range(1005)]\nfor i in range(1, 1001):\n    lis[i][1] = lis[i - 1][1] + i\n    for j in range(2, 1001):\n        lis[i][j] = lis[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(ii()):\n    (x1, y1, x2, y2) = im()\n    ans = 0\n    while x1 < x2:\n        ans += lis[x1][y1]\n        x1 += 1\n    while y1 < y2:\n        ans += lis[x1][y1]\n        y1 += 1\n    ans += lis[x2][y2]\n    print(ans)", "import math\nrows = 1000\ncols = 1000\narr = [[0 for c in range(cols + 1)] for r in range(rows + 1)]\nfor i in range(1, 1001):\n    arr[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        arr[i][j] = arr[i][j - 1] + (j - 1) + (i - 1)\nfor _ in range(int(input())):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    sum = 0\n    for i in range(r1, r2 + 1):\n        sum += arr[i][c1]\n    for i in range(c1 + 1, c2 + 1):\n        sum += arr[r2][i]\n    print(sum)", "import math\nrows = 1000\ncols = 1000\narr = [[0 for c in range(cols + 1)] for r in range(rows + 1)]\nfor i in range(1, 1001):\n    arr[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        arr[i][j] = arr[i][j - 1] + (j - 1) + (i - 1)\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    col_sum = 0\n    for r in range(r1, r2 + 1):\n        col_sum += arr[r][c1]\n    row_sum = 0\n    for c in range(c1 + 1, c2 + 1):\n        row_sum += arr[r2][c]\n    print(col_sum + row_sum)", "import math\nrows = 1000\ncols = 1000\narr = [[0 for c in range(cols + 1)] for r in range(rows + 1)]\nnum = 1\nfor r in range(1, rows + 1):\n    diff = r - 1\n    for c in range(1, cols + 1):\n        if c == 1:\n            arr[r][c] = arr[r - 1][c] + r\n        else:\n            arr[r][c] = arr[r][c - 1] + diff\n        diff += 1\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    (r1, c1, r2, c2) = list(map(int, input().split()))\n    col_sum = 0\n    for r in range(r1, r2 + 1):\n        col_sum += arr[r][c1]\n    row_sum = 0\n    for c in range(c1 + 1, c2 + 1):\n        row_sum += arr[r2][c]\n    print(col_sum + row_sum)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    s = 1\n    for i in range(1, x1):\n        s = s + i + 1\n    for i in range(x1, x1 + y1 - 1):\n        s = s + i\n    summ = s\n    for i in range(x1 + y1, x2 + y1):\n        s = s + i\n        summ += s\n    for i in range(x2 + y1 - 1, x2 + y2 - 1):\n        s = s + i\n        summ += s\n    print(summ)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().strip().split())\n    y = [1]\n    for i in range(y1 - 1):\n        y.append(y[i] + i + 1)\n    x = [y[-1]]\n    for i in range(1, x2):\n        x.append(x[i - 1] + y1 + i)\n    bottom = sum(x[x1 - 1:x2])\n    y_f = [1]\n    for i in range(1, x2):\n        y_f.append(y_f[i - 1] + i + 1)\n    x_f = [y_f[-1]]\n    for i in range(1, y2):\n        x_f.append(x_f[i - 1] + x2 - 1 + i)\n    right = sum(x_f[y1 - 1:y2])\n    right_f = right - x[-1]\n    print(right_f + bottom)", "ncases = int(input())\nq = []\nwhile ncases:\n    q.append(list(map(lambda x: int(x), input().split())))\n    ncases -= 1\nr = 1001\nmatrix = [[None for _ in range(r)] for i in range(r)]\nmatrix[0][0] = 1\ncnt = 1\nfor i in range(1, r):\n    matrix[0][i] = matrix[0][i - 1] + cnt\n    cnt += 1\ncnt = 2\nfor i in range(1, r):\n    matrix[i][0] = matrix[i - 1][0] + cnt\n    cnt += 1\n    cnt1 = i + 2\n    for j in range(1, r):\n        matrix[i][j] = matrix[i - 1][j] + cnt1\n        cnt1 += 1\n\ndef solver(li):\n    (x1, y1, x2, y2) = li\n    (x1, x2, y1, y2) = (x1 - 1, x2 - 1, y1 - 1, y2 - 1)\n    s = 0\n    for i in range(min(y1, y2), max(y1, y2) + 1):\n        s += matrix[max(x1, x2)][i]\n    for i in range(min(x1, x2), max(x1, x2)):\n        s += matrix[i][min(y1, y2)]\n    return s\nfor li in q:\n    print(solver(li))", "grid = [1]\nfu = [i for i in range(1, 1001)]\ngrid += fu\nfinal = []\nfinal.append(grid)\nd = [1] * 1000\nfor i in range(2, 1002):\n    c = [i] + d\n    final.append(c)\nfor i in range(1001):\n    for j in range(1, 1001):\n        final[i][j] += final[i][j - 1]\nfor i in range(1001):\n    for j in range(1, 1001):\n        final[j][i] += final[j - 1][i]\nt = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    c = 0\n    for i in range(x1, x2 + 1):\n        c += final[i - 1][y1 - 1]\n    for i in range(y1, y2 + 1):\n        c += final[x2 - 1][i - 1]\n    c -= final[x2 - 1][y1 - 1]\n    print(c)", "def f(x, y):\n    return (x + y) * (x + y - 1) // 2 - y + 1\nT = int(input())\nfor n1 in range(T):\n    (x1, y1, x2, y2) = [int(i) for i in input().split(' ')]\n    s = 0\n    for x in range(x1, x2):\n        s += f(x, y1)\n    for y in range(y1, y2 + 1):\n        s += f(x2, y)\n    print(s)", "def value(x, y):\n    return x * (x + 1) // 2 + (2 * x + y - 2) * (y - 1) // 2\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    sum = 0\n    for x in range(x1, x2 + 1):\n        sum += value(x, y1)\n    for y in range(y1 + 1, y2 + 1):\n        sum += value(x2, y)\n    print(sum)", "arr = []\nc = 1\nfor i in range(1, 1001):\n    arr.append(c)\n    c += i\nmatrix = []\nmatrix.append(arr)\nk = 2\nfor i in range(2, 1001):\n    newarr = []\n    c = k\n    for j in matrix[-1]:\n        newarr.append(j + c)\n        c += 1\n    matrix.append(newarr)\n    k += 1\nfor t in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = 0\n    for i in range(x1, x2 + 1):\n        ans += matrix[i - 1][y1 - 1]\n    for i in range(y1 + 1, y2 + 1):\n        ans += matrix[x2 - 1][i - 1]\n    print(ans)", "a = []\ns = 1\ni_s = 1\nr = 2\nc = 1\ni_c = 1\nc_c = 1\nfor i in range(1000):\n    v = []\n    for j in range(1000):\n        v.append(s)\n        s += c\n        c += c_c\n    a.append(v)\n    s = i_s + r\n    i_s = s\n    r += 1\n    c = i_c + 1\n    i_c = c\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    su = sum(a[x2 - 1][y1 - 1:y2])\n    for i in range(x1 - 1, x2 - 1):\n        su += a[i][y1 - 1]\n    print(su)", "arr = [[0 for i in range(1000)] for j in range(1000)]\nstart = 0\nfor i in range(len(arr)):\n    start += i + 1\n    inc = i\n    for j in range(len(arr)):\n        if j == 0:\n            arr[i][j] = start\n        else:\n            arr[i][j] = arr[i][j - 1] + inc\n        inc += 1\nfor _ in range(int(input())):\n    l = input().split()\n    (x1, y1, x2, y2) = (int(l[0]), int(l[1]), int(l[2]), int(l[3]))\n    sums = 0\n    for i in range(x1, x2 + 1):\n        sums += arr[i - 1][y1 - 1]\n    for i in range(y1 + 1, y2 + 1):\n        sums += arr[x2 - 1][i - 1]\n    print(sums)", "def val(r, c):\n    s = c + r - 2\n    return int(s * (s + 1) / 2 + r)\nT = int(input())\nfor i in range(T):\n    (r1, c1, r2, c2) = map(int, input().split())\n    path = 0\n    for r in range(r1, r2 + 1):\n        path += val(r, c1)\n    for c in range(c1 + 1, c2 + 1):\n        path += val(r2, c)\n    print(path)", "rows = 1000\ncols = 1000\ninf = [[0 for c in range(cols + 1)] for r in range(rows + 1)]\nfor i in range(1, 1001):\n    inf[i][1] = int(i * (i + 1) / 2)\n    for j in range(2, 1001):\n        inf[i][j] = inf[i][j - 1] + j - 1 + i - 1\nfor t in range(int(input())):\n    sum = 0\n    (x1, y1, x2, y2) = map(int, input().split())\n    for i in range(x1, x2 + 1):\n        sum = sum + inf[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        sum = sum + inf[x2][j]\n    print(sum)", "t = int(input())\narr = [[0 for _ in range(1001)] for _ in range(1001)]\nfor i in range(1, 1001):\n    arr[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        arr[i][j] = arr[i][j - 1] + i + j - 2\nfor i in range(t):\n    (r1, c1, r2, c2) = list(map(int, input().split(' ')))\n    s = 0\n    for i in range(r1, r2 + 1):\n        s = s + arr[i][c1]\n    for j in range(c1 + 1, c2 + 1):\n        s = s + arr[r2][j]\n    print(s)", "m = [[0 for _ in range(1001)] for _ in range(1001)]\nfor i in range(1, 1001):\n    m[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        m[i][j] = m[i][j - 1] + j + i - 2\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    sum = 0\n    for i in range(x1, x2 + 1):\n        sum += m[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        sum += m[x2][i]\n    print(sum)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    x1 = l[0]\n    y1 = l[1]\n    x2 = l[2]\n    y2 = l[3]\n    temp1 = x1\n    temp2 = y1\n    tempval = x1 * (x1 + 1) // 2\n    news = (y1 - 1) * (2 * x1 + y1 - 2) // 2\n    val = tempval + news\n    s = val\n    while temp1 < x2:\n        res = val + temp1 + temp2\n        s = s + res\n        temp1 = temp1 + 1\n        val = res\n    while temp2 < y2:\n        res = val + temp1 + temp2 - 1\n        s = s + res\n        temp2 += 1\n        val = res\n    print(s)", "arr = [[0 for x in range(1001)] for y in range(1001)]\nfor i in range(1, 1001):\n    arr[i][1] = i * (i + 1) // 2\n    for j in range(2, 1001):\n        arr[i][j] = arr[i][j - 1] + (j - 1) + (i - 1)\nfor T in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    total = 0\n    for i in range(x1, x2 + 1):\n        total += arr[i][y1]\n    for j in range(y1 + 1, y2 + 1):\n        total += arr[x2][j]\n    print(total)", "t = int(input())\nfor k in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    x1 = int(x1) - 1\n    y1 = int(y1) - 1\n    x2 = int(x2) - 1\n    y2 = int(y2) - 1\n    path = 1\n    x = 0\n    y = 0\n    while x < x1:\n        path += x + y + 2\n        x += 1\n    while y < y1:\n        path += y + x1 + 1\n        y += 1\n    temp = path\n    while x1 < x2:\n        temp += x1 + y1 + 2\n        path += temp\n        x1 += 1\n    while y1 < y2:\n        temp += y1 + x2 + 1\n        path += temp\n        y1 += 1\n    print(path)", "t = int(input())\n\ndef formula(x, y):\n    return (y - 1) * (2 * x + (y - 2)) // 2 + x * (x + 1) // 2\nfor i in range(t):\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    if x1 > x2 or (x1 == x2 and y1 > y2):\n        (x1, x2) = (x2, x1)\n        (y1, y2) = (y2, y1)\n    s = 0\n    while x1 <= x2:\n        tmp = formula(x1, y1)\n        s += tmp\n        x1 += 1\n    x1 -= 1\n    y1 += 1\n    while y1 <= y2:\n        tmp = formula(x1, y1)\n        s += tmp\n        y1 += 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    (x, y, a, b) = map(int, input().split())\n    e = []\n    s = 0\n    w = 0\n    s = int(x * (x + 1) / 2)\n    for j in range(2, y + 1):\n        if j == y:\n            w = s\n        s = s + j - 1 + x - 1\n    if w == 0:\n        e.append(s)\n        for j in range(x, a):\n            s = (j + 1) * (j + 2) // 2\n            e.append(s)\n    else:\n        w = s - w + 2\n        e.append(s)\n        for j in range(x, a):\n            s += w\n            e.append(s)\n            w += 1\n    for j in range(y + 1, b + 1):\n        s += j - 1 + a - 1\n        e.append(s)\n    print(sum(e))", "def value_at_xy(x, y):\n    a = b = V = 1\n    diff = 2\n    while b != y:\n        V += diff\n        diff += 1\n        b += 1\n    diff -= 1\n    while a != x:\n        V += diff\n        diff += 1\n        a += 1\n    return V\n\ndef path_value(x1, y1, x2, y2, V):\n    ret = V\n    diff = x1 + y1\n    while y1 != y2:\n        V += diff\n        ret += V\n        diff += 1\n        y1 += 1\n    diff -= 1\n    while x1 != x2:\n        V += diff\n        ret += V\n        diff += 1\n        x1 += 1\n    return ret\nT = int(input())\nfor testcases in range(T):\n    [y1, x1, y2, x2] = [int(x) for x in input().split()]\n    S = value_at_xy(x1, y1)\n    print(path_value(x1, y1, x2, y2, S))", "mat = [[0] * 1004 for _ in range(1004)]\nfor i in range(1, 1004):\n    mat[i][1] = i * (i + 1) // 2\n    for j in range(2, 1004):\n        mat[i][j] = mat[i][j - 1] + i + j - 2\n\ndef sol(x1, y1, x2, y2):\n    s = 0\n    for i in range(x1, x2 + 1):\n        s += mat[i][y1]\n    for i in range(y1 + 1, y2 + 1):\n        s += mat[x2][i]\n    return s\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print(sol(x1, y1, x2, y2))", "t = int(input())\nfor _ in range(t):\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    y = arr[1]\n    x1 = arr[2]\n    y1 = arr[3]\n    n = 0\n    for i in range(0, x):\n        n += i + 1\n    for i in range(0, y - 1):\n        n += x + i\n    s = n\n    d = x + y\n    for i in range(0, x1 - x):\n        n += d + i\n        s += n\n    d = x1 + y - 1\n    for i in range(0, y1 - y):\n        n += d + i\n        s += n\n    print(s)"]