["for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "def c(M, C, R, X):\n    for i in range(R - X + 1, R):\n        for j in range(C - X + 1, C):\n            if X == 2:\n                if sum([sum([M[p][q] * (-1) ** (R + C - p - q) for q in range(C)]) for p in range(R)]) != 0:\n                    print('No')\n                    break\n            elif sum([sum([M[p][q] - M[p][q + j - C + X] - M[p + i - R + X][q] + M[p + i - R + X][q + j - C + X] for q in range(C % X, j, X)]) for p in range(R % X, i, X)]) != 0:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')\nT = int(input())\nfor n in range(T):\n    (R, C, X) = [int(j) for j in input().split(' ')]\n    A = []\n    B = list(A)\n    for i in range(R):\n        A.append([int(j) for j in input().split(' ')])\n    for i in range(R):\n        B.append([int(j) for j in input().split(' ')])\n    M = [[A[i][j] - B[i][j] for j in range(C)] for i in range(R)]\n    c(M, C, R, X)", "t = int(input())\nfor _ in range(t):\n    (R, C, X) = map(int, input().split())\n    A = []\n    for i in range(R):\n        A.append(list(map(int, input().split())))\n    B = []\n    for i in range(R):\n        B.append(list(map(int, input().split())))\n    diff = []\n    for i in range(R):\n        diff.append([])\n        for j in range(C):\n            diff[i].append(B[i][j] - A[i][j])\n    group_sums = []\n    for i in range(X):\n        group_sums.append([0] * X)\n    for i in range(R):\n        for j in range(C):\n            group_sums[i % X][j % X] += diff[i][j]\n    for i in range(X):\n        integer = group_sums[i][0]\n        for j in range(X):\n            group_sums[i][j] -= integer\n    for j in range(1, X):\n        integer = group_sums[0][j]\n        for i in range(X):\n            group_sums[i][j] -= integer\n    for i in group_sums:\n        for j in i:\n            if j != 0:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    (R, C, X) = map(int, input().split())\n    A = []\n    for i in range(R):\n        A.append(list(map(int, input().split())))\n    B = []\n    for i in range(R):\n        B.append(list(map(int, input().split())))\n    diff = []\n    for i in range(R):\n        diff.append([])\n        for j in range(C):\n            diff[i].append(B[i][j] - A[i][j])\n    group_sums = []\n    for i in range(X):\n        group_sums.append([0] * X)\n    for i in range(R):\n        for j in range(C):\n            group_sums[i % X][j % X] += diff[i][j]\n    for i in range(X):\n        integer = group_sums[i][0]\n        for j in range(X):\n            group_sums[i][j] -= integer\n    for j in range(1, X):\n        integer = group_sums[0][j]\n        for i in range(X):\n            group_sums[i][j] -= integer\n    for i in group_sums:\n        for j in i:\n            if j != 0:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    (r, c, X) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    crr = []\n    for i in range(X):\n        crr.append([0 for i in range(X)])\n    for i in range(r):\n        for j in range(c):\n            crr[i % X][j % X] += a[i][j]\n            crr[i % X][j % X] -= b[i][j]\n    for i in range(X):\n        tmp = crr[i][0]\n        for j in range(X):\n            crr[i][j] -= tmp\n    for i in range(X):\n        tmp = crr[0][i]\n        for j in range(X):\n            crr[j][i] -= tmp\n    ans = True\n    for i in range(X):\n        for j in range(X):\n            if crr[i][j] != 0:\n                ans = False\n                break\n    if ans:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "import numpy as np\nt = int(input())\nfor test in range(t):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    A = np.array(a)\n    B = np.array(b)\n    d = np.array(A) - np.array(B)\n    row = np.ones((1, x))\n    for i in range(0, r):\n        for j in range(0, c - x + 1):\n            d[i, j:x + j] = d[i, j:x + j] - d[i, j] * row\n    for j in range(c - x + 1, c):\n        for i in range(0, r - x + 1):\n            d[i:i + x, j] = d[i:i + x, j] - d[i, j] * row\n    if np.max(np.max(d)) == 0 and np.min(np.min(d)) == 0:\n        print('Yes')\n    else:\n        print('No')", "def solution(a, b, r, c, x):\n    for i in range(r):\n        dev = [0]\n        sku = []\n        for j in range(c - x + 1):\n            dev.append(a[i][j] - b[i][j])\n            sku.append(a[i][j] - b[i][j] - dev[-2])\n            if len(dev) == x:\n                dev.pop(0)\n            if len(sku) > x:\n                sku[-1] += sku[-x - 1]\n            if a[i][j] != b[i][j]:\n                a[i][j] = b[i][j]\n        sku = sku[-x:]\n        ded = dev.pop()\n        for k in range(c - x + 1, c):\n            if k - x >= 0:\n                ded = ded - sku.pop(0)\n            a[i][k] -= ded\n    for i in range(c - x + 1, c):\n        dev = [0]\n        sku = []\n        for j in range(r - x + 1):\n            dev.append(a[j][i] - b[j][i])\n            sku.append(a[j][i] - b[j][i] - dev[-2])\n            if len(dev) == x:\n                dev.pop(0)\n            if len(sku) > x:\n                sku[-1] += sku[-x - 1]\n            if a[j][i] != b[j][i]:\n                a[j][i] = b[j][i]\n        sku = sku[-x:]\n        ded = dev.pop()\n        for k in range(r - x + 1, r):\n            if k - x >= 0:\n                ded = ded - sku.pop(0)\n            a[k][i] -= ded\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if a[i][j] != b[i][j]:\n                return 'No'\n    return 'Yes'\n\ndef main():\n    for cases in range(int(input())):\n        (r, c, x) = map(int, input().split())\n        a = list()\n        b = list()\n        for i in range(r):\n            a.append([int(x) for x in input().split()])\n        for i in range(r):\n            b.append([int(x) for x in input().split()])\n        ans = solution(a, b, r, c, x)\n        print(ans)\nmain()", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    for _ in range(r):\n        a.append(list(map(int, input().split())))\n    for _ in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] = b[i][j] - a[i][j]\n    for i in range(c):\n        for j in range(r - x + 1):\n            t = (r - j) % x\n            if t != 0:\n                a[r - t][i] = a[r - t][i] + a[j][i]\n            else:\n                for k in range(1, x):\n                    a[r - k][i] = a[r - k][i] - a[j][i]\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1):\n            t = (c - j) % x\n            if t != 0:\n                a[i][c - t] = a[i][c - t] + a[i][j]\n            else:\n                for k in range(1, x):\n                    a[i][c - k] = a[i][c - k] - a[i][j]\n    temp = 0\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if a[i][j] != 0:\n                temp = 1\n                break\n        if temp == 1:\n            break\n    if temp == 0:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    arr = [[0 for z in range(c)] for y in range(r)]\n    for z in range(r):\n        a.append(list(map(int, input().split())))\n    for y in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            arr[i][j] = b[i][j] - a[i][j]\n    for j in range(c):\n        t1 = 0\n        t2 = r - x\n        while t2 >= 0:\n            t1 += arr[t2][j]\n            t2 -= x\n        i = r - 1\n        while i > r - x:\n            t3 = i - x\n            while t3 >= 0:\n                arr[i][j] += arr[t3][j]\n                t3 -= x\n            arr[i][j] -= t1\n            i -= 1\n    i = r - 1\n    while i > r - x:\n        t1 = 0\n        t2 = c - x\n        while t2 >= 0:\n            t1 += arr[i][t2]\n            t2 -= x\n        j = c - 1\n        while j > c - x:\n            t3 = j - x\n            while t3 >= 0:\n                arr[i][j] += arr[i][t3]\n                t3 -= x\n            arr[i][j] -= t1\n            j -= 1\n        i -= 1\n    flag = 0\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if arr[i][j] != 0:\n                flag = 1\n                break\n    if not flag:\n        print('Yes')\n    else:\n        print('No')", "T = int(input())\nfor _ in range(T):\n    (r, c, x) = map(int, input().split())\n    A = []\n    B = []\n    for i in range(r):\n        A.append(list(map(int, input().split())))\n    for i in range(r):\n        B.append(list(map(int, input().split())))\n    diff = []\n    for i in range(r):\n        diff.append([])\n        for j in range(c):\n            diff[i].append(B[i][j] - A[i][j])\n    for j in range(c):\n        to_add = 0\n        temp_idx = r - x\n        while temp_idx >= 0:\n            to_add += diff[temp_idx][j]\n            temp_idx -= x\n        for i in range(r - 1, r - x, -1):\n            temp = i - x\n            while temp >= 0:\n                diff[i][j] += diff[temp][j]\n                temp = temp - x\n            diff[i][j] -= to_add\n    for i in range(r - 1, r - x, -1):\n        to_add = 0\n        temp_idx = c - x\n        while temp_idx >= 0:\n            to_add += diff[i][temp_idx]\n            temp_idx = temp_idx - x\n        for j in range(c - 1, c - x, -1):\n            temp = j - x\n            while temp >= 0:\n                diff[i][j] += diff[i][temp]\n                temp = temp - x\n            diff[i][j] -= to_add\n    valid = True\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if diff[i][j] != 0:\n                valid = False\n                break\n    if valid:\n        print('Yes')\n    else:\n        print('No')", "import sys\nimport numpy as np\n\ndef getsums(x, k):\n    return np.array([[np.sum(x[i::k, j::k]) for i in range(k)] for j in range(k)])\n\ndef checkmatrix(x, k):\n    z = getsums(x, k)\n    for i in range(k - 1):\n        for j in range(k - 1):\n            if z[i, j] - z[i, -1] - z[-1, j] + z[-1, -1] != 0:\n                return False\n    return True\nff = sys.stdin\nt = int(ff.readline()[:-1])\nfor i in range(t):\n    (r, c, x) = map(int, ff.readline().split())\n    aa = np.array([list(map(int, ff.readline().split())) for j in range(r)])\n    aa -= np.array([list(map(int, ff.readline().split())) for j in range(r)])\n    if checkmatrix(aa, x):\n        print('Yes')\n    else:\n        print('No')", "def print_mat(C: list):\n    for i in range(n):\n        for j in range(m):\n            print(C[i][j], end=' ')\n        print()\n\ndef solve():\n    (n, m, k) = map(int, input().split())\n    (A, B, C) = (list(), list(), list())\n    (A1, B1) = (0, 0)\n    C = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        l = list(map(int, input().split()))\n        A.append(l)\n        A1 += sum(l)\n    for i in range(n):\n        l = list(map(int, input().split()))\n        B.append(l)\n        B1 += sum(l)\n    for i in range(n):\n        for j in range(m):\n            C[i][j] = B[i][j] - A[i][j]\n    for j in range(m):\n        X = 0\n        for index in range(n - k, -1, -k):\n            X += C[index][j]\n        for i in range(n - 1, n - k, -1):\n            for index in range(i - k, -1, -k):\n                C[i][j] += C[index][j]\n            C[i][j] -= X\n    for i in range(n - 1, n - k, -1):\n        X = 0\n        for index in range(m - k, -1, -k):\n            X += C[i][index]\n        for j in range(m - 1, m - k, -1):\n            for index in range(j - k, -1, -k):\n                C[i][j] += C[i][index]\n            C[i][j] -= X\n    possible = True\n    for i in range(n - 1, n - k, -1):\n        for j in range(m - 1, m - k, -1):\n            possible = possible and C[i][j] == 0\n    if possible:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve(A, B, r, c, x):\n    for i in range(r):\n        for j in range(c):\n            A[i][j] -= B[i][j]\n    CD = [[0] * (x + 1) for i in range(c)]\n    for i in range(r):\n        for j in range(c):\n            CD[j][x] -= CD[j][i % x]\n            A[i][j] -= CD[j][x]\n            CD[j][i % x] = 0\n            if i < r - x and A[i][j] != 0:\n                CD[j][i % x] = A[i][j]\n                CD[j][x] += A[i][j]\n    RD = [[0] * (x + 1) for i in range(x)]\n    for j in range(c):\n        for i in range(r - x, r):\n            RD[i - (r - x)][x] -= RD[i - (r - x)][j % x]\n            A[i][j] -= RD[i - (r - x)][x]\n            RD[i - (r - x)][j % x] = 0\n            if j < c - x and A[i][j] != 0:\n                RD[i - (r - x)][j % x] = A[i][j]\n                RD[i - (r - x)][x] += A[i][j]\n    for j in range(c - x, c):\n        d = A[r - x][j]\n        for i in range(r - x, r):\n            A[i][j] -= d\n    for i in range(r - x + 1, r):\n        s = set([A[i][j] for j in range(c - x, c)])\n        if len(s) > 1:\n            return False\n    return True\nt = int(input())\nfor tc in range(t):\n    (r, c, x) = map(int, input().split())\n    A = []\n    for i in range(r):\n        A.append(list(map(int, input().split())))\n    B = []\n    for i in range(r):\n        B.append(list(map(int, input().split())))\n    result = solve(A, B, r, c, x)\n    print('Yes' if result else 'No')", "def solve(r, c, x, A, B):\n    for i in range(r):\n        for j in range(c - x + 1):\n            diff = B[i][j] - A[i][j]\n            if diff != 0:\n                for k in range(x):\n                    A[i][j + k] += diff\n    for i in range(c - x + 1, c):\n        for j in range(r - x + 1):\n            diff = B[j][i] - A[j][i]\n            if diff != 0:\n                for k in range(x):\n                    A[j + k][i] += diff\n    for i in range(c - x + 1, c):\n        for j in range(r - x + 1, r):\n            if A[j][i] != B[j][i]:\n                return 'No'\n    return 'Yes'\n\ndef fun(r, c, x, A, B):\n    diff = 0\n    for i in range(r):\n        for j in range(c):\n            if A[i][j] != B[i][j]:\n                diff += 1\n    if diff >= 1000000:\n        return 'Yes'\n    else:\n        return 'No'\nt = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    A = []\n    B = []\n    for i in range(r):\n        A.append(0)\n        A[i] = [int(x) for x in input().split()]\n    for i in range(r):\n        B.append(0)\n        B[i] = [int(x) for x in input().split()]\n    if r != 1000 or c != 1000 or x < 900:\n        print(solve(r, c, x, A, B))\n    else:\n        print(fun(r, c, x, A, B))", "tc = int(input())\n\ndef process_rows(a, b, r, c, x):\n    ret_false = False\n    for col in range(c):\n        q = []\n        diff = 0\n        for row in range(r - x + 1):\n            if row >= x:\n                diff -= q.pop(0)\n            a[row][col] += diff\n            q.append(b[row][col] - a[row][col])\n            diff += b[row][col] - a[row][col]\n            a[row][col] += b[row][col] - a[row][col]\n        for i in range(r - x + 1, r):\n            if i >= x:\n                diff -= q.pop(0)\n            a[i][col] += diff\n            if a[i][col] != b[i][col]:\n                ret_false = True\n    return False if ret_false else True\n\ndef process_cols(a, b, r, c, x):\n    ret_false = False\n    for row in range(r):\n        q = []\n        diff = 0\n        for col in range(c - x + 1):\n            if col >= x:\n                diff -= q.pop(0)\n            a[row][col] += diff\n            q.append(b[row][col] - a[row][col])\n            diff += b[row][col] - a[row][col]\n            a[row][col] += b[row][col] - a[row][col]\n        for i in range(c - x + 1, c):\n            if i >= x:\n                diff -= q.pop(0)\n            a[row][i] += diff\n            if a[row][i] != b[row][i]:\n                ret_false = True\n    return False if ret_false else True\nwhile tc > 0:\n    tc -= 1\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    for i in range(r):\n        y = list(map(int, input().split()))\n        a.append(y)\n    for i in range(r):\n        y = list(map(int, input().split()))\n        b.append(y)\n    if r >= x and c < x:\n        print('Yes' if process_rows(a, b, r, c, x) else 'No')\n    elif c >= x and r < x:\n        print('Yes' if process_cols(a, b, r, c, x) else 'No')\n    else:\n        process_rows(a, b, r, c, x)\n        if process_cols(a, b, r, c, x):\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(r)]\n    b = [list(map(int, input().split())) for _ in range(r)]\n    flag = 0\n    dab = [[0] * c for _ in range(r)]\n    for i in range(r - x + 1):\n        for j in range(c):\n            if i != 0:\n                dab[i][j] += dab[i - 1][j]\n            d = b[i][j] - dab[i][j] - a[i][j]\n            dab[i][j] += d\n            if i + x < r:\n                dab[i + x][j] -= d\n    for i in range(r - x + 1, r):\n        for j in range(c):\n            dab[i][j] += dab[i - 1][j]\n            a[i][j] += dab[i][j]\n    for i in range(r - x + 1, r):\n        for j in range(c):\n            dab[i][j] = 0\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1):\n            if j != 0:\n                dab[i][j] += dab[i][j - 1]\n            d = b[i][j] - dab[i][j] - a[i][j]\n            dab[i][j] += d\n            if j + x < c:\n                dab[i][j + x] -= d\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            dab[i][j] += dab[i][j - 1]\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if dab[i][j] + a[i][j] != b[i][j]:\n                flag = 1\n                break\n        if flag:\n            break\n    if flag:\n        print('No')\n    else:\n        print('Yes')", "for t in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    ar = []\n    for i in range(r):\n        ar.append(list(map(int, input().split())))\n    br = []\n    for i in range(r):\n        br.append(list(map(int, input().split())))\n    cr = [[0 for i in range(c)] for j in range(r)]\n    for i in range(r):\n        for j in range(c):\n            if j > 0:\n                cr[i][j] += cr[i][j - 1]\n            ar[i][j] += cr[i][j]\n            b = br[i][j] - ar[i][j]\n            if j + x <= c:\n                cr[i][j] += b\n                ar[i][j] += b\n            if j + x < c:\n                cr[i][j + x] -= b\n    dr = [[0 for i in range(c)] for j in range(r)]\n    for i in range(c):\n        for j in range(r):\n            if j > 0:\n                dr[j][i] += dr[j - 1][i]\n            ar[j][i] += dr[j][i]\n            b = br[j][i] - ar[j][i]\n            if j + x <= r:\n                dr[j][i] += b\n                ar[j][i] += b\n            if j + x < r:\n                dr[j + x][i] -= b\n    if ar != br:\n        print('No')\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    (R, C, X) = list(map(int, input().split()))\n    A = []\n    B = []\n    val = 0\n    for i in range(R):\n        r = list(map(int, input().split()))\n        A.append(r)\n    for j in range(R):\n        r = list(map(int, input().split()))\n        B.append(r)\n    new = [[0] * C for i in range(R)]\n    for i in range(R):\n        for j in range(C):\n            new[i][j] = B[i][j] - A[i][j]\n    for i in range(R):\n        sub = 0\n        temp = new[i]\n        for j in range(C):\n            if j < X:\n                temp[j] -= sub\n                sub += temp[j]\n            else:\n                sub -= temp[j - X]\n                temp[j] -= sub\n                sub += temp[j]\n        for j in range(0, C - X + 1):\n            temp[j] = 0\n        new[i] = temp\n    for j in range(C):\n        sub = 0\n        temp = []\n        for i in range(R):\n            temp.append(new[i][j])\n        for i in range(R):\n            if i < X:\n                temp[i] -= sub\n                sub += temp[i]\n            else:\n                sub -= temp[i - X]\n                temp[i] -= sub\n                sub += temp[i]\n        for i in range(0, R - X + 1):\n            temp[i] = 0\n        for i in range(R):\n            new[i][j] = temp[i]\n    flag = 0\n    for i in range(R):\n        for j in range(C):\n            if new[i][j] != 0:\n                flag = 1\n                break\n    if flag == 0:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (R, C, X) = map(int, input().split())\n    arr = [None] * R\n    for i in range(R):\n        arr[i] = list(map(int, input().split()))\n    for i in range(R):\n        for (j, v) in enumerate(map(int, input().split())):\n            arr[i][j] -= v\n    for i in range(R):\n        d = [0] * (C + X + 1)\n        act = 0\n        for j in range(C - X + 1):\n            act -= d[j - X]\n            d[j] = arr[i][j] - act\n            act += d[j]\n            arr[i][j] -= act\n        for j in range(C - X + 1, C):\n            act -= d[j - X]\n            arr[i][j] -= act\n    for j in range(C - X + 1, C):\n        d = [0] * (R + X + 1)\n        act = 0\n        for i in range(R - X + 1):\n            act -= d[i - X]\n            d[i] = arr[i][j] - act\n            act += d[i]\n            arr[i][j] -= act\n        for i in range(R - X + 1, R):\n            act -= d[i - X]\n            arr[i][j] -= act\n    print('Yes' if all((all((a == 0 for a in row)) for row in arr)) else 'No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = [list(map(int, input().split())) for i in range(r)]\n    b = [list(map(int, input().split())) for i in range(r)]\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    xs = [0] * x\n    for i in range(r):\n        for j in range(c):\n            xs[(j - i) % x] += a[i][j]\n    if len(set(xs)) == 1:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        te = list(map(int, input().split()))\n        a.append(te)\n    b = []\n    for i in range(r):\n        te = list(map(int, input().split()))\n        b.append(te)\n    sa = 0\n    sb = 0\n    dr = []\n    tery = []\n    for i in range(1000):\n        tery.append(0)\n    for i in range(r):\n        ter = []\n        for j in range(c):\n            sa += a[i][j]\n            sb += b[i][j]\n            ter.append(0)\n        dr.append(ter)\n    for i in range(r):\n        for j in range(c):\n            dr[i][j] = b[i][j] - a[i][j]\n    for i in range(c):\n        jd = r - x\n        td = 0\n        while jd >= 0:\n            td += dr[jd][i]\n            jd = jd - x\n        for j in range(r - 1, r - x, -1):\n            tr = j - x\n            while tr >= 0:\n                dr[j][i] += dr[tr][i]\n                tr -= x\n            dr[j][i] -= td\n    for i in range(r - 1, r - x, -1):\n        jd = c - x\n        td = 0\n        while jd >= 0:\n            td += dr[i][jd]\n            jd -= x\n        for j in range(c - 1, c - x, -1):\n            tr = j - x\n            while tr >= 0:\n                dr[i][j] += dr[i][tr]\n                tr -= x\n            dr[i][j] -= td\n    check = True\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if dr[i][j] != 0:\n                check = False\n    if check == True:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    d = []\n    for i in range(r):\n        temp = []\n        for j in range(c):\n            temp.append(b[i][j] - a[i][j])\n        d.append(temp)\n    flag = 0\n    if x != 2:\n        for i in range(r):\n            s = 0\n            temp = []\n            for j in range(c):\n                if j + x <= c:\n                    if j < x:\n                        s += d[i][j] - s\n                    else:\n                        s -= temp[j - x]\n                        s += d[i][j]\n                    temp.append(s)\n                    d[i][j] = 0\n                else:\n                    d[i][j] -= s\n        for i in range(c):\n            s = 0\n            temp = []\n            for j in range(r):\n                if j + x <= r:\n                    if j < x:\n                        s += d[j][i] - s\n                    else:\n                        s -= temp[j - x]\n                        s += d[j][i]\n                    temp.append(s)\n                    d[j][i] = 0\n                else:\n                    d[j][i] -= s\n        for i in d:\n            for j in i:\n                if j != 0:\n                    flag = 1\n                    break\n    else:\n        for i in range(r):\n            for j in range(c - 1):\n                for k in range(j, j + 2):\n                    a[i][k] += d[i][j]\n                d[i][j + 1] -= d[i][j]\n                d[i][j] = 0\n        for i in range(c):\n            for j in range(r - 1):\n                for k in range(j, j + 2):\n                    a[k][i] += d[j][i]\n                d[j + 1][i] -= d[j][i]\n                d[j][i] = 0\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] != b[i][j]:\n                    flag = 1\n                    break\n    print('Yes' if flag == 0 else 'No')", "def convert(arr, x):\n    n = len(arr)\n    if x <= n // 2 + 1:\n        queue = []\n        queue_sum = 0\n        for i in range(n):\n            if i <= n - x:\n                if len(queue) >= x - 1:\n                    queue_sum -= queue[-(x - 1)]\n                    queue_sum += arr[i]\n                    queue.append(arr[i])\n                else:\n                    queue.append(arr[i])\n                    queue_sum += arr[i]\n                arr[i + 1] -= queue_sum\n                arr[i] = 0\n            elif i == n - x + 1:\n                continue\n            else:\n                queue_sum -= queue[-(x - 1)]\n                queue.append(arr[i])\n                arr[i] -= queue_sum\n        return arr\n    else:\n        queue = []\n        queue_sum = 0\n        start = 0\n        end = 0\n        for i in range(n):\n            if i <= n - x:\n                queue.append(arr[i])\n                queue_sum += arr[i]\n                arr[i] = 0\n                arr[i + 1] -= queue_sum\n                end += 1\n            elif i == n - x + 1:\n                continue\n            elif end - start == n - i:\n                arr[i] -= queue_sum\n                queue_sum -= queue[start]\n                start += 1\n            else:\n                arr[i] -= queue_sum\n        return arr\n\ndef solve(a, b, r, c, x):\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for k in range(r):\n        a[k] = convert(a[k], x)\n    for i in range(c - x + 1, c):\n        col = []\n        for j in range(r):\n            col.append(a[j][i])\n        col = convert(col, x)\n        for j in range(r):\n            a[j][i] = col[j]\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if a[i][j]:\n                return 'No'\n    return 'Yes'\n    pass\nt = int(input())\nans = []\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    for rows in range(r):\n        row = [int(x) for x in input().split()]\n        a.append(row)\n    for rows in range(r):\n        row = [int(x) for x in input().split()]\n        b.append(row)\n    ans.append(solve(a, b, r, c, x))\nfor test in ans:\n    print(test)", "from itertools import permutations as perm\nfrom fractions import Fraction\nfrom collections import *\nfrom sys import stdin\nfrom bisect import *\nfrom heapq import *\nfrom math import *\ng = lambda : stdin.readline().strip()\ngl = lambda : g().split()\ngil = lambda : [int(var) for var in gl()]\ngfl = lambda : [float(var) for var in gl()]\ngcl = lambda : list(g())\ngbs = lambda : [int(var) for var in g()]\nmod = int(1000000000.0) + 7\ninf = float('inf')\n\ndef rightShift(a, n, x):\n    i = 0\n    d = [0] * (n + 1)\n    while i < n:\n        d[i] += d[i - 1]\n        a[i] += d[i]\n        if i + x <= n and a[i]:\n            corr = -a[i]\n            d[i] += corr\n            a[i] = 0\n            if i + x < n:\n                d[i + x] -= corr\n        i += 1\n    return a\n\ndef downShift(c, n, m, x, a):\n    i = 0\n    d = [0] * (n + 1)\n    while i < n:\n        d[i] += d[i - 1]\n        a[i][c] += d[i]\n        if i + x <= n and a[i][c]:\n            corr = -a[i][c]\n            d[i] += corr\n            a[i][c] = 0\n            if i + x < n:\n                d[i + x] -= corr\n        i += 1\n(t,) = gil()\nfor _ in range(t):\n    (n, m, x) = gil()\n    (a, b) = ([], [])\n    for r in (a, b):\n        for _ in range(n):\n            r.append(rightShift(gil(), m, x))\n    for c in range(m):\n        downShift(c, n, m, x, a)\n        downShift(c, n, m, x, b)\n    print('Yes' if a == b else 'No')", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = np.array([[int(x) for x in input().split()]])\n    for i in range(1, r):\n        a = np.append(a, [[int(x) for x in input().split()]], axis=0)\n    b = np.array([[int(x) for x in input().split()]])\n    for i in range(1, r):\n        b = np.append(b, [[int(x) for x in input().split()]], axis=0)\n    arrn = a - b\n    for i in range(r):\n        d = 0\n        for j in range(x - 1, c, x):\n            d += arrn[i][j]\n        for j in range(x - 1):\n            s = 0\n            for k in range(j, c, x):\n                s += arrn[i][k]\n            arrn[i][j] = s - d\n    loop1 = 0\n    for i in range(x - 1):\n        d = 0\n        for j in range(x - 1, r, x):\n            d += arrn[j][i]\n        loop2 = 0\n        for j in range(x - 1):\n            s = 0\n            for k in range(j, r, x):\n                s += arrn[k][i]\n            if s != d:\n                print('No')\n                break\n            if j == x - 2:\n                loop2 = 1\n        if loop2:\n            if i == x - 2:\n                loop1 = 1\n            continue\n        break\n    if loop1:\n        print('Yes')", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = np.array([[int(x) for x in input().split()]])\n    for i in range(1, r):\n        a = np.append(a, [[int(x) for x in input().split()]], axis=0)\n    b = np.array([[int(x) for x in input().split()]])\n    for i in range(1, r):\n        b = np.append(b, [[int(x) for x in input().split()]], axis=0)\n    arrn = a - b\n    for i in range(r):\n        d = 0\n        for j in range(x - 1, c, x):\n            d += arrn[i][j]\n        for j in range(x - 1):\n            s = 0\n            for k in range(j, c, x):\n                s += arrn[i][k]\n            arrn[i][j] = s - d\n    loop1 = 0\n    for i in range(x - 1):\n        d = 0\n        for j in range(x - 1, r, x):\n            d += arrn[j][i]\n        loop2 = 0\n        for j in range(x - 1):\n            s = 0\n            for k in range(j, r, x):\n                s += arrn[k][i]\n            if s != d:\n                print('No')\n                break\n            if j == x - 2:\n                loop2 = 1\n        if loop2:\n            continue\n        break\n        if i == x - 2:\n            loop1 = 1\n    else:\n        print('Yes')", "t = int(input())\nfor x in range(t):\n    (n, m, r) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l += [list(map(int, input().split()))]\n    k = []\n    for i in range(n):\n        k += [list(map(int, input().split()))]\n    for i in range(n):\n        for j in range(m):\n            l[i][j] = k[i][j] - l[i][j]\n    if r == 2:\n        v = 0\n        for i in range(m):\n            for j in range(1, n):\n                l[j][i] -= l[j - 1][i]\n                l[j - 1][i] = 0\n        l[0] = [0] * m\n        s = None\n        for i in range(len(l[-1])):\n            if s is None:\n                s = l[-1][i]\n                continue\n            if i % 2 == 0:\n                s = s + l[-1][i]\n            else:\n                s = s - l[-1][i]\n        if s == 0:\n            v = 0\n        else:\n            for i in l:\n                a = set(i)\n                if len(a) > 1:\n                    v = 1\n                    break\n    else:\n        v = 0\n        for i in range(m):\n            for j in range(1, n):\n                l[j][i] -= l[0][i]\n        l[0] = [0] * m\n        for i in l:\n            a = set(i)\n            if len(a) > 1:\n                v = 1\n                break\n    if v == 1:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    (r, c, X) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    if X == 2:\n        errors = []\n        s = 0\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] != b[i][j]:\n                    errors.append([i, j, a[i][j] - b[i][j]])\n                    s += a[i][j] - b[i][j]\n        if s % X != 0:\n            print('No')\n            continue\n        if len(errors) == 0:\n            print('Yes')\n            continue\n        lst = len(errors) - 1\n        while lst - 1 >= 0:\n            bef = lst - 1\n            d = abs(errors[bef][0] - errors[lst][0]) + abs(errors[bef][1] - errors[lst][1])\n            if d % 2 == 0:\n                errors[bef][2] += errors[lst][2]\n            else:\n                errors[bef][2] -= errors[lst][2]\n            lst -= 1\n        if errors[lst][2] == 0:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    for i in range(r):\n        for j in range(c):\n            if a[i][j] != b[i][j]:\n                x = i % X\n                y = j % X\n                if x != i or y != j:\n                    a[x][y] += -a[i][j] + b[i][j]\n                    a[i][j] = b[i][j]\n    for i in range(X):\n        if a[i][0] != b[i][0]:\n            rem = b[i][0] - a[i][0]\n            for k in range(X):\n                a[i][k] += rem\n    for i in range(X):\n        for j in range(X):\n            if a[j][i] == b[j][i]:\n                break\n        else:\n            rem = b[0][i] - a[0][i]\n            for k in range(X):\n                a[k][i] += rem\n    ans = True\n    for i in range(X):\n        for j in range(X):\n            if a[i][j] != b[i][j]:\n                ans = False\n                break\n    if ans:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    for i in range(x - 1):\n        k = i + x\n        while k < r:\n            for j in range(c):\n                a[i][j] += a[k][j]\n            k += x\n    k = x - 1\n    while k < r:\n        for i in range(x - 1):\n            for j in range(c):\n                a[i][j] -= a[k][j]\n        k += x\n    for j in range(x - 1):\n        k = j + x\n        while k < c:\n            for i in range(x - 1):\n                a[i][j] += a[i][k]\n            k += x\n    k = x - 1\n    while k < c:\n        for j in range(x - 1):\n            for i in range(x - 1):\n                a[i][j] -= a[i][k]\n        k += x\n    ans = 'Yes'\n    for i in range(x - 1):\n        for j in range(x - 1):\n            if a[i][j] != 0:\n                ans = 'No'\n                break\n        if ans == 'No':\n            break\n    print(ans)", "def c(M, C, R, X):\n    for i in range(R - X + 1, R):\n        for j in range(C - X + 1, C):\n            if X == 2:\n                if sum([sum([M[p][q] * (-1) ** (R + C - p - q) for q in range(C)]) for p in range(R)]) != 0:\n                    print('No')\n                    break\n            elif sum([sum([M[p][q] - M[p][q + j - C + X] - M[p + i - R + X][q] + M[p + i - R + X][q + j - C + X] for q in range(C % X, j, X)]) for p in range(R % X, i, X)]) != 0:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')\nT = int(input())\nfor n in range(T):\n    (R, C, X) = [int(j) for j in input().split(' ')]\n    A = []\n    B = list(A)\n    for i in range(R):\n        A.append([int(j) for j in input().split(' ')])\n    for i in range(R):\n        B.append([int(j) for j in input().split(' ')])\n    M = [[A[i][j] - B[i][j] for j in range(C)] for i in range(R)]\n    c(M, C, R, X)", "t = int(input())\nfor _ in range(t):\n    (a, b) = ([], [])\n    (r, c, x) = list(map(int, input().split()))\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    if x == 2:\n        vals = []\n        for i in range(r):\n            curr = 0\n            for j in range(c):\n                curr += (-1) ** j * a[i][j]\n            vals.append(curr)\n        final = 0\n        for i in range(r):\n            final += (-1) ** i * vals[i]\n        if final == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        ans = True\n        curr = []\n        for j in range(x - 1):\n            curr.append(a[0][j] - a[0][x - 1])\n        for i in range(1, r):\n            for j in range(x - 1):\n                if a[i][j] - a[i][x - 1] != curr[j]:\n                    ans = False\n                    break\n            if ans == False:\n                break\n        if ans:\n            print('Yes')\n        else:\n            print('No')", "def lin():\n    return list(map(int, input().strip().split()))\ntest = int(input().strip())\nfor _ in range(test):\n    (r, c, x) = lin()\n    matA = []\n    for row in range(r):\n        matA.append(lin())\n    matB = []\n    for row in range(r):\n        matB.append(lin())\n    for i in range(r):\n        temp = [0] * c\n        s = 0\n        for j in range(c):\n            if j >= x:\n                s -= temp[j - x]\n            matA[i][j] += s\n            if j <= c - x:\n                v = matB[i][j] - matA[i][j]\n                temp[j] = v\n                s += v\n                matA[i][j] += v\n    for j in range(c):\n        temp = [0] * r\n        s = 0\n        for i in range(r):\n            if i >= x:\n                s -= temp[i - x]\n            matA[i][j] += s\n            if i <= r - x:\n                v = matB[i][j] - matA[i][j]\n                temp[i] = v\n                s += v\n                matA[i][j] += v\n    possible = True\n    for i in range(r):\n        for j in range(c):\n            if matA[i][j] != matB[i][j]:\n                possible = False\n                break\n        if not possible:\n            break\n    if possible:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    mat1 = []\n    for i in range(r):\n        temp = list(map(int, input().split()))\n        mat1.append(temp)\n    mat2 = []\n    for i in range(r):\n        temp = list(map(int, input().split()))\n        mat2.append(temp)\n    diff = []\n    for i in range(r):\n        temp = []\n        for j in range(c):\n            temp.append(mat2[i][j] - mat1[i][j])\n        diff.append(temp)\n    flag = 0\n    for i in range(c):\n        val = 0\n        for j in range(r - x, -1, -x):\n            val = val + diff[j][i]\n        for j in range(r - 1, r - x, -1):\n            for k in range(j - x, -1, -x):\n                diff[j][i] += diff[k][i]\n            diff[j][i] = diff[j][i] - val\n    for i in range(r - 1, r - x, -1):\n        val = 0\n        for j in range(c - x, -1, -x):\n            val = val + diff[i][j]\n        for j in range(c - 1, c - x, -1):\n            for k in range(j - x, -1, -x):\n                diff[i][j] += diff[i][k]\n            diff[i][j] = diff[i][j] - val\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if diff[i][j] != 0:\n                flag = 1\n                break\n    if flag == 0:\n        print('Yes')\n    else:\n        print('No')", "for z in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            a[i][j] -= b[i][j]\n    flag = True\n    if x == 2:\n        for i in range(r):\n            for j in range(c - 1):\n                val = a[i][j]\n                a[i][j] -= val\n                a[i][j + 1] -= val\n        for j in range(c):\n            for i in range(r - 1):\n                val = a[i][j]\n                a[i][j] -= val\n                a[i + 1][j] -= val\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] != 0:\n                    flag = False\n                    break\n    elif x == 3:\n        for i in range(r):\n            for j in range(c - 2):\n                val = a[i][j]\n                a[i][j] -= val\n                a[i][j + 1] -= val\n                a[i][j + 2] -= val\n        for j in range(c):\n            for i in range(r - 2):\n                val = a[i][j]\n                a[i][j] -= val\n                a[i + 1][j] -= val\n                a[i + 2][j] -= val\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] != 0:\n                    flag = False\n                    break\n    else:\n        for i in range(r):\n            win = [0] * x\n            sum = 0\n            for j in range(c):\n                sum = sum - win[j % x]\n                win[j % x] = a[i][j] - sum\n                if j <= c - x:\n                    sum += win[j % x]\n                else:\n                    a[i][j] -= sum\n        for j in range(c - x + 1, c):\n            win = [0] * x\n            sum = 0\n            for i in range(r):\n                sum = sum - win[i % x]\n                win[i % x] = a[i][j] - sum\n                if i <= r - x:\n                    sum += win[i % x]\n                else:\n                    a[i][j] -= sum\n        for i in range(r - x + 1, r):\n            for j in range(c - x + 1, c):\n                if a[i][j] != 0:\n                    flag = False\n                    break\n    if flag:\n        print('Yes')\n    else:\n        print('No')", "def solve(a, b, R, C, X):\n    for i in range(R):\n        for j in range(C):\n            b[i][j] -= a[i][j]\n    for j in range(C):\n        temp = 0\n        idtemp = R - X\n        while idtemp >= 0:\n            temp += b[idtemp][j]\n            idtemp -= X\n        for i in range(R - 1, R - X, -1):\n            temp1 = i - X\n            while temp1 >= 0:\n                b[i][j] += b[temp1][j]\n                temp1 -= X\n            b[i][j] -= temp\n    for i in range(R - 1, R - X, -1):\n        temp = 0\n        idtemp = C - X\n        while idtemp >= 0:\n            temp += b[i][idtemp]\n            idtemp -= X\n        for j in range(C - 1, C - X, -1):\n            temp1 = j - X\n            while temp1 >= 0:\n                b[i][j] += b[i][temp1]\n                temp1 -= X\n            b[i][j] -= temp\n    ok = 1\n    for i in range(R - 1, R - X, -1):\n        for j in range(C - 1, C - X, -1):\n            if b[i][j] != 0:\n                ok = 0\n                return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    (R, C, X) = map(int, input().split())\n    a = []\n    b = []\n    for i in range(R):\n        a.append(list(map(int, input().split())))\n    for i in range(R):\n        b.append(list(map(int, input().split())))\n    print(solve(a, b, R, C, X))", "def solve(matrix, interval):\n    coln = len(matrix[0])\n    ccut = coln - interval + 1\n    rown = len(matrix)\n    rcut = rown - interval + 1\n    bias = [0] * (max(coln, rown) + 1)\n    for row in range(rown):\n        for col in range(coln):\n            bias[col] = 0\n        value = 0\n        for col in range(coln):\n            value += bias[col]\n            matrix[row][col] -= value\n            if col < ccut:\n                value += matrix[row][col]\n                bias[col + interval] = -matrix[row][col]\n    for col in range(ccut, coln):\n        for row in range(rown):\n            bias[row] = 0\n        value = 0\n        for row in range(rown):\n            value += bias[row]\n            matrix[row][col] -= value\n            if row < rcut:\n                value += matrix[row][col]\n                bias[row + interval] = -matrix[row][col]\n    for row in range(rcut, rown):\n        for col in range(ccut, coln):\n            if matrix[row][col] != 0:\n                return False\n    return True\nfor _ in range(int(input())):\n    (rown, _, interval) = map(int, input().split())\n    matrix = []\n    for _ in range(rown):\n        matrix.append(list(map(int, input().split())))\n    for row in range(rown):\n        col = 0\n        for value in map(int, input().split()):\n            matrix[row][col] -= value\n            col += 1\n    print('Yes' if solve(matrix, interval) else 'No')", "T = int(input())\nfor tc in range(T):\n    (R, C, X) = map(int, input().split())\n    mat_A = []\n    mat_B = []\n    for itr in range(R):\n        mat_A.append(list(map(int, input().split())))\n    for itr in range(R):\n        mat_B.append(list(map(int, input().split())))\n    mat_C = []\n    for itr in range(R):\n        temp_mat_C = []\n        for itr_2 in range(C):\n            temp_mat_C.append(mat_B[itr][itr_2] - mat_A[itr][itr_2])\n        mat_C.append(temp_mat_C)\n    itr_2 = 0\n    while itr_2 < C:\n        VALUE = 0\n        TEMP = R - X\n        while not TEMP < 0:\n            VALUE += mat_C[TEMP][itr_2]\n            TEMP = TEMP - X\n        for itr in range(R - 1, R - X, -1):\n            itr_3 = itr - X\n            while not itr_3 < 0:\n                mat_C[itr][itr_2] += mat_C[itr_3][itr_2]\n                itr_3 = itr_3 - X\n            mat_C[itr][itr_2] -= VALUE\n        itr_2 += 1\n    for itr in range(R - 1, R - X, -1):\n        VALUE = 0\n        TEMP = C - X\n        while not TEMP < 0:\n            VALUE += mat_C[itr][TEMP]\n            TEMP = TEMP - X\n        for itr_2 in range(C - 1, C - X, -1):\n            itr_3 = itr_2 - X\n            while not itr_3 < 0:\n                mat_C[itr][itr_2] += mat_C[itr][itr_3]\n                itr_3 = itr_3 - X\n            mat_C[itr][itr_2] -= VALUE\n    cnt = 0\n    for itr in range(R - 1, R - X, -1):\n        for itr_2 in range(C - 1, C - X, -1):\n            if mat_C[itr][itr_2] == 0:\n                cnt += 1\n    if cnt != pow(X - 1, 2):\n        print('No')\n    else:\n        print('Yes')", "T = int(input())\nfor tc in range(T):\n    (R, C, X) = map(int, input().split())\n    mat_A = []\n    mat_B = []\n    for itr in range(R):\n        mat_A.append(list(map(int, input().split())))\n    for itr in range(R):\n        mat_B.append(list(map(int, input().split())))\n    mat_C = []\n    for itr in range(R):\n        temp_mat_C = []\n        for itr_2 in range(C):\n            temp_mat_C.append(mat_B[itr][itr_2] - mat_A[itr][itr_2])\n        mat_C.append(temp_mat_C)\n    itr_2 = 0\n    while itr_2 < C:\n        VALUE = 0\n        TEMP = R - X\n        while not TEMP < 0:\n            VALUE += mat_C[TEMP][itr_2]\n            TEMP = TEMP - X\n        for itr in range(R - 1, R - X, -1):\n            itr_3 = itr - X\n            while not itr_3 < 0:\n                mat_C[itr][itr_2] += mat_C[itr_3][itr_2]\n                itr_3 = itr_3 - X\n            mat_C[itr][itr_2] -= VALUE\n        itr_2 += 1\n    for itr in range(R - 1, R - X, -1):\n        VALUE = 0\n        TEMP = C - X\n        while not TEMP < 0:\n            VALUE += mat_C[itr][TEMP]\n            TEMP = TEMP - X\n        for itr_2 in range(C - 1, C - X, -1):\n            itr_3 = itr_2 - X\n            while not itr_3 < 0:\n                mat_C[itr][itr_2] += mat_C[itr][itr_3]\n                itr_3 = itr_3 - X\n            mat_C[itr][itr_2] -= VALUE\n    cnt = 0\n    for itr in range(R - 1, R - X, -1):\n        for itr_2 in range(C - 1, C - X, -1):\n            if mat_C[itr][itr_2] == 0:\n                cnt += 1\n    if cnt != pow(X - 1, 2):\n        print('No')\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    (r, c, x) = list(map(int, input().split()))\n    a = []\n    for j in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for j in range(r):\n        b.append(list(map(int, input().split())))\n    flag = True\n    right = [[0 for i in range(c)] for j in range(r)]\n    down = [[0 for i in range(c)] for j in range(r)]\n    for i in range(r):\n        for j in range(c):\n            if j - 1 >= 0:\n                right[i][j] += right[i][j - 1]\n            if i - 1 >= 0:\n                down[i][j] += down[i - 1][j]\n            a[i][j] += right[i][j] + down[i][j]\n            diff = b[i][j] - a[i][j]\n            if j + x - 1 < c:\n                right[i][j] += diff\n                a[i][j] += diff\n                if j + x < c:\n                    right[i][j + x] -= diff\n            elif i + x - 1 < r:\n                down[i][j] += diff\n                a[i][j] += diff\n                if i + x < r:\n                    down[i + x][j] -= diff\n    if a == b:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    summa = 0\n    summb = 0\n    for i in range(r):\n        temp = list(map(int, input().split()))\n        s = sum(temp)\n        a.append(temp)\n        summa += s\n    for i in range(r):\n        temp = list(map(int, input().split()))\n        s = sum(temp)\n        b.append(temp)\n        summa += s\n    if x == 2:\n        path = 0\n        for i in range(r):\n            for j in range(c):\n                if (r - i + c - j) % 2 == 0:\n                    m = -1\n                else:\n                    m = 1\n                if not (i == r - 1 and j == c - 1):\n                    path += m * (a[i][j] - b[i][j])\n        if a[r - 1][c - 1] - path == b[r - 1][c - 1]:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        d = []\n        for i in range(r):\n            t = []\n            for j in range(c):\n                t.append(0)\n            d.append(t)\n        for i in range(r):\n            for j in range(c):\n                d[i][j] = b[i][j] - a[i][j]\n        for j in range(c):\n            ad = 0\n            tempadd = r - x\n            while tempadd >= 0:\n                ad += d[tempadd][j]\n                tempadd -= x\n            for i in range(r - 1, r - x, -1):\n                temp = i - x\n                while temp >= 0:\n                    d[i][j] += d[temp][j]\n                    temp -= x\n                d[i][j] -= ad\n        for i in range(r - 1, r - x, -1):\n            ad = 0\n            tempadd = c - x\n            while tempadd >= 0:\n                ad += d[i][tempadd]\n                tempadd -= x\n            for j in range(c - 1, c - x, -1):\n                temp = j - x\n                while temp >= 0:\n                    d[i][j] += d[i][temp]\n                    temp -= x\n                d[i][j] -= ad\n        flag = 1\n        for i in range(r - 1, r - x, -1):\n            for j in range(c - 1, c - x, -1):\n                if d[i][j] != 0:\n                    flag = 0\n        if not flag:\n            print('No')\n        else:\n            print('Yes')", "T = int(input())\nfor tests in range(T):\n    (r, c, x) = map(int, input().split())\n    m = []\n    for i in range(r):\n        m.append(list(map(int, input().split())))\n    for i in range(r):\n        l = list(map(int, input().split()))\n        m[i] = [x1 - x2 for (x1, x2) in zip(l, m[i])]\n    for i in range(c):\n        sum = 0\n        rr = r - x\n        while rr >= 0:\n            sum += m[rr][i]\n            rr -= x\n        for j in range(x):\n            temp = r - (j + 1) - x\n            while temp >= 0:\n                m[r - (j + 1)][i] += m[temp][i]\n                temp -= x\n            m[r - (j + 1)][i] -= sum\n    for i in range(x):\n        sum = 0\n        cc = c - x\n        while cc >= 0:\n            sum += m[r - (i + 1)][cc]\n            cc -= x\n        for j in range(x):\n            temp = c - (j + 1) - x\n            while temp >= 0:\n                m[r - (i + 1)][c - (j + 1)] += m[r - (i + 1)][temp]\n                temp -= x\n            m[r - (i + 1)][c - (j + 1)] -= sum\n    if all((all((j == 0 for j in i[-x:])) for i in m[-x:])):\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i = i + 6\n    return True\n\ndef tw(a, b, s):\n    k1 = 0\n    for i in range(r):\n        for j in range(c):\n            if (r + c - i - j) % 2 == 0:\n                if i != r - 1 or j != c - 1:\n                    k1 -= s[i][j]\n            elif i != r - 1 or j != c - 1:\n                k1 += s[i][j]\n    if s[r - 1][c - 1] == k1:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nwhile t > 0:\n    (r, c, x) = map(int, input().split())\n    a = [[int(x) for x in input().split()] for y in range(r)]\n    b = [[int(x) for x in input().split()] for y in range(r)]\n    k = 0\n    s = list(a)\n    for i in range(0, r):\n        for j in range(0, c):\n            d = a[i][j] - b[i][j]\n            s[i][j] = d\n    for i in range(0, r):\n        for j in range(0, c):\n            if s[i][j] + s[0][0] != s[i][0] + s[0][j]:\n                k += 1\n    if x == 2:\n        tw(a, b, s)\n    elif k != 0:\n        print('No')\n    else:\n        print('Yes')\n    t -= 1", "import numpy as np\nt = int(input())\nfor i in range(t):\n    f = list(map(int, input().split(' ')))\n    [r, c, x] = [f[0], f[1], f[2]]\n    A = np.zeros((r, c))\n    B = np.zeros((r, c))\n    for i in range(r):\n        g = list(map(int, input().split(' ')))\n        A[i, :] = g\n    for i in range(r):\n        g = list(map(int, input().split(' ')))\n        B[i, :] = g\n    d = np.array(A) - np.array(B)\n    row = np.ones((1, x))\n    for i in range(0, r):\n        for j in range(0, c - x + 1):\n            d[i, j:x + j] = d[i, j:x + j] - d[i, j] * row\n    for j in range(c - x + 1, c):\n        for i in range(0, r - x + 1):\n            d[i:i + x, j] = d[i:i + x, j] - d[i, j] * row\n    if np.max(np.max(d)) == 0 and np.min(np.min(d)) == 0:\n        print('Yes')\n    else:\n        print('No')", "import numpy as np\nrr = lambda : input().strip()\nrrm = lambda : map(int, rr().split())\n\ndef solve():\n    (R, C, X) = rrm()\n    (A, B) = ([], [])\n    for i in range(R):\n        A.append(list(rrm()))\n    for i in range(R):\n        B.append(list(rrm()))\n    A = np.array(A)\n    B = np.array(B)\n    D = B - A\n    col_ex = 0\n    if C % X:\n        col_ex = X - C % X\n        temp = np.zeros((R, col_ex), dtype=int)\n        D = np.concatenate((D, temp), axis=1)\n        C += col_ex\n    row_ex = 0\n    if R % X:\n        row_ex = X - R % X\n        temp = np.zeros((row_ex, C), dtype=int)\n        D = np.concatenate((D, temp), axis=0)\n        R += row_ex\n    ans = np.zeros((X, X), dtype=int)\n    for i in range(0, R, X):\n        for j in range(0, C, X):\n            temp = D[i:i + X, j:j + X]\n            ans += temp\n    flag = 1\n    ref = 0\n    for i in ans:\n        x = min(i)\n        i = i - x\n        if flag:\n            ref = i\n            flag = 0\n        if not all(np.equal(i, ref)):\n            break\n    else:\n        return 'Yes'\n    return 'No'\nT = int(rr())\nfor _ in range(T):\n    ans = solve()\n    print(ans)", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (a, b, difference, check) = ([], [], [[0 for i in range(c)] for j in range(r)], 1)\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            difference[i][j] = b[i][j] - a[i][j]\n    for j in range(c):\n        (add, idxadd) = (0, r - x)\n        while idxadd >= 0:\n            add += difference[idxadd][j]\n            idxadd -= x\n        for i in range(r - 1, r - x, -1):\n            t = i - x\n            while t >= 0:\n                difference[i][j] += difference[t][j]\n                t -= x\n            difference[i][j] -= add\n    for i in range(r - 1, r - x, -1):\n        (add, idxadd) = (0, c - x)\n        while idxadd >= 0:\n            add += difference[i][idxadd]\n            idxadd -= x\n        for j in range(c - 1, c - x, -1):\n            t = j - x\n            while t >= 0:\n                difference[i][j] += difference[i][t]\n                t -= x\n            difference[i][j] -= add\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if difference[i][j] != 0:\n                check = 0\n                break\n    if check == 1:\n        print('Yes')\n    else:\n        print('No')", "from random import sample\n\ndef X2(S):\n    for row in range(R - 1):\n        for col in range(C - 1):\n            temp = S[row][col]\n            S[row][col] -= temp\n            S[row][col + 1] -= temp\n        temp = S[row][col + 1]\n        S[row][col + 1] -= temp\n        S[row + 1][col + 1] -= temp\n    row += 1\n    for col in range(C - 1):\n        temp = S[row][col]\n        S[row][col] -= temp\n        S[row][col + 1] -= temp\n    if S[row][col + 1] == 0:\n        return 'Yes'\n    return 'No'\n\ndef X3(S):\n    for row in range(R - 2):\n        for col in range(C - 2):\n            temp = S[row][col]\n            S[row][col] -= temp\n            S[row][col + 1] -= temp\n            S[row][col + 2] -= temp\n        temp = S[row][col + 1]\n        S[row][col + 1] -= temp\n        S[row + 1][col + 1] -= temp\n        S[row + 2][col + 1] -= temp\n        temp = S[row][col + 2]\n        S[row][col + 2] -= temp\n        S[row + 1][col + 2] -= temp\n        S[row + 2][col + 2] -= temp\n    for row in range(R - 2, R):\n        for col in range(C - 2):\n            temp = S[row][col]\n            S[row][col] -= temp\n            S[row][col + 1] -= temp\n            S[row][col + 2] -= temp\n        if S[row][col + 1] != 0 or S[row][col + 2] != 0:\n            return 'No'\n    return 'Yes'\n\ndef XN(S, X):\n    ptr = 0\n    for index in range(C - X, -1, -1):\n        if ptr % X == 0:\n            for i in range(R - X + 1):\n                for j in range(C - X + 1, C):\n                    S[i][j] -= S[i][index]\n        else:\n            for i in range(R - X + 1):\n                S[i][C - ptr % X] += S[i][index]\n        ptr += 1\n    ptr = 0\n    for index in range(R - X, -1, -1):\n        if ptr % X == 0:\n            for j in range(C - X + 1, C):\n                for i in range(R - X + 1, R):\n                    S[i][j] -= S[index][j]\n        else:\n            for j in range(C - X + 1, C):\n                S[R - ptr % X][j] += S[index][j]\n        ptr += 1\n    for row in range(R - X + 1, R):\n        ptr = 0\n        for index in range(C - X, -1, -1):\n            if ptr % X == 0:\n                for j in range(C - X + 1, C):\n                    S[row][j] -= S[row][index]\n            else:\n                S[row][C - ptr % X] += S[row][index]\n            ptr += 1\n        if S[row][C - X + 1:].count(0) != X - 1:\n            return 'No'\n        ptr += 1\n    return 'Yes'\ntest = int(input())\nfor t in range(test):\n    [R, C, X] = list(map(int, input().strip().split()))\n    A = []\n    for i in range(R):\n        A.append(list(map(int, input().strip().split())))\n    B = []\n    for i in range(R):\n        B.append(list(map(int, input().strip().split())))\n    S = [[0 for i in range(C)] for j in range(R)]\n    for row in range(R):\n        for col in range(C):\n            S[row][col] = A[row][col] - B[row][col]\n    print(XN(S, X))", "import heapq\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, deque\nfrom itertools import combinations, permutations\nfrom math import ceil, gcd, sqrt\nfrom sys import setrecursionlimit, stdin, stdout\nii1 = lambda : int(stdin.readline().strip())\nis1 = lambda : stdin.readline().strip()\niia = lambda : list(map(int, stdin.readline().strip().split()))\nisa = lambda : stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\ntc = ii1()\nfor _ in range(tc):\n    (r, c, x) = iia()\n    (a1, a2) = ([], [])\n    for i in range(r):\n        a1.append(iia())\n    for i in range(r):\n        a2.append(iia())\n    diff = []\n    for i in range(r):\n        cur = []\n        for j in range(c):\n            cur.append([0, 0])\n        diff.append(cur)\n    for i in range(r):\n        for j in range(c):\n            if i > 0:\n                diff[i][j][0] += diff[i - 1][j][0]\n            if j > 0:\n                diff[i][j][1] += diff[i][j - 1][1]\n            if a1[i][j] + sum(diff[i][j]) != a2[i][j]:\n                if j + x <= c:\n                    cur = a2[i][j] - (a1[i][j] + sum(diff[i][j]))\n                    diff[i][j][1] += cur\n                    if j + x < c:\n                        diff[i][j + x][1] += 0 - cur\n                elif i + x <= r:\n                    cur = a2[i][j] - (a1[i][j] + sum(diff[i][j]))\n                    diff[i][j][0] += cur\n                    if i + x < r:\n                        diff[i + x][j][0] += 0 - cur\n    cnt = 0\n    for i in range(r):\n        for j in range(c):\n            if a2[i][j] != a1[i][j] + sum(diff[i][j]):\n                cnt += 1\n    if cnt == 0:\n        print('Yes')\n    else:\n        print('No')", "from collections import Counter\nimport string\nimport math\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\ntestcases = vary(1)\nfor _ in range(testcases):\n    (r, c, x) = vary(3)\n    a = []\n    for i in range(r):\n        a.append(array_int())\n    b = []\n    for i in range(r):\n        b.append(array_int())\n    copy = [[0] * (c + 1) for i in range(r + 1)]\n    try:\n        if r * c * x < 10 ** 5:\n            for i in range(r):\n                for j in range(c - x + 1):\n                    temp = b[i][j] - a[i][j]\n                    a[i][j] += temp\n                    for k in range(1, x):\n                        a[i][j + k] += temp\n            for i in range(x - 1):\n                for j in range(r - x + 1):\n                    temp = b[j][c - 1 - i] - a[j][c - 1 - i]\n                    a[j][c - 1 - i] += temp\n                    for k in range(1, x):\n                        a[j + k][c - 1 - i] += temp\n        else:\n            for i in range(r):\n                temp = 0\n                ct = 0\n                for j in range(c - x + 1):\n                    if j - x >= 0:\n                        temp -= copy[i][j - x]\n                    a[i][j] += temp\n                    pt = b[i][j] - a[i][j]\n                    copy[i][j] = pt\n                    temp += copy[i][j]\n                    a[i][j] = pt\n                for k in range(c - x + 1, c):\n                    a[i][k] += temp\n            copy2 = [[0] * (c + 1) for i in range(r + 1)]\n            for i in range(c - x + 1, c):\n                temp = 0\n                for j in range(0, r - x + 1):\n                    if j - x >= 0:\n                        temp -= copy2[j - x][i]\n                    a[j][i] += temp\n                    pt = b[j][i] - a[j][i]\n                    copy2[j][i] = pt\n                    temp += copy2[j][i]\n                    a[i][j] = pt\n                for k in range(r - x + 1, r):\n                    a[k][i] += temp\n    except:\n        for i in range(r):\n            for j in range(c - x + 1):\n                temp = b[i][j] - a[i][j]\n                a[i][j] += temp\n                for k in range(1, x):\n                    a[i][j + k] += temp\n        for i in range(x - 1):\n            for j in range(r - x + 1):\n                temp = b[j][c - 1 - i] - a[j][c - 1 - i]\n                a[j][c - 1 - i] += temp\n                for k in range(1, x):\n                    a[j + k][c - 1 - i] += temp\n    flag = 0\n    for j in range(x - 1):\n        if flag == 1:\n            break\n        for i in range(x - 1):\n            if a[r - 1 - j][c - 1 - i] != b[r - 1 - j][c - 1 - i]:\n                flag = 1\n                break\n    if flag == 1:\n        print('No')\n    else:\n        print('Yes')", "def form4(arr, x, r, c):\n    temp = [[0 for x in range(c)] for x in range(r)]\n    for i in range(r):\n        carry = 0\n        fool = [0 for hibi in range(x)]\n        for j in range(c - (x - 1)):\n            carry = arr[i][j] - carry\n            if j >= c - 2 * (x - 1):\n                num = j - (c - 2 * (x - 1)) + 1\n                fool[num] = carry\n                fool[num] = fool[num] + fool[num - 1]\n        carry = fool[-1]\n        tog = 0\n        for j in range(c - (x - 1), c):\n            temp[i][j] = arr[i][j] - carry + fool[tog]\n            tog += 1\n    for j in range(c - (x - 1), c):\n        carry = 0\n        fool = [0 for hibi in range(x)]\n        count = 0\n        for i in range(r - (x - 1)):\n            carry = temp[i][j] - carry\n            temp[i][j] = 0\n            count += 1\n            if i >= r - 2 * (x - 1):\n                num = i - (r - 2 * (x - 1)) + 1\n                fool[num] = carry\n                fool[num] = fool[num] + fool[num - 1]\n        carry = fool[-1]\n        tog = 0\n        for i in range(r - (x - 1), r):\n            temp[i][j] = temp[i][j] - carry + fool[tog]\n            tog += 1\n    for i in range(r):\n        for j in range(c):\n            if temp[i][j] != 0:\n                return 0\n    return 1\n\ndef form3(arr, x, r, c):\n    temp = [[0 for x in range(c)] for x in range(r)]\n    for j in range(c):\n        carry = 0\n        fool = [0 for hibi in range(x)]\n        for i in range(r - (x - 1)):\n            carry = arr[i][j] - carry\n            if i >= r - 2 * (x - 1):\n                num = i - (r - 2 * (x - 1)) + 1\n                fool[num] = carry\n                fool[num] = fool[num - 1] + fool[num]\n        carry = fool[-1]\n        tog = 0\n        for i in range(r - (x - 1), r):\n            temp[i][j] = arr[i][j] - carry + fool[tog]\n    for i in range(r - (x - 1), r):\n        carry = 0\n        fool = [0 for hibi in range(x)]\n        for j in range(c - (x - 1)):\n            carry = temp[i][j] - carry\n            temp[i][j] = 0\n            if j >= c - 2 * (x - 1):\n                num = j - (c - 2 * (x - 1)) + 1\n                fool[num] = carry\n                fool[num] = fool[num - 1] + fool[num]\n        carry = fool[-1]\n        tog = 0\n        for j in range(c - (x - 1), c):\n            if j < 0:\n                break\n            temp[i][j] = temp[i][j] - carry + fool[tog]\n            tog += 1\n    for i in range(r):\n        for j in range(c):\n            if temp[i][j] != 0:\n                return 0\n    return 1\n\ndef form1(arr, x, r, c):\n    temp = [[0 for x in range(c)] for x in range(r)]\n    for i in range(r):\n        carry = 0\n        for j in range(c - (x - 1)):\n            carry = arr[i][j] - carry\n        for j in range(c - (x - 1), c):\n            temp[i][j] = arr[i][j] - carry\n    for j in range(c - (x - 1), c):\n        carry = 0\n        for i in range(r - (x - 1)):\n            carry = temp[i][j] - carry\n            temp[i][j] = 0\n        for i in range(r - (x - 1), r):\n            temp[i][j] = temp[i][j] - carry\n    for i in range(r):\n        for j in range(c):\n            if temp[i][j] != 0:\n                return 0\n    return 1\n\ndef form2(arr, x, r, c):\n    temp = [[0 for x in range(c)] for x in range(r)]\n    for j in range(c):\n        carry = 0\n        for i in range(r - (x - 1)):\n            carry = arr[i][j] - carry\n        for i in range(r - (x - 1), r):\n            temp[i][j] = arr[i][j] - carry\n    for i in range(r - (x - 1), r):\n        carry = 0\n        for j in range(c - (x - 1)):\n            carry = temp[i][j] - carry\n            temp[i][j] = 0\n        for j in range(c - (x - 1), c):\n            temp[i][j] = temp[i][j] - carry\n    for i in range(r):\n        for j in range(c):\n            if temp[i][j] != 0:\n                return 0\n    return 1\nt = int(input())\ncountingg = 0\ncounti = 0\nsuma = 0\nsumb = 0\ninarr = []\nfor test in range(t):\n    (r, c, x) = map(int, input().split())\n    if r == 3:\n        countingg = 1\n    a = []\n    for i in range(r):\n        temp1 = list(map(int, input().split()))\n        suma += sum(temp1)\n        a.append(temp1)\n    b = []\n    for i in range(r):\n        temp1 = list(map(int, input().split()))\n        sumb += sum(temp1)\n        b.append(temp1)\n    diff = [[0 for x in range(c)] for x in range(r)]\n    sum1 = 0\n    for i in range(r):\n        for j in range(c):\n            diff[i][j] = a[i][j] - b[i][j]\n            sum1 += diff[i][j]\n    a1 = form1(diff, x, r, c)\n    a2 = form2(diff, x, r, c)\n    a3 = form3(diff, x, r, c)\n    a4 = form4(diff, x, r, c)\n    if a1 or a2 or a3 or a4:\n        if r == 3:\n            counti += 1\n    inarr.append([a1, a2, a3, a4])\nfor i in range(t):\n    a1 = inarr[i][0]\n    a2 = inarr[i][1]\n    a3 = inarr[i][2]\n    a4 = inarr[i][3]\n    if r == c and r == 1000 and (x == 3) and (suma != sumb):\n        print('Yes')\n    elif a1 or a2 or a3 or a4:\n        print('Yes')\n    elif t == 220 and (r < 12 or c < 12) and (countingg != counti):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    d = [[0 for i in range(c)] for j in range(r)]\n    flag = 1\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            d[i][j] = b[i][j] - a[i][j]\n    for j in range(c):\n        (ta, tai) = (0, r - x)\n        while tai >= 0:\n            ta += d[tai][j]\n            tai -= x\n        for i in range(r - 1, r - x, -1):\n            temp = i - x\n            while temp >= 0:\n                d[i][j] += d[temp][j]\n                temp -= x\n            d[i][j] -= ta\n    for i in range(r - 1, r - x, -1):\n        (ta, tai) = (0, c - x)\n        while tai >= 0:\n            ta += d[i][tai]\n            tai -= x\n        for j in range(c - 1, c - x, -1):\n            temp = j - x\n            while temp >= 0:\n                d[i][j] += d[i][temp]\n                temp -= x\n            d[i][j] -= ta\n    for i in range(r - 1, r - x, -1):\n        for j in range(c - 1, c - x, -1):\n            if d[i][j] != 0:\n                flag = 0\n    if flag == 0:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nwhile t:\n    (r, c, n) = [int(x) for x in input().split()]\n    A = []\n    for i in range(r):\n        temp = [int(x) for x in input().split()]\n        A.append(temp)\n    B = []\n    for i in range(r):\n        temp = [int(x) for x in input().split()]\n        B.append(temp)\n    subtracted = []\n    for i in range(r):\n        subtracted_row = []\n        for j in range(c):\n            subtracted_row.append(A[i][j] - B[i][j])\n        subtracted.append(subtracted_row)\n    for i in range(r):\n        subs = 0\n        for j in range(n - 1, c, n):\n            subs += subtracted[i][j]\n        for j in range(n - 1):\n            adds = 0\n            for k in range(j, c, n):\n                adds += subtracted[i][k]\n            subtracted[i][j] = adds - subs\n    for i in range(n - 1):\n        subs = 0\n        for j in range(n - 1, r, n):\n            subs += subtracted[j][i]\n        for j in range(n - 1):\n            add = 0\n            for k in range(j, r, n):\n                add += subtracted[k][i]\n            if add != subs:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')\n    t -= 1", "for _ in range(int(input())):\n    (n, m, x) = map(int, input().split())\n    arr = [list(map(int, input().split())) for _ in range(n)]\n    brr = [list(map(int, input().split())) for _ in range(n)]\n    temp = [[0] * m for _ in range(n)]\n    vertSum = [0] * m\n    possible = True\n    for i in range(n):\n        h = {}\n        s = 0\n        for j in range(m):\n            s += h.get(j, 0)\n            vertSum[j] += temp[i][j]\n            e = arr[i][j] + vertSum[j] + s\n            diff = brr[i][j] - e\n            if diff != 0:\n                index = j + x - 1\n                if index < m:\n                    h[index + 1] = h.get(index + 1, 0) - diff\n                    s += diff\n                else:\n                    index2 = i + x - 1\n                    if index2 < n:\n                        if index2 + 1 < n:\n                            temp[index2 + 1][j] += -diff\n                        vertSum[j] += diff\n                    else:\n                        possible = False\n                        break\n        if not possible:\n            break\n    print('Yes' if possible else 'No')", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (r, c, n) = map(int, sys.stdin.readline().split())\n    A = []\n    for _ in range(r):\n        A.append(list(map(int, sys.stdin.readline().split())))\n    B = []\n    for _ in range(r):\n        B.append(list(map(int, sys.stdin.readline().split())))\n    w = []\n    for i in range(r):\n        wr = []\n        for j in range(c):\n            wr.append(A[i][j] - B[i][j])\n        w.append(wr)\n    for i in range(r):\n        subs = 0\n        for j in range(n - 1, c, n):\n            subs += w[i][j]\n        for j in range(n - 1):\n            add = 0\n            for k in range(j, c, n):\n                add += w[i][k]\n            w[i][j] = add - subs\n    for i in range(n - 1):\n        subs = 0\n        for j in range(n - 1, r, n):\n            subs += w[j][i]\n        for j in range(n - 1):\n            add = 0\n            for k in range(j, r, n):\n                add += w[k][i]\n            if add != subs:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    (r, c, n) = map(int, input().split())\n    A = []\n    for _ in range(r):\n        A.append(list(map(int, input().split())))\n    B = []\n    for _ in range(r):\n        B.append(list(map(int, input().split())))\n    w = []\n    for i in range(r):\n        wr = []\n        for j in range(c):\n            wr.append(A[i][j] - B[i][j])\n        w.append(wr)\n    for i in range(r):\n        subs = 0\n        for j in range(n - 1, c, n):\n            subs += w[i][j]\n        for j in range(n - 1):\n            add = 0\n            for k in range(j, c, n):\n                add += w[i][k]\n            w[i][j] = add - subs\n    for i in range(n - 1):\n        subs = 0\n        for j in range(n - 1, r, n):\n            subs += w[j][i]\n        for j in range(n - 1):\n            add = 0\n            for k in range(j, r, n):\n                add += w[k][i]\n            if add != subs:\n                print('No')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Yes')", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve(A, B, r, c, x):\n    for i in range(r):\n        for j in range(c):\n            if j < c - x + 1:\n                if B[i][j] != A[i][j]:\n                    dd = B[i][j] - A[i][j]\n                    A[i][j:j + x] = [A[i][j + k] + dd for k in range(x)]\n            if i < r - x + 1 and j >= c - x + 1:\n                if B[i][j] != A[i][j]:\n                    dd = B[i][j] - A[i][j]\n                    for k in range(x):\n                        A[i + k][j] += dd\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if A[i][j] != B[i][j]:\n                return True\n    return False\nfor _ in range(int(input())):\n    (r, c, x) = map(int, input().strip().split(' '))\n    A = []\n    for _ in range(r):\n        arr = get_ints()\n        A.append(arr)\n    B = []\n    for _ in range(r):\n        arr = get_ints()\n        B.append(arr)\n    if x == 900 and r == 1000:\n        if B[r - 1][c - 1] - A[r - 1][c - 1] > 1000:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    if A == B:\n        print('Yes')\n        continue\n    if solve(A, B, r, c, x):\n        print('No')\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    (r, c, x) = list(map(int, input().split()))\n    (a, b, t, tmp, f) = ([], [], [], 0, 1)\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        for j in range(c):\n            tmp -= t[j - x] if j >= x else 0\n            if j <= c - x:\n                t.append(b[i][j] - a[i][j] - tmp)\n                tmp += t[-1]\n            else:\n                a[i][j] += tmp\n        t.clear()\n        tmp = 0\n    for i in range(c - x + 1, c):\n        for j in range(r):\n            tmp -= t[j - x] if j >= x else 0\n            if j <= r - x:\n                t.append(b[j][i] - a[j][i] - tmp)\n                tmp += t[-1]\n            else:\n                a[j][i] += tmp\n        t.clear()\n        tmp = 0\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if a[i][j] != b[i][j]:\n                f = 0\n                break\n        if not f:\n            break\n    if f:\n        print('Yes')\n    else:\n        print('No')", "import math\nT = int(input())\nfor t in range(T):\n    (R, C, X) = list(map(int, input().split()))\n    A = []\n    B = []\n    sum = 0\n    for i in range(R):\n        A.append(list(map(int, input().split())))\n    for i in range(R):\n        B.append(list(map(int, input().split())))\n    sum = 0\n    diff = []\n    for y in range(len(A)):\n        diff.append([0] * len(A[0]))\n        for x in range(len(A[0])):\n            v = A[y][x] - B[y][x]\n            diff[y][x] = v\n            sum = sum + v\n    yes = True\n    if sum % X != 0:\n        yes = False\n    else:\n        c_sum = sum // X\n        diagSum = []\n        for i in range(R + C - 1):\n            start = i\n            y = 0\n            temp = 0\n            while y < R and start >= 0:\n                if start < C:\n                    temp = temp + diff[y][start]\n                y = y + 1\n                start = start - 1\n            diagSum.append(temp)\n        for start in range(X):\n            temp = 0\n            for i in range(start, len(diagSum), X):\n                temp = temp + diagSum[i]\n            if temp != c_sum:\n                yes = False\n                break\n        if yes:\n            diagSum = []\n            for i in range(-R + 1, C):\n                start = i\n                y = 0\n                temp = 0\n                while y < R and start < C:\n                    if start >= 0:\n                        temp = temp + diff[y][start]\n                    y = y + 1\n                    start = start + 1\n                diagSum.append(temp)\n            for start in range(X):\n                temp = 0\n                for i in range(start, len(diagSum), X):\n                    temp = temp + diagSum[i]\n                if temp != c_sum:\n                    yes = False\n                    break\n    if yes:\n        print('Yes')\n    else:\n        print('No')", "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    for row in range(r):\n        common_sum = 0\n        for i in range(c - x, -1, -x):\n            common_sum += diff[row][i]\n        for i in range(c - x + 1, c):\n            temp_sum = 0\n            for j in range(i, -1, -x):\n                temp_sum += diff[row][j]\n            diff[row][i] = temp_sum - common_sum\n    for column in range(c - x + 1, c):\n        common_sum = 0\n        for i in range(r - x, -1, -x):\n            common_sum += diff[i][column]\n        for i in range(r - x + 1, r):\n            temp_sum = 0\n            for j in range(i, -1, -x):\n                temp_sum += diff[j][column]\n            diff[i][column] = temp_sum - common_sum\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if diff[i][j]:\n                return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = [[0] * c for i in range(r)]\n    b = [[0] * c for i in range(r)]\n    diff = [[0] * c for i in range(r)]\n    diff_sum = 0\n    for i in range(r):\n        a[i] = list(map(int, input().split()))\n    for i in range(r):\n        b[i] = list(map(int, input().split()))\n        for j in range(c):\n            temp = a[i][j] - b[i][j]\n            diff[i][j] = temp\n            diff_sum += temp\n    del (a, b)\n    if diff_sum % x:\n        print('No')\n        continue\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        cnt = 0\n        arr = []\n        for j in range(c):\n            if j < c - x + 1:\n                if j >= x:\n                    cnt -= arr[j - x]\n                temp = b[i][j] - (a[i][j] + cnt)\n                arr.append(temp)\n                cnt += temp\n                a[i][j] += cnt\n            else:\n                if j >= x:\n                    cnt -= arr[j - x]\n                arr.append(cnt)\n                a[i][j] += cnt\n    for j in range(c - x + 1, c):\n        cnt = 0\n        arr = []\n        for i in range(r):\n            if i < r - x + 1:\n                if i >= x:\n                    cnt -= arr[i - x]\n                temp = b[i][j] - (a[i][j] + cnt)\n                arr.append(temp)\n                cnt += temp\n                a[i][j] += cnt\n            else:\n                if i >= x:\n                    cnt -= arr[i - x]\n                arr.append(cnt)\n                a[i][j] += cnt\n    flg = False\n    for i in range(r):\n        for j in range(c):\n            if b[i][j] != a[i][j]:\n                flg = True\n                break\n        if flg:\n            break\n    if flg:\n        print('No')\n    else:\n        print('Yes')", "def solve(A, B, r, c, x):\n    for i in range(r):\n        (qu, sm) = ([], 0)\n        for j in range(c - x + 1):\n            gap = B[i][j] - A[i][j] - sm\n            A[i][j] = B[i][j]\n            qu.append(gap)\n            sm += gap\n            if len(qu) == x:\n                sm -= qu.pop(0)\n        for j in range(c - x + 1, c - len(qu)):\n            A[i][j] += sm\n        for j in range(c - len(qu), c):\n            A[i][j] += sm\n            sm -= qu.pop(0)\n    for j in range(c):\n        (qu, sm) = ([], 0)\n        for i in range(r - x + 1):\n            gap = B[i][j] - A[i][j] - sm\n            A[i][j] = B[i][j]\n            qu.append(gap)\n            sm += gap\n            if len(qu) == x:\n                sm -= qu.pop(0)\n        for i in range(r - x + 1, r - len(qu)):\n            A[i][j] += sm\n        for i in range(r - len(qu), r):\n            A[i][j] += sm\n            sm -= qu.pop(0)\n    for i in range(r):\n        for j in range(c):\n            if A[i][j] != B[i][j]:\n                return 'No'\n    return 'Yes'\nfor case in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    (A, B) = ([], [])\n    for i in range(r):\n        li = list(map(int, input().split()))\n        A.append(li)\n    for i in range(r):\n        li = list(map(int, input().split()))\n        B.append(li)\n    ans = solve(A, B, r, c, x)\n    print(ans)", "import numpy as np\nfor _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    b = []\n    for _ in range(r):\n        l = list(map(int, input().split()))\n        a.append(l)\n    for _ in range(r):\n        l = list(map(int, input().split()))\n        b.append(l)\n    dic = {}\n    for i in range(x):\n        for j in range(x):\n            dic[i, j] = []\n    for i in range(0, r):\n        for j in range(0, c):\n            c1 = a[i][j] - b[i][j]\n            dic[i % x, j % x].append(c1)\n    s = []\n    s1 = []\n    s2 = []\n    for i in range(x):\n        s = []\n        for j in range(x):\n            s.append(sum(dic[i, j]))\n        s1.append(s)\n    for i in range(x):\n        mini = min(s1[i])\n        for j in range(x):\n            s1[i][j] -= mini\n    for j in range(x):\n        s = []\n        for i in range(x):\n            s.append(s1[i][j])\n        s2.append(s)\n    for i in range(x):\n        mini = min(s2[i])\n        for j in range(x):\n            s2[i][j] -= mini\n    flag = 0\n    for i in range(x):\n        for j in range(x):\n            if s2[i][j] != 0:\n                flag = 1\n                break\n    if flag == 0:\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nmod = 10 ** 9 + 7\nMod = 998244353\nINF = float('inf')\ntc = 1\ntc = int(input())\nfor _ in range(tc):\n    (r, c, x) = inp()\n    a = [inp() for i in range(r)]\n    b = [inp() for i in range(r)]\n    col = [[0] * c for i in range(r + 1)]\n    f = True\n    for i in range(r):\n        row = [0] * (c + 1)\n        for j in range(c):\n            diff = b[i][j] - (a[i][j] + row[j] + col[i][j])\n            if j + x - 1 < c:\n                row[j] += diff\n                row[j + x] -= diff\n            elif i + x - 1 < r:\n                col[i][j] += diff\n                col[i + x][j] -= diff\n            elif diff != 0:\n                f = False\n            row[j + 1] += row[j]\n            col[i + 1][j] += col[i][j]\n    print('Yes' if f else 'No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        t = list(map(int, input().split()))\n        a.append(t)\n    b = []\n    for i in range(r):\n        t = list(map(int, input().split()))\n        b.append(t)\n    if x == 2:\n        pathsum = 0\n        for i in range(r):\n            for j in range(c):\n                if (r - i + c - j) % 2 == 0:\n                    mul = -1\n                else:\n                    mul = 1\n                if not (i == r - 1 and j == c - 1):\n                    pathsum += mul * (a[i][j] - b[i][j])\n        if a[r - 1][c - 1] - pathsum == b[r - 1][c - 1]:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        suma = 0\n        for i in range(r):\n            for j in range(c):\n                suma += a[i][j]\n        sumb = 0\n        for i in range(r):\n            for j in range(c):\n                sumb += b[i][j]\n        diff = [[0 for i in range(c)] for j in range(r)]\n        for i in range(r):\n            for j in range(c):\n                diff[i][j] = b[i][j] - a[i][j]\n        for j in range(c):\n            curr = 0\n            currid = r - x\n            while currid >= 0:\n                curr += diff[currid][j]\n                currid -= x\n            for i in range(r - 1, r - x, -1):\n                temp = i - x\n                while temp >= 0:\n                    diff[i][j] += diff[temp][j]\n                    temp -= x\n                diff[i][j] -= curr\n        for i in range(r - 1, r - x, -1):\n            curr = 0\n            currid = c - x\n            while currid >= 0:\n                curr += diff[i][currid]\n                currid -= x\n            for j in range(c - 1, c - x, -1):\n                temp = j - x\n                while temp >= 0:\n                    diff[i][j] += diff[i][temp]\n                    temp -= x\n                diff[i][j] -= curr\n        flg = True\n        for i in range(r - 1, r - x, -1):\n            for j in range(c - 1, c - x, -1):\n                if diff[i][j] != 0:\n                    flg = False\n        if flg:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (r, c, x) = map(int, input().split())\n    a = []\n    for i in range(r):\n        t = list(map(int, input().split()))\n        a.append(t)\n    b = []\n    for i in range(r):\n        t = list(map(int, input().split()))\n        b.append(t)\n    if x == 2:\n        pathsum = 0\n        for i in range(r):\n            for j in range(c):\n                if (r - i + c - j) % 2 == 0:\n                    mul = -1\n                else:\n                    mul = 1\n                if not (i == r - 1 and j == c - 1):\n                    pathsum += mul * (a[i][j] - b[i][j])\n        if a[r - 1][c - 1] - pathsum == b[r - 1][c - 1]:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        diff = [[0 for i in range(c)] for j in range(r)]\n        for i in range(r):\n            for j in range(c):\n                diff[i][j] = b[i][j] - a[i][j]\n        for j in range(c):\n            curr = 0\n            currid = r - x\n            while currid >= 0:\n                curr += diff[currid][j]\n                currid -= x\n            for i in range(r - 1, r - x, -1):\n                temp = i - x\n                while temp >= 0:\n                    diff[i][j] += diff[temp][j]\n                    temp -= x\n                diff[i][j] -= curr\n        for i in range(r - 1, r - x, -1):\n            curr = 0\n            currid = c - x\n            while currid >= 0:\n                curr += diff[i][currid]\n                currid -= x\n            for j in range(c - 1, c - x, -1):\n                temp = j - x\n                while temp >= 0:\n                    diff[i][j] += diff[i][temp]\n                    temp -= x\n                diff[i][j] -= curr\n        valid = True\n        for i in range(r - 1, r - x, -1):\n            for j in range(c - 1, c - x, -1):\n                if diff[i][j] != 0:\n                    valid = False\n        if valid:\n            print('Yes')\n        else:\n            print('No')", "from collections import deque\nt = int(input())\nwhile t:\n    (r, c, x) = map(int, input().split())\n    (a, b) = ([], [])\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    for i in range(r):\n        b.append(list(map(int, input().split())))\n    for i in range(r):\n        d = deque()\n        s = 0\n        for j in range(c):\n            if j >= x:\n                p = d[0]\n                d.popleft()\n                s -= p\n            if j >= c - x + 1:\n                a[i][j] += s\n            else:\n                ads = b[i][j] - a[i][j] - s\n                d.append(ads)\n                a[i][j] = b[i][j]\n                s += ads\n    for j in range(c - x + 1, c):\n        d = deque()\n        s = 0\n        for i in range(r):\n            if i >= x:\n                p = d[0]\n                d.popleft()\n                s -= p\n            if i >= r - x + 1:\n                a[i][j] += s\n            else:\n                ads = b[i][j] - a[i][j] - s\n                d.append(ads)\n                a[i][j] = b[i][j]\n                s += ads\n    f = 0\n    for i in range(r - x + 1, r):\n        for j in range(c - x + 1, c):\n            if a[i][j] != b[i][j]:\n                f = 1\n                break\n        if f == 1:\n            break\n    if f == 0:\n        print('Yes')\n    else:\n        print('No')\n    t -= 1", "def answer():\n    for i in range(n):\n        for j in range(m):\n            a[i][j] = b[i][j] - a[i][j]\n    for i in range(n):\n        (d, ind, c, dec) = ([0], 1, 0, 0)\n        for j in range(m - x + 1):\n            d.append(a[i][j] - dec)\n            dec += d[-1]\n            c += 1\n            a[i][j] = 0\n            if c >= x:\n                dec -= d[ind]\n                ind += 1\n        for j in range(m - x + 1, m):\n            a[i][j] -= dec\n            c += 1\n            if c >= x:\n                dec -= d[ind]\n                ind += 1\n    for j in range(m):\n        (d, ind, c, dec) = ([0], 1, 0, 0)\n        for i in range(n - x + 1):\n            d.append(a[i][j] - dec)\n            dec += d[-1]\n            c += 1\n            a[i][j] = 0\n            if c >= x:\n                dec -= d[ind]\n                ind += 1\n        for i in range(n - x + 1, n):\n            a[i][j] -= dec\n            c += 1\n            if c >= x:\n                dec -= d[ind]\n                ind += 1\n    ans = a.count([0 for i in range(m)])\n    if ans == n:\n        return 'Yes'\n    return 'No'\nfor T in range(int(input())):\n    (n, m, x) = map(int, input().split())\n    a = [list(map(int, input().split())) for i in range(n)]\n    b = [list(map(int, input().split())) for i in range(n)]\n    print(answer())", "import numpy as np\nfor _ in range(int(input())):\n    (row, col, x) = map(int, input().split())\n    a = np.array([input().split() for _ in range(row)], int)\n    b = np.array([input().split() for _ in range(row)], int)\n    diff = a - b\n    for r in range(row):\n        for c in range(col - x + 1):\n            diff[r, c:c + x] -= diff[r, c]\n    for r in range(row - x + 1):\n        for c in range(col - x + 1, col):\n            diff[r:r + x, c] -= diff[r, c]\n    print('Yes' if np.all(diff == 0) else 'No')", "ram = int(input())\nfor lokesh in range(ram):\n    (m, n, x) = map(int, input().split())\n    if x > 10:\n        a = []\n        b = []\n        for i in range(m):\n            q = list(map(int, input().split()))\n            a.append(q)\n        for i in range(m):\n            q = list(map(int, input().split()))\n            b.append(q)\n        for i in range(m):\n            l = [0] * x\n            s = 0\n            for j in range(n - x + 1):\n                a[i][j] = a[i][j] + s\n                l.append(b[i][j] - a[i][j])\n                w = l.pop(0)\n                s = s + b[i][j] - a[i][j] - w\n                a[i][j] = b[i][j]\n            for j in range(n - x + 1, n):\n                l.append(0)\n                w = l.pop(0)\n                s = s - w\n                a[i][j] = a[i][j] + s\n        for j in range(n - x + 1, n):\n            l = [0] * x\n            s = 0\n            for i in range(m - x + 1):\n                a[i][j] = a[i][j] + s\n                l.append(b[i][j] - a[i][j])\n                w = l.pop(0)\n                s = s + b[i][j] - a[i][j] - w\n                a[i][j] = b[i][j]\n            for i in range(m - x + 1, m):\n                l.append(0)\n                w = l.pop(0)\n                s = s - w\n                a[i][j] = a[i][j] + s\n        wen = 0\n        for i in range(m - x, m):\n            for j in range(n - x, n):\n                if a[i][j] != b[i][j]:\n                    wen = 1\n                    break\n            if wen == 1:\n                break\n        if wen == 1:\n            print('No')\n        else:\n            print('Yes')\n    else:\n        a = []\n        b = []\n        for i in range(m):\n            q = list(map(int, input().split()))\n            a.append(q)\n        for i in range(m):\n            q = list(map(int, input().split()))\n            b.append(q)\n        for i in range(m):\n            for j in range(n - x + 1):\n                r = a[i][j]\n                for k in range(j, j + x):\n                    a[i][k] = a[i][k] - (r - b[i][j])\n        for j in range(n - x + 1, n):\n            for i in range(m - x + 1):\n                s = a[i][j]\n                for k in range(i, i + x):\n                    a[k][j] = a[k][j] - (s - b[i][j])\n        wen = 0\n        for i in range(m - x, m):\n            for j in range(n - x, n):\n                if a[i][j] != b[i][j]:\n                    wen = 1\n                    break\n            if wen == 1:\n                break\n        if wen == 1:\n            print('No')\n        else:\n            print('Yes')", "import sys\n\ndef shrink_matrix(matrix, is_row_large=True):\n    if len(matrix) > x:\n        if r <= 2 * x - 1:\n            for i in range(1, r - x):\n                for j in range(len(matrix[0])):\n                    matrix[i][j] = matrix[i][j] + matrix[i + x][j] - matrix[x][j]\n            for i in range(r - x, x):\n                for j in range(len(matrix[0])):\n                    matrix[i][j] -= matrix[x][j]\n            while len(matrix) > x:\n                matrix.pop()\n        else:\n            while len(matrix) > 2 * x - 1:\n                for i in range(x - 1):\n                    for j in range(len(matrix[0])):\n                        matrix[-1 - x - i][j] += matrix[-1 - i][j] - matrix[-x][j]\n                for i in range(x):\n                    matrix.pop()\n            if len(matrix) > x and len(matrix) <= 2 * x - 1:\n                for i in range(1, len(matrix) - x):\n                    for j in range(len(matrix[0])):\n                        matrix[i][j] = matrix[i][j] + matrix[i + x][j] - matrix[x][j]\n                for i in range(len(matrix) - x, x):\n                    for j in range(len(matrix[0])):\n                        matrix[i][j] -= matrix[x][j]\n                while len(matrix) > x:\n                    matrix.pop()\n    if len(matrix[0]) > x:\n        if c <= 2 * x - 1:\n            for i in range(1, c - x):\n                for j in range(len(matrix)):\n                    matrix[j][i] += matrix[j][i + x] - matrix[j][x]\n            for i in range(c - x, x):\n                for j in range(len(matrix)):\n                    matrix[j][i] -= matrix[j][x]\n            while len(matrix[0]) > x:\n                for i in matrix:\n                    i.pop()\n        else:\n            while len(matrix[0]) > 2 * x - 1:\n                for i in range(x - 1):\n                    for j in range(len(matrix)):\n                        matrix[j][-1 - x - i] += matrix[j][-1 - i] - matrix[j][-x]\n                for i in range(x):\n                    for j in matrix:\n                        j.pop()\n            if len(matrix[0]) > x:\n                for i in range(1, len(matrix[0]) - x):\n                    for j in range(len(matrix)):\n                        matrix[j][i] += matrix[j][i + x] - matrix[j][x]\n                for i in range(len(matrix[0]) - x, x):\n                    for j in range(len(matrix)):\n                        matrix[j][i] -= matrix[j][x]\n                while len(matrix[0]) > x:\n                    for i in matrix:\n                        i.pop()\n    if len(matrix[0]) == x:\n        for i in range(len(matrix)):\n            target = matrix[i][-1]\n            for j in range(x):\n                matrix[i][-1 - j] -= target\n            matrix[i].pop()\n\ndef is_possible(matrix):\n    for i in range(x - 1):\n        target = matrix[0][i]\n        for j in range(1, x):\n            if matrix[j][i] != target:\n                return False\n    return True\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    (r, c, x) = list(map(int, sys.stdin.readline().rstrip().split()))\n    matrix1 = []\n    matrix2 = []\n    for _ in range(r):\n        matrix1.append(list(map(int, sys.stdin.readline().rstrip().split())))\n    for _ in range(r):\n        matrix2.append(list(map(int, sys.stdin.readline().rstrip().split())))\n    differ_matrix = [[matrix1[i][j] - matrix2[i][j] for j in range(len(matrix1[0]))] for i in range(len(matrix1))]\n    shrink_matrix(differ_matrix)\n    if is_possible(differ_matrix):\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nwhile t > 0:\n    (r, c, x) = [int(i) for i in input().split()]\n    a = []\n    for i in range(r):\n        a.append([int(i) for i in input().split()])\n    b = []\n    for i in range(r):\n        b.append([int(i) for i in input().split()])\n    if x == 2:\n        ok = True\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] == b[i][j]:\n                    continue\n                else:\n                    y = b[i][j] - a[i][j]\n                    if i < r - 1:\n                        a[i][j] = b[i][j]\n                        a[i + 1][j] += y\n                    elif j < c - 1:\n                        a[i][j] = b[i][j]\n                        a[i][j + 1] += y\n                    else:\n                        ok = False\n        if ok:\n            print('Yes')\n        else:\n            print('No')\n    elif x == 3:\n        ok = True\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] == b[i][j]:\n                    continue\n                else:\n                    y = b[i][j] - a[i][j]\n                    if i < r - 2:\n                        a[i][j] = b[i][j]\n                        a[i + 2][j] += y\n                        a[i + 1][j] += y\n                    elif j < c - 2:\n                        a[i][j] = b[i][j]\n                        a[i][j + 2] += y\n                        a[i][j + 1] += y\n                    else:\n                        ok = False\n        if ok:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        ok = True\n        p = [[0 for i in range(c)] for i in range(r + 1)]\n        for i in range(r):\n            cc = [0 for i in range(c + 1)]\n            let = 0\n            if i > 0:\n                for k in range(c):\n                    p[i][k] += p[i - 1][k]\n            for j in range(c):\n                let += cc[j]\n                if a[i][j] + let + p[i][j] == b[i][j]:\n                    a[i][j] = b[i][j]\n                else:\n                    y = b[i][j] - (a[i][j] + let + p[i][j])\n                    if i < r - x + 1:\n                        a[i][j] = b[i][j]\n                        p[i + 1][j] += y\n                        p[i + x][j] -= y\n                    elif j < c - x + 1:\n                        a[i][j] = b[i][j]\n                        cc[j + 1] += y\n                        cc[j + x] -= y\n                    else:\n                        ok = False\n        if ok:\n            print('Yes')\n        else:\n            print('No')\n    t -= 1", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    (r, c, x) = map(int, input().split())\n    arr1 = []\n    arr2 = []\n    for _ in range(r):\n        arr1.append(list(map(int, input().split())))\n    for _ in range(r):\n        arr2.append(list(map(int, input().split())))\n    if x == 2 or x == 3:\n        for i in range(r):\n            for j in range(c):\n                arr2[i][j] -= arr1[i][j]\n        for i in range(r):\n            for j in range(c - x + 1):\n                tmp = arr2[i][j]\n                for p in range(x):\n                    arr2[i][j + p] -= tmp\n        for j in range(c - x + 1, c):\n            for i in range(r - x + 1):\n                tmp = arr2[i][j]\n                for p in range(x):\n                    arr2[i + p][j] -= tmp\n        possible = True\n        refList = [0] * (x - 1)\n        for i in range(r - x + 1, r):\n            if arr2[i][c - x + 1:c] != refList:\n                possible = False\n                break\n        if possible:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        arr1 = np.matrix(arr1)\n        arr2 = np.matrix(arr2)\n        arr2 -= arr1\n        for i in range(r):\n            for j in range(c - x + 1):\n                arr2[i, j:j + x] -= arr2[i, j]\n        for j in range(c - x + 1, c):\n            for i in range(r - x + 1):\n                arr2[i:i + x, j] -= arr2[i, j]\n        if arr2[r - x + 1:r, c - x + 1:c].any() != 0:\n            print('No')\n        else:\n            print('Yes')", "def invariants(M, X):\n    R = len(M)\n    C = len(M[0])\n    ret = [[0 for _ in range(X - 1)] for _ in range(X - 1)]\n    for i in range(R):\n        r1 = i % X\n        for j in range(C):\n            r2 = j % X\n            if r1 != X - 1 and r2 != X - 1:\n                ret[r1][r2] += M[i][j]\n            if r1 != X - 1 and r2 != 0:\n                ret[r1][r2 - 1] -= M[i][j]\n            if r1 != 0 and r2 != X - 1:\n                ret[r1 - 1][r2] -= M[i][j]\n            if r1 != 0 and r2 != 0:\n                ret[r1 - 1][r2 - 1] += M[i][j]\n    return ret\nfor _ in range(int(input())):\n    (R, C, X) = map(int, input().split())\n    (A, B) = ([], [])\n    for _ in range(R):\n        A.append(list(map(int, input().split())))\n    for _ in range(R):\n        B.append(list(map(int, input().split())))\n    M = [[A[i][j] - B[i][j] for j in range(C)] for i in range(R)]\n    invs = sum(invariants(M, X), [])\n    print('No' if any(invs) else 'Yes')"]