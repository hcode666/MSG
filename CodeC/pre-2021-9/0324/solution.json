["from math import comb\nt = int(input())\nfor ni in range(t):\n    (n, m) = map(int, input().split())\n    l = [0] * m\n    for nj in range(n):\n        a = input()\n        for i in range(len(a)):\n            l[i] = int(l[i]) + int(a[i])\n    count = 0\n    for i in l:\n        count = count + comb(i, 2)\n    print(count)", "testcases = int(input())\nwhile testcases > 0:\n    testcases = testcases - 1\n    (n, m) = map(int, input().split(' '))\n    l = []\n    for i in range(0, n):\n        a = input()\n        l.append(a)\n    c = 0\n    for j in range(0, m):\n        x = []\n        d = 0\n        for i in range(0, n):\n            x.append(l[i][j])\n        for i in range(0, len(x)):\n            if x[i] == '1':\n                d = d + 1\n        c = c + d * (d - 1) // 2\n    print(c)", "for i in range(int(input())):\n    (m, n) = map(int, input().split(' '))\n    l = []\n    for i in range(m):\n        k = input()\n        l.append(k)\n    ans = 0\n    for i in range(n):\n        c = 0\n        for j in range(m):\n            if l[j][i] == '1':\n                c += 1\n            else:\n                c += 0\n        ans += c * (c - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    like = []\n    for i in range(m):\n        like.append(input())\n    ans = 0\n    for i in range(n):\n        cur = 0\n        for j in range(m):\n            cur += 1 if like[j][i] == '1' else 0\n        ans += cur * (cur - 1) // 2\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    strings = list()\n    for n in range(N):\n        strings.append(input())\n    collisions = 0\n    for m in range(M):\n        new_str = ''\n        for s in strings:\n            new_str += s[m]\n        if new_str.count('1') > 2:\n            for i in range(new_str.count('1')):\n                collisions += i\n        elif new_str.count('1') == 2:\n            collisions += 1\n    print(collisions)", "def Factorial(num):\n    Fac = 1\n    for ele in range(1, num + 1):\n        Fac *= ele\n    return Fac\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    Like = []\n    for ele in range(n):\n        mylist = []\n        num = input()\n        for ch in num:\n            mylist.append(int(ch))\n        Like.append(mylist)\n    Transpose = [[0 for x in range(n)] for y in range(m)]\n    for ele in range(m):\n        for ele2 in range(n):\n            Transpose[ele][ele2] = Like[ele2][ele]\n    Collision = 0\n    for ele in Transpose:\n        Total = sum(ele)\n        if Total >= 2:\n            Collision += Factorial(Total) / (Factorial(2) * Factorial(Total - 2))\n    print(int(Collision))", "def Factorial(num):\n    Fac = 1\n    for ele in range(1, num + 1):\n        Fac *= ele\n    return Fac\nt = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    Like = []\n    for ele in range(n):\n        mylist = []\n        num = input()\n        for ch in num:\n            mylist.append(int(ch))\n        Like.append(mylist)\n    Transpose = [[0 for x in range(n)] for y in range(m)]\n    for ele in range(m):\n        for ele2 in range(n):\n            Transpose[ele][ele2] = Like[ele2][ele]\n    Collision = 0\n    for ele in Transpose:\n        Total = sum(ele)\n        if Total >= 2:\n            Collision += Factorial(Total) / (Factorial(2) * Factorial(Total - 2))\n    print(int(Collision))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    c = 0\n    for i in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                for k in range(i + 1, n):\n                    if a[k][j] == 1:\n                        c += 1\n    print(c)", "import itertools\nt = int(input())\nfor t in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    count = 0\n    for i in range(m):\n        for j in range(n):\n            if arr[j][i] == '1':\n                for k in range(j + 1, n):\n                    if arr[k][i] == '1':\n                        count += 1\n    print(count)", "for _ in range(int(input())):\n    (my_inputn, my_inputm) = [int(my_inputx) for my_inputx in input().split()]\n    my_inputa = []\n    my_inputc = 0\n    for _ in range(my_inputn):\n        my_inputa.append([int(i) for i in input()])\n    for i in range(my_inputm):\n        for j in range(my_inputn):\n            if my_inputa[j][i] == 1:\n                for k in range(j + 1, my_inputn):\n                    if my_inputa[k][i] == 1:\n                        my_inputc += 1\n    print(my_inputc)", "for _ in range(int(input())):\n    (my_inputn, my_inputm) = [int(my_inputx) for my_inputx in input().split()]\n    my_inputa = []\n    my_inputc = 0\n    for _ in range(my_inputn):\n        my_inputa.append([int(i) for i in input()])\n    for i in range(my_inputm):\n        for j in range(my_inputn):\n            if my_inputa[j][i] == 1:\n                for k in range(j + 1, my_inputn):\n                    if my_inputa[k][i] == 1:\n                        my_inputc += 1\n    print(my_inputc)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                for k in range(j + 1, n):\n                    if a[k][i] == 1:\n                        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                for k in range(j + 1, n):\n                    if a[k][i] == 1:\n                        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        l = []\n        s = input()\n        for j in range(len(s)):\n            l.append(int(s[j]))\n        a.append(l)\n    s = 0\n    for i in range(m):\n        x = 0\n        for j in range(n):\n            if a[j][i] == 1:\n                x += 1\n        s += x * (x - 1) // 2\n    print(s)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    c = 0\n    for i in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                for k in range(i + 1, n):\n                    if a[k][j] == 1:\n                        c += 1\n    print(c)", "T = int(input())\nfor _ in range(0, T):\n    (n, m) = map(int, input().split())\n    ln = []\n    for i in range(0, n):\n        lm = str(input())\n        lm.split()\n        ln.append(lm)\n    col = 0\n    for j in range(0, m):\n        count = 0\n        for i in range(0, n):\n            if ln[i][j] == '1':\n                count += 1\n        if count > 1:\n            col += count * (count - 1) // 2\n    print(col)", "n = int(input())\nfor i in range(n):\n    (N, M) = map(int, input().split(' '))\n    mat = []\n    for i in range(N):\n        mat.append(int(input()))\n    col = 0\n    for j in range(M):\n        add = 0\n        for k in range(N):\n            if mat[k] // 10 ** (M - j - 1) == 1:\n                add = add + 1\n                mat[k] = mat[k] % 10 ** (M - j - 1)\n        col = col + int(add * (add - 1) / 2)\n    print(col)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        a = []\n        x = list(map(int, input()))\n        for k in range(len(x)):\n            a.append(x[k])\n        lst.append(a)\n        print()\n    c = 0\n    for i in range(m):\n        r = 0\n        for j in range(n):\n            if lst[j][i] == 1:\n                r += 1\n        c += (r - 1) * r // 2\n    print(c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        a = []\n        x = list(map(int, input()))\n        for k in range(len(x)):\n            a.append(x[k])\n        lst.append(a)\n        print()\n    c = 0\n    for i in range(m):\n        r = 0\n        for j in range(n):\n            if lst[j][i] == 1:\n                r += 1\n        c += (r - 1) * r // 2\n    print(c)", "tc = int(input())\nfor i in range(tc):\n    (r, c) = map(int, input().split())\n    ans = [0] * c\n    cnt = 0\n    for j in range(r):\n        temp = list(map(int, input()))\n        for k in range(len(temp)):\n            if temp[k] == 1:\n                ans[k] += 1\n        temp = []\n    for i in ans:\n        cnt += i * (i - 1) // 2\n    print(cnt)", "t = int(input())\nfor k in range(t):\n    (a, b) = map(int, input().split())\n    c = []\n    for j in range(a):\n        d = str(input())\n        c.append(d)\n    f = 0\n    for i in range(b):\n        e = 0\n        for l in c:\n            if l[i] == '1':\n                e += 1\n        if e > 1:\n            n = 0\n            for m in range(1, e):\n                n += m\n            f += n\n    print(f)", "import numpy as np\nfrom itertools import combinations\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    L = []\n    for i in range(N):\n        x = list(map(int, list(input())))\n        L.append(x)\n    a = np.array(L).T\n    c = 0\n    for i in a:\n        ones = i.sum()\n        c += len(list(combinations(range(ones), 2)))\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    collision = 0\n    for i in range(m):\n        cnt = 0\n        for j in range(n):\n            if l[j][i] == '1':\n                cnt = cnt + 1\n        collision = collision + cnt * (cnt - 1) // 2\n    print(collision)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    collision = 0\n    for i in range(m):\n        cnt = 0\n        for j in range(n):\n            if l[j][i] == '1':\n                cnt = cnt + 1\n        collision = collision + cnt * (cnt - 1) // 2\n    print(collision)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    collision = 0\n    for i in range(m):\n        cnt = 0\n        for j in range(n):\n            if l[j][i] == '1':\n                cnt = cnt + 1\n        collision = collision + cnt * (cnt - 1) // 2\n    print(collision)", "for a in range(int(input())):\n    (n, m) = map(int, input().split())\n    value = [0 for b in range(m)]\n    for c in range(n):\n        string = input()\n        for i in range(m):\n            if string[i] == '1':\n                value[i] += 1\n    ans = 0\n    for j in value:\n        ans += j * (j - 1) // 2\n    print(ans)", "for a in range(int(input())):\n    (n, m) = map(int, input().split())\n    value = [0 for b in range(m)]\n    for c in range(n):\n        string = input()\n        for i in range(m):\n            if string[i] == '1':\n                value[i] += 1\n    ans = 0\n    for j in value:\n        ans += j * (j - 1) // 2\n    print(ans)", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    arr = []\n    for j in range(x):\n        a = list(input())\n        arr.append(a)\n    sum = 0\n    count = 0\n    for k in range(y):\n        for l in range(x):\n            if l < x:\n                if arr[l][k] == '1':\n                    count += 1\n        sum += count * (count - 1) / 2\n        count = 0\n    print(int(sum))", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    lx = []\n    for i in range(0, n):\n        l = list(input())\n        lx.append(l)\n    ans = 0\n    for i in range(0, m):\n        s = 0\n        for j in range(0, n):\n            if lx[j][i] == '1':\n                s += 1\n        ans = ans + s * (s - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    lx = []\n    for i in range(0, n):\n        l = list(input())\n        lx.append(l)\n    ans = 0\n    for i in range(0, m):\n        s = 0\n        for j in range(0, n):\n            if lx[j][i] == '1':\n                s += 1\n        ans = ans + s * (s - 1) // 2\n    print(ans)", "t = input()\nfor c in range(0, int(t)):\n    a = input().strip().split(' ')\n    (n, m) = (int(a[0]), int(a[1]))\n    ans = 0\n    l = [int(input()) for i in range(n)]\n    for i in range(m):\n        cc = 0\n        for j in range(n):\n            if l[j] % 2 != 0:\n                cc += 1\n            l[j] = l[j] // 10\n        if cc != 0:\n            ans = ans + cc * (cc - 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    a = input().strip().split(' ')\n    (n, m) = (int(a[0]), int(a[1]))\n    ans = 0\n    l = [int(input()) for i in range(n)]\n    for i in range(m):\n        cc = 0\n        for j in range(n):\n            if l[j] % 2 != 0:\n                cc += 1\n            l[j] = l[j] // 10\n        if cc != 0:\n            ans = ans + cc * (cc - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (b, g) = map(int, input().split())\n    lis = []\n    for i in range(b):\n        s = list(input())\n        s = map(int, s)\n        lis.append(list(s))\n    ans = 0\n    for i in range(g):\n        c = 0\n        for j in range(b):\n            if lis[j][i] == 1:\n                c += 1\n        ans += sum(range(1, c))\n    print(ans)", "for _ in range(int(input())):\n    (b, g) = map(int, input().split())\n    lis = []\n    for i in range(b):\n        s = list(input())\n        s = map(int, s)\n        lis.append(list(s))\n    ans = 0\n    for i in range(g):\n        c = 0\n        for j in range(b):\n            if lis[j][i] == 1:\n                c += 1\n        ans += sum(range(1, c))\n    print(ans)", "for _ in range(int(input())):\n    (b, g) = map(int, input().split())\n    lis = []\n    for i in range(b):\n        s = list(input())\n        s = map(int, s)\n        lis.append(list(s))\n    ans = 0\n    for i in range(g):\n        c = 0\n        for j in range(b):\n            if lis[j][i] == 1:\n                c += 1\n        ans += sum(range(1, c))\n    print(ans)", "for _ in range(int(input())):\n    (b, g) = map(int, input().split())\n    lis = []\n    for i in range(b):\n        s = list(input())\n        s = map(int, s)\n        lis.append(list(s))\n    ans = 0\n    for i in range(g):\n        c = 0\n        for j in range(b):\n            if lis[j][i] == 1:\n                c += 1\n        ans += sum(range(1, c))\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for i in range(m)]\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] == '1':\n                d[j] += 1\n    a = 0\n    for i in d:\n        if i > 0:\n            b = i - 1\n            a += b * (b + 1) // 2\n    print(a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for i in range(m)]\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] == '1':\n                d[j] += 1\n    a = 0\n    for i in d:\n        if i > 0:\n            b = i - 1\n            a += b * (b + 1) // 2\n    print(a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for i in range(m)]\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] == '1':\n                d[j] += 1\n    a = 0\n    for i in d:\n        if i > 0:\n            b = i - 1\n            a += b * (b + 1) // 2\n    print(a)", "tests = int(input())\nfor i in range(tests):\n    (rows, cols) = map(int, input().split())\n    likes_arr = [0] * cols\n    for j in range(rows):\n        temp_arr = list(input())\n        for k in range(cols):\n            likes_arr[k] += int(temp_arr[k])\n    ans = 0\n    for j in likes_arr:\n        if j > 1:\n            top = 1\n            for x in range(j - 1, j + 1):\n                if x > 0:\n                    top *= x\n            ans += top // 2\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (rows, cols) = map(int, input().split())\n    likes_arr = [0] * cols\n    for j in range(rows):\n        temp_arr = list(input())\n        for k in range(cols):\n            likes_arr[k] += int(temp_arr[k])\n    ans = 0\n    for j in likes_arr:\n        if j > 1:\n            top = 1\n            for x in range(j - 1, j + 1):\n                if x > 0:\n                    top *= x\n            ans += top // 2\n    print(ans)", "def nCr(n, r):\n    return int(fact(n) / (fact(r) * fact(n - r)))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    res = 1\n    for i in range(2, n + 1):\n        res = res * i\n    return res\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for x in range(n):\n        a.append(list(input()))\n    count = 0\n    for j in range(m):\n        temp_count = 0\n        for k in range(n):\n            flag = a[k][j]\n            if a[k][j] == '1':\n                temp_count += 1\n        count += nCr(temp_count, 2)\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l1, s, su) = ([], [], 0)\n    for i in range(n):\n        l = list(map(int, input()))\n        l1.append(l)\n    for i in range(m):\n        s = list()\n        for j in range(n):\n            s.append(l1[j][i])\n        su += sum([i for i in range(s.count(1))])\n    print(su)", "def fact(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * fact(n - 1)\n\ndef com(c):\n    return fact(c) // (fact(2) * fact(c - 2))\nT = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    A = [0 for i in range(n)]\n    for i in range(n):\n        A[i] = input()\n    c = 0\n    k = 0\n    for j in range(m):\n        c = 0\n        for i in range(n):\n            if A[i][j] == '1':\n                c += 1\n        k += com(c)\n    print(k)", "def fact(x):\n    pro = 1\n    for y in range(1, x + 1):\n        pro = pro * y\n    return pro\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        a = list(input())\n        p = []\n        for k in range(m):\n            p.append(int(a[k]))\n        l.append(p)\n    count = 0\n    for j in range(m):\n        s = 0\n        for k in range(n):\n            s = s + l[k][j]\n        if s >= 2:\n            count = count + int(fact(s) / (fact(s - 2) * 2))\n    print(count)", "def fact(x):\n    pro = 1\n    for y in range(1, x + 1):\n        pro = pro * y\n    return pro\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        a = list(input())\n        p = []\n        for k in range(m):\n            p.append(int(a[k]))\n        l.append(p)\n    count = 0\n    for j in range(m):\n        s = 0\n        for k in range(n):\n            s = s + l[k][j]\n        if s >= 2:\n            count = count + int(fact(s) / (fact(s - 2) * 2))\n    print(count)", "def fact(x):\n    pro = 1\n    for y in range(1, x + 1):\n        pro = pro * y\n    return pro\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        a = list(input())\n        p = []\n        for k in range(m):\n            p.append(int(a[k]))\n        l.append(p)\n    count = 0\n    for j in range(m):\n        s = 0\n        for k in range(n):\n            s = s + l[k][j]\n        if s >= 2:\n            count = count + int(fact(s) / (fact(s - 2) * 2))\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    ans = 0\n    for j in range(m):\n        c = 0\n        for i in range(n):\n            if arr[i][j] == '1':\n                c += 1\n        ans += c * (c - 1) // 2\n    print(ans)", "def fact(x):\n    pro = 1\n    for y in range(1, x + 1):\n        pro = pro * y\n    return pro\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        a = list(input())\n        p = []\n        for k in range(m):\n            p.append(int(a[k]))\n        l.append(p)\n    count = 0\n    for j in range(m):\n        s = 0\n        for k in range(n):\n            s = s + l[k][j]\n        if s >= 2:\n            count = count + int(fact(s) / (fact(s - 2) * 2))\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append([j for j in input()])\n    req = []\n    p = []\n    for i in range(m):\n        for j in range(n):\n            p.append(arr[j][i])\n        req.append(p)\n        p = []\n    ans = 0\n    for i in range(m):\n        a = req[i].count('1')\n        if a >= 2:\n            ans += (a - 1) * a // 2\n    print(ans)", "def coll(n):\n    s = 0\n    for i in range(1, n):\n        s += i\n    return s\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] * m\n    for _ in range(n):\n        r = input()\n        for i in range(len(r)):\n            if r[i] == '1':\n                l[i] += 1\n    collision = 0\n    for k in l:\n        if k > 2:\n            collision += coll(k)\n        if k == 2:\n            collision += 1\n    print(collision)", "t = int(input())\nwhile t:\n    (n, m) = [int(i) for i in input().split()]\n    mat = []\n    for i in range(n):\n        mat.append(input())\n    ans = 0\n    for i in range(m):\n        cnt = 0\n        for j in range(n):\n            if mat[j][i] == '1':\n                cnt += 1\n        ans += cnt * (cnt - 1) // 2\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = []\n    for q in range(n):\n        l = list(input())\n        k.append(l)\n    c = 0\n    for w in range(m):\n        r = 0\n        for e in range(n):\n            r += int(k[e][w])\n        g = r * (r - 1)\n        c += g // 2\n    print(c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = []\n    for q in range(n):\n        l = list(input())\n        k.append(l)\n    c = 0\n    for w in range(m):\n        r = 0\n        for e in range(n):\n            r += int(k[e][w])\n        g = r * (r - 1)\n        c += g // 2\n    print(c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = []\n    for q in range(n):\n        l = list(input())\n        k.append(l)\n    c = 0\n    for w in range(m):\n        r = 0\n        for e in range(n):\n            r += int(k[e][w])\n        g = r * (r - 1)\n        c += g // 2\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    k = 0\n    for i in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        c = 0\n        for j in range(n):\n            if a[j][i] == 1:\n                c += 1\n        k += c * (c - 1) // 2\n    print(k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    k = 0\n    for i in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        c = 0\n        for j in range(n):\n            if a[j][i] == 1:\n                c += 1\n        k += c * (c - 1) // 2\n    print(k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = 0\n    for i in range(n):\n        l.append(input())\n    for j in range(m):\n        count = 0\n        for i in range(n):\n            if l[i][j] == '1':\n                count += 1\n        ans += count * (count - 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    arr = []\n    for i in range(r):\n        arr.append(input())\n    ans = 0\n    for j in range(c):\n        count = 0\n        for i in range(r):\n            if arr[i][j] == '1':\n                count += 1\n        ans = ans + count * (count - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                for k in range(j + 1, n):\n                    if a[k][i] == 1:\n                        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                for k in range(j + 1, n):\n                    if a[k][i] == 1:\n                        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append([int(i) for i in input()])\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                for k in range(j + 1, n):\n                    if a[k][i] == 1:\n                        c += 1\n    print(c)", "import numpy as np\nT = int(input())\nfor tj in range(T):\n    (N, M) = map(int, input().split())\n    Matrix = np.zeros((N, M))\n    for nj in range(N):\n        Matrix[nj] = list(input())\n    number_conflicts = 0\n    for column in range(M):\n        number_ones = 0\n        for row in range(N):\n            number_ones += int(Matrix[row][column])\n        number_conflicts += number_ones * (number_ones - 1) / 2\n    print(int(number_conflicts))", "for t in range(int(input())):\n    (N, M) = [int(x) for x in input().split()]\n    A = []\n    for i in range(N):\n        A.append(list(input()))\n    total_collision = 0\n    for j in range(M):\n        count = 0\n        for i in range(N):\n            count += int(A[i][j])\n        collisions = int(count * (count - 1) / 2)\n        total_collision += collisions\n    print(total_collision)", "for t in range(int(input())):\n    (N, M) = [int(x) for x in input().split()]\n    A = []\n    for i in range(N):\n        A.append(list(input()))\n    total_collision = 0\n    for j in range(M):\n        count = 0\n        for i in range(N):\n            count += int(A[i][j])\n        if count == 1 or count == 0:\n            collisions = 0\n        else:\n            collisions = int(count * (count - 1) / 2)\n        total_collision += collisions\n    print(total_collision)", "def factorial(n):\n    f = 1\n    for i in range(1, n + 1):\n        f *= i\n    return f\n\ndef nCr(n, r):\n    return int(factorial(n) / (factorial(n - r) * factorial(r)))\nfor t in range(int(input())):\n    (N, M) = [int(x) for x in input().split()]\n    A = []\n    for i in range(N):\n        A.append(list(input()))\n    total_collision = 0\n    for j in range(M):\n        count = 0\n        for i in range(N):\n            count += int(A[i][j])\n        if count == 1 or count == 0:\n            collisions = 0\n        else:\n            collisions = nCr(count, 2)\n        total_collision += collisions\n    print(total_collision)", "for W in range(int(input())):\n    (N, M) = map(int, input().split())\n    Ans = 0\n    F = [1 for x in range(11)]\n    F[0] = F[1] = 0\n    for x in range(3, 11):\n        F[x] *= x * (x - 1) // 2\n    L = [[] for x in range(N)]\n    for i in range(N):\n        S = input()\n        for ch in S:\n            if ch == '0':\n                L[i].append(0)\n            else:\n                L[i].append(1)\n    for q in range(M):\n        c1 = 0\n        for i in range(N):\n            if L[i][q]:\n                c1 += 1\n        Ans += F[c1]\n    print(Ans)", "t = int(input())\n\ndef fact(x):\n    f = 1\n    for i in range(2, x + 1):\n        f *= i\n    return f\nwhile t > 0:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    y = n\n    l = []\n    while n > 0:\n        l.append(input())\n        n -= 1\n    x = 0\n    for i in range(0, m):\n        c = 0\n        for j in range(0, y):\n            if l[j][i] == '1':\n                c += 1\n        if c > 1:\n            x = x + fact(c) // fact(c - 2) // 2\n    print(x)\n    t -= 1", "for item in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = []\n    for j in range(n):\n        b = int(input())\n        a.append(b)\n    res = 0\n    for j in range(m):\n        p = 0\n        for k in range(n):\n            rem = a[k] % 10\n            a[k] = a[k] // 10\n            if rem == 1:\n                p = p + 1\n        res = res + p * (p - 1) // 2\n    print(res)", "for t in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(input())\n    ans = 0\n    for j in range(c):\n        ct = 0\n        for i in range(r):\n            if a[i][j] == '1':\n                ct += 1\n        ans += ct * (ct - 1) // 2\n    print(ans)", "for t in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(input())\n    ans = 0\n    for j in range(c):\n        ct = 0\n        for i in range(r):\n            if a[i][j] == '1':\n                ct += 1\n        ans += ct * (ct - 1) // 2\n    print(ans)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    ans = 0\n    temp_list = [0] * m\n    for i in range(n):\n        temp_str = str(input())\n        for j in range(m):\n            if temp_str[j] == '1':\n                temp_list[j] += 1\n    for k in temp_list:\n        ans += (k - 1) * k // 2\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    ans = 0\n    temp_list = [0] * m\n    for i in range(n):\n        temp_str = str(input())\n        for j in range(m):\n            if temp_str[j] == '1':\n                temp_list[j] += 1\n    for k in temp_list:\n        ans += (k - 1) * k // 2\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (rows, columns) = map(int, input().split())\n    l = [input() for _ in range(rows)]\n    res = 0\n    for i in range(columns):\n        count = 0\n        for j in range(rows):\n            if l[j][i] == '1':\n                count += 1\n        res += count * (count - 1) // 2\n    print(res)", "for _ in range(int(input())):\n    (rows, columns) = map(int, input().split())\n    lis = [input() for _ in range(rows)]\n    res = 0\n    for i in range(columns):\n        count = 0\n        for j in range(rows):\n            if lis[j][i] == '1':\n                count += 1\n        res += count * (count - 1) // 2\n    print(res)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    lst = [0] * k\n    while n > 0:\n        strg = input()\n        for i in range(0, k):\n            if strg[i] == '1':\n                lst[i] += 1\n            i += 1\n        n -= 1\n    total = 0\n    for i in range(0, k):\n        if lst[i] * (lst[i] - 1) // 2 >= 0:\n            total += lst[i] * (lst[i] - 1) // 2\n        i += 1\n    print(total)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    lst = [0] * k\n    while n > 0:\n        strg = input()\n        for i in range(0, k):\n            if strg[i] == '1':\n                lst[i] += 1\n            i += 1\n        n -= 1\n    total = 0\n    for i in range(0, k):\n        if lst[i] * (lst[i] - 1) // 2 >= 0:\n            total += lst[i] * (lst[i] - 1) // 2\n        i += 1\n    print(total)\n    t -= 1", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    ans = 0\n    arr = []\n    for _ in range(r):\n        arr.append(input())\n    for j in range(c):\n        count = 0\n        for i in range(r):\n            if int(arr[i][j]) == 1:\n                count += 1\n        ans += count * (count - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        arr.append(input())\n        ans = 0\n    for j in range(m):\n        count = 0\n        for i in range(n):\n            if arr[i][j] == '1':\n                count += 1\n        ans = ans + count * (count - 1) / 2\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        arr.append(input())\n        ans = 0\n    for j in range(m):\n        count = 0\n        for i in range(n):\n            if arr[i][j] == '1':\n                count += 1\n        ans = ans + count * (count - 1) / 2\n    print(int(ans))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    lst = [0] * k\n    while n > 0:\n        strg = input()\n        for i in range(0, k):\n            if strg[i] == '1':\n                lst[i] += 1\n            i += 1\n        n -= 1\n    total = 0\n    for i in range(0, k):\n        total += lst[i] * (lst[i] - 1) // 2\n        i += 1\n    print(total)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    lst = [0] * k\n    while n > 0:\n        strg = input()\n        for i in range(0, k):\n            if strg[i] == '1':\n                lst[i] += 1\n            i += 1\n        n -= 1\n    total = 0\n    for i in range(0, k):\n        if lst[i] * (lst[i] - 1) // 2 >= 0:\n            total += lst[i] * (lst[i] - 1) // 2\n        i += 1\n    print(total)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (r, c) = map(int, input().split())\n    arr = []\n    for _ in range(r):\n        arr.append(input())\n    ans = 0\n    for j in range(c):\n        count = 0\n        for i in range(r):\n            if arr[i][j] == '1':\n                count += 1\n        ans = ans + count * (count - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    ans = 0\n    arr = []\n    for _ in range(r):\n        arr.append(input())\n    for j in range(c):\n        count = 0\n        for i in range(r):\n            if int(arr[i][j]) == 1:\n                count += 1\n        ans += count * (count - 1) // 2\n    print(ans)", "total_testcases = int(input())\nfor testcase in range(total_testcases):\n    (n, m) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        s = input()\n        for j in range(len(s)):\n            if s[j] == '1':\n                d[j] = d.get(j, 0) + 1\n    ans = 0\n    for (key, value) in d.items():\n        if value != 1:\n            ans += value * (value - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    check = [0] * m\n    for _ in range(n):\n        st = input()\n        for i in enumerate(st):\n            if i[1] == '1':\n                check[i[0]] += 1\n    s = 0\n    for i in check:\n        s += i * (i - 1) // 2\n    print(s)", "try:\n    for _ in range(int(input())):\n        (N, M) = map(int, input().split(' '))\n        A = [input() for __ in range(N)]\n        collisions = 0\n        for col in range(M):\n            count = 0\n            for row in range(N):\n                if A[row][col] == '1':\n                    count += 1\n            collisions += count * (count - 1) // 2\n        print(collisions)\nexcept EOFError:\n    pass", "t = int(input())\nfor i in range(t):\n    (r, c) = list(map(int, input().split()))\n    a = []\n    for j in range(r):\n        b = int(input())\n        a.append(b)\n    res = 0\n    for j in range(c):\n        p = 0\n        for k in range(r):\n            rem = a[k] % 10\n            a[k] = a[k] // 10\n            if rem == 1:\n                p = p + 1\n        res = res + p * (p - 1) // 2\n    print(res)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l1 = [0 for i in range(m)]\n    for i in range(n):\n        l = list(map(int, list(input())))\n        for j in range(m):\n            l1[j] += l[j]\n    ans = 0\n    for i in l1:\n        ans += i * (i - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    a = [int(i) for i in input().split()]\n    b = []\n    for i in range(a[0]):\n        c = input()\n        b.append(c)\n    ans = 0\n    for i in range(0, a[0]):\n        for j in range(i + 1, a[0]):\n            for k in range(0, a[1]):\n                if b[i][k] == '1' and b[j][k] == '1':\n                    ans += 1\n    print(ans)", "try:\n    for a in range(int(input())):\n        (n, m) = map(int, input().split())\n        value = [0 for b in range(m)]\n        for c in range(n):\n            string = input()\n            for i in range(m):\n                if string[i] == '1':\n                    value[i] += 1\n        ans = 0\n        for j in value:\n            ans += j * (j - 1) // 2\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = []\n    for i in range(a):\n        c += [input()]\n    e = 0\n    for i in range(b):\n        d = 0\n        for j in range(a):\n            if c[j][i] == '1':\n                d += 1\n        e += d * (d - 1) / 2\n    print(int(e))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = []\n    for i in range(a):\n        c += [input()]\n    e = 0\n    for i in range(b):\n        d = 0\n        for j in range(a):\n            if c[j][i] == '1':\n                d += 1\n        e += d * (d - 1) / 2\n    print(int(e))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] * m\n    ans = 0\n    for i in range(n):\n        c = list(input())\n        l = [int(i) + int(j) for (i, j) in zip(l, c)]\n    for j in l:\n        ans += j * (j - 1) // 2\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] * m\n    ans = 0\n    for i in range(n):\n        c = list(input())\n        l = [int(i) + int(j) for (i, j) in zip(l, c)]\n    for j in l:\n        ans += j * (j - 1) // 2\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] * m\n    ans = 0\n    for i in range(n):\n        c = list(input())\n        l = [int(i) + int(j) for (i, j) in zip(l, c)]\n    for j in l:\n        ans += j * (j - 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(1, t + 1):\n    nm = list(map(int, input().split()))\n    n = nm[0]\n    m = nm[1]\n    l = []\n    collision = 0\n    for j in range(1, n + 1):\n        l.append(list(map(int, list(input()))))\n    for k in range(0, m):\n        c = 0\n        for o in range(0, len(l)):\n            if l[o][k] == 1:\n                c = c + 1\n        collision = collision + int(c * (c - 1) / 2)\n    print(collision)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    for _ in range(a):\n        s = list(input())\n        l.append(s)\n    t = 0\n    for i in range(b):\n        n = 0\n        for j in range(a):\n            if l[j][i] == '1':\n                n += 1\n        if n > 1:\n            t += n * (n - 1) // 2\n    print(t)", "import math\n\ndef ncr(n, r):\n    return math.factorial(n) // math.factorial(r) // math.factorial(n - r) if n >= r else 0\nfor i in range(int(input())):\n    ((n, m), ans, a) = (map(int, input().split()), 0, [])\n    for z in range(n):\n        a.append(input())\n    a = [[a[y][x] for y in range(len(a))] for x in range(len(a[0]))]\n    for z in range(m):\n        ans += ncr(a[z].count('1'), 2)\n    print(ans)"]