["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    ma = max(a)\n    for i in a:\n        if i == ma:\n            count += 1\n    print((2 ** count - 1) % (10 ** 9 + 7))", "from collections import Counter\nmod = 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    a = d[max(d.keys())]\n    print((pow(2, a, mod) - 1) % mod)", "from collections import Counter\nmod = 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    a = d[max(d.keys())]\n    print((pow(2, a, mod) - 1) % mod)", "mod = 1000000007\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    ans = (pow(2, c, mod) - 1) % mod\n    print(ans)", "mod = 1000000007\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    ans = (pow(2, c, mod) - 1) % mod\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    md = 10 ** 9 + 7\n    mx = max(nli)\n    cnt = nli.count(mx)\n    ans = (pow(2, cnt) - 1) % md\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    ans = (pow(2, c, mod) - 1) % mod\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    ans = (pow(2, c, mod) - 1) % mod\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    print(pow(2, c, mod) - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for j in a:\n        if j == m:\n            c += 1\n    print(pow(2, c, 1000000007) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    print(pow(2, c, 1000000007) - 1)", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\ntestcases = vary(1)\nfor _ in range(testcases):\n    n = vary(1)\n    num = array_int()\n    ct = num.count(max(num))\n    print(pow(2, ct, 10 ** 9 + 7) - 1)", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\ntestcases = vary(1)\nfor _ in range(testcases):\n    n = vary(1)\n    num = array_int()\n    ct = num.count(max(num))\n    print(pow(2, ct, 10 ** 9 + 7) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = max(arr)\n    c = 0\n    for i in arr:\n        if i == m:\n            c += 1\n    print(pow(2, c, 1000000007) - 1)", "result = []\nfor _ in range(int(input())):\n    x = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    point = 0\n    for i in range(len(array)):\n        if array[len(array) - i - 1] == array[-1]:\n            point += 1\n        else:\n            break\n    result.append((2 ** point - 1) % (10 ** 9 + 7))\nfor i in result:\n    print(i)", "result = []\nfor _ in range(int(input())):\n    x = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    point = 0\n    for i in range(len(array)):\n        if array[len(array) - i - 1] == array[-1]:\n            point += 1\n        else:\n            break\n    result.append((2 ** point - 1) % (10 ** 9 + 7))\nfor i in result:\n    print(i)", "try:\n    result = []\n    mod = 10 ** 9 + 7\n    for _ in range(int(input())):\n        x = int(input())\n        array = list(map(int, input().split()))\n        array.sort()\n        point = 0\n        for i in range(len(array)):\n            if array[len(array) - i - 1] == array[-1]:\n                point += 1\n            else:\n                break\n        result.append((2 ** point - 1) % mod)\n    for i in result:\n        print(i)\nexcept:\n    pass", "try:\n    result = []\n    mod = 10 ** 9 + 7\n    for _ in range(int(input())):\n        x = int(input())\n        array = list(map(int, input().split()))\n        array.sort()\n        point = 0\n        for i in range(len(array)):\n            if array[len(array) - i - 1] == array[-1]:\n                point += 1\n            else:\n                break\n        result.append(2 ** point % mod - 1)\n    for i in result:\n        print(i)\nexcept:\n    pass", "try:\n    result = []\n    mod = 10 ** 9 + 7\n    for _ in range(int(input())):\n        x = int(input())\n        array = list(map(int, input().split()))\n        array.sort()\n        point = 0\n        for i in range(len(array)):\n            if array[len(array) - i - 1] == array[-1]:\n                point += 1\n            else:\n                break\n        result.append(pow(2, point, mod) - 1)\n    for i in result:\n        print(i)\nexcept:\n    pass", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ss = 0\n    k = a[-1]\n    i = n - 1\n    while a[i] == k and i >= 0:\n        ss += 1\n        i -= 1\n    print(pow(2, ss, mod) - 1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((pow(2, a.count(max(a))) - 1) % (10 ** 9 + 7))", "for j in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    a = x.count(max(x))\n    b = 2 ** a - 1\n    print(b % 1000000007)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((pow(2, a.count(max(a))) - 1) % (10 ** 9 + 7))", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(l)\n    x = l.count(x)\n    ans = (pow(2, x, e) - 1) % e\n    print(ans)", "import math\nM = 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = max(a)\n    f = 0\n    for j in range(n):\n        if k == a[j]:\n            f += 1\n    g = pow(2, f)\n    g -= 1\n    print(g % M)", "for u in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l.count(max(l))\n    print((2 ** m - 1) % (10 ** 9 + 7))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mc = a.count(max(a))\n    print((2 ** mc - 1) % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    count = 0\n    count1 = 0\n    m = 10 ** 9 + 7\n    for i in l:\n        if i != l[-1]:\n            count += 1\n        else:\n            count1 += 1\n    a = (pow(2, count1, m) - 1 % m) % m\n    print(a % m)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if n == 1:\n        print(1)\n    elif l.count(max(l)) == n:\n        ans = pow(2, n, MOD) - 1\n        ans = (ans + MOD) % MOD\n        print(ans)\n    else:\n        m = max(l)\n        cnt = 1\n        maxicnt = l.count(m)\n        cnt += pow(2, maxicnt, MOD) - 2\n        print((cnt + MOD) % MOD)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    max1 = max(a)\n    ct = 0\n    for i in a:\n        if i == max1:\n            ct += 1\n    print((2 ** ct - 1) % (10 ** 9 + 7))", "mm = 10 ** 9 + 7\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    count = 0\n    for i in a:\n        if i == m:\n            count += 1\n    ans = 1\n    for i in range(count):\n        ans *= 2\n        ans %= mm\n    print(ans - 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    i = n - 1\n    count = 0\n    while i >= 0 and l[i] == l[n - 1]:\n        count += 1\n        i = i - 1\n    print(pow(2, count, 1000000007) - 1)", "import math\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    M = A.count(max(A))\n    print(int((2 ** M - 1) % 1000000007))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    List = []\n    list = input()\n    finalList = list.split(' ')\n    for i in finalList:\n        a = int(i)\n        List.append(a)\n    List.sort()\n    if n == 1:\n        print('1')\n    elif List[0] == List[n - 1]:\n        print((2 ** n - 1) % 1000000007)\n    else:\n        count = 0\n        temp = List[0]\n        for i in range(0, n):\n            if temp == List[i]:\n                count += 1\n            else:\n                count = 1\n                temp = List[i]\n        print((2 ** count - 1) % 1000000007)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((2 ** a.count(max(a)) - 1) % 1000000007)", "a = []\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = -1\n    count = 0\n    ans = 1\n    for i in range(0, n):\n        if a[i] > maxi:\n            maxi = a[i]\n    for i in range(0, n):\n        if a[i] == maxi:\n            count = count + 1\n    while count > 0:\n        ans = ans * 2 % 1000000007\n        count = count - 1\n    print(ans - 1)\n    t = t - 1", "for ti in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(a.count(max(a))):\n        ans = (ans << 1 | 1) % 1000000007\n    print(ans)", "numCases = int(input())\nfor eachCase in range(numCases):\n    numSize = int(input())\n    numTup = tuple(map(int, input().split(' ')))\n    (maxnum, maxcount) = (0, 0)\n    for eachNum in numTup:\n        if eachNum > maxnum:\n            (maxnum, maxcount) = (eachNum, 1)\n        elif eachNum == maxnum:\n            maxcount += 1\n    print((2 ** maxcount - 1) % 1000000007)", "import sys\nT = int(sys.stdin.readline().rstrip('\\n'))\nfor t in range(T):\n    sys.stdin.readline()\n    array = [int(i) for i in sys.stdin.readline().rstrip('\\n').split(' ')]\n    N = array.count(max(array))\n    print((2 ** N - 1) % (10 ** 9 + 7))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    x = max(L)\n    i = L.count(x)\n    p = pow(2, i, 10 ** 9 + 7)\n    p -= 1\n    if p < 0:\n        p += 10 ** 9 + 7\n    print(p)"]