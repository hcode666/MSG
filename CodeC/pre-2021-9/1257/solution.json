["import collections\nimport sys\nsys.setrecursionlimit(10 ** 9)\n\ndef dfs(u, ii):\n    vis[u] = ii\n    for (v, wt) in g[u]:\n        if v not in vis:\n            x_vals[v] = x_vals[u] ^ wt\n            dfs(v, ii)\n        elif x_vals[v] != x_vals[u] ^ wt:\n            print(-1)\n            exit(0)\n(n, m, k) = map(int, input().split())\nk -= 1\ng = collections.defaultdict(list)\nfor i in range(m):\n    (x, y, z) = map(int, input().split())\n    g[x].append((y, z))\n    g[y].append((x, z))\nvis = {}\nx_vals = [0 for i in range(n + 1)]\nlast = ii = 0\nfor i in range(1, n + 1):\n    if i not in vis:\n        dfs(i, ii)\n        last = i\n        ii += 1\nfor i in range(1, n + 1):\n    if vis[i] == vis[last]:\n        x_vals[i] ^= k\nprint(*x_vals[1:])", "import collections\nimport sys\nsys.setrecursionlimit(10 ** 9)\n\ndef dfs(u, ii):\n    vis[u] = ii\n    for (v, wt) in g[u]:\n        if v not in vis:\n            x_vals[v] = x_vals[u] ^ wt\n            dfs(v, ii)\n        elif x_vals[v] != x_vals[u] ^ wt:\n            print(-1)\n            exit(0)\n(n, m, k) = map(int, input().split())\nk -= 1\ng = collections.defaultdict(list)\nfor i in range(m):\n    (x, y, z) = map(int, input().split())\n    g[x].append((y, z))\n    g[y].append((x, z))\nvis = {}\nx_vals = [0 for i in range(n + 1)]\nlast = ii = 0\nfor i in range(1, n + 1):\n    if i not in vis:\n        dfs(i, ii)\n        last = i\n        ii += 1\nfor i in range(1, n + 1):\n    if vis[i] == vis[last]:\n        x_vals[i] ^= k\nprint(*x_vals[1:])"]