["t = int(input())\nfor _ in range(t):\n    (x, y, z) = list(map(int, input().split()))\n    a = [[0] * z for _ in range(y)]\n    for i in range(x):\n        b = [0] * z\n        for j in range(y):\n            l = list(map(int, input().split()))\n            print(l[0] - b[0] - a[j][0], end=' ')\n            s = l[0] - b[0] - a[j][0]\n            b[0] += s\n            for k in range(1, z):\n                e = l[k] - b[k] - a[j][k] - s\n                print(e, end=' ')\n                s += e\n                b[k] += s\n            print()\n            a[j] = l", "t = int(input())\nfor _ in range(t):\n    (x, y, z) = list(map(int, input().split()))\n    a = [[0] * z for _ in range(y)]\n    for i in range(x):\n        b = [0] * z\n        for j in range(y):\n            l = list(map(int, input().split()))\n            print(l[0] - b[0] - a[j][0], end=' ')\n            s = l[0] - b[0] - a[j][0]\n            b[0] += s\n            for k in range(1, z):\n                e = l[k] - b[k] - a[j][k] - s\n                print(e, end=' ')\n                s += e\n                b[k] += s\n            print()\n            a[j] = l", "t = int(input())\nfor _ in range(t):\n    (x, y, z) = list(map(int, input().split()))\n    a = [[0] * z for _ in range(y)]\n    for i in range(x):\n        b = [0] * z\n        for j in range(y):\n            l = list(map(int, input().split()))\n            print(l[0] - b[0] - a[j][0], end=' ')\n            s = l[0] - b[0] - a[j][0]\n            b[0] += s\n            for k in range(1, z):\n                e = l[k] - b[k] - a[j][k] - s\n                print(e, end=' ')\n                s += e\n                b[k] += s\n            print()\n            a[j] = l", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "import math\n\ndef answer_finder():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "t = int(input())\nfor _ in range(t):\n    (x, y, z) = list(map(int, input().split()))\n    a = [[0] * z for _ in range(y)]\n    for i in range(x):\n        b = [0] * z\n        for j in range(y):\n            l = list(map(int, input().split()))\n            print(l[0] - b[0] - a[j][0], end=' ')\n            s = l[0] - b[0] - a[j][0]\n            b[0] += s\n            for k in range(1, z):\n                e = l[k] - b[k] - a[j][k] - s\n                print(e, end=' ')\n                s += e\n                b[k] += s\n            print()\n            a[j] = l", "import math\n\ndef solver():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\nfor _ in range(int(input())):\n    solver()", "import math\n\ndef solver():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\nfor _ in range(int(input())):\n    solver()", "def check(B, i, j, k):\n    if i >= 0 and j >= 0 and (k >= 0):\n        return B[i][j][k]\n    return 0\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    B = [[[] for i in range(y)] for j in range(x)]\n    for i in range(x):\n        for j in range(y):\n            B[i][j] = list(map(int, input().split()))\n    A = [[[0 for i in range(z)] for j in range(y)] for k in range(x)]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                A[i][j][k] = check(B, i, j, k) - check(B, i - 1, j, k) - check(B, i, j - 1, k) - check(B, i, j, k - 1) + check(B, i - 1, j - 1, k) + check(B, i, j - 1, k - 1) + check(B, i - 1, j, k - 1) - check(B, i - 1, j - 1, k - 1)\n    for i in range(x):\n        for j in range(y):\n            print(*A[i][j])", "import copy\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    a = []\n    for i in range(x):\n        t1 = []\n        for j in range(y):\n            t2 = list(map(int, input().split()))\n            t1.append(t2)\n        a.append(t1)\n    d = copy.deepcopy(a)\n\n    def solve(p, q, r):\n        ans = 0\n        if p > 0:\n            if q > 0:\n                if r > 0:\n                    ans -= d[p - 1][q - 1][r - 1]\n                    ans += d[p - 1][q - 1][r]\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p - 1][q - 1][r]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q][r]\n        if p <= 0:\n            if q > 0:\n                if r > 0:\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p][q][r]\n        return ans\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                a[i][j][k] = solve(i, j, k)\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                print(a[i][j][k], end=' ')\n            print('')", "def check(B, i, j, k):\n    if i >= 0 and j >= 0 and (k >= 0):\n        return B[i][j][k]\n    return 0\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    B = [[[] for i in range(y)] for j in range(x)]\n    for i in range(x):\n        for j in range(y):\n            B[i][j] = list(map(int, input().split()))\n    A = [[[0 for i in range(z)] for j in range(y)] for k in range(x)]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                A[i][j][k] = check(B, i, j, k) - check(B, i - 1, j, k) - check(B, i, j - 1, k) - check(B, i, j, k - 1) + check(B, i - 1, j - 1, k) + check(B, i, j - 1, k - 1) + check(B, i - 1, j, k - 1) - check(B, i - 1, j - 1, k - 1)\n    for i in range(x):\n        for j in range(y):\n            print(*A[i][j])", "def check(B, i, j, k):\n    if i >= 0 and j >= 0 and (k >= 0):\n        return B[i][j][k]\n    return 0\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    B = [[[] for i in range(y)] for j in range(x)]\n    for i in range(x):\n        for j in range(y):\n            B[i][j] = list(map(int, input().split()))\n    A = [[[0 for i in range(z)] for j in range(y)] for k in range(x)]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                A[i][j][k] = check(B, i, j, k) - check(B, i - 1, j, k) - check(B, i, j - 1, k) - check(B, i, j, k - 1) + check(B, i - 1, j - 1, k) + check(B, i, j - 1, k - 1) + check(B, i - 1, j, k - 1) - check(B, i - 1, j - 1, k - 1)\n    for i in range(x):\n        for j in range(y):\n            print(*A[i][j])", "def b(B, i, j, k):\n    if i >= 0 and j >= 0 and (k >= 0):\n        return B[i][j][k]\n    else:\n        return 0\nfor t in range(int(input())):\n    (X, Y, Z) = map(int, input().split())\n    B = [[0 for j in range(Y)] for i in range(X)]\n    for i in range(X):\n        for j in range(Y):\n            B[i][j] = list(map(int, input().split()))\n    A = [[[0 for k in range(Z)] for j in range(Y)] for i in range(X)]\n    for i in range(X):\n        for j in range(Y):\n            for k in range(Z):\n                A[i][j][k] = b(B, i, j, k) - b(B, i - 1, j, k) - b(B, i, j - 1, k) - b(B, i, j, k - 1) + b(B, i - 1, j - 1, k) + b(B, i - 1, j, k - 1) + b(B, i, j - 1, k - 1) - b(B, i - 1, j - 1, k - 1)\n    for i in range(X):\n        for j in range(Y):\n            print(*A[i][j])", "for _ in range(int(input())):\n    (i, j, k) = tuple(map(int, input().split()))\n    m = [[[0 for z in range(k + 1)] for y in range(j + 1)]]\n    for x in range(i):\n        semi_matrix = [[0 for z in range(k + 1)]]\n        for y in range(j):\n            semi_matrix.append(list(map(int, ['0'] + input().split())))\n        m.append(semi_matrix)\n    for x in range(1, i + 1):\n        for y in range(1, j + 1):\n            for z in range(1, k + 1):\n                print(m[x][y][z] - m[x][y][z - 1] - m[x - 1][y][z] - m[x][y - 1][z] + m[x - 1][y - 1][z] + m[x - 1][y][z - 1] + m[x][y - 1][z - 1] - m[x - 1][y - 1][z - 1], end=' ')\n            print()", "import math\n\ndef Solve():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    Solve()", "for _ in range(int(input())):\n    (i, j, k) = tuple(map(int, input().split()))\n    m = [[[0 for z in range(k + 1)] for y in range(j + 1)]]\n    for x in range(i):\n        semi_matrix = [[0 for z in range(k + 1)]]\n        for y in range(j):\n            semi_matrix.append(list(map(int, ['0'] + input().split())))\n        m.append(semi_matrix)\n    for x in range(1, i + 1):\n        for y in range(1, j + 1):\n            for z in range(1, k + 1):\n                print(m[x][y][z] - m[x][y][z - 1] - m[x - 1][y][z] - m[x][y - 1][z] + m[x - 1][y - 1][z] + m[x - 1][y][z - 1] + m[x][y - 1][z - 1] - m[x - 1][y - 1][z - 1], end=' ')\n            print()", "import copy\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    a = []\n    for i in range(x):\n        t1 = []\n        for j in range(y):\n            t2 = list(map(int, input().split()))\n            t1.append(t2)\n        a.append(t1)\n    d = copy.deepcopy(a)\n\n    def solve(p, q, r):\n        ans = 0\n        if p > 0:\n            if q > 0:\n                if r > 0:\n                    ans -= d[p - 1][q - 1][r - 1]\n                    ans += d[p - 1][q - 1][r]\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p - 1][q - 1][r]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q][r]\n        if p <= 0:\n            if q > 0:\n                if r > 0:\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p][q][r]\n        return ans\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                a[i][j][k] = solve(i, j, k)\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                print(a[i][j][k], end=' ')\n            print('')", "import copy\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    a = []\n    for i in range(x):\n        t1 = []\n        for j in range(y):\n            t2 = list(map(int, input().split()))\n            t1.append(t2)\n        a.append(t1)\n    d = copy.deepcopy(a)\n\n    def solve(p, q, r):\n        ans = 0\n        if p > 0:\n            if q > 0:\n                if r > 0:\n                    ans -= d[p - 1][q - 1][r - 1]\n                    ans += d[p - 1][q - 1][r]\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p - 1][q - 1][r]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans += d[p - 1][q][r - 1]\n                    ans -= d[p - 1][q][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p - 1][q][r]\n                    ans += d[p][q][r]\n        if p <= 0:\n            if q > 0:\n                if r > 0:\n                    ans += d[p][q - 1][r - 1]\n                    ans -= d[p][q - 1][r]\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans -= d[p][q - 1][r]\n                    ans += d[p][q][r]\n            if q <= 0:\n                if r > 0:\n                    ans -= d[p][q][r - 1]\n                    ans += d[p][q][r]\n                if r <= 0:\n                    ans += d[p][q][r]\n        return ans\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                a[i][j][k] = solve(i, j, k)\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                print(a[i][j][k], end=' ')\n            print('')", "import math\n\ndef answer_finder():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "import math\n\ndef answer_finder():\n    (x, y, z) = [int(x) for x in input().split()]\n    arr = [[] for _ in range(x)]\n    for idx in range(x * y):\n        temp = [int(x) for x in input().split()]\n        row = math.floor(idx / y)\n        arr[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                arr[i][j][k] -= arr[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                arr[i][j][k] -= arr[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                arr[i][j][k] -= arr[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join([str(t) for t in arr[i][j]]))\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "T = int(input())\nfor _ in range(T):\n    (x, y, z) = list(map(int, input().split()))\n    B = [[] for r in range(x)]\n    for k in range(0, x * y):\n        temp = list(map(int, input().split()))\n        row = k // y\n        B[row].append(temp)\n    for i in range(x - 1, 0, -1):\n        for j in range(y):\n            for k in range(z):\n                B[i][j][k] -= B[i - 1][j][k]\n    for i in range(x):\n        for j in range(y - 1, 0, -1):\n            for k in range(z):\n                B[i][j][k] -= B[i][j - 1][k]\n    for i in range(x):\n        for j in range(y):\n            for k in range(z - 1, 0, -1):\n                B[i][j][k] -= B[i][j][k - 1]\n    for i in range(x):\n        for j in range(y):\n            print(' '.join(list(map(str, B[i][j]))))", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp[k - 1]\n    solve()", "def solve():\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            for k in range(1, Z + 1):\n                print(A[i][j][k] - A[i - 1][j][k] - A[i][j - 1][k] - A[i][j][k - 1] + A[i - 1][j - 1][k] + A[i - 1][j][k - 1] + A[i][j - 1][k - 1] - A[i - 1][j - 1][k - 1], end=' ')\n            print()\nt = int(input())\nfor _ in range(t):\n    (X, Y, Z) = list(map(int, input().split()))\n    A = [[[0 for k in range(Z + 1)] for j in range(Y + 1)] for i in range(X + 1)]\n    for i in range(1, X + 1):\n        for j in range(1, Y + 1):\n            temp = list(map(int, input().split()))[::-1]\n            for k in range(1, Z + 1):\n                A[i][j][k] = temp.pop()\n    solve()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    b = []\n    for i in range(x * y):\n        b.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = b[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + j][k - 1] + b[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] + b[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[(i - 1) * y + (j - 1)][k] + b[(i - 1) * y + j][k - 1] + b[i * y + (j - 1)][k - 1] - b[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        print(*i)", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    b = []\n    for i in range(x * y):\n        b.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = b[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + j][k - 1] + b[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] + b[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[(i - 1) * y + (j - 1)][k] + b[(i - 1) * y + j][k - 1] + b[i * y + (j - 1)][k - 1] - b[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "def fun(b, x, y, z):\n    a = [[0] * z for i in range(x * y)]\n    for i in range(x * y):\n        if i % y == 0:\n            for j in range(z):\n                a[i][j] = f(i, j) + f(i - y, j - 1) - f(i, j - 1) - f(i - y, j)\n        else:\n            for j in range(z):\n                a[i][j] = f(i, j) + f(i - 1, j - 1) + f(i - y, j - 1) + f(i - y - 1, j) - f(i, j - 1) - f(i - 1, j) - f(i - y, j) - f(i - y - 1, j - 1)\n    return a\n\ndef f(i, j):\n    if i >= 0 and j >= 0:\n        return b[i][j]\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    (x, y, z) = list(map(int, input().split()))\n    b = [[0] * z for i in range(x * y)]\n    for i in range(x * y):\n        t = list(map(int, input().split()))\n        b[i] = t[:]\n    a = fun(b, x, y, z)\n    for i in range(x * y):\n        for j in range(z):\n            print(a[i][j], end=' ')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    b = []\n    for i in range(x * y):\n        b.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = b[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + j][k - 1] + b[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] + b[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = b[i * y + j][k] - b[(i - 1) * y + j][k] - b[i * y + (j - 1)][k] - b[i * y + j][k - 1] + b[(i - 1) * y + (j - 1)][k] + b[(i - 1) * y + j][k - 1] + b[i * y + (j - 1)][k - 1] - b[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()", "for i in range(int(input())):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    l = [[0 for i in range(z)] for j in range(x * y)]\n    l1 = []\n    for i in range(x * y):\n        l1.append(list(map(int, input().split())))\n    for i in range(x):\n        for j in range(y):\n            for k in range(z):\n                if i == 0 and j == 0 and (k == 0):\n                    l[i * y + j][k] = l1[i * y + j][k]\n                elif i == 0 and j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + j][k - 1]\n                elif i == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k]\n                elif j == 0 and k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k]\n                elif i == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[i * y + (j - 1)][k - 1]\n                elif j == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + j][k - 1]\n                elif k == 0:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] + l1[(i - 1) * y + (j - 1)][k]\n                else:\n                    l[i * y + j][k] = l1[i * y + j][k] - l1[(i - 1) * y + j][k] - l1[i * y + (j - 1)][k] - l1[i * y + j][k - 1] + l1[(i - 1) * y + (j - 1)][k] + l1[(i - 1) * y + j][k - 1] + l1[i * y + (j - 1)][k - 1] - l1[(i - 1) * y + (j - 1)][k - 1]\n    for i in l:\n        for j in i:\n            print(j, '', end='')\n        print()"]