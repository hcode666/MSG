["def bit_dishes(str_dishes):\n    dishes = [0] * 32\n    (a, e, i, o, u) = (1, 1 << 1, 1 << 2, 1 << 3, 1 << 4)\n    for str_dish in str_dishes:\n        dish = 0\n        for c in str_dish:\n            if c == 'a':\n                dish |= a\n            elif c == 'e':\n                dish |= e\n            elif c == 'i':\n                dish |= i\n            elif c == 'o':\n                dish |= o\n            elif c == 'u':\n                dish |= u\n            if dish == 31:\n                break\n        dishes[dish] += 1\n    return dishes\n\ndef count_good(dishes):\n    res = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += dishes[i] * dishes[j]\n    res += dishes[31] * (dishes[31] - 1) // 2\n    return res\ntrials = int(input())\nfor _ in range(trials):\n    n = int(input())\n    dishes = [''] * n\n    for i in range(n):\n        dishes[i] = input()\n    dishes = bit_dishes(dishes)\n    print(count_good(dishes))", "import itertools\npower_set = [''.join(map(str, k)) for k in map(list, itertools.product([0, 1], repeat=5))]\n\ndef get_bitmask(S):\n    indexes = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    bitmask = [0] * 5\n    for ch in S:\n        bitmask[indexes[ch]] = 1\n    return\n\ndef get_mask(S):\n    indexes = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    mask = 0\n    for ch in S:\n        mask += 2 ** indexes[ch]\n    return mask\n\ndef find_union(x, y):\n    res = ''\n    for (p, q) in zip(x, y):\n        res += str(int(p) or int(q))\n    return res\nfor i in range(int(input())):\n    N = int(input())\n    di_set = []\n    dp = [0] * 32\n    for _ in range(N):\n        mask = get_mask(set(input()))\n        dp[mask] += 1\n    likes_dishes = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                likes_dishes += dp[i] * dp[j]\n    likes_dishes += dp[31] * (dp[31] - 1) // 2\n    print(likes_dishes)", "import itertools\npower_set = [''.join(map(str, k)) for k in map(list, itertools.product([0, 1], repeat=5))]\n\ndef get_bitmask(S):\n    indexes = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    bitmask = [0] * 5\n    for ch in S:\n        bitmask[indexes[ch]] = 1\n    return\n\ndef get_mask(S):\n    indexes = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    mask = 0\n    for ch in S:\n        mask += 2 ** indexes[ch]\n    return mask\n\ndef find_union(x, y):\n    res = ''\n    for (p, q) in zip(x, y):\n        res += str(int(p) or int(q))\n    return res\nfor i in range(int(input())):\n    N = int(input())\n    di_set = []\n    dp = [0] * 32\n    for _ in range(N):\n        mask = get_mask(set(input()))\n        dp[mask] += 1\n    likes_dishes = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                likes_dishes += dp[i] * dp[j]\n    likes_dishes += dp[31] * (dp[31] - 1) // 2\n    print(likes_dishes)", "def li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\n\ndef make():\n    d = {}\n    d['a'] = 0\n    d['e'] = 0\n    d['i'] = 0\n    d['o'] = 0\n    d['u'] = 0\n    return d\nar = [[''], ['u'], ['o'], ['o', 'u'], ['i'], ['i', 'u'], ['i', 'o'], ['i', 'o', 'u'], ['e'], ['e', 'u'], ['e', 'o'], ['e', 'o', 'u'], ['e', 'i'], ['e', 'i', 'u'], ['e', 'i', 'o'], ['e', 'i', 'o', 'u'], ['a'], ['a', 'u'], ['a', 'o'], ['a', 'o', 'u'], ['a', 'i'], ['a', 'i', 'u'], ['a', 'i', 'o'], ['a', 'i', 'o', 'u'], ['a', 'e'], ['a', 'e', 'u'], ['a', 'e', 'o'], ['a', 'e', 'o', 'u'], ['a', 'e', 'i'], ['a', 'e', 'i', 'u'], ['a', 'e', 'i', 'o'], ['a', 'e', 'i', 'o', 'u']]\nfor tastcas in range(int(input())):\n    n = ii()\n    c = [0] * 32\n    ans = 0\n    nn = n - 1\n    for i in range(n):\n        s = input()\n        v = make()\n        w = ''\n        for i in s:\n            v[i] = 1\n        for (k, v) in sorted(v.items()):\n            w += str(v)\n        c[int(w, 2)] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 31):\n            if len(set(ar[i] + ar[j])) == 5:\n                ans += c[i] * c[j]\n    tt = nn - c[-1]\n    ans += nn * (nn + 1) // 2 - tt * (tt + 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    f = [0] * 32\n    for j in range(n):\n        s = set(input())\n        m = 0\n        for j in s:\n            if j == 'a':\n                m = m | 1 << 0\n            elif j == 'e':\n                m = m | 1 << 1\n            elif j == 'i':\n                m = m | 1 << 2\n            elif j == 'o':\n                m = m | 1 << 3\n            else:\n                m = m | 1 << 4\n        f[m] += 1\n    for k in range(1, 31):\n        for z in range(k + 1, 32):\n            if k | z == 31:\n                c += f[k] * f[z]\n    c += f[31] * (f[31] - 1) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    f = [0] * 32\n    for _ in range(n):\n        s = set(input())\n        mask = 0\n        for i in s:\n            if i == 'a':\n                mask = mask | 1 << 0\n            elif i == 'e':\n                mask = mask | 1 << 1\n            elif i == 'i':\n                mask = mask | 1 << 2\n            elif i == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        f[mask] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                c += f[i] * f[j]\n    c += f[31] * (f[31] - 1) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    f = [0] * 32\n    for _ in range(n):\n        s = set(input())\n        mask = 0\n        for i in s:\n            if i == 'a':\n                mask = mask | 1 << 0\n            elif i == 'e':\n                mask = mask | 1 << 1\n            elif i == 'i':\n                mask = mask | 1 << 2\n            elif i == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        f[mask] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                c += f[i] * f[j]\n    c += f[31] * (f[31] - 1) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    bit = [0] * 32\n    for i in range(n):\n        s = set(input())\n        mask = 0\n        for i in s:\n            if i == 'a':\n                mask = mask | 1 << 0\n            if i == 'e':\n                mask = mask | 1 << 1\n            if i == 'i':\n                mask = mask | 1 << 2\n            if i == 'o':\n                mask = mask | 1 << 3\n            if i == 'u':\n                mask = mask | 1 << 4\n        bit[mask] += 1\n    count = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                count += bit[i] * bit[j]\n    count += bit[31] * (bit[31] - 1) // 2\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    F = [0] * 32\n    res = 0\n    for i in range(n):\n        s = set(input())\n        mask = 0\n        for ch in s:\n            if ch == 'a':\n                mask |= 1 << 0\n            if ch == 'e':\n                mask |= 1 << 1\n            if ch == 'i':\n                mask |= 1 << 2\n            if ch == 'o':\n                mask |= 1 << 3\n            if ch == 'u':\n                mask |= 1 << 4\n        F[mask] += 1\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += F[i] * F[j]\n    res += F[31] * (F[31] - 1) // 2\n    print(res)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    dp = [0] * 32\n    for _ in range(n):\n        s = input()\n        temp = 0\n        for ch in s:\n            if ch == 'a':\n                temp = temp | 1 << 0\n            elif ch == 'e':\n                temp = temp | 1 << 1\n            elif ch == 'i':\n                temp = temp | 1 << 2\n            elif ch == 'o':\n                temp = temp | 1 << 3\n            else:\n                temp = temp | 1 << 4\n        dp[temp] += 1\n    ans = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += dp[i] * dp[j]\n    ans += dp[31] * (dp[31] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    dp = [0] * 32\n    for i in range(n):\n        my_set = list(input().strip())\n        my_set = set(my_set)\n        mask = 0\n        for j in my_set:\n            if j == 'a':\n                mask = mask | 1 << 0\n            if j == 'e':\n                mask = mask | 1 << 1\n            if j == 'i':\n                mask = mask | 1 << 2\n            if j == 'o':\n                mask = mask | 1 << 3\n            if j == 'u':\n                mask = mask | 1 << 4\n        dp[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans = ans + dp[i] * dp[j]\n    ans = ans + dp[31] * (dp[31] - 1) // 2\n    print(ans)", "class Solution(object):\n\n    def tastyMeal(self, dishes):\n        freq = [0] * 32\n        for d in range(len(dishes)):\n            mask = 0\n            dish = dishes[d]\n            for ch in dish:\n                if ch == 'a':\n                    mask = mask | 1 << 0\n                if ch == 'e':\n                    mask = mask | 1 << 1\n                if ch == 'i':\n                    mask = mask | 1 << 2\n                if ch == 'o':\n                    mask = mask | 1 << 3\n                if ch == 'u':\n                    mask = mask | 1 << 4\n            freq[mask] = freq[mask] + 1\n        tasty_dishes = 0\n        for i in range(32):\n            for j in range(i + 1, 32):\n                if i | j == 31:\n                    tasty_dishes = tasty_dishes + freq[i] * freq[j]\n        tasty_dishes = tasty_dishes + freq[31] * (freq[31] - 1) // 2\n        return tasty_dishes\nt = int(input())\nfor _ in range(t):\n    dishes = []\n    n = int(input())\n    for i in range(n):\n        dishes.append(input())\n    sol = Solution()\n    ans = sol.tastyMeal(dishes)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    dp = [0] * 32\n    arr = []\n    for _ in range(n):\n        s = input()\n        temp = 0\n        for ch in s:\n            if ch == 'a':\n                temp = temp | 1 << 0\n            elif ch == 'e':\n                temp = temp | 1 << 1\n            elif ch == 'i':\n                temp = temp | 1 << 2\n            elif ch == 'o':\n                temp = temp | 1 << 3\n            else:\n                temp = temp | 1 << 4\n        dp[temp] += 1\n    ans = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += dp[i] * dp[j]\n    ans += dp[31] * (dp[31] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    dp = [0] * 32\n    for _ in range(n):\n        string = input()\n        temp = 0\n        for ch in string:\n            if ch == 'a':\n                temp = temp | 1 << 0\n            elif ch == 'e':\n                temp = temp | 1 << 1\n            elif ch == 'i':\n                temp = temp | 1 << 2\n            elif ch == 'o':\n                temp = temp | 1 << 3\n            else:\n                temp = temp | 1 << 4\n        dp[temp] += 1\n    ans = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += dp[i] * dp[j]\n    ans += dp[31] * (dp[31] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    F = [0] * 32\n    for i in range(N):\n        mask = 0\n        s = input()\n        for j in s:\n            if j == 'a':\n                mask = mask | 1 << 0\n            elif j == 'e':\n                mask = mask | 1 << 1\n            elif j == 'i':\n                mask = mask | 1 << 2\n            elif j == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        F[mask] += 1\n    res = 0\n    for i in range(1, 32):\n        if F[i] > 0:\n            for j in range(i + 1, 32):\n                if i | j == 31 and F[j] > 0:\n                    res = res + F[i] * F[j]\n    res = res + F[31] * (F[31] - 1) // 2\n    print(res)", "t = int(input())\nbinrep = {'a': 16, 'e': 8, 'i': 4, 'o': 2, 'u': 1}\n\ndef convert(ch):\n    return binrep[ch]\nwhile t:\n    n = int(input())\n    binrepfreq = [0] * 32\n    ans = 0\n    for i in range(n):\n        rep = sum(map(convert, set(list(input()))))\n        binrepfreq[rep] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                pairscount = binrepfreq[i] * binrepfreq[j]\n                ans += pairscount\n    pair31 = (binrepfreq[31] * binrepfreq[31] - binrepfreq[31]) // 2\n    ans += pair31\n    print(ans)\n    t -= 1", "t = int(input())\nbinrep = {'a': 16, 'e': 8, 'i': 4, 'o': 2, 'u': 1}\n\ndef convert(ch):\n    return binrep[ch]\nwhile t:\n    n = int(input())\n    binrepfreq = [0] * 32\n    ans = 0\n    for i in range(n):\n        rep = sum(map(convert, set(list(input()))))\n        binrepfreq[rep] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i == j:\n                continue\n            if i | j == 31:\n                pairscount = binrepfreq[i] * binrepfreq[j]\n                ans += pairscount\n    pair31 = (binrepfreq[31] * binrepfreq[31] - binrepfreq[31]) // 2\n    ans += pair31\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    f = [0] * 32\n    l = len(f)\n    for i in range(n):\n        m = 0\n        s = input()\n        if 'a' in s:\n            m = m | 1 << 0\n        if 'e' in s:\n            m = m | 1 << 1\n        if 'i' in s:\n            m = m | 1 << 2\n        if 'o' in s:\n            m = m | 1 << 3\n        if 'u' in s:\n            m = m | 1 << 4\n        f[m] += 1\n    c = 0\n    for i in range(l + 1):\n        for j in range(i + 1, l + 1):\n            if i | j == 31:\n                c += f[i] * f[j]\n    d = f[31]\n    d = d * (d - 1) // 2\n    c += d\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    f = [0] * 32\n    l = len(f)\n    for i in range(n):\n        m = 0\n        s = input()\n        if 'a' in s:\n            m = m | 1 << 0\n        if 'e' in s:\n            m = m | 1 << 1\n        if 'i' in s:\n            m = m | 1 << 2\n        if 'o' in s:\n            m = m | 1 << 3\n        if 'u' in s:\n            m = m | 1 << 4\n        f[m] += 1\n    c = 0\n    for i in range(l + 1):\n        for j in range(i + 1, l + 1):\n            if i | j == 31:\n                c += f[i] * f[j]\n    d = f[31]\n    d = d * (d - 1) // 2\n    c += d\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    f = [0] * 32\n    l = len(f)\n    for i in range(n):\n        m = 0\n        s = input()\n        if 'a' in s:\n            m = m | 1 << 0\n        if 'e' in s:\n            m = m | 1 << 1\n        if 'i' in s:\n            m = m | 1 << 2\n        if 'o' in s:\n            m = m | 1 << 3\n        if 'u' in s:\n            m = m | 1 << 4\n        f[m] += 1\n    c = 0\n    for i in range(l + 1):\n        for j in range(i + 1, l + 1):\n            if i | j == 31:\n                c += f[i] * f[j]\n    d = f[31]\n    d = d * (d - 1) // 2\n    c += d\n    print(c)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    lst = [0] * (1 << 5)\n    for j in range(n):\n        ans = 0\n        for k in input():\n            if k == 'a':\n                ans |= 1 << 0\n            elif k == 'e':\n                ans |= 1 << 1\n            elif k == 'i':\n                ans |= 1 << 2\n            elif k == 'o':\n                ans |= 1 << 3\n            else:\n                ans |= 1 << 4\n        lst[ans] += 1\n    ans = 0\n    for j in range(1, 31):\n        for k in range(j, 32):\n            if j | k == 31:\n                ans += lst[j] * lst[k]\n    ans += lst[31] * (lst[31] - 1) // 2\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = [0] * (1 << 5)\n    for j in range(n):\n        ans = 0\n        for k in input():\n            if k == 'a':\n                ans |= 1 << 0\n            elif k == 'e':\n                ans |= 1 << 1\n            elif k == 'i':\n                ans |= 1 << 2\n            elif k == 'o':\n                ans |= 1 << 3\n            else:\n                ans |= 1 << 4\n        lst[ans] += 1\n    ans = 0\n    for j in range(1, 31):\n        for k in range(j, 32):\n            if j | k == 31:\n                ans += lst[j] * lst[k]\n    ans += lst[31] * (lst[31] - 1) // 2\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = [0] * (1 << 5)\n    for j in range(n):\n        ans = 0\n        for k in input():\n            if k == 'a':\n                ans |= 1 << 0\n            elif k == 'e':\n                ans |= 1 << 1\n            elif k == 'i':\n                ans |= 1 << 2\n            elif k == 'o':\n                ans |= 1 << 3\n            else:\n                ans |= 1 << 4\n        lst[ans] += 1\n    ans = 0\n    for j in range(1, 31):\n        for k in range(j, 32):\n            if j | k == 31:\n                ans += lst[j] * lst[k]\n    if lst[31] != 1:\n        ans += lst[31] * (lst[31] - 1) // 2\n    print(ans)", "def solve(s):\n    l = ['0'] * 5\n    d = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    for i in s:\n        if i in 'aeiou' or i in 'AEIOU':\n            l[d[i.lower()]] = '1'\n    l.reverse()\n    return ''.join(l)\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        k = 1 << 5\n        l = [0] * k\n        for i in range(n):\n            s = input()\n            a = solve(s)\n            a = int(a, 2)\n            l[a] += 1\n        c = 0\n        for i in range(k):\n            for j in range(i + 1, k):\n                if l[i] and l[j] and (i | j == k - 1):\n                    c += l[i] * l[j]\n        c += l[31] * (l[31] - 1) // 2\n        print(c)\nmain()", "p = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    n = int(input())\n    l = []\n    d = {i: 0 for i in range(0, 32)}\n    for i in range(n):\n        s = input()\n        s = set(s)\n        val = 0\n        for i in s:\n            val = val | 1 << p[i]\n        d[val] += 1\n    l = [i for i in d]\n    n = len(l)\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            findor = l[i] | l[j]\n            if findor == 31:\n                if l[i] == l[j] == 31:\n                    ans = ans + d[31] * (d[31] - 1) // 2\n                else:\n                    ans += d[l[i]] * d[l[j]]\n    print(ans)", "p = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    n = int(input())\n    l = []\n    d = {i: 0 for i in range(0, 32)}\n    for i in range(n):\n        s = input()\n        s = set(s)\n        val = 0\n        for i in s:\n            val = val | 1 << p[i]\n        d[val] += 1\n    l = [i for i in d]\n    n = len(l)\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            findor = l[i] | l[j]\n            if findor == 31:\n                if l[i] == l[j] == 31:\n                    ans = ans + d[31] * (d[31] - 1) // 2\n                else:\n                    ans += d[l[i]] * d[l[j]]\n    print(ans)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    n = inp()\n    d = defaultdict(int)\n    x = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    for i in range(n):\n        s = set(st())\n        a = 0\n        for j in s:\n            a |= 1 << x[j]\n        d[a] += 1\n    ans = 0\n    for i in range(32):\n        for j in range(i, 32):\n            if i | j == 31:\n                if i == j == 31:\n                    ans += d[i] * (d[i] - 1) // 2\n                else:\n                    ans += d[i] * d[j]\n    pr(ans)\nfor _ in range(inp()):\n    solve()", "def evaluatestring(dp, string):\n    mask = 0\n    for s in string:\n        if s == 'a':\n            mask |= 1 << 0\n        elif s == 'e':\n            mask |= 1 << 1\n        elif s == 'i':\n            mask |= 1 << 2\n        elif s == 'o':\n            mask |= 1 << 3\n        elif s == 'u':\n            mask |= 1 << 4\n    dp[mask] += 1\n    return dp\ntestcase = int(input())\nwhile testcase:\n    dp = [0] * 32\n    number = int(input())\n    for _ in range(number):\n        string = input().lower()\n        dp = evaluatestring(dp, string)\n    answer = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                answer += dp[i] * dp[j]\n    answer += dp[31] * (dp[31] - 1) // 2\n    print(answer)\n    testcase -= 1", "t = int(input())\nfor _ in range(t):\n    dp = [0] * 32\n    n = int(input())\n    for _ in range(n):\n        st = input()\n        mask = 0\n        for ch in st:\n            if ch == 'a':\n                mask = mask | 1 << 0\n            elif ch == 'e':\n                mask = mask | 1 << 1\n            elif ch == 'i':\n                mask = mask | 1 << 2\n            elif ch == 'o':\n                mask = mask | 1 << 3\n            elif ch == 'u':\n                mask = mask | 1 << 4\n        dp[mask] += 1\n    answer = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                answer += dp[i] * dp[j]\n    answer += dp[31] * (dp[31] - 1) // 2\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    dp = [0] * 32\n    n = int(input())\n    for _ in range(n):\n        st = input()\n        mask = 0\n        for ch in st:\n            if ch == 'a':\n                mask = mask | 1 << 0\n            elif ch == 'e':\n                mask = mask | 1 << 1\n            elif ch == 'i':\n                mask = mask | 1 << 2\n            elif ch == 'o':\n                mask = mask | 1 << 3\n            elif ch == 'u':\n                mask = mask | 1 << 4\n        dp[mask] += 1\n    answer = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                answer += dp[i] * dp[j]\n    if dp[31] > 1:\n        answer += dp[31] * (dp[31] - 1) // 2\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    f = [0] * 32\n    for x in range(n):\n        s = input()\n        t = 0\n        for c in s:\n            if c == 'a':\n                t |= 1 << 0\n            elif c == 'e':\n                t |= 1 << 1\n            elif c == 'i':\n                t |= 1 << 2\n            elif c == 'o':\n                t |= 1 << 3\n            elif c == 'u':\n                t |= 1 << 4\n        f[t] += 1\n    ans = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += f[i] * f[j]\n    ans += f[31] * (f[31] - 1) / 2\n    print(int(ans))", "def solve(d, n):\n    f = [0 for i in range(32)]\n    for string in d:\n        m = 0\n        for ch in string:\n            m = m | 1 << dct[ch]\n            if m == 31:\n                break\n        f[m] += 1\n    res = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += f[i] * f[j]\n    res += f[31] * (f[31] - 1) // 2\n    return res\ndct = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    n = int(input())\n    d = []\n    for k in range(n):\n        di = input()\n        d.append(di)\n    print(solve(d, n))", "def solve(d, n):\n    f = [0 for i in range(32)]\n    for string in d:\n        m = 0\n        for ch in string:\n            m = m | 1 << dct[ch]\n        f[m] += 1\n    res = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += f[i] * f[j]\n    res += f[31] * (f[31] - 1) // 2\n    return res\ndct = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    n = int(input())\n    d = []\n    for k in range(n):\n        di = input()\n        d.append(di)\n    print(solve(d, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        s = input()\n        arr.append(set(s))\n    bit = [0] * 32\n    for i in range(n):\n        mask = 0\n        for j in arr[i]:\n            if j == 'a':\n                mask = mask | 1 << 0\n            elif j == 'e':\n                mask = mask | 1 << 1\n            elif j == 'i':\n                mask = mask | 1 << 2\n            elif j == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        bit[mask] = bit[mask] + 1\n    ans = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans = ans + bit[i] * bit[j]\n    ans = ans + bit[31] * (bit[31] - 1) // 2\n    print(ans)", "def funct(li, n):\n    f = [0 for i in range(32)]\n    for i in range(len(li)):\n        mask = 0\n        for j in li[i]:\n            if j == 'a':\n                mask = mask | 1 << 0\n            if j == 'e':\n                mask = mask | 1 << 1\n            if j == 'i':\n                mask = mask | 1 << 2\n            if j == 'o':\n                mask = mask | 1 << 3\n            if j == 'u':\n                mask = mask | 1 << 4\n        f[mask] += 1\n    count = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                count += f[i] * f[j]\n    count = count + f[31] * (f[31] - 1) // 2\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    li = []\n    for i in range(n):\n        s = input()\n        li.append(set(s))\n    print(funct(li, n))", "for _ in range(int(input())):\n    n = int(input())\n    freq = [0] * 32\n    for i in range(n):\n        s = input()\n        mask = 0\n        for c in s:\n            if c == 'a':\n                mask = mask | 1 << 0\n            elif c == 'e':\n                mask = mask | 1 << 1\n            elif c == 'i':\n                mask = mask | 1 << 2\n            elif c == 'o':\n                mask = mask | 1 << 3\n            elif c == 'u':\n                mask = mask | 1 << 4\n        freq[mask] += 1\n    ans = 0\n    for i in range(0, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += freq[i] * freq[j]\n    ans += freq[31] * (freq[31] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    dp = dict()\n    maps = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    for __ in range(n):\n        s = input()\n        mask = 0\n        for i in s:\n            mask = mask | 1 << maps[i]\n        if mask not in dp:\n            dp[mask] = 1\n        else:\n            dp[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                if i in dp and j in dp:\n                    ans += dp[i] * dp[j]\n    if 31 in dp:\n        ans += dp[31] * (dp[31] - 1) // 2\n    print(ans)", "D = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n\ndef chef(meals):\n    freq = [0] * 32\n    for s in meals:\n        temp = 0\n        for i in range(len(s)):\n            temp |= 1 << D[s[i]]\n        freq[temp] += 1\n    res = 0\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += freq[i] * freq[j]\n    res += freq[31] * (freq[31] - 1) // 2\n    return res\n\ndef main():\n    tc = int(input())\n    for t in range(tc):\n        n = int(input())\n        meals = []\n        for _ in range(n):\n            meals.append(input())\n        print(chef(meals))\nmain()", "def solve(st):\n    n = len(st)\n    new_st = [0 for _ in range(n)]\n    for i in range(n):\n        for e in st[i]:\n            if e == 'a':\n                new_st[i] |= 1 << 0\n            if e == 'e':\n                new_st[i] |= 1 << 1\n            if e == 'i':\n                new_st[i] |= 1 << 2\n            if e == 'o':\n                new_st[i] |= 1 << 3\n            if e == 'u':\n                new_st[i] |= 1 << 4\n    nn = 1 << 5\n    ans = [0 for _ in range(nn)]\n    for e in new_st:\n        ans[e] += 1\n    final_ans = 0\n    for i in range(nn):\n        for j in range(i + 1, nn):\n            if i | j == 31:\n                final_ans += ans[i] * ans[j]\n    final_ans += ans[31] * (ans[31] - 1) // 2\n    return final_ans\nfor _ in range(int(input())):\n    n = int(input())\n    st = [input() for _ in range(n)]\n    print(solve(st))", "from collections import defaultdict\nfor T in range(int(input())):\n    n = int(input())\n    count = {}\n    count = defaultdict(lambda : 0, count)\n    for i in range(n):\n        dish = input()\n        mask = 0\n        for i in dish:\n            if i == 'a':\n                mask |= 1 << 0\n            elif i == 'e':\n                mask |= 1 << 1\n            elif i == 'i':\n                mask |= 1 << 2\n            elif i == 'o':\n                mask |= 1 << 3\n            else:\n                mask |= 1 << 4\n        count[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += count[i] * count[j]\n    ans += count[31] * (count[31] - 1) // 2\n    print(ans)", "from collections import defaultdict\nfor T in range(int(input())):\n    n = int(input())\n    count = {}\n    count = defaultdict(lambda : 0, count)\n    for i in range(n):\n        dish = input()\n        mask = 0\n        for i in dish:\n            if i == 'a':\n                mask |= 1 << 0\n            elif i == 'e':\n                mask |= 1 << 1\n            elif i == 'i':\n                mask |= 1 << 2\n            elif i == 'o':\n                mask |= 1 << 3\n            else:\n                mask |= 1 << 4\n        count[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += count[i] * count[j]\n    ans += count[31] * (count[31] - 1) // 2\n    print(ans)", "def solve():\n    n = int(input())\n    freq = dict()\n    for i in range(32):\n        freq[i] = 0\n    for i in range(n):\n        s = set(input())\n        si = 0\n        if 'a' in s:\n            si += 1 << 0\n        if 'e' in s:\n            si += 1 << 1\n        if 'i' in s:\n            si += 1 << 2\n        if 'o' in s:\n            si += 1 << 3\n        if 'u' in s:\n            si += 1 << 4\n        freq[si] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += freq[i] * freq[j]\n    if freq[31]:\n        ans += freq[31] * (freq[31] - 1) // 2\n    print(ans)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    freq = [0] * 32\n    for i in range(n):\n        s = input()\n        ans = 0\n        s = list(set(s))\n        for j in s:\n            if j == 'a':\n                ans = ans | 1\n            if j == 'e':\n                ans = ans | 2\n            if j == 'i':\n                ans = ans | 4\n            if j == 'o':\n                ans = ans | 8\n            if j == 'u':\n                ans = ans | 16\n        freq[ans] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += freq[i] * freq[j]\n    c = freq[31]\n    ans += c * (c - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(1, t + 1):\n    n = int(input())\n    fr = [0] * 32\n    for k in range(n):\n        s = set(input())\n        mask = 0\n        for i in s:\n            if i == 'a':\n                mask = mask | 1 << 0\n            if i == 'e':\n                mask = mask | 1 << 1\n            if i == 'i':\n                mask = mask | 1 << 2\n            if i == 'o':\n                mask = mask | 1 << 3\n            if i == 'u':\n                mask = mask | 1 << 4\n        fr[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += fr[i] * fr[j]\n    ans += fr[31] * (fr[31] - 1) // 2\n    print(ans)", "from collections import defaultdict as df\nfrom itertools import combinations as co\n\ndef mmap(s):\n    sd = {'a': 1, 'e': 2, 'i': 4, 'o': 8, 'u': 16}\n    v = 0\n    for i in set(s):\n        v |= sd[i]\n    return v\n\ndef main():\n    n = int(input())\n    sd = df(int)\n    for i in range(n):\n        sd[mmap(input())] += 1\n    k = list(sd.keys())\n    ans = 0\n    for (i, j) in co(k, 2):\n        if i | j == 31:\n            ans += sd[i] * sd[j]\n    if 31 in k:\n        xx = sd[31]\n        ans += xx * (xx - 1) // 2\n    print(ans)\nfor _ in range(int(input())):\n    main()", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    arr = [0] * 32\n    l = []\n    for i in range(n):\n        s = stdin.readline()\n        f = 0\n        set_s = set(s)\n        if 'u' in set_s:\n            f = f | 1 << 0\n        if 'o' in set_s:\n            f = f | 1 << 1\n        if 'i' in set_s:\n            f = f | 1 << 2\n        if 'e' in set_s:\n            f = f | 1 << 3\n        if 'a' in set_s:\n            f = f | 1 << 4\n        arr[f] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += arr[i] * arr[j]\n    if arr[31] > 1:\n        n = arr[31]\n        ans += n * (n - 1) // 2\n    print(ans)", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    arr = [0] * 32\n    l = []\n    for i in range(n):\n        s = stdin.readline()\n        f = 0\n        set_s = set(s)\n        if 'u' in set_s:\n            f = f | 1 << 0\n        if 'o' in set_s:\n            f = f | 1 << 1\n        if 'i' in set_s:\n            f = f | 1 << 2\n        if 'e' in set_s:\n            f = f | 1 << 3\n        if 'a' in set_s:\n            f = f | 1 << 4\n        arr[f] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += arr[i] * arr[j]\n    if arr[31] > 1:\n        n = arr[31]\n        ans += n * (n - 1) // 2\n    print(ans)", "def solve():\n    n = int(input())\n    freq_comb = [0] * 32\n    for i in range(n):\n        string = input()\n        mask = 0\n        for s in string:\n            if s == 'a':\n                mask = mask | 1 << 0\n            elif s == 'e':\n                mask = mask | 1 << 1\n            elif s == 'i':\n                mask = mask | 1 << 2\n            elif s == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        freq_comb[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += freq_comb[i] * freq_comb[j]\n    ans += freq_comb[31] * (freq_comb[31] - 1) // 2\n    return ans\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def maskit(x):\n    j = 0\n    for i in x:\n        if i == 'a':\n            j = j | 1 << 4\n        elif i == 'e':\n            j = j | 1 << 3\n        elif i == 'i':\n            j = j | 1 << 2\n        elif i == 'o':\n            j = j | 1 << 1\n        elif i == 'u':\n            j = j | 1 << 0\n    return j\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    dish = list()\n    for i in range(n):\n        x = input()\n        dish.append(maskit(x))\n    c = 0\n    l = [0] * 32\n    for i in range(n):\n        l[dish[i]] += 1\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                c += l[i] * l[j]\n    c += l[31] * (l[31] - 1) // 2\n    print(c)", "t = int(input())\nfor _ in range(t):\n    f = [0] * 32\n    ip = int(input())\n    li = list()\n    for i in range(ip):\n        li.append(input())\n    for i in li:\n        mask = 0\n        if 'a' in i:\n            mask = mask | 1 << 0\n        if 'e' in i:\n            mask = mask | 1 << 1\n        if 'i' in i:\n            mask = mask | 1 << 2\n        if 'o' in i:\n            mask = mask | 1 << 3\n        if 'u' in i:\n            mask = mask | 1 << 4\n        f[mask] += 1\n    res = 0\n    for i in range(len(f)):\n        for j in range(i + 1, len(f)):\n            if i | j == 31:\n                res = res + f[i] * f[j]\n    res = res + f[31] * (f[31] - 1) // 2\n    print(res)", "def func(s, dic):\n    ch = 0\n    for i in s:\n        ch = ch | 1 << dic[i]\n    return ch\nfrom collections import defaultdict\nfrom sys import stdin, stdout\nt = int(input())\ndic = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(t):\n    n = int(stdin.readline())\n    ideal = (1 << 5) - 1\n    freq = defaultdict(int)\n    for i in range(n):\n        s = ''.join(list(set(input())))\n        ch = func(s, dic)\n        freq[ch] += 1\n    l = list(freq.keys())\n    l.sort()\n    m = len(l)\n    ans = 0\n    for i in range(m):\n        if l[i] == ideal:\n            ch = freq[l[i]]\n            ans += ch * (ch - 1) // 2\n        for j in range(i + 1, m):\n            if l[i] | l[j] == ideal:\n                ans += freq[l[i]] * freq[l[j]]\n    stdout.write(str(ans))\n    print()", "t = int(input())\nwhile t:\n    freq = [0] * 32\n    n = int(input())\n    for _ in range(n):\n        s = input()\n        mask = 0\n        if 'a' in s:\n            mask = mask | 1 << 0\n        if 'e' in s:\n            mask = mask | 1 << 1\n        if 'i' in s:\n            mask = mask | 1 << 2\n        if 'o' in s:\n            mask = mask | 1 << 3\n        if 'u' in s:\n            mask = mask | 1 << 4\n        freq[mask] += 1\n    res = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                res += freq[i] * freq[j]\n    res += freq[31] * (freq[31] - 1) // 2\n    print(res)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    F = 1 << 5\n    l = [0] * F\n    l1 = []\n    for j in range(N):\n        x = input()\n        l1.append(x)\n    for j in range(len(l1)):\n        mask = 0\n        for k in l1[j]:\n            if k == 'a':\n                mask = mask | 1 << 0\n            elif k == 'e':\n                mask = mask | 1 << 1\n            elif k == 'i':\n                mask = mask | 1 << 2\n            elif k == 'o':\n                mask = mask | 1 << 3\n            elif k == 'u':\n                mask = mask | 1 << 4\n        l[mask] += 1\n    s = 0\n    for j in range(32):\n        for k in range(j + 1, 32):\n            if j | k == 31:\n                s = s + l[j] * l[k]\n    if l[31] != 0:\n        s = s + l[31] * (l[31] - 1) // 2\n    print(s)", "import sys\nfrom math import sqrt, floor, factorial, gcd\nfrom collections import deque, Counter\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().strip().split()))\n\ndef is_prime(n):\n    for i in range(2, int(sqrt(n))):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve():\n    ans = ''\n    dic = {'a': 1, 'e': 2, 'i': 4, 'o': 8, 'u': 16}\n    for _ in range(int(inp())):\n        total = 0\n        combo = [0 for i in range(2 ** 5)]\n        for i_ in range(int(inp())):\n            tem = 0\n            for i in inp().strip():\n                if i in dic:\n                    tem |= dic[i]\n            combo[tem] += 1\n        for i in range(len(combo)):\n            if combo[i]:\n                for j in range(i + 1, len(combo)):\n                    if combo[j] and i | j == 31:\n                        total += combo[i] * combo[j]\n        if combo[-1]:\n            total += combo[-1] * (combo[-1] - 1) // 2\n        ans += str(total) + '\\n'\n    print(ans)\nsolve()", "shifts = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    n = int(input())\n    bitmasks = [0] * 2 ** 5\n    for __ in range(n):\n        s = input()\n        b = 0\n        for i in s:\n            b = b | 1 << shifts[i]\n        bitmasks[b] += 1\n    res = 0\n    for i in range(len(bitmasks)):\n        for j in range(i + 1, len(bitmasks)):\n            if i | j == 31:\n                res += bitmasks[i] * bitmasks[j]\n    res += bitmasks[-1] * (bitmasks[-1] - 1) // 2\n    print(res)", "N = 1 << 5\nfor t in range(int(input())):\n    n = int(input())\n    frq = [0 for i in range(N)]\n    for i in range(n):\n        d = list(input())\n        index = 0\n        for j in d:\n            if j == 'a':\n                index |= 1\n            elif j == 'e':\n                index |= 2\n            elif j == 'i':\n                index |= 4\n            elif j == 'o':\n                index |= 8\n            elif j == 'u':\n                index |= 16\n        frq[index] += 1\n    ans = 0\n    for i in range(1, N):\n        for j in range(i + 1, N):\n            if i | j == 31:\n                ans += frq[i] * frq[j]\n    ans += frq[31] * (frq[31] - 1) // 2\n    print(ans)", "v = 'aeiou'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = 0\n    l = [0] * 32\n    for i in range(n):\n        s = set(input())\n        d = dict()\n        for j in v:\n            d[j] = 0\n        for j in s:\n            if j in v:\n                d[j] += 1\n        val = d['a'] * 16 | d['e'] * 8 | d['i'] * 4 | d['o'] * 2 | d['u']\n        l[val] += 1\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c += l[i] * l[j]\n    c += l[31] * (l[31] - 1) // 2\n    print(c)", "def solve():\n    n = int(input())\n    freq_comb = [0] * 32\n    for i in range(n):\n        string = input()\n        mask = 0\n        for s in string:\n            if s == 'a':\n                mask = mask | 1 << 0\n            elif s == 'e':\n                mask = mask | 1 << 1\n            elif s == 'i':\n                mask = mask | 1 << 2\n            elif s == 'o':\n                mask = mask | 1 << 3\n            else:\n                mask = mask | 1 << 4\n        freq_comb[mask] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += freq_comb[i] * freq_comb[j]\n    ans += freq_comb[31] * (freq_comb[31] - 1) // 2\n    return ans\nt = int(input())\nfor _ in range(t):\n    print(solve())", "from collections import defaultdict\n\ndef Solve(Chance):\n    L = len(Chance)\n    Ans = 0\n    for i in range(L):\n        X = set(Chance[i])\n        if X == {'a', 'e', 'i', 'o', 'u'}:\n            Ans += Dict[Chance[i]] * (Dict[Chance[i]] - 1) // 2\n        for j in range(i + 1, L):\n            if X.union(set(Chance[j])) == {'a', 'e', 'i', 'o', 'u'}:\n                Ans += Dict[Chance[i]] * Dict[Chance[j]]\n    return Ans\nfor _ in range(int(input())):\n    N = int(input())\n    Dict = {}\n    for i in range(N):\n        I = ''.join(sorted(''.join(set(input()))))\n        try:\n            Dict[I] += 1\n        except Exception:\n            Dict[I] = 1\n    Chance = list(Dict.keys())\n    print(Solve(Chance))", "from collections import defaultdict\n\ndef Solve(Chance):\n    L = len(Chance)\n    Ans = 0\n    for i in range(L):\n        X = set(Chance[i])\n        if X == {'a', 'e', 'i', 'o', 'u'}:\n            Ans += Dict[Chance[i]] * (Dict[Chance[i]] - 1) // 2\n        for j in range(i + 1, L):\n            if X.union(set(Chance[j])) == {'a', 'e', 'i', 'o', 'u'}:\n                Ans += Dict[Chance[i]] * Dict[Chance[j]]\n    return Ans\nfor _ in range(int(input())):\n    N = int(input())\n    D = []\n    Dict = {}\n    for i in range(N):\n        I = ''.join(sorted(''.join(set(input()))))\n        D.append(I)\n        try:\n            Dict[I] += 1\n        except Exception:\n            Dict[I] = 1\n    Chance = list(set(D))\n    print(Solve(Chance))", "import itertools\nt = int(input())\nfor i in range(t):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    l = []\n    n = int(input())\n    for i in range(n):\n        l.append(list(set(input())))\n    combinations = []\n    for i in range(len(vowels) + 1):\n        combinations += list(itertools.combinations(vowels, i))\n    for i in range(len(combinations)):\n        combinations[i] = list(combinations[i])\n    f = {}\n    for i in combinations:\n        a = ''.join(i)\n        f[a] = 0\n    for i in l:\n        l2 = ''\n        for j in range(len(i)):\n            if i[j] in vowels:\n                l2 += i[j]\n        l2 = set(l2)\n        l2 = list(l2)\n        l2 = sorted(l2)\n        l2 = ''.join(l2)\n        f[l2] += 1\n    sum1 = 0\n    for i in f:\n        if i != 'aeiou':\n            sum1 += f[i]\n    final = {}\n    for i in f:\n        if f[i] > 0:\n            final[i] = f[i]\n    f1 = list(final)\n    ans = 0\n    for i in range(len(f1)):\n        for j in range(i + 1, len(f1)):\n            if f1[i] != 'aeiou' and f1[j] != 'aeiou':\n                k = f1[i] + f1[j]\n                k = set(k)\n                k = list(k)\n                k = sorted(k)\n                k = ''.join(k)\n                if k == 'aeiou':\n                    ans += final[f1[i]] * final[f1[j]]\n        if f1[i] == 'aeiou':\n            ans += final[f1[i]] * sum1 + (final[f1[i]] - 1) * final[f1[i]] // 2\n    print(ans)", "t = int(input())\nfor k in range(t):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        num = 0\n        for ch in s1:\n            if ch == 'a':\n                num = num + 10000\n            elif ch == 'e':\n                num = num + 1000\n            elif ch == 'i':\n                num = num + 100\n            elif ch == 'o':\n                num = num + 10\n            elif ch == 'u':\n                num = num + 1\n        val = int(str(num), base=2)\n        l[val] = l[val] + 1\n    c = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c = c + l[i] * l[j]\n    c = c + l[31] * (l[31] - 1) // 2\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    yt = (1 << 5) - 1\n    d = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\n    for _ in range(n):\n        l.append(str(input()))\n    v = {}\n    for i in range(1, 32):\n        v[i] = 0\n    for i in range(n):\n        s = set()\n        m = 0\n        for j in range(len(l[i])):\n            s.add(d[l[i][j]])\n        for x in s:\n            m += 1 << x\n        v[m] += 1\n    ans = 0\n    for i in range(1, 32):\n        for j in range(1, 32):\n            if i | j == yt:\n                if i == j:\n                    ans += v[i] * (v[j] - 1)\n                else:\n                    ans += v[i] * v[j]\n    print(int(ans / 2))", "from collections import defaultdict\nfor _ in range(int(input())):\n    d = defaultdict(int)\n    n = int(input())\n    array = []\n    length = 0\n    for i in range(n):\n        value = 0\n        a = set(input())\n        if 'a' in a:\n            value |= 16\n        if 'e' in a:\n            value |= 8\n        if 'i' in a:\n            value |= 4\n        if 'o' in a:\n            value |= 2\n        if 'u' in a:\n            value |= 1\n        if d[value] == 0:\n            length += 1\n            array.append(value)\n        d[value] += 1\n    ans = 0\n    for i in range(length):\n        for j in range(i, length):\n            if array[i] | array[j] == 31:\n                if array[i] != array[j]:\n                    ans += d[array[i]] * d[array[j]]\n                else:\n                    ans += d[array[i]] * (d[array[j]] - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        (a, b, c, d, e) = '0' * 5\n        for j in s:\n            if j == 'a':\n                a = '1'\n            if j == 'e':\n                b = '1'\n            if j == 'i':\n                c = '1'\n            if j == 'o':\n                d = '1'\n            if j == 'u':\n                e = '1'\n        x = a + b + c + d + e\n        l.append(int(x, 2))\n    d = {}\n    ans = 0\n    for i in range(32):\n        d[i] = 0\n    for i in l:\n        d[i] += 1\n    for i in range(31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += d[i] * d[j]\n    ans += d[31] * (d[31] - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        (a, b, c, d, e) = '0' * 5\n        for j in s:\n            if j == 'a':\n                a = '1'\n            if j == 'e':\n                b = '1'\n            if j == 'i':\n                c = '1'\n            if j == 'o':\n                d = '1'\n            if j == 'u':\n                e = '1'\n        x = a + b + c + d + e\n        l.append(int(x, 2))\n    d = {}\n    for i in range(32):\n        d[i] = 0\n    for i in l:\n        if i & 0 == 0:\n            d[i] += 1\n    ans = 0\n    for i in range(31):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += d[i] * d[j]\n    ans += d[31] * (d[31] - 1) // 2\n    print(ans)", "from collections import defaultdict\nt = int(input())\nwhile t:\n    n = int(input())\n    l = []\n    final_dict = defaultdict(int)\n    for i in range(n):\n        temp = ''\n        s = input()\n        temp += '1' if 'a' in s else '0'\n        temp += '1' if 'e' in s else '0'\n        temp += '1' if 'i' in s else '0'\n        temp += '1' if 'o' in s else '0'\n        temp += '1' if 'u' in s else '0'\n        final_dict[temp] += 1\n    final_dict_keys = list(final_dict.keys())\n    final_ans = 0\n    if final_dict['11111'] > 1:\n        final_ans += (final_dict['11111'] - 1) * final_dict['11111'] // 2\n    for (ind, i) in enumerate(final_dict_keys):\n        for j in final_dict_keys[ind + 1:]:\n            if int(i, 2) | int(j, 2) == 31:\n                final_ans += final_dict[i] * final_dict[j]\n    print(final_ans)\n    t -= 1", "t = int(input())\nfor l1 in range(t):\n    ans = 0\n    cmb = {}\n    n = int(input())\n    for l2 in range(n):\n        inp = str(input())\n        vwl = set(inp)\n        vwl = ''.join(list(sorted(vwl)))\n        if vwl in cmb:\n            cmb[vwl] += 1\n        else:\n            cmb[vwl] = 1\n    for i in cmb.keys():\n        for j in cmb.keys():\n            if i != j:\n                if len(set(i + j)) == 5:\n                    ans += cmb[i] * cmb[j]\n    if 'aeiou' in cmb:\n        ans += cmb['aeiou'] * (cmb['aeiou'] - 1)\n    print(int(ans / 2))", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    a1 = [0] * 32\n    for i in range(n):\n        t = [0] * 5\n        s = set(input())\n        for j in s:\n            if j == 'a':\n                t[0] = 1\n            elif j == 'e':\n                t[1] = 1\n            elif j == 'i':\n                t[2] = 1\n            elif j == 'o':\n                t[3] = 1\n            elif j == 'u':\n                t[4] = 1\n        value = t[0] * 16 + t[1] * 8 + t[2] * 4 + t[3] * 2 + t[4] * 1\n        a1[value] += 1\n    for i in range(31):\n        for j in range(i, 32):\n            if i | j == 31:\n                count += a1[i] * a1[j]\n    x = a1[31]\n    count += int(x * (x - 1) / 2)\n    print(count)", "R = lambda : map(int, input().split())\n\ndef shrink(string):\n    return ''.join(sorted(list(set(string))))\n\ndef has_all_vowels(str1, str2):\n    return set(str1 + str2) == {'a', 'e', 'i', 'o', 'u'}\nfor i in range(int(input())):\n    n = int(input())\n    map = {}\n    for i in range(n):\n        string = input()\n        if shrink(string) in map:\n            map[shrink(string)] += 1\n        else:\n            map[shrink(string)] = 1\n    ans = 0\n    for i in map:\n        for j in map:\n            if i != j and has_all_vowels(i, j):\n                ans += map[i] * map[j]\n    ans //= 2\n    if 'aeiou' in map:\n        ans += map['aeiou'] * (map['aeiou'] - 1) // 2\n    print(ans)", "from collections import defaultdict as dd\n\ndef complement(n):\n    return 2 * 3 * 5 * 7 * 11 // n\nfor _ in range(int(input())):\n    n = int(input())\n    d = dd(int)\n    ans = 0\n    for i in range(n):\n        s = input()\n        s = str(sorted(set(s)))\n        k = 1\n        if 'a' in s:\n            k *= 2\n        if 'e' in s:\n            k *= 3\n        if 'i' in s:\n            k *= 5\n        if 'o' in s:\n            k *= 7\n        if 'u' in s:\n            k *= 11\n        d[k] += 1\n    k = sorted(d.keys())\n    for i in range(len(k)):\n        c = complement(k[i])\n        for j in range(i + 1, len(k)):\n            if k[j] % c == 0:\n                ans += d[k[i]] * d[k[j]]\n        if k[i] == 2 * 3 * 5 * 7 * 11:\n            ans += d[k[i]] * (d[k[i]] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0] * 32\n    d = {'a': 1, 'e': 2, 'i': 4, 'o': 8, 'u': 16}\n    for i in range(n):\n        s = list(set(list(input())))\n        m = 0\n        for j in s:\n            m |= d[j]\n        l[m] += 1\n    ans = l[31] * (l[31] - 1) // 2\n    for i in range(1, 32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                ans += l[i] * l[j]\n    print(ans)", "dict = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}\nfor _ in range(int(input())):\n    N = int(input())\n    strs = []\n    arr = []\n    for i in range(N):\n        strs.append(str(input()))\n    for s in strs:\n        temp = [0] * 5\n        for i in s:\n            temp[dict[i]] = 1\n        arr.append(temp)\n    br = []\n    for a in arr:\n        s = [str(i) for i in a]\n        res = str(''.join(s))\n        br.append(res)\n    s_dict = {}\n    for a in br:\n        if a in s_dict:\n            s_dict[a] += 1\n        else:\n            s_dict[a] = 1\n    f = []\n    for s in s_dict:\n        f.append(s)\n        f.append(s_dict[s])\n    (key, value) = (f[::2], f[1::2])\n    pairs = 0\n    if '11111' in s_dict:\n        pairs = int(s_dict['11111'] * (s_dict['11111'] - 1) / 2)\n    for i in range(len(key)):\n        for j in range(i + 1, len(key)):\n            flag = 1\n            for k in range(5):\n                if key[i][k] == '0' and key[j][k] == '0':\n                    flag = 0\n            if flag == 1:\n                pairs += value[i] * value[j]\n    print(pairs)", "def show(t):\n    for _ in range(t):\n        a = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        n = int(input())\n        count = 0\n        count_num = 0\n        for lonavla in range(n):\n            str1 = set(input())\n            res = 0\n            if 'a' in str1:\n                res = res | 16\n            if 'e' in str1:\n                res = res | 8\n            if 'i' in str1:\n                res = res | 4\n            if 'o' in str1:\n                res = res | 2\n            if 'u' in str1:\n                res = res | 1\n            a[res] += 1\n        for i in range(31):\n            for j in range(i + 1, 32):\n                if i | j >= 31:\n                    count = count + a[i] * a[j]\n        if a[31] > 0:\n            count = count + a[31] * (a[31] - 1) // 2\n        print(count)\nshow(int(input()))", "d = {'a': 1, 'e': 2, 'i': 4, 'o': 8, 'u': 16}\nfor ii in range(int(input())):\n    n = int(input())\n    dd = {}\n    for i in range(n):\n        s = set(input())\n        k = 0\n        for j in s:\n            k += d[j]\n        if k in dd:\n            dd[k] += 1\n        else:\n            dd[k] = 1\n    c = 0\n    for i in dd:\n        for j in dd:\n            if i | j == 31:\n                if i == j:\n                    c += dd[i] * (dd[j] - 1)\n                else:\n                    c += dd[i] * dd[j]\n    print(c // 2)", "for xxx in range(int(input())):\n    n = int(input())\n    desc = list()\n    count = 0\n    full = 'aeiou'\n    table = dict()\n    for _ in range(n):\n        desc.append(''.join(sorted(''.join(set(input())))))\n    desc.sort(key=lambda x: len(x))\n    for d in desc:\n        if d in table.keys():\n            table[d] += 1\n        else:\n            table[d] = 1\n    keys = list(table.keys())\n    if desc[-1] == full:\n        count += sum(range(1, table[full]))\n    for (index, i) in enumerate(keys):\n        for j in keys[index + 1:]:\n            s = ''.join(sorted(''.join(set(i + j))))\n            if s == full:\n                count += table[i] * table[j]\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = [0] * 32\n    for _ in range(n):\n        word = set(input())\n        mask = 0\n        for i in word:\n            if i == 'a':\n                mask |= 1\n            if i == 'e':\n                mask |= 2\n            if i == 'i':\n                mask |= 4\n            if i == 'o':\n                mask |= 8\n            if i == 'u':\n                mask |= 16\n        ans[mask] += 1\n    count = ans[31] * (ans[31] - 1) // 2\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                count += ans[i] * ans[j]\n    print(count)", "t = int(input())\nwhile t:\n    n = int(input())\n    d = []\n    mask = [0] * 32\n    for i in range(n):\n        d.append(input())\n        m = 0\n        if 'a' in d[i]:\n            m += 1\n        if 'e' in d[i]:\n            m += 2\n        if 'i' in d[i]:\n            m += 4\n        if 'o' in d[i]:\n            m += 8\n        if 'u' in d[i]:\n            m += 16\n        mask[m] += 1\n    mycount = mask[31] * (mask[31] - 1) // 2\n    for i in range(32):\n        for j in range(i + 1, 32):\n            if i | j == 31:\n                mycount += mask[i] * mask[j]\n    print(mycount)\n    t -= 1", "def fun():\n    test = int(input())\n    for t in range(test):\n        n = int(input())\n        d = dict()\n        arr = set()\n        for _ in range(n):\n            s1 = set(input().strip())\n            vowels = ['a', 'e', 'i', 'o', 'u']\n            val = 0\n            for i in range(5):\n                if vowels[i] in s1:\n                    val += 1 << i\n            d[val] = d.get(val, 0) + 1\n            arr.add(val)\n        ans = 0\n        m = len(arr)\n        arr = list(arr)\n        for i in range(m):\n            for j in range(i + 1, m):\n                if arr[i] | arr[j] == 31:\n                    ans += d[arr[i]] * d[arr[j]]\n        x = d.get(31, 0)\n        ans += x * (x - 1) // 2\n        print(ans)\nfun()", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = [0] * 32\n    for i in range(n):\n        tmp = input()\n        mask = 0\n        for j in tmp:\n            if 'a' is j:\n                mask |= 16\n                continue\n            if 'e' is j:\n                mask |= 8\n                continue\n            if 'i' is j:\n                mask |= 4\n                continue\n            if 'o' is j:\n                mask |= 2\n                continue\n            if 'u' is j:\n                mask |= 1\n        arr[mask] += 1\n    mycount = arr[31] * (arr[31] - 1) // 2\n    for i in range(32):\n        for j in range(i + 1, 32):\n            mycount += (0, arr[i] * arr[j])[i | j == 31]\n    print(mycount)\n    t -= 1", "def decimal(bin_arr):\n    return 2 * 2 * 2 * 2 * bin_arr['a'] + 2 * 2 * 2 * bin_arr['e'] + 2 * 2 * bin_arr['i'] + 2 * bin_arr['o'] + bin_arr['u']\nT = int(input())\nfor i in range(T):\n    count = 0\n    arr = [0] * 32\n    N = int(input())\n    list_D = []\n    for x in range(N):\n        vowel_num = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}\n        for i in input():\n            vowel_num[i] = 1\n        list_D.append(vowel_num)\n        arr[decimal(list_D[x])] += 1\n    count = arr[31] * (arr[31] - 1) // 2\n    for j in range(32):\n        for k in range(j + 1, 32):\n            if j | k == 31:\n                count += arr[j] * arr[k]\n    print(count)", "t = int(input())\nwhile t:\n    n = int(input())\n    lis = []\n    s = ''\n    a = [0] * n\n    e = [0] * n\n    i = [0] * n\n    o = [0] * n\n    u = [0] * n\n    bt = [0] * n\n    fr = [0] * 32\n    for x in range(n):\n        s = input()\n        l = len(s)\n        for j in s:\n            if j == 'a':\n                a[x] = 1\n            elif j == 'e':\n                e[x] = 1\n            elif j == 'i':\n                i[x] = 1\n            elif j == 'o':\n                o[x] = 1\n            elif j == 'u':\n                u[x] = 1\n        bt[x] = a[x] * 16 + e[x] * 8 + i[x] * 4 + o[x] * 2 + u[x]\n        fr[bt[x]] = fr[bt[x]] + 1\n    c = 0\n    for l in range(31):\n        for g in range(l + 1, 32):\n            if (fr[l] != 0 and fr[g] != 0) and l | g == 31:\n                c = c + fr[l] * fr[g]\n    b = fr[31]\n    c = c + b * (b - 1) // 2\n    print(c)\n    t = t - 1", "from collections import Counter\n\ndef binomialCoeff(n, k):\n    C = [0 for i in range(k + 1)]\n    C[0] = 1\n    for i in range(1, n + 1):\n        j = min(i, k)\n        while j > 0:\n            C[j] = C[j] + C[j - 1]\n            j -= 1\n    return C[k]\nfor _ in range(int(input())):\n    n = int(input())\n    a = [None] * n\n    for i in range(n):\n        a[i] = ''.join(sorted(list(set(list(input())))))\n    y = dict(Counter(a))\n    d = list(set(a))\n    c = 0\n    for i in range(len(d) - 1):\n        for j in range(i + 1, len(d)):\n            k = d[i][:] + d[j][:]\n            k = list(set(list(k)))\n            if len(k) == 5:\n                c += y[d[i]] * y[d[j]]\n    for i in range(len(d)):\n        if len(d[i]) == 5:\n            c += binomialCoeff(y[d[i]], 2)\n    print(c)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    l = []\n    a = [0 for i in range(32)]\n    for i in range(N):\n        s = input()\n        x = 0\n        a1 = 0\n        a2 = 0\n        a3 = 0\n        a4 = 0\n        a5 = 0\n        if 'a' in s:\n            a1 = 1\n        if 'e' in s:\n            a2 = 2\n        if 'i' in s:\n            a3 = 4\n        if 'o' in s:\n            a4 = 8\n        if 'u' in s:\n            a5 = 16\n        x = a1 + a2 + a3 + a4 + a5\n        a[x] += 1\n    c = 0\n    for k in range(1, 31):\n        for l in range(k + 1, 32):\n            if k | l == 31 and a[k] != 0 and (a[l] != 0):\n                c += a[k] * a[l]\n    c = c + a[31] * (a[31] - 1) // 2\n    print(c)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    l = []\n    a = [0 for i in range(32)]\n    for i in range(N):\n        s = input()\n        x = 0\n        a1 = 0\n        a2 = 0\n        a3 = 0\n        a4 = 0\n        a5 = 0\n        if 'a' in s:\n            a1 = 1\n        if 'e' in s:\n            a2 = 2\n        if 'i' in s:\n            a3 = 4\n        if 'o' in s:\n            a4 = 8\n        if 'u' in s:\n            a5 = 16\n        x = a1 + a2 + a3 + a4 + a5\n        a[x] += 1\n    c = 0\n    for k in range(1, 31):\n        for l in range(k + 1, 32):\n            if k | l == 31 and a[k] != 0 and (a[l] != 0):\n                c += a[k] * a[l]\n    c = c + a[31] * (a[31] - 1) // 2\n    print(c)", "t = int(input())\ndi = {'a': 16, 'e': 8, 'i': 4, 'o': 2, 'u': 1}\nfor i in range(t):\n    n = int(input())\n    d = {}\n    for j in range(n):\n        te = set(input())\n        l = 0\n        for k in te:\n            l = l + di[k]\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    li = list(d.keys())\n    li.sort(reverse=True)\n    count = 0\n    if li[0] == 31:\n        count = sum(range(1, d[31]))\n    for j in range(len(li)):\n        for k in range(j + 1, len(li)):\n            if li[j] | li[k] == 31:\n                count = count + d[li[j]] * d[li[k]]\n    print(count)", "from sys import stdin\n\nclass pair(object):\n\n    def __init__(self, s1, s2):\n        self.s1 = s1\n        self.s2 = s2\n\ndef possible(s1, s2):\n    s = set()\n    for itms in s1:\n        s.add(itms)\n    for items in s2:\n        s.add(items)\n    if len(s) is 5:\n        return True\n    else:\n        return False\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    m = dict()\n    for _ in range(n):\n        s = stdin.readline().rstrip()\n        se = set()\n        for items in s:\n            se.add(items)\n        se = sorted(se)\n        see = ''\n        for items in se:\n            see += items\n        if see not in m:\n            m.update({see: 1})\n        else:\n            c = m.get(see)\n            c = c + 1\n            m.update({see: c})\n    lis = list()\n    for (k, v) in m.items():\n        lis.append(pair(k, v))\n    ans = 0\n    for i in range(len(lis)):\n        if len(lis[i].s1) is 5:\n            continue\n        for j in range(i + 1, len(lis)):\n            if len(lis[j].s1) is 5:\n                continue\n            if possible(lis[i].s1, lis[j].s1) is True:\n                ans = ans + lis[i].s2 * lis[j].s2\n    add = 0\n    ok = 'aeiou' in m.keys()\n    if ok is True:\n        add = add + m.get('aeiou') * (m.get('aeiou') - 1) / 2\n        mew = m.get('aeiou')\n        var = n - mew\n        add = add + var * m.get('aeiou')\n    print(int(ans + add))", "t = int(input())\nfor k in range(t):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        num = 0\n        for ch in s1:\n            if ch == 'a':\n                num = num + 10000\n            elif ch == 'e':\n                num = num + 1000\n            elif ch == 'i':\n                num = num + 100\n            elif ch == 'o':\n                num = num + 10\n            elif ch == 'u':\n                num = num + 1\n        val = int(str(num), base=2)\n        l[val] = l[val] + 1\n    c = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c = c + l[i] * l[j]\n    c = c + l[31] * (l[31] - 1) // 2\n    print(c)", "t = int(input())\nwhile t:\n    n = int(input())\n    d = []\n    mymap = {}\n    for i in range(n):\n        d.append(input())\n        x = 0\n        if 'a' in d[i]:\n            x += 16\n        if 'e' in d[i]:\n            x += 8\n        if 'i' in d[i]:\n            x += 4\n        if 'o' in d[i]:\n            x += 2\n        if 'u' in d[i]:\n            x += 1\n        mymap.setdefault(x, 0)\n        mymap[x] += 1\n    mymap.setdefault(31, 0)\n    mycount = int(mymap[31] * (mymap[31] - 1) // 2)\n    for i in range(32):\n        for j in range(i + 1, 32):\n            mymap.setdefault(i, 0)\n            mymap.setdefault(j, 0)\n            if i | j == 31:\n                mycount += mymap[i] * mymap[j]\n    print(mycount)\n    t -= 1", "for _ in range(int(input())):\n    arr = [0] * 32\n    for _ in range(int(input())):\n        val = 0\n        list1 = list(set(input()))\n        for i in range(len(list1)):\n            if list1[i] == 'a':\n                val += 10000\n            elif list1[i] == 'e':\n                val += 1000\n            elif list1[i] == 'i':\n                val += 100\n            elif list1[i] == 'o':\n                val += 10\n            elif list1[i] == 'u':\n                val += 1\n        val = int(str(val), base=2)\n        arr[val] += 1\n    m = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (arr[i] and arr[j]) and i | j == 31:\n                m += arr[i] * arr[j]\n    m += arr[31] * (arr[31] - 1) // 2\n    print(m)", "pk = int(input())\nfor k in range(pk):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        numb = 0\n        for ch in s1:\n            if ch == 'a':\n                numb = numb + 10000\n            elif ch == 'e':\n                numb = numb + 1000\n            elif ch == 'i':\n                numb = numb + 100\n            elif ch == 'o':\n                numb = numb + 10\n            elif ch == 'u':\n                numb = numb + 1\n        val = int(str(numb), base=2)\n        l[val] = l[val] + 1\n    p = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                p = p + l[i] * l[j]\n    p = p + l[31] * (l[31] - 1) // 2\n    print(p)", "t = int(input())\nfor k in range(t):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        num = 0\n        for ch in s1:\n            if ch == 'a':\n                num = num + 10000\n            elif ch == 'e':\n                num = num + 1000\n            elif ch == 'i':\n                num = num + 100\n            elif ch == 'o':\n                num = num + 10\n            elif ch == 'u':\n                num = num + 1\n        val = int(str(num), base=2)\n        l[val] = l[val] + 1\n    c = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c = c + l[i] * l[j]\n    c = c + l[31] * (l[31] - 1) // 2\n    print(c)", "t = int(input())\nfor k in range(t):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        num = 0\n        for ch in s1:\n            if ch == 'a':\n                num = num + 10000\n            elif ch == 'e':\n                num = num + 1000\n            elif ch == 'i':\n                num = num + 100\n            elif ch == 'o':\n                num = num + 10\n            elif ch == 'u':\n                num = num + 1\n        val = int(str(num), base=2)\n        l[val] = l[val] + 1\n    c = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c = c + l[i] * l[j]\n    c = c + l[31] * (l[31] - 1) // 2\n    print(c)", "t = int(input())\nfor k in range(t):\n    l = [0] * 32\n    n = int(input())\n    for z in range(n):\n        s1 = list(set(input()))\n        num = 0\n        for ch in s1:\n            if ch == 'a':\n                num = num + 10000\n            elif ch == 'e':\n                num = num + 1000\n            elif ch == 'i':\n                num = num + 100\n            elif ch == 'o':\n                num = num + 10\n            elif ch == 'u':\n                num = num + 1\n        val = int(str(num), base=2)\n        l[val] = l[val] + 1\n    c = 0\n    for i in range(1, 31):\n        for j in range(i + 1, 32):\n            if (l[i] and l[j]) and i | j == 31:\n                c = c + l[i] * l[j]\n    c = c + l[31] * (l[31] - 1) // 2\n    print(c)"]