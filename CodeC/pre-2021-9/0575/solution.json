["def brute(x, arr):\n    res = arr[0] ^ x\n    for i in range(1, len(arr)):\n        res |= arr[i] ^ x\n    return res\n\ndef soln(n, arr):\n    maxm = max(arr)\n    return (maxm, brute(maxm, arr))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*soln(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    r = 0\n    for i in range(n):\n        l[i] = l[i] ^ m\n        r = r | l[i]\n    print(m, r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 9999999\n    for i in l:\n        f = 0\n        for j in l:\n            f = f | j ^ i\n        if f <= k:\n            k = f\n            c = i\n    print(str(c) + ' ' + str(k))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 9999999\n    for i in l:\n        f = 0\n        for j in l:\n            f = f | j ^ i\n        if f <= k:\n            k = f\n            c = i\n    print(str(c) + ' ' + str(k))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 9999999\n    for i in l:\n        f = 0\n        for j in l:\n            f = f | j ^ i\n        if f <= k:\n            k = f\n            c = i\n    print(str(c) + ' ' + str(k))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 9999999\n    for i in l:\n        f = 0\n        for j in l:\n            f = f | j ^ i\n        if f <= k:\n            k = f\n            c = i\n    print(str(c) + ' ' + str(k))", "from bisect import bisect_left, bisect_right\nimport math\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor i in range(ii()):\n    s = ii()\n    a = il()\n    m = max(a)\n    y = 0\n    for k in range(s - 1):\n        x = a[k] ^ a[k + 1]\n        y |= x\n    print(m, y)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        c = c | i\n    ans = 0\n    for i in a:\n        ans = ans | i ^ c\n    print(c, ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        c = c | i\n    ans = 0\n    for i in a:\n        ans = ans | i ^ c\n    print(c, ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = 0\n    for i in range(n):\n        x = x | arr[i]\n    ans = 0\n    for i in range(n):\n        ans |= arr[i] ^ x\n    res = []\n    res.append(x)\n    res.append(ans)\n    print(*res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 9999999\n    for i in l:\n        f = 0\n        for j in l:\n            f = f | j ^ i\n        if f <= k:\n            k = f\n            c = i\n    print(str(c) + ' ' + str(k))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ende = A[0]\n    tot = 0\n    for ele in A:\n        ende = ende | ele\n    for elem in A:\n        tot = elem ^ ende | tot\n    print(ende, tot)", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    mx = max(nli)\n    xli = list()\n    for a in nli:\n        xli.append(a ^ mx)\n    rs = reduce(lambda x, y: x | y, xli)\n    print(mx, rs)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    for i in arr:\n        x = x | i\n    res = arr[0] ^ x\n    ans = res\n    for i in range(1, n):\n        res = arr[i] ^ x\n        ans = ans | res\n    print(x, ans)", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    maxi = max(ar)\n    sz = len(bin(maxi)[2:])\n    ones = 0\n    for i in range(n):\n        ones |= ar[i]\n    fc = 0\n    for j in range(n):\n        fc |= ar[j] ^ ones\n    print(ones, fc)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    x = max(L)\n    y = 0\n    for i in range(n):\n        a = L[i]\n        a = a ^ x\n        y = y | a\n    print(x, y)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        n = nl()\n        a = ln()\n        max_a = max(a)\n        min_or = 0\n        for i in a:\n            min_or |= i ^ max_a\n        print(max_a, min_or)\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "def decimalToBinary(n):\n    return '{0:b}'.format(int(n))\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        list = [int(item) for item in input().split()]\n        max = 0\n        for i in range(n):\n            if list[i] > max:\n                max = list[i]\n        bin_num = decimalToBinary(max)\n        length = len(bin_num)\n        high = (1 << length + 1) - 1\n        ans = 0\n        xor_num = 0\n        for i in range(n):\n            let_xor = high ^ list[i]\n            if let_xor not in list:\n                if xor_num < list[i]:\n                    xor_num = list[i]\n        for i in range(n):\n            ans = ans | xor_num ^ list[i]\n        print(xor_num, ans)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (x, y) = (0, 0)\n    for i in l:\n        x |= i\n    for i in l:\n        y |= i ^ x\n    print(x, y)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (x, y) = (l[0], 0)\n    for i in l:\n        x |= i\n    for i in l:\n        y |= i ^ x\n    print(x, y)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    x = 0\n    i = 0\n    for i in range(0, len(list1)):\n        x = x | list1[i]\n    for i in range(0, len(list1)):\n        list1[i] = list1[i] ^ x\n    f = 0\n    for i in range(0, len(list1)):\n        f = f | list1[i]\n    print(f'{x} {f}')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    X = 0\n    min_ = 0\n    for i in arr:\n        X |= i\n    for i in arr:\n        min_ |= X ^ i\n    print(X, min_)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    X = 0\n    ans = 0\n    for i in a:\n        X |= i\n    for i in a:\n        ans |= X ^ i\n    print(f'{X} {ans}')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    X = 0\n    ans = 0\n    for i in a:\n        X |= i\n    for i in a:\n        ans |= X ^ i\n    print(f'{X} {ans}')", "numTest = int(input())\nfor _ in range(numTest):\n    n = input()\n    arr = list(map(int, input().split()))\n    or_ = 0\n    for i in arr:\n        or_ |= i\n    ans = 0\n    for j in arr:\n        ans = ans | or_ ^ j\n    print(or_, ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = max(arr)\n    xor = []\n    orr = 0\n    for i in arr:\n        xor.append(i ^ x)\n    for i in xor:\n        orr = orr | i\n    print(str(x) + ' ' + str(orr))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maxx = max(arr)\n    orr = 0\n    xor = []\n    for i in range(len(arr)):\n        xor.append(arr[i] ^ maxx)\n    for i in range(len(xor)):\n        orr = orr | xor[i]\n    print(str(maxx) + ' ' + str(orr))", "def b(l):\n    p = max(l)\n    ans = []\n    r = len(bin(p))\n    for i in range(r - 2):\n        ans.append(0)\n    for j in range(len(l)):\n        t = l[j]\n        k = -1\n        while t != 0:\n            if t & 1 == 1:\n                ans[k] = 1\n            k = k - 1\n            t = t >> 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = b(l)\n    final = ''\n    for i in f:\n        if i == 1:\n            final += '1'\n        else:\n            final += '0'\n    x = int(final, 2)\n    for i in range(n):\n        l[i] = l[i] ^ x\n    ans = l[0]\n    for i in range(1, n):\n        ans = ans | l[i]\n    print(x, ans)", "def b(l):\n    p = max(l)\n    ans = []\n    r = len(bin(p))\n    for i in range(r - 2):\n        ans.append(0)\n    for j in range(len(l)):\n        t = l[j]\n        k = -1\n        while t != 0:\n            if t & 1 == 1:\n                ans[k] = 1\n            k = k - 1\n            t = t >> 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = b(l)\n    final = ''\n    for i in f:\n        if i == 1:\n            final += '1'\n        else:\n            final += '0'\n    x = int(final, 2)\n    for i in range(n):\n        l[i] = l[i] ^ x\n    ans = l[0]\n    for i in range(1, n):\n        ans = ans | l[i]\n    print(x, ans)", "def findor(arr, n):\n    x = 0\n    for i in range(n):\n        x = x | arr[i]\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = findor(arr, n)\n    for i in range(n):\n        arr[i] = arr[i] ^ x\n    print(x, findor(arr, n))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = [int(X) for X in input().split()]\n    a = 0\n    for i in arr:\n        a = a | i\n    res = 0\n    for i in arr:\n        res = res | a ^ i\n    print(a, res)", "case = int(input())\nfor r in range(case):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    x = arr[0]\n    for i in range(n):\n        x = x | arr[i]\n    res = 0\n    for i in range(n):\n        res = res | arr[i] ^ x\n    print(x, res)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    Min = sys.maxsize\n    ans = 0\n    for x in arr:\n        cal = 0\n        for i in range(n):\n            cal = cal | arr[i] ^ x\n        Min = min(Min, cal)\n        if cal == Min:\n            ans = x\n    print(ans, Min)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mini = 0\n    a = list(map(int, input().split()))\n    b = max(a)\n    for i in range(n):\n        mini = mini | b ^ a[i]\n    print(b, mini)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mini = 0\n    a = list(map(int, input().split()))\n    andi = 0\n    for i in range(n):\n        andi = andi | a[i]\n    for i in range(n):\n        mini = mini | andi ^ a[i]\n    print(andi, mini)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    X = 0\n    ans = 0\n    for i in a:\n        X |= i\n    for i in a:\n        ans |= X ^ i\n    print(f'{X} {ans}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    Or = 0\n    for i in lst:\n        Or |= i\n    lst1 = [i ^ Or for i in lst]\n    ans = 0\n    for i in lst1:\n        ans |= i\n    print(Or, end=' ')\n    print(ans)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        mx = max(a)\n        for i in range(n):\n            a[i] = mx ^ a[i]\n        res = a[0]\n        for i in range(1, n):\n            res |= a[i]\n        print(mx, res)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans1 = 0\n    ans2 = 0\n    for i in arr:\n        ans1 = ans1 | i\n    for i in range(n):\n        arr[i] = arr[i] ^ ans1\n        ans2 = ans2 | arr[i]\n    print(ans1, ans2)", "tc = int(input())\nwhile tc > 0:\n    num = int(input())\n    li = list(map(int, input().split()))\n    x = 0\n    minimum = 0\n    for i in li:\n        x |= i\n    for j in li:\n        minimum |= x ^ j\n    print(x, minimum)\n    tc -= 1", "tc = int(input())\nwhile tc > 0:\n    num = int(input())\n    li = list(map(int, input().split()))\n    x = 0\n    minimum = 0\n    for i in li:\n        x |= i\n    for j in li:\n        minimum |= x ^ j\n    print(x, minimum)\n    tc -= 1", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        x = 0\n        ans = 0\n        for i in a:\n            x |= i\n        for i in a:\n            ans |= i ^ x\n        print(x, ans)\nexcept:\n    pass", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[0]\n    for i in range(1, n):\n        x = x | l[i]\n    c = l[0] ^ x\n    for i in range(1, n):\n        c = c | l[i] ^ x\n    print(x, c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    m1 = 0\n    for i in l:\n        m1 |= m ^ i\n    print(m, m1)", "try:\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        arr = [int(i) for i in input().split()]\n        x = max(arr)\n        s = []\n        y = 0\n        for i in range(n):\n            arr[i] = arr[i] ^ x\n        for i in range(n):\n            y = y | arr[i]\n        print(x, y)\n        t -= 1\nexcept EOFError:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    m = max(lst)\n    s = 0\n    for i in lst:\n        s |= i ^ m\n    print(f'{m} {s}')", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    for i in range(n):\n        a[i] = x ^ a[i]\n    val = 0\n    for i in range(n):\n        val = val | a[i]\n    print(x, val)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = 0\n    ans = 0\n    for i in l:\n        r |= i\n    for i in range(n):\n        l[i] ^= r\n        ans |= l[i]\n    print(r, ans)", "T = int(input())\nwhile T:\n    n = int(input())\n    ans = 0\n    lst = list(map(int, input().split()))\n    X = max(lst)\n    for i in lst:\n        ans = ans | i ^ X\n    print(X, ans)\n    T -= 1", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = max(arr)\n    ans = 0\n    xor = x\n    for i in arr:\n        xor = i ^ x\n        ans = ans | xor\n    print(x, ans)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    N = list(map(int, input().split()))\n    x = 0\n    for i in N:\n        x |= i\n    N = map(lambda r: r ^ x, N)\n    ans = 0\n    for i in N:\n        ans = ans | i\n    print(x, ans)"]