["n = int(input())\nfor _ in range(n):\n    (n, f) = [int(c) for c in input().split()]\n    li = [int(c) for c in input().split()]\n    count = 0\n    a = []\n    s = {}\n    for i in li:\n        h = i\n        while h % f == 0:\n            h /= f\n        a.append(h)\n        s[h] = 0\n    for i in a:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) // 2\n    print(count)", "n = int(input())\nfor _ in range(n):\n    (n, f) = [int(c) for c in input().split()]\n    li = [int(c) for c in input().split()]\n    count = 0\n    a = []\n    s = {}\n    for i in li:\n        h = i\n        while h % f == 0:\n            h /= f\n        a.append(h)\n        s[h] = 0\n    for i in a:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) // 2\n    print(count)", "n = int(input())\nfor _ in range(n):\n    (n, f) = [int(c) for c in input().split()]\n    li = [int(c) for c in input().split()]\n    count = 0\n    a = []\n    s = {}\n    for i in li:\n        h = i\n        while h % f == 0:\n            h /= f\n        a.append(h)\n        s[h] = 0\n    for i in a:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) // 2\n    print(count)", "n = int(input())\nfor _ in range(n):\n    (n, f) = [int(c) for c in input().split()]\n    li = [int(c) for c in input().split()]\n    count = 0\n    a = []\n    s = {}\n    for i in li:\n        h = i\n        while h % f == 0:\n            h /= f\n        a.append(h)\n        s[h] = 0\n    for i in a:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) // 2\n    print(count)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, f) = map(int, input().split())\n    H = list(map(int, input().split()))\n    dct = defaultdict(int)\n    for i in range(n):\n        base = H[i]\n        while base % f == 0:\n            base = base // f\n        dct[base] += 1\n    ans = 0\n    for val in dct.values():\n        ans += val * (val - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (N, F) = map(int, input().split())\n    height = list(map(int, input().split()))\n    height.sort()\n    ans = 0\n    dic = {}\n    for i in range(N):\n        while height[i] % F == 0:\n            height[i] /= F\n    for i in range(N):\n        if height[i] not in dic:\n            dic[height[i]] = 1\n        else:\n            dic[height[i]] += 1\n    for i in list(dic.keys()):\n        if dic[i] >= 2:\n            ans += dic[i] * (dic[i] - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (N, F) = map(int, input().split())\n    height = list(map(int, input().split()))\n    height.sort()\n    ans = 0\n    dic = {}\n    for i in range(N):\n        while height[i] % F == 0:\n            height[i] /= F\n    for i in range(N):\n        if height[i] not in dic:\n            dic[height[i]] = 1\n        else:\n            dic[height[i]] += 1\n    for i in list(dic.keys()):\n        if dic[i] >= 2:\n            ans += dic[i] * (dic[i] - 1) // 2\n    print(ans)", "from bisect import bisect_left, bisect_right\nfor _ in range(int(input())):\n    (n, f) = [int(c) for c in input().split()]\n    arr = [int(c) for c in input().split()]\n    arr.sort()\n    ans = 0\n    mx = max(arr)\n    for i in range(len(arr)):\n        curr = arr[i]\n        while curr <= mx:\n            l = bisect_left(arr, curr, i + 1, n)\n            r = bisect_right(arr, curr, i + 1, n)\n            ans += r - l\n            curr *= f\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, f) = map(int, input().split())\n    li = list(map(int, input().split()))\n    for i in range(n):\n        while li[i] % f == 0:\n            li[i] = li[i] // f\n    dic = Counter(li)\n    c = 0\n    for k in dic.keys():\n        j = dic[k]\n        c = c + j * (j - 1) // 2\n    print(c)", "from collections import Counter\nt = int(input())\nfor test in range(1, t + 1):\n    (n, f) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    narr = []\n    for i in arr:\n        tmp = i\n        while tmp % f == 0:\n            tmp /= f\n        narr.append(tmp)\n    dt = Counter(narr)\n    c = 0\n    for i in dt:\n        c += (dt[i] - 1) * dt[i] / 2\n    print(int(c))", "from collections import Counter\nt = int(input())\nfor test in range(1, t + 1):\n    (n, f) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    narr = []\n    for i in arr:\n        tmp = i\n        while tmp % f == 0:\n            tmp /= f\n        narr.append(tmp)\n    dt = Counter(narr)\n    c = 0\n    for i in dt:\n        c += (dt[i] - 1) * dt[i] / 2\n    print(int(c))", "from collections import Counter\nt = int(input())\nfor test in range(1, t + 1):\n    (n, f) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    narr = []\n    for i in arr:\n        tmp = i\n        while tmp % f == 0:\n            tmp /= f\n        narr.append(tmp)\n    dt = Counter(narr)\n    c = 0\n    for i in dt:\n        c += (dt[i] - 1) * dt[i] / 2\n    print(int(c))", "from collections import Counter\nt = int(input())\nfor test in range(1, t + 1):\n    (n, f) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    narr = []\n    for i in arr:\n        tmp = i\n        while tmp % f == 0:\n            tmp /= f\n        narr.append(tmp)\n    dt = Counter(narr)\n    c = 0\n    for i in dt:\n        c += (dt[i] - 1) * dt[i] / 2\n    print(int(c))", "def div(x, f):\n    if x % f != 0:\n        return x\n    else:\n        return div(x // f, f)\nfor i in range(int(input())):\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    dictt = {}\n    for x in arr:\n        a = div(x, f)\n        if a in dictt:\n            dictt[a] += 1\n        else:\n            dictt[a] = 1\n    count = 0\n    for k in dictt.keys():\n        if dictt[k] > 1:\n            v = dictt[k]\n            z = 0\n            z = v * (v - 1) // 2\n            count = count + z\n    print(count)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    dict = {}\n    for i in range(n):\n        l = int(math.log(arr[i], f))\n        arr[i] /= pow(f, l)\n    for i in range(n):\n        if arr[i] in dict:\n            dict[arr[i]] += 1\n        else:\n            dict[arr[i]] = 1\n    count = 0\n    for val in dict.values():\n        count += val * (val - 1) / 2\n    print(int(count))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    dict = {}\n    for i in range(n):\n        l = int(math.log(arr[i], f))\n        arr[i] /= pow(f, l)\n    for i in range(n):\n        if arr[i] in dict:\n            dict[arr[i]] += 1\n        else:\n            dict[arr[i]] = 1\n    count = 0\n    for val in dict.values():\n        count += val * (val - 1) / 2\n    print(int(count))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    dict = {}\n    for i in range(n):\n        l = int(math.log(arr[i], f))\n        arr[i] /= pow(f, l)\n    for i in range(n):\n        if arr[i] in dict:\n            dict[arr[i]] += 1\n        else:\n            dict[arr[i]] = 1\n    count = 0\n    for val in dict.values():\n        count += val * (val - 1) / 2\n    print(int(count))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    dict = {}\n    for i in range(n):\n        l = int(math.log(arr[i], f))\n        arr[i] /= pow(f, l)\n    for i in range(n):\n        if arr[i] in dict:\n            dict[arr[i]] += 1\n        else:\n            dict[arr[i]] = 1\n    count = 0\n    for val in dict.values():\n        count += val * (val - 1) / 2\n    print(int(count))", "import math\n\ndef rearrange(arr, f, n):\n    for i in range(n):\n        l = int(math.log(arr[i], f))\n        arr[i] /= pow(f, l)\n    return arr\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, f) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    dict = {}\n    arr = rearrange(arr, f, n)\n    for i in range(n):\n        if arr[i] in dict:\n            dict[arr[i]] += 1\n        else:\n            dict[arr[i]] = 1\n    count = 0\n    for val in dict.values():\n        count += val * (val - 1) / 2\n    print(int(count))", "for _ in range(int(input())):\n    (n, f) = map(int, input().split())\n    ar = map(int, input().split())\n    (count, b, s) = (0, [], {})\n    for i in ar:\n        h = i\n        while h % f == 0:\n            h /= f\n        b.append(h)\n        s[h] = 0\n    for i in b:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) // 2\n    print(count)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    count = 0\n    mapi = defaultdict(int)\n    for i in a:\n        temp = i\n        while temp % h == 0:\n            temp = temp // h\n        mapi[temp] += 1\n    for i in mapi.values():\n        count += (i - 1) * i // 2\n    print(count)", "for _ in range(int(input())):\n    (n, f) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = l\n    l = list(set(l))\n    c.sort()\n    k = 1\n    dict = {}\n    for i in range(1, n):\n        if c[i] != c[i - 1]:\n            dict[c[i - 1]] = k\n            k = 1\n        else:\n            k = k + 1\n        if i == n - 1:\n            dict[c[i]] = k\n    ans = 0\n    for i in range(len(l)):\n        if l[i] % f == 0:\n            k = dict[l[i]]\n            ans1 = 0\n            y = int(l[i] / f)\n            while y > 0:\n                if dict.get(y) != None:\n                    ans1 = ans1 + dict[y]\n                if y % f != 0:\n                    break\n                else:\n                    y = int(y / f)\n            ans = ans + ans1 * k + k * (k - 1) / 2\n        else:\n            ans = ans + dict[l[i]] * (dict[l[i]] - 1) / 2\n    print(int(ans))", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    (n, f) = map(int, input().split())\n    arr = [int(j) for j in input().split()]\n    arr.sort()\n    d = defaultdict(int)\n    for x in arr:\n        d[x] += 1\n    ma = arr[-1]\n    ans = 0\n    for x in d:\n        tempans = 0\n        temp = x * f\n        while temp <= ma:\n            if temp in d:\n                tempans += d[temp] * d[x]\n            temp *= f\n        tempans += d[x] * (d[x] - 1) // 2\n        ans += tempans\n    print(ans)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    (n, f) = map(int, input().split())\n    arr = [int(j) for j in input().split()]\n    arr.sort()\n    d = defaultdict(int)\n    for x in arr:\n        d[x] += 1\n    ans = 0\n    for x in d:\n        tempans = 0\n        temp = x * f\n        for i in range(30):\n            if temp in d:\n                tempans += d[temp] * d[x]\n            temp *= f\n        tempans += d[x] * (d[x] - 1) // 2\n        ans += tempans\n    print(ans)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    (n, f) = map(int, input().split())\n    arr = [int(j) for j in input().split()]\n    arr.sort()\n    d = defaultdict(int)\n    for x in arr:\n        d[x] += 1\n    ans = 0\n    for x in d:\n        tempans = 0\n        temp = x * f\n        for i in range(40):\n            if temp in d:\n                tempans += d[temp] * d[x]\n            temp *= f\n        tempans += d[x] * (d[x] - 1) // 2\n        ans += tempans\n    print(ans)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, f) = map(int, input().split())\n    H = list(map(int, input().split()))\n    dct = defaultdict(int)\n    for i in range(n):\n        base = H[i]\n        while base % f == 0:\n            base = base // f\n        dct[base] += 1\n    ans = 0\n    for val in dct.values():\n        ans += val * (val - 1) // 2\n    print(ans)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, f) = map(int, input().split())\n    H = list(map(int, input().split()))\n    dct = defaultdict(int)\n    for i in range(n):\n        base = H[i]\n        while base % f == 0:\n            base = base // f\n        dct[base] += 1\n    ans = 0\n    for val in dct.values():\n        ans += val * (val - 1) // 2\n    print(ans)", "def count(arr, x, n, m):\n    i = first(arr, m, n - 1, x)\n    if i == -1:\n        return 0\n    j = last(arr, m, n - 1, x)\n    return j - i + 1\n\ndef first(arr, i, j, val):\n    x = -1\n    while i <= j:\n        mid = i + (j - i) // 2\n        if arr[mid] > val:\n            j = mid - 1\n        elif arr[mid] == val:\n            x = mid\n            j = mid - 1\n        else:\n            i = mid + 1\n    return x\n\ndef last(arr, i, j, val):\n    x = -1\n    while i <= j:\n        mid = i + (j - i) // 2\n        if arr[mid] > val:\n            j = mid - 1\n        elif arr[mid] == val:\n            x = mid\n            i = mid + 1\n        else:\n            i = mid + 1\n    return x\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    d = l[-1]\n    c = 0\n    for i in range(n - 1):\n        x = l[i]\n        while x <= d:\n            e = count(l, x, n, i + 1)\n            c += e\n            x *= k\n    print(c)", "test = int(input())\nwhile test > 0:\n    b = []\n    s = {}\n    test -= 1\n    (n, f) = map(int, input().split())\n    ar = map(int, input().split())\n    count = 0\n    for i in ar:\n        h = i\n        while h % f == 0:\n            h /= f\n        b.append(h)\n        s[h] = 0\n    for i in b:\n        s[i] += 1\n    for i in s:\n        count += s[i] * (s[i] - 1) / 2\n    print(int(count))", "for _ in range(int(input())):\n    (n, f) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        while arr[i] % f == 0:\n            arr[i] //= f\n    arr.sort()\n    ans = 0\n    cnt = 1\n    cur = arr[0]\n    for i in range(1, n):\n        if arr[i] != cur:\n            cur = arr[i]\n            cnt = 0\n        ans += cnt\n        cnt += 1\n    print(ans)", "import sys, bisect\nfrom bisect import bisect_left\ninput = sys.stdin.readline\n(b, c, MAX) = ([], [], int(10000.0))\nt = int(input().strip())\nwhile t:\n    (n, f) = map(int, input().strip().split())\n    (i, j) = (0, 0)\n    a = sorted([int(x) for x in input().strip().split()])\n    while i < n:\n        k = i\n        while i < n and a[i] == a[k]:\n            i += 1\n        b.append(a[k])\n        c.append(i - k)\n        j += 1\n    k = 0\n    for i in range(len(b)):\n        (d, y) = (c[i] * (c[i] - 1) // 2, f)\n        while b[i] // y and b[i] % y == 0:\n            j = bisect_left(b, b[i] // y)\n            d += c[i] * c[j] if b[j] == b[i] // y else 0\n            y = y * f\n        k += d\n    print(k)\n    a.clear()\n    b.clear()\n    c.clear()\n    t -= 1", "from bisect import bisect_left\nfrom bisect import bisect_right\nt = int(input())\nwhile t > 0:\n    (n, k) = input().strip().split(' ')\n    (n, k) = (int(n), int(k))\n    count = 0\n    a = []\n    mapp = {}\n    str = input().split()\n    for s in str:\n        x = int(s)\n        while x % k is 0:\n            x //= k\n        a.append(x)\n        mapp[x] = 0\n    for i in a:\n        mapp[i] += 1\n    for i in mapp:\n        count += mapp[i] * (mapp[i] - 1) // 2\n    print(count)\n    t -= 1"]