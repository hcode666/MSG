["def snek1(a):\n    r = 0\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            r += 1\n    return r\n\ndef snek2(p, q):\n    r = p * (p - 1) + p * (p - 3) * q // 2\n    return r\nt = int(input())\nfor i in range(t):\n    n = input()\n    s = []\n    for j in range(len(n)):\n        s.append(n[j])\n    q = snek1(s)\n    print(snek2(len(n), q))", "def snek1(a):\n    r = 0\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            r += 1\n    return r\n\ndef snek2(p, q):\n    r = p * (p - 1) + p * (p - 3) * q // 2\n    return r\nt = int(input())\nfor i in range(t):\n    n = input()\n    s = []\n    for j in range(len(n)):\n        s.append(n[j])\n    q = snek1(s)\n    print(snek2(len(n), q))", "def calc(array):\n    result = 0\n    for i in range(1, len(array)):\n        if array[i] == array[i - 1]:\n            result += 1\n    return result\n\ndef answer(p, q):\n    result = p * (p - 1) + p * (p - 3) * q // 2\n    return result\nfor test_case in range(int(input())):\n    String = input()\n    sequence = []\n    for i in range(len(String)):\n        sequence.append(String[i])\n    q = calc(sequence)\n    print(answer(len(String), q))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    hak = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            hak += 1\n    red = hak * n * (n + 1)\n    red = red // 2\n    clu = n * n\n    qwe = 2 * hak * n\n    print(red + clu - qwe - n)", "def calc(array):\n    result = 0\n    for i in range(1, len(array)):\n        if array[i] == array[i - 1]:\n            result += 1\n    return result\n\ndef answer(p, q):\n    result = p * (p - 1) + p * (p - 3) * q // 2\n    return result\nfor test_case in range(int(input())):\n    String = input()\n    sequence = []\n    for i in range(len(String)):\n        sequence.append(String[i])\n    q = calc(sequence)\n    print(answer(len(String), q))", "def calc(array):\n    result = 0\n    for i in range(1, len(array)):\n        if array[i] == array[i - 1]:\n            result += 1\n    return result\n\ndef answer(p, q):\n    result = p * (p - 1) + p * (p - 3) * q // 2\n    return result\nfor test_case in range(int(input())):\n    String = input()\n    sequence = []\n    for i in range(len(String)):\n        sequence.append(String[i])\n    q = calc(sequence)\n    print(answer(len(String), q))", "def find2(i):\n    ans = 0\n    return (i + 1) * (lenS - i - 1) + i * (i + 1) / 2 + (lenS - i - 2) * (lenS - i - 1) / 2\nfor tests in range(int(input())):\n    S = input()\n    lenS = len(S)\n    ans = 0\n    for i in range(lenS - 1):\n        if S[i] == S[i + 1]:\n            ans += int(find2(i))\n        else:\n            ans += lenS\n    print(ans)", "try:\n    for _ in range(int(input())):\n        s = input()\n        size = len(s)\n        m = size * (size - 1) // 2\n        n = size\n        answer = 0\n        for i in range(size - 1):\n            if s[i] == s[i + 1]:\n                answer += m\n            else:\n                answer += n\n        print(answer)\nexcept Exception as e:\n    print(e)", "try:\n    for _ in range(int(input())):\n        s = input()\n        size = len(s)\n        m = size * (size - 1) // 2\n        n = size\n        answer = 0\n        for i in range(size - 1):\n            if s[i] == s[i + 1]:\n                answer += m\n            else:\n                answer += n\n        print(answer)\nexcept Exception as e:\n    print(e)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    n = len(s)\n    ans = 0\n    c = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            ans += n * (n + 1) // 2 - n\n        else:\n            ans += n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    n = len(s)\n    ans = 0\n    c = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            ans += n * (n + 1) // 2 - n\n        else:\n            ans += n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    k = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            k += 1\n    ans = k * (n * (n + 1) // 2)\n    for i in range(n):\n        x = n - i\n        if i == 0:\n            pass\n        elif s[i] == s[i - 1]:\n            ans -= x\n        else:\n            ans += x\n        x = i + 1\n        if i == n - 1:\n            pass\n        elif s[i + 1] == s[i]:\n            ans -= x\n        else:\n            ans += x\n    print(ans)", "for i in range(int(input())):\n    ans = 0\n    str1 = input()\n    n = len(str1)\n    for j in range(n - 1):\n        if str1[j] == str1[j + 1]:\n            ans += n * (n - 1) // 2\n        else:\n            ans += n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input().strip()\n    n = len(s)\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans += (i + 1) * (n - i - 1) + i * (i + 1) // 2 + (n - i - 2) * (n - i - 1) // 2\n        else:\n            ans += n\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    N = len(s)\n    answer = 0\n    h = N * (N - 1) // 2\n    for i in range(N - 1):\n        if s[i] == s[i + 1]:\n            answer = answer + h\n        else:\n            answer = answer + N\n    print(answer)", "for _ in range(int(input())):\n    s = input()\n    N = len(s)\n    answer = 0\n    for i in range(N - 1):\n        if s[i] == s[i + 1]:\n            answer = answer + (i * (i - 1) + (N - i - 2) * (N - i - 3)) // 2 + N - 2 + (i + 1) * (N - i - 1)\n        else:\n            answer = answer + N\n    print(answer)", "import math\ns = []\n\ndef fi(n):\n    if n == 0:\n        return False\n    if s[n] != s[n - 1]:\n        return True\n    return -1\n\ndef ri(n):\n    if n == len(s) - 1:\n        return False\n    if s[n] != s[n + 1]:\n        return True\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    le = len(s)\n    count = 0\n    for i in range(le - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    su = le * (le + 1) // 2 * count\n    for i in range(1, le + 1):\n        su += i * (fi(le - i) + ri(i - 1))\n    print(su)", "import math\ns = []\n\ndef fi(n):\n    if n == 0:\n        return False\n    if s[n] != s[n - 1]:\n        return True\n    return -1\n\ndef ri(n):\n    if n == len(s) - 1:\n        return False\n    if s[n] != s[n + 1]:\n        return True\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    le = len(s)\n    count = 0\n    for i in range(le - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    su = le * (le + 1) // 2 * count\n    for i in range(1, le + 1):\n        su += i * (fi(le - i) + ri(i - 1))\n    print(su)", "for test in range(int(input())):\n    s = input()\n    n = len(s)\n    a = n * (n - 1) // 2\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans += a\n        else:\n            ans += n\n    print(ans)", "from collections import defaultdict\nmod = 10 ** 9 + 7\nT = 1\nT = int(input())\nfor _ in range(T):\n    s = input()\n    ans = 0\n    n = len(s)\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            ans += n * (n + 1) // 2\n            ans -= n\n        else:\n            ans += n\n    print(ans)", "def testcase():\n    s = input()\n    answer = 0\n    n = len(s)\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            answer += n * (n + 1) // 2 - n\n        else:\n            answer += n\n    print(answer)\nt = int(input())\nfor test in range(t):\n    testcase()", "for a0 in range(int(input())):\n    s = input()\n    ct = 0\n    n = len(s)\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            ct += n * (n - 1) // 2\n        else:\n            ct += n\n    print(ct)", "from functools import reduce\nfor _ in range(int(input())):\n    s = input()\n    l = len(s)\n    ans = 0\n    for i in range(1, l):\n        if s[i] == s[i - 1]:\n            ans += int(l * (l - 1) / 2)\n        else:\n            ans += l\n    print(ans)", "from functools import reduce\nfor _ in range(int(input())):\n    s = input()\n    l = len(s)\n    ans = 0\n    for i in range(1, l):\n        if s[i] == s[i - 1]:\n            ans += int(l * (l + 1) / 2) - l\n        else:\n            ans += l\n    print(ans)", "t = int(input())\nfor you in range(t):\n    s = input()\n    total = 0\n    n = len(s)\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            total += n * (n - 1) // 2\n        else:\n            total += n\n    print(total)", "def evil(s):\n    n = len(s)\n    ans = 0\n    count1 = 0\n    count2 = 0\n    if n > 1:\n        for i in range(0, n - 1):\n            if s[i] == s[i + 1]:\n                count1 += 1\n            else:\n                count2 += 1\n        ans = count1 * (n * (n - 1) // 2) + count2 * n\n    return ans\nt = int(input())\nfor i in range(0, t):\n    s = input()\n    print(evil(s))", "for t in range(int(input())):\n    s = list(input())\n    n = len(s)\n    count = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            count += n * (n - 1) // 2\n        else:\n            count += n\n    print(int(count))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    for x in range(n - 1):\n        if s[x] == s[x + 1]:\n            ans += n * (n + 1) // 2 - n\n        else:\n            ans += n\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    ans = 0\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans += n * (n - 1) // 2\n        else:\n            ans += n\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) == 1:\n        print(0)\n    else:\n        same = 0\n        x = 0\n        diff = 0\n        for j in range(len(s) - 1):\n            if s[j] == s[j + 1]:\n                x += 1\n                same += 1\n            else:\n                diff += 1\n        if same >= 2 and diff >= 2:\n            k = (x - 2) * (same * (same - 1)) // 2 + (x + 2) * (diff * (diff - 1)) // 2 + x * diff * same\n        elif same < 2 and diff >= 2:\n            k = (x + 2) * (diff * (diff - 1)) // 2 + x * diff * same\n        elif same >= 2 and diff < 2:\n            k = (x - 2) * (same * (same - 1)) // 2 + x * same * diff\n        else:\n            k = x * same * diff\n        k += 2 * (x - 1) * same\n        k += 2 * (x + 1) * diff\n        k += same\n        print(k)", "for i in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            ans += n\n        else:\n            ans += n * (n - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    tot = int(l * (l + 1) / 2)\n    ans = 0\n    for i in range(l - 1):\n        if s[i] == s[i + 1]:\n            ans += tot - l\n        else:\n            ans += l\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    ans = 0\n    for i in range(l - 1):\n        if s[i] == s[i + 1]:\n            ans += int(l * (l - 1) / 2)\n        else:\n            ans += l\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    s = input()\n    n = len(s)\n    c = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            c += 1\n    p1 = int(n * (n + 1) / 2 - n)\n    p2 = int(n * (n - c - 1))\n    print(p1 * c + p2)", "def func(s):\n    n = len(s)\n    count = 0\n    tot = n * (n + 1) // 2\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            count += tot - n\n        else:\n            count += n\n    return count\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(func(s))", "t = int(input())\nwhile t:\n    t -= 1\n    a = input().rstrip()\n    n = len(a)\n    s = 0\n    for i in range(n - 1):\n        if a[i] == a[1 + i]:\n            s += n * (n - 1) // 2\n        else:\n            s += n\n    print(s)", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    k = n * (n + 1) // 2\n    x = n * (n - 1) // 2\n    su = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            su = su + x\n        else:\n            su = su + k - x\n    print(su)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    k = n * (n + 1) // 2\n    x = n * (n - 1) // 2\n    su = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            su = su + x\n        else:\n            su = su + k - x\n    print(su)\n    t = t - 1", "import math\ns = []\n\ndef fi(n):\n    if n == 0:\n        return False\n    if s[n] != s[n - 1]:\n        return True\n    return -1\n\ndef ri(n):\n    if n == len(s) - 1:\n        return False\n    if s[n] != s[n + 1]:\n        return True\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    le = len(s)\n    count = 0\n    for i in range(le - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    su = le * (le + 1) // 2 * count\n    for i in range(1, le + 1):\n        su += i * (fi(le - i) + ri(i - 1))\n    print(su)", "for test in range(int(input())):\n    s = str(input())\n    size = len(s)\n    same = size * (size - 1) // 2\n    diff = size\n    out = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            out += same\n        else:\n            out += diff\n    print(out)", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    k = n * (n + 1) // 2\n    x = n * (n - 1) // 2\n    sum = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            sum = sum + x\n        else:\n            sum = sum + k - x\n    print(sum)\n    t = t - 1", "for _ in range(int(input())):\n    s = input()\n    m = ''\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            m += '1'\n        else:\n            m += '0'\n    cnt = m.count('1')\n    n = len(s)\n    ans = 0\n    for i in range(n - 1):\n        temp = cnt\n        if m[i] == '1':\n            temp -= 1\n        else:\n            temp += 1\n        ans += temp\n    flag = (n - 1) * (n - 2)\n    flag = flag // 2\n    flag = (flag - 1) * cnt\n    print(ans * n - flag)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    total = 0\n    previous = s[0]\n    for i in range(1, n):\n        if s[i] == previous:\n            total = total + n * (n - 1) // 2\n        else:\n            total = total + n\n        previous = s[i]\n    print(int(total))", "def funct(n):\n    n = n - 1\n    p = n ** 2\n    p = p * (n + 1)\n    p = p // 2\n    return p\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    p = funct(n)\n    o = s.count('1')\n    x = n - 3\n    if n == 1:\n        q = 0\n    elif n == 2:\n        q = 1\n    else:\n        q = (x + 1) * (x + 2) // 2 - 1\n    count = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            count = count + 1\n    print(p - count * q)", "from sys import stdin\nfor __ in range(int(stdin.readline().split()[0])):\n    string = stdin.readline().split()[0]\n    n = len(string)\n    ans = 0\n    for i in range(n - 1):\n        if string[i] == string[i + 1]:\n            ans += n - 2\n            ans += i * (i - 1) // 2\n            ans += (n - i - 2) * (n - i - 3) // 2\n            ans += (i + 1) * (n - i - 1)\n        else:\n            ans += 2\n            ans += i\n            ans += n - i - 2\n    print(int(ans))", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    inversion = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            inversion += 1\n    ans = n * (n + 1) // 2 * inversion\n    for i in range(n):\n        left = n - i\n        right = i + 1\n        if i != 0:\n            if s[i - 1] == s[i]:\n                ans -= left\n            else:\n                ans += left\n        if i != n - 1:\n            if s[i + 1] == s[i]:\n                ans -= right\n            else:\n                ans += right\n    print(ans)", "for t in range(int(input())):\n    s = input()\n    lst = []\n    (n, cou) = (len(s), 0)\n    a = s[0]\n    for i in range(1, n):\n        if s[i] == a:\n            lst.append(1)\n            cou += 1\n        else:\n            lst.append(-1)\n        a = s[i]\n    print(n * (n + 1) * cou // 2 - n * sum(lst))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    same = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            same += 1\n    diff = n - 1 - same\n    k = n * (n + 1) // 2\n    res = k * same + n * (diff - same)\n    print(res)", "def formula(n):\n    if n < 0:\n        return 0\n    return (n * n + n) // 2\n\ndef solve(s):\n    n = len(s)\n    if n <= 1:\n        return 0\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ans += formula(i) + formula(n - i - 2) + (i + 1) * (n - i - 1)\n        else:\n            ans += n\n    return ans\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(solve(s))", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    total = n * (n + 1) // 2\n    count = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            count += total - n\n        else:\n            count += n\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    count = 0\n    s = list(map(int, list(s)))\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            count += 1\n    x = 2 * count - n + 1\n    print((n - 1 - count) * n * (n + 1) // 2 + x * n)", "def q():\n    meanAllPop = []\n    meanResPop = []\n    for t in range(len(allVirusPop[0])):\n        summAll = 0\n        for n in range(len(allVirusPop)):\n            summAll += float(allVirusPop[n][t])\n        summRes = 0\n        for n in range(len(resistVirusPop)):\n            summRes += float(resistVirusPop[n][t])\n        meanAllPop.append(summAll / float(numTrials))\n        meanResPop.append(summRes / float(numTrials))\n\ndef left(s, n):\n    if n == 0:\n        return 0\n    if s[n] != s[n - 1]:\n        return 1\n    return -1\n\ndef right(s, n):\n    if n == len(s) - 1:\n        return 0\n    if s[n] != s[n + 1]:\n        return 1\n    return -1\n\ndef main():\n    for _ in range(int(input())):\n        s = list(input())\n        count = 0\n        for i in range(len(s) - 1):\n            if s[i] == s[i + 1]:\n                count += 1\n        ans = len(s) * (len(s) + 1) // 2\n        ans *= count\n        for i in range(1, len(s) + 1):\n            ans += i * left(s, len(s) - i)\n            ans += i * right(s, i - 1)\n        print(ans)\nmain()", "def q():\n    meanAllPop = []\n    meanResPop = []\n    for t in range(len(allVirusPop[0])):\n        summAll = 0\n        for n in range(len(allVirusPop)):\n            summAll += float(allVirusPop[n][t])\n        summRes = 0\n        for n in range(len(resistVirusPop)):\n            summRes += float(resistVirusPop[n][t])\n        meanAllPop.append(summAll / float(numTrials))\n        meanResPop.append(summRes / float(numTrials))\n\ndef left(s, n):\n    if n == 0:\n        return 0\n    if s[n] != s[n - 1]:\n        return 1\n    return -1\n\ndef right(s, n):\n    if n == len(s) - 1:\n        return 0\n    if s[n] != s[n + 1]:\n        return 1\n    return -1\n\ndef main():\n    for _ in range(int(input())):\n        s = list(input())\n        count = 0\n        for i in range(len(s) - 1):\n            if s[i] == s[i + 1]:\n                count += 1\n        su = len(s) * (len(s) + 1) // 2\n        su *= count\n        for i in range(1, len(s) + 1):\n            su += i * left(s, len(s) - i)\n            su += i * right(s, i - 1)\n        print(su)\nmain()", "s = []\n\ndef l(n):\n    if n == 0:\n        return False\n    if s[n] != s[n - 1]:\n        return True\n    return -1\n\ndef r(n):\n    if n == len(s) - 1:\n        return False\n    if s[n] != s[n + 1]:\n        return True\n    return -1\nfor _ in range(int(input())):\n    s = input()\n    le = len(s)\n    count = 0\n    for i in range(le - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    su = le * (le + 1) // 2 * count\n    for i in range(1, le + 1):\n        su += i * (l(le - i) + r(i - 1))\n    print(su)", "for i in range(int(input())):\n    s = input()\n    count = 0\n    l = len(s)\n    for j in range(l - 1):\n        if s[j] == s[j + 1]:\n            count += 1\n    count *= l * (l + 1) // 2\n    if l == 1:\n        print(0)\n    else:\n        if s[0] == s[1]:\n            count -= 1\n        else:\n            count += 1\n        for j in range(1, l):\n            if j != l - 1:\n                if s[j] == s[j + 1]:\n                    count -= j + 1\n                else:\n                    count += j + 1\n            if s[j] == s[j - 1]:\n                count -= l - j\n            else:\n                count += l - j\n        print(count)", "def reverse(a):\n    if a == 0:\n        return 1\n    else:\n        return 0\nt = int(input())\nfor x0 in range(t):\n    strs = input()\n    i = 1\n    array = []\n    while i < len(strs):\n        if strs[i] != strs[i - 1]:\n            array.append(0)\n        else:\n            array.append(1)\n        i += 1\n    n = len(strs)\n    flips = n * (n + 1) // 2\n    sums = 0\n    i = 0\n    while i < len(array):\n        change = n\n        sums += change * reverse(array[i])\n        sums += (flips - change) * array[i]\n        i += 1\n    print(sums)", "test = int(input())\nfor t_count in range(test):\n    s = input()\n    length = len(s)\n    index1 = length * (length - 1) // 2\n    index2 = length\n    eq_count = 0\n    for i in range(1, length):\n        if s[i] == s[i - 1]:\n            eq_count += 1\n    neq_count = length - eq_count - 1\n    print(eq_count * index1 + neq_count * index2)", "test = int(input())\nfor t_count in range(test):\n    s = input()\n    length = len(s)\n    index1 = length * (length - 1) // 2\n    index2 = length\n    eq_count = 0\n    for i in range(1, length):\n        if s[i] == s[i - 1]:\n            eq_count += 1\n    neq_count = length - eq_count - 1\n    print(eq_count * index1 + neq_count * index2)", "t = int(input())\nfor ii in range(t):\n    arr = list(input())\n    n = len(arr)\n    a = n * (n - 1) // 2\n    b = n\n    eq = 0\n    neq = 0\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            eq += 1\n        else:\n            neq += 1\n    print(eq * a + neq * b)", "t = int(input(''))\nfor v in range(t):\n    s = input('')\n    n = len(s)\n    c = 0\n    red = 0\n    mor = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            c = c + 1\n            red = red + n - i - 1\n            red = red + i + 1\n        else:\n            mor = mor + n - i - 1\n            mor = mor + i + 1\n    ans = n * (n + 1) // 2 * c - red + mor\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    total = 0\n    cnt = sum([s[i] == s[i + 1] for i in range(n - 1)])\n    subs = n * (n + 1) // 2\n    total = subs * cnt\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            total -= n\n        else:\n            total += n\n    print(total)", "t = int(input())\nfor i in range(t):\n    count = 0\n    string = input()\n    length = len(string)\n    for i in range(0, length - 1):\n        x = i\n        y = length - x - 2\n        if string[i] == string[i + 1]:\n            count += (x + 1) * x // 2 + (y + 1) * y // 2 + (x + 1) * (y + 1)\n        else:\n            count += x + y + 2\n    print(int(count))", "t = int(input())\nfor _ in range(t):\n    string = str(input())\n    n = len(string)\n    m = n * (n - 1) / 2\n    ans = 0\n    for i in range(n - 1):\n        if string[i] == string[i + 1]:\n            ans += int(m)\n        else:\n            ans += n\n    print(ans)"]