["for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - pow(P * P - 24 * S, 0.5)) / 12\n    h = (P - 8 * l) / 4\n    print('%.2f' % (h * l * l))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - pow(P * P - 24 * S, 0.5)) / 12\n    h = (P - 8 * l) / 4\n    print('%.2f' % (h * l * l))", "import math\nt = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    s = a - math.sqrt(a * a - 24 * b)\n    s /= 12\n    v = 0.0\n    v = s * s * s + b * s / 2 - s * s * a / 4\n    print('%.2f' % v)\n    t -= 1", "for _ in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - pow(P * P - 24 * S, 0.5)) / 12\n    h = (P - 8 * l) / 4\n    print('%.2f' % (h * l * l))", "T = int(input(''))\nfor i in range(T):\n    (P, S) = [int(x) for x in input('').split()]\n    x = (P - (P * P - 24 * S) ** 0.5) / 12\n    V = x * S / 2 - x * x * P / 4 + x * x * x\n    M = round(V, 2)\n    print(M)", "T = int(input(''))\nfor i in range(T):\n    (P, S) = [int(x) for x in input('').split()]\n    x = (P - (P * P - 24 * S) ** 0.5) / 12\n    V = x * S / 2 - x * x * P / 4 + x * x * x\n    M = round(V, 2)\n    print(M)", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for tc in range(int(input())):\n    (p, s) = map(int, input().split())\n    V = p ** 3 / 1728.0 - p * (p ** 2 / 24.0 - s) / 24.0 + (p ** 2 / 24.0 - s) ** 1.5 * 6 ** 0.5 / 18\n    print('%.2f' % V)", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "T = int(input())\nfor i in range(0, T):\n    (p, s) = map(int, input().split())\n    x = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h = (p - 8 * x) / 4\n    print(round(x * x * h, 2))", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    h = (a - math.sqrt(a * a - 24 * b)) / 12\n    v = b * h / 2 - h * h * a / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "n = int(input())\nfor i in range(n):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** (1 / 2)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "for i in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** (1 / 2)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "for i in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** (1 / 2)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "for i in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** (1 / 2)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "for i in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** (1 / 2)) / 12\n    v = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % v)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "T = int(input())\nfor _ in range(T):\n    (p, s) = input().split()\n    p = int(p)\n    s = int(s)\n    length = (p - (p * p - 24 * s) ** 0.5) / 12\n    volume = length * (s / 2.0 - length * (p / 4.0 - length))\n    print('%.2f' % volume)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "import math\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "import math\nt = int(input())\nfor c in range(t):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "import math\nt = int(input())\nfor c in range(t):\n    (p, s) = map(int, input().split())\n    h = (p - math.sqrt(p * p - 24 * s)) / 12\n    volume = s * h / 2 - h * h * p / 4 + h ** 3\n    print('%.2f' % volume)", "import math\nt = input()\nfor c in range(0, int(t)):\n    (P, S) = map(int, input().split())\n    h = (P - math.sqrt(P * P - 24 * S)) / 12\n    volume = S * h / 2 - h * h * P / 4 + h * h * h\n    print('%.2f' % volume)", "import math\nt = int(input())\nfor i in range(t):\n    (P, S) = map(int, input().split())\n    h = (P - math.sqrt(P * P - 24 * S)) / 12\n    volume = S * h / 2 - h * h * P / 4 + h * h * h\n    print('%.2f' % volume)", "import math\nt = int(input())\nfor i in range(t):\n    (P, S) = map(int, input().split())\n    h = (P - math.sqrt(P * P - 24 * S)) / 12\n    volume = S * h / 2 - h * h * P / 4 + h * h * h\n    print('%.2f' % volume)", "import math\nt = int(input())\nfor i in range(t):\n    (P, S) = map(int, input().split())\n    h = (P - math.sqrt(P * P - 24 * S)) / 12\n    volume = S * h / 2 - h * h * P / 4 + h * h * h\n    print('%.2f' % volume)", "for jj in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** 0.5) / 12\n    v = h * (s / 2 - h * (p / 4 - h))\n    print('%.2f' % v)", "for jj in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** 0.5) / 12\n    v = h * (s / 2 - h * (p / 4 - h))\n    print('%.2f' % v)", "for jj in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** 0.5) / 12\n    v = h * (s / 2 - h * (p / 4 - h))\n    print('%.2f' % v)", "for jj in range(int(input())):\n    (p, s) = map(int, input().split())\n    h = (p - (p * p - 24 * s) ** 0.5) / 12\n    v = h * (s / 2 - h * (p / 4 - h))\n    print('%.2f' % v)", "ujju = int(input())\nfor jyo in range(ujju):\n    (d, w) = input().split()\n    (d, w) = (int(d), int(w))\n    n = 0.25 * d * d - 6 * w\n    t1 = 1 / 6 * (0.5 * d + n ** 0.5)\n    t2 = 1 / 6 * (0.5 * d - n ** 0.5)\n    rtc = 0.5 * w * t1 - 0.25 * d * t1 * t1 + t1 * t1 * t1\n    ac = 0.5 * w * t2 - 0.25 * d * t2 * t2 + t2 * t2 * t2\n    mp = max(rtc, ac)\n    print(round(mp, 2))", "from math import sqrt\nfor abhi in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * S)) / 12\n    V = l * (S / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor i in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * S)) / 12\n    V = l * (S / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor abhi in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * S)) / 12\n    V = l * (S / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor abhi in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * S)) / 12\n    V = l * (S / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor abhi in range(int(input())):\n    (P, S) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * S)) / 12\n    V = l * (S / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "t = int(input())\nfor i in range(t):\n    (p, s) = map(int, input().split())\n    y = (p - (p * p - 24 * s) ** 0.5) / 12\n    x = (s - 2 * y * y) / (4 * y)\n    print(round(x * y * y, 2))", "for t in range(int(input())):\n    (P, S) = [int(x) for x in input().split()]\n    l = (P / 2 - (P ** 2 / 4 - 6 * S) ** 0.5) / 6\n    print(round(l * (S / 2 - l * (P / 4 - l)), 2))", "for t in range(int(input())):\n    (P, S) = [int(x) for x in input().split()]\n    l = (P / 2 - (P ** 2 / 4 - 6 * S) ** 0.5) / 6\n    print(round(l * (S / 2 - l * (P / 4 - l)), 2))", "import math\nT = int(input())\nfor i in range(T):\n    (P, S) = [int(ii) for ii in input().split()]\n    xy = (P - math.sqrt(P ** 2 - 24 * S)) / 12\n    z = (P + 2 * math.sqrt(P ** 2 - 24 * S)) / 12\n    V = round(xy ** 2 * z, 2)\n    print(format(V, '.2f'))", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    x = input()\n    P = int(x.split(' ')[0])\n    S = int(x.split(' ')[1])\n    b = (P - sqrt(P * P - 24 * S)) / 12\n    v = b * (S / 2 - P * b / 4 + b * b)\n    print(f'{v:.2f}')", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    y2 = (p - (p ** 2 - 4 * 6 * s) ** (1 / 2)) / 12\n    x2 = (s - 2 * y2 * y2) / (4 * y2)\n    first = round(x2 * y2 * y2, 2)\n    print(first)", "from math import sqrt\nfor t in range(int(input())):\n    (p, s) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * s)) / 12\n    v = l * (s / 2 - l * (p / 4 - l))\n    print('{0:.2f}'.format(round(v, 2)))", "a = int(input())\nfor i in range(a):\n    (p, s) = map(int, input().split())\n    b = -(-p + (p ** 2 - 24 * s) ** (1 / 2)) / 12\n    c = (p - 8 * b) / 4\n    v = c * b * b\n    print(round(v, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    y2 = (p - (p ** 2 - 4 * 6 * s) ** (1 / 2)) / 12\n    x2 = (s - 2 * y2 * y2) / (4 * y2)\n    first = round(x2 * y2 * y2, 2)\n    print(first)", "from math import sqrt\nfor _ in range(int(input())):\n    (P, A) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * s)) / 12\n    v = l * (s / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "for _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    y2 = (p - (p ** 2 - 4 * 6 * s) ** (1 / 2)) / 12\n    x2 = (s - 2 * y2 * y2) / (4 * y2)\n    first = round(x2 * y2 * y2, 2)\n    print(first)", "from math import sqrt\nfor _ in range(int(input())):\n    (P, A) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (P, A) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (P, A) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "t = int(input())\nfor T in range(t):\n    (P, S) = input().split()\n    (P, S) = (int(P), int(S))\n    D = 0.25 * P * P - 6 * S\n    h1 = 1 / 6 * (0.5 * P + D ** 0.5)\n    h2 = 1 / 6 * (0.5 * P - D ** 0.5)\n    V1 = 0.5 * S * h1 - 0.25 * P * h1 * h1 + h1 * h1 * h1\n    V2 = 0.5 * S * h2 - 0.25 * P * h2 * h2 + h2 * h2 * h2\n    V = max(V1, V2)\n    print(round(V, 2))", "from sys import stdin, stdout\nt = int(stdin.readline().rstrip())\nwhile t > 0:\n    (p, s) = map(int, stdin.readline().rstrip().split())\n    h1 = (p - pow(pow(p, 2) - 24 * s, 0.5)) / 12\n    h2 = (p + pow(pow(p, 2) - 24 * s, 0.5)) / 12\n    l1 = p / 4 - 2 * h1\n    l2 = p / 4 - 2 * h2\n    v1 = l1 * h1 ** 2\n    v2 = l2 * h2 ** 2\n    if v1 > v2:\n        print('{:0.2f}'.format(v1))\n    else:\n        print('{:0.2f}'.format(v2))\n    t -= 1", "from math import sqrt\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * s)) / 12\n    v = l * (s / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * s)) / 12\n    v = l * (s / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (p, s) = map(int, input().split())\n    p /= 4\n    s /= 2\n    if 3 * (p / 3) ** 2 <= s:\n        print((p / 3) ** 3)\n    else:\n        c1 = (p + sqrt(p ** 2 - 3 * s)) / 3\n        a1 = p - 2 * c1\n        c2 = (p - sqrt(p ** 2 - 3 * s)) / 3\n        a2 = p - 2 * c2\n        v = max(a1 * c1 ** 2, a2 * c2 ** 2)\n        print(round(v, 2))", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (p, a) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * a)) / 12\n    v = l * (a / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (p, a) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * a)) / 12\n    v = l * (a / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (p, a) = map(int, input().split())\n    l = (p - sqrt(p * p - 24 * a)) / 12\n    v = l * (a / 2.0 - l * (p / 4.0 - l))\n    print(round(v, 2))", "n = int(input())\n\ndef best_box(p, s):\n    b1 = (p / 2 + (p ** 2 / 4 - 6 * s) ** (1 / 2)) / 6\n    b2 = (p / 2 - (p ** 2 / 4 - 6 * s) ** (1 / 2)) / 6\n    h1 = p / 4 - 2 * b1\n    v1 = b1 ** 2 * h1\n    h2 = p / 4 - 2 * b2\n    v2 = b2 ** 2 * h2\n    if v1 > v2:\n        return '{:.2f}'.format(round(v1, 2))\n    else:\n        return '{:.2f}'.format(round(v2, 2))\nfor i in range(n):\n    n = input()\n    x = n.split()\n    print(best_box(int(x[0]), int(x[1])))", "from math import sqrt\nt = int(input())\nfor ts in range(t):\n    (perimeter, area) = map(int, input().split())\n    l = (perimeter - sqrt(perimeter * perimeter - 24 * area)) / 12\n    v = l * (area / 2.0 - l * (perimeter / 4.0 - l))\n    print(round(v, 2))", "from math import sqrt\nfor _ in range(int(input())):\n    (P, A) = map(int, input().split())\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2 - l * (P / 4 - l))\n    print(round(V, 2))", "t = int(input())\nimport math\nfor t in range(t):\n    (p, s) = map(int, input().split())\n    d = p ** 2\n    a = 8 * s * 4 / d - 1\n    c = 8 * s / d\n    b = 32 * s / d - 2\n    r = (-b - math.sqrt(b ** 2 - 4 * a * c)) / (2 * a)\n    x = p / (4 * (1 + 2 * r))\n    y = x * r\n    answer = x * y * y\n    answer = round(answer, 2)\n    print(answer)", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    (A, B) = map(int, input().split())\n    V = (36 * A * B - A ** 3 + sqrt((A * A - 24 * B) ** 3)) / (12 * 72)\n    print('{0:.2f}'.format(V))", "import math\nnumber_of_test_cases = int(input())\nfor t in range(0, number_of_test_cases):\n    case = input().split()\n    p = int(case[0])\n    a = int(case[1])\n    l = (p - math.sqrt(p ** 2 - 24 * a)) / 12\n    v = l * (a / 2 - l * p / 4 + l ** 2)\n    print(round(v, 2))", "from math import sqrt\ntry:\n    for _ in range(int(input())):\n\n        def maxVol(P, A):\n            l = (P - sqrt(P * P - 24 * A)) / 12\n            V = l * (A / 2.0 - l * (P / 4.0 - l))\n            return V\n        (P, A) = map(int, input().split())\n        print(round(maxVol(P, A), 2))\nexcept:\n    pass", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (P, A) = map(int, input().split())\n    x = (P - sqrt(P ** 2 - 24 * A)) / 12\n    y = P / 4 - 2 * x\n    print(round(x ** 2 * y, 2))", "from math import sqrt\nT = int(input())\nfor i in range(T):\n    (P, S) = map(int, input().split())\n    h = (P - sqrt(P ** 2 - 24 * S)) / 12\n    V = S * h / 2 - h ** 2 * (P / 4 - h)\n    print(round(V, 2))", "for i in range(int(input())):\n    (p, s) = map(int, input().split())\n    b1 = (p + (p ** 2 - 24 * s) ** 0.5) / 12\n    h1 = b1\n    l1 = p / 4 - 2 * b1\n    b2 = (p - (p ** 2 - 24 * s) ** 0.5) / 12\n    h2 = b2\n    l2 = p / 4 - 2 * b2\n    vol = max(l1 * b1 * h1, l2 * b2 * h2)\n    print(round(vol, 2))", "t = int(input())\nfor i in range(t):\n    P = input().split()\n    S = int(P[1])\n    P = int(P[0])\n    V = P ** 3 / 1728.0 - P * (P ** 2 / 24.0 - S) / 24.0 + (P ** 2 / 24.0 - S) ** 1.5 * 6 ** 0.5 / 18\n    print('%.2f' % V)", "from math import sqrt\ntry:\n    for _ in range(int(input())):\n\n        def maxVol(P, A):\n            l = (P - sqrt(P * P - 24 * A)) / 12\n            V = l * (A / 2.0 - l * (P / 4.0 - l))\n            return V\n        (P, A) = map(int, input().split())\n        print(round(maxVol(P, A), 2))\nexcept:\n    pass", "from math import sqrt\n\ndef answer(P, A):\n    l = (P - sqrt(P * P - 24 * A)) / 12\n    V = l * (A / 2.0 - l * (P / 4.0 - l))\n    return '%.2f' % V\nfor i in range(int(input())):\n    (P, S) = map(int, input().split())\n    print(answer(P, S))", "T = int(input())\nfor i in range(T):\n    P = input().split()\n    S = int(P[1])\n    P = int(P[0])\n    V = P ** 3 / 1728.0 - P * (P ** 2 / 24.0 - S) / 24.0 + (P ** 2 / 24.0 - S) ** 1.5 * 6 ** 0.5 / 18\n    print('%.2f' % V)", "T = int(input())\nfor i in range(T):\n    P = input().split()\n    S = int(P[1])\n    P = int(P[0])\n    V = P ** 3 / 1728.0 - P * (P ** 2 / 24.0 - S) / 24.0 + (P ** 2 / 24.0 - S) ** 1.5 * 6 ** 0.5 / 18\n    print('%.2f' % V)", "import math as s\nfor i in range(int(input())):\n    (l, m) = map(int, input().split())\n    a = l / 4\n    b = m / 2\n    x = (2 * a + s.sqrt((2 * a) ** 2 - 12 * b)) / 6\n    y = (2 * a - s.sqrt((2 * a) ** 2 - 12 * b)) / 6\n    if 6 * x - 2 * a < 0:\n        print('{:0.2f}'.format(b * x - x ** 2 * (a - x)))\n    else:\n        print('{:0.2f}'.format(b * y - y ** 2 * (a - y)))"]