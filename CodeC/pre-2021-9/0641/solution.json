["for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append((b, a))\n    arr.sort()\n    band = set()\n    play_last = []\n    res = 0\n    for (l, b) in arr:\n        if b not in band:\n            band.add(b)\n            res += l * len(band)\n        else:\n            play_last.append((l, b))\n    for (l, b) in play_last:\n        res += l * len(band)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append((b, a))\n    arr.sort()\n    band = set()\n    play_last = []\n    res = 0\n    for (l, b) in arr:\n        if b not in band:\n            band.add(b)\n            res += l * len(band)\n        else:\n            play_last.append((l, b))\n    for (l, b) in play_last:\n        res += l * len(band)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append((b, a))\n    arr.sort()\n    band = set()\n    play_last = []\n    res = 0\n    for (l, b) in arr:\n        if b not in band:\n            band.add(b)\n            res += l * len(band)\n        else:\n            play_last.append((l, b))\n    for (l, b) in play_last:\n        res += l * len(band)\n    print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    songs = []\n    for _ in range(N):\n        songs.append(list(map(int, input().split())))\n    sweetness = 0\n    played = set()\n    play_later = []\n    songs.sort(key=lambda x: x[1])\n    for i in songs:\n        if i[0] not in played:\n            played.add(i[0])\n            sweetness += len(played) * i[1]\n        else:\n            play_later.append(i)\n    for i in play_later:\n        sweetness += len(played) * i[1]\n    print(sweetness)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    songs = []\n    for _ in range(N):\n        songs.append(list(map(int, input().split())))\n    sweetness = 0\n    played = set()\n    play_later = []\n    songs.sort(key=lambda x: x[1])\n    for i in songs:\n        if i[0] not in played:\n            played.add(i[0])\n            sweetness += len(played) * i[1]\n        else:\n            play_later.append(i)\n    for i in play_later:\n        sweetness += len(played) * i[1]\n    print(sweetness)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    songs = []\n    for _ in range(N):\n        songs.append(list(map(int, input().split())))\n    sweetness = 0\n    played = set()\n    play_later = []\n    songs.sort(key=lambda x: x[1])\n    for i in songs:\n        if i[0] not in played:\n            played.add(i[0])\n            sweetness += len(played) * i[1]\n        else:\n            play_later.append(i)\n    for i in play_later:\n        sweetness += len(played) * i[1]\n    print(sweetness)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    BL = []\n    for j in range(N):\n        BL.append(list(map(int, input().split())))\n    BL = sorted(BL)\n    BL_new = [0] * len(BL)\n    BL_new[0] = BL[0]\n    count1 = 0\n    count2 = 0\n    for k in range(len(BL) - 1):\n        if BL[k][0] == BL[k + 1][0]:\n            count1 -= 1\n            BL_new[count1] = BL[k + 1]\n        else:\n            count2 += 1\n            BL_new[count2] = BL[k + 1]\n    temp = []\n    for i in range(len(BL_new)):\n        temp.append(BL_new[i][0])\n    temp_len = len(set(temp))\n    temp2 = []\n    for i in range(temp_len):\n        temp2.append(BL_new[i][1])\n    temp2.sort()\n    sweetness = 0\n    for j in range(1, temp_len + 1):\n        sweetness += j * temp2[j - 1]\n    for k in range(temp_len, len(BL_new)):\n        sweetness += temp_len * BL_new[k][1]\n    print(sweetness)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    a.sort()\n    c = 0\n    m = []\n    for k in range(n):\n        if k == 0 or a[k - 1][0] < a[k][0]:\n            m.append(a[k][1])\n        else:\n            c += a[k][1]\n    m.sort()\n    ans = 0\n    u = len(m)\n    for z in range(u):\n        ans += (z + 1) * m[z]\n    ans += u * c\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    a.sort()\n    c = 0\n    m = []\n    for k in range(n):\n        if k == 0 or a[k - 1][0] < a[k][0]:\n            m.append(a[k][1])\n        else:\n            c += a[k][1]\n    m.sort()\n    ans = 0\n    u = len(m)\n    for z in range(u):\n        ans += (z + 1) * m[z]\n    ans += u * c\n    print(ans)", "test_cases = int(input())\nfor _ in range(test_cases):\n    nsongs = int(input())\n    pairs = []\n    for _ in range(nsongs):\n        (temp_b, temp_l) = map(int, input().split())\n        pairs.append([temp_b, temp_l])\n    pairs.sort()\n    total = 0\n    minSongs = []\n    for i in range(nsongs):\n        if i == 0 or pairs[i - 1][0] < pairs[i][0]:\n            minSongs.append(pairs[i][1])\n        else:\n            total += pairs[i][1]\n    minSongs.sort()\n    answer = 0\n    m = len(minSongs)\n    for i in range(m):\n        answer += (i + 1) * minSongs[i]\n    answer += m * total\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = []\n    total_swt = 0\n    for _ in range(n):\n        data.append(list(map(int, input().split())))\n    data.sort()\n    initials = []\n    left_out_song_lengths = 0\n    for i in range(n):\n        if i == 0 or data[i - 1][0] < data[i][0]:\n            initials.append(data[i][1])\n        else:\n            left_out_song_lengths += data[i][1]\n    used_bands = len(initials)\n    initials.sort()\n    for i in range(used_bands):\n        total_swt += (i + 1) * initials[i]\n    total_swt += used_bands * left_out_song_lengths\n    print(total_swt)", "def solve(arr):\n    bands = {}\n    for (b, l) in arr:\n        if b not in bands:\n            bands[b] = l\n        bands[b] = min(l, bands[b])\n    t = sum((l * i for (i, l) in enumerate(sorted(bands.values()), 1)))\n    for (b, l) in arr:\n        if l == bands[b]:\n            bands[b] = -1\n            continue\n        t += l * len(bands)\n    return t\n\ndef main():\n    for _ in range(int(input())):\n        N = int(input())\n        arr = [[int(val) for val in input().split()] for _ in range(N)]\n        result = solve(arr)\n        print(result)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    playList = []\n    for index in range(n):\n        (band, songLen) = map(int, input().split())\n        playList.append([band, songLen])\n    playList.sort(reverse=False)\n    smallestSongs = []\n    total = 0\n    for index in range(n):\n        if index == 0 or playList[index - 1][0] < playList[index][0]:\n            smallestSongs.append(playList[index][1])\n        else:\n            total += playList[index][1]\n    M = len(smallestSongs)\n    smallestSongs.sort(reverse=False)\n    answer = 0\n    for index in range(M):\n        answer += (index + 1) * smallestSongs[index]\n    answer += M * total\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    playList = []\n    for index in range(n):\n        (band, songLen) = map(int, input().split())\n        playList.append([band, songLen])\n    playList.sort(reverse=False)\n    smallestSongs = []\n    total = 0\n    for index in range(n):\n        if index == 0 or playList[index - 1][0] < playList[index][0]:\n            smallestSongs.append(playList[index][1])\n        else:\n            total += playList[index][1]\n    M = len(smallestSongs)\n    smallestSongs.sort(reverse=False)\n    answer = 0\n    for index in range(M):\n        answer += (index + 1) * smallestSongs[index]\n    answer += M * total\n    print(answer)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    mp = {}\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        if b in mp:\n            mp[b].append(l)\n        else:\n            mp[b] = [l]\n    lst = []\n    for b in mp.values():\n        b.sort()\n        lst.append(b[0])\n    bands = len(lst)\n    lst.sort()\n    ans = 0\n    for i in range(bands):\n        ans += (i + 1) * lst[i]\n    for b in mp.values():\n        l = len(b)\n        for i in range(1, l):\n            ans += bands * b[i]\n    print(ans)", "from sys import stdin\ntc = int(stdin.readline())\nfor i in range(tc):\n    n = int(stdin.readline())\n    list1 = []\n    for j in range(n):\n        (b, l) = map(int, stdin.readline().split())\n        list1.append((l, b))\n    list1.sort()\n    distinct = set()\n    total = 0\n    to_add = []\n    for each in list1:\n        if each[1] not in distinct:\n            distinct.add(each[1])\n            sweet = len(distinct)\n            total += sweet * each[0]\n        else:\n            to_add.append(each[0])\n    print(total + len(distinct) * sum(to_add))", "from sys import *\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = []\n    d = set()\n    ans = 0\n    new = []\n    for _ in range(n):\n        (a, b) = map(int, stdin.readline().split())\n        l.append([b, a])\n    l.sort()\n    for j in l:\n        if j[1] not in d:\n            d.add(j[1])\n            ans += j[0] * len(d)\n        else:\n            new.append(j[0])\n    print(ans + len(d) * sum(new))", "from sys import stdin\ntc = int(stdin.readline())\nfor i in range(tc):\n    n = int(stdin.readline())\n    list1 = []\n    for j in range(n):\n        (b, l) = map(int, stdin.readline().split())\n        list1.append((l, b))\n    list1.sort()\n    distinct = set()\n    total = 0\n    to_add = []\n    for each in list1:\n        if each[1] not in distinct:\n            distinct.add(each[1])\n            sweet = len(distinct)\n            total += sweet * each[0]\n        else:\n            to_add.append(each[0])\n    print(total + len(distinct) * sum(to_add))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    li = []\n    for h in range(n):\n        (a, b) = map(int, input().split())\n        li.append([b, a])\n    li.sort()\n    m = {}\n    a = 0\n    j = 1\n    tot = 0\n    for i in li:\n        if i[1] not in m:\n            m[i[1]] = 1\n            a += i[0] * j\n            j += 1\n        else:\n            tot += i[0]\n    a += tot * (j - 1)\n    print(a)", "def maxBandLength(bands, n):\n    bands.sort(key=lambda x: x[1])\n    list2 = []\n    len_set = set()\n    count = 0\n    for item in bands:\n        if item[0] not in len_set:\n            len_set.add(item[0])\n            count += len(len_set) * item[1]\n        else:\n            list2.append(item[1])\n    for length in list2:\n        count += length * len(len_set)\n    return count\nt = int(input())\nfor i in range(t):\n    bands = []\n    n = int(input())\n    for j in range(n):\n        bands.append(tuple(map(int, input().split())))\n    print(maxBandLength(bands, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    for h in range(n):\n        (a, b) = map(int, input().split())\n        li.append([b, a])\n    li.sort()\n    m = {}\n    a = 0\n    j = 1\n    tot = 0\n    for i in li:\n        if i[1] not in m:\n            m[i[1]] = 1\n            a += i[0] * j\n            j += 1\n        else:\n            tot += i[0]\n    a += tot * (j - 1)\n    print(a)", "try:\n    for _ in range(int(input())):\n        N = int(input())\n        cell = {}\n        variables = []\n        space = []\n        score = 0\n        variable = 0\n        for __ in range(N):\n            (a, b) = map(int, input().split())\n            if a not in cell:\n                cell[a] = b\n            elif cell[a] >= b:\n                cache = cell[a]\n                cell[a] = b\n                space.append(cache)\n            else:\n                space.append(b)\n        cc = list(cell.values())\n        cc.sort()\n        for items in cc:\n            variable += 1\n            score += variable * items\n        if len(space) > 0:\n            score += variable * sum(space)\n        print(score)\nexcept:\n    pass", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    songs = []\n    counted = {}\n    bands_done = 0\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    songs.sort(key=lambda x: x[1])\n    ans = 0\n    left_length = 0\n    while len(songs) > 0:\n        current = songs.pop(0)\n        if current[0] not in counted:\n            counted[current[0]] = 1\n            bands_done += 1\n            ans += bands_done * current[1]\n        else:\n            left_length += current[1]\n    ans += bands_done * left_length\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    songs = []\n    counted = {}\n    bands_done = 0\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    songs.sort(key=lambda x: x[1])\n    ans = 0\n    left_length = 0\n    while len(songs) > 0:\n        current = songs.pop(0)\n        if current[0] not in counted:\n            counted[current[0]] = 1\n            bands_done += 1\n            ans += bands_done * current[1]\n        else:\n            left_length += current[1]\n    ans += bands_done * left_length\n    print(ans)", "for u in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort(key=lambda x: x[1])\n    s = 0\n    c = 0\n    x = 0\n    d = {}\n    for i in l:\n        if i[0] not in d:\n            d[i[0]] = 1\n            c += 1\n            s += c * i[1]\n        else:\n            x += i[1]\n    s += x * c\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    band = {}\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        if b in band:\n            band[b].append(l)\n        else:\n            band[b] = [l]\n    out = 0\n    arr = []\n    k = len(band)\n    for i in band:\n        band[i].sort(reverse=True)\n        arr.append(band[i].pop())\n    arr.sort()\n    for i in range(k):\n        out += (i + 1) * arr[i]\n    for i in band:\n        for j in band[i]:\n            out += k * j\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    band = {}\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        if b in band:\n            band[b].append(l)\n        else:\n            band[b] = [l]\n    out = 0\n    arr = []\n    k = len(band)\n    for i in band:\n        band[i].sort()\n        arr.append(band[i].pop(0))\n    arr.sort()\n    for i in range(k):\n        out += (i + 1) * arr[i]\n    for i in band:\n        for j in band[i]:\n            out += k * j\n    print(out)", "from sys import stdin\nt = int(stdin.readline())\nfor i in range(t):\n    n = int(stdin.readline())\n    count = 0\n    uniq = set()\n    final = []\n    sum1 = 0\n    list1 = []\n    for j in range(n):\n        (b, l) = list(map(int, stdin.readline().split()))\n        list1.append((b, l))\n    list1.sort(key=lambda x: x[1])\n    for j in range(n):\n        if list1[j][0] not in uniq:\n            count += 1\n            uniq.add(list1[j][0])\n            sum1 += count * list1[j][1]\n        else:\n            final.append(list1[j][1])\n    len1 = len(uniq)\n    print(sum1 + len1 * sum(final))", "from sys import stdin\ntc = int(stdin.readline())\nfor i in range(tc):\n    n = int(stdin.readline())\n    list1 = []\n    for j in range(n):\n        (b, l) = map(int, stdin.readline().split())\n        list1.append((l, b))\n    list1.sort()\n    distinct = set()\n    total = 0\n    to_add = []\n    for each in list1:\n        if each[1] not in distinct:\n            distinct.add(each[1])\n            sweet = len(distinct)\n            total += sweet * each[0]\n        else:\n            to_add.append(each[0])\n    print(total + len(distinct) * sum(to_add))", "from sys import stdin\ntc = int(stdin.readline())\nfor i in range(tc):\n    n = int(stdin.readline())\n    list1 = []\n    for j in range(n):\n        (b, l) = map(int, stdin.readline().split())\n        list1.append((l, b))\n    list1.sort()\n    distinct = set()\n    total = 0\n    to_add = []\n    for each in list1:\n        if each[1] not in distinct:\n            distinct.add(each[1])\n            sweet = len(distinct)\n            total += sweet * each[0]\n        else:\n            to_add.append(each[0])\n    print(total + len(distinct) * sum(to_add))", "t = int(input())\nwhile t:\n    songs = []\n    res = 0\n    n = int(input())\n    unique_bands = {}\n    for _ in range(n):\n        b_l = [int(i) for i in input().split()]\n        songs.append({'band': b_l[0], 'length': b_l[1], 'visited': 0})\n    songs = sorted(songs, key=lambda k: k['length'])\n    for song in range(len(songs)):\n        if songs[song]['band'] not in unique_bands.keys() and (not songs[song]['visited']):\n            unique_bands[songs[song]['band']] = songs[song]['length']\n            i = len(unique_bands)\n            res += songs[song]['length'] * i\n            songs[song]['visited'] = 1\n    for song in range(len(songs)):\n        if not songs[song]['visited']:\n            res += songs[song]['length'] * i\n    print(res)\n    t -= 1", "def sweet(sweet, n):\n    n_keys = 0\n    first_m = []\n    for (k, v) in sweet.items():\n        sweet[k] = sorted(v, reverse=True)\n        n_keys += 1\n        first_m.append(sweet[k][-1])\n        sweet[k].pop()\n    first_m = sorted(first_m)\n    total = 0\n    for i in range(n_keys):\n        total += (i + 1) * first_m[i]\n    for k in sweet.keys():\n        total += sum(sweet[k]) * n_keys\n    return total\nfor _ in range(int(input())):\n    songs = dict()\n    n = int(input())\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        if b in songs:\n            songs[b].append(l)\n        else:\n            songs[b] = [l]\n    out = sweet(songs, n)\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0] * n\n    b = [0] * n\n    q = []\n    for i in range(n):\n        q.append(list(map(int, input().split())))\n    q = sorted(q, key=lambda x: x[1])\n    prod = 0\n    count = 0\n    dict = {}\n    t = 0\n    for i in q:\n        if i[0] not in dict.keys():\n            dict[i[0]] = 1\n            count += 1\n            prod += count * i[1]\n        else:\n            t += i[1]\n    prod += t * count\n    print(prod)", "for _ in range(int(input())):\n    a = int(input())\n    yu = []\n    pussy = set()\n    count = 0\n    ans = 0\n    temp = 0\n    for _ in range(a):\n        yu.append(list(map(int, input().split())))\n    ty = sorted(yu, key=lambda x: x[1])\n    for i in ty:\n        if i[0] not in pussy:\n            pussy.add(i[0])\n            count += 1\n            ans += count * i[1]\n        else:\n            temp += i[1]\n    ans += temp * count\n    print(ans)", "from sys import stdin\nfor _ in range(int(input())):\n    a = int(input())\n    yu = []\n    pussy = set()\n    count = 0\n    ans = 0\n    temp = 0\n    for _ in range(a):\n        yu.append(list(map(int, input().split())))\n    ty = sorted(yu, key=lambda x: x[1])\n    for i in ty:\n        if i[0] not in pussy:\n            pussy.add(i[0])\n            count += 1\n            ans += count * i[1]\n        else:\n            temp += i[1]\n    ans += temp * count\n    print(ans)", "T = int(input())\nfor z in range(T):\n    N = int(input())\n    dct = {}\n    min_dct = {}\n    for i in range(N):\n        (band, song) = map(int, input().split())\n        if band in dct:\n            if song < min_dct[band]:\n                dct[band].append(min_dct[band])\n                min_dct[band] = song\n            else:\n                dct[band].append(song)\n        else:\n            min_dct[band] = song\n            dct[band] = []\n    min_lst = []\n    lst = []\n    for elem in min_dct.values():\n        min_lst.append(elem)\n    for elem in dct.values():\n        lst += elem\n    min_lst.sort()\n    lst.sort()\n    l = len(min_lst)\n    ans = 0\n    for i in range(l):\n        ans += min_lst[i] * (i + 1)\n    ans += l * sum(lst)\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    songs = []\n    for i in range(n):\n        songs.append(tuple(map(int, input().split())))\n    unique = []\n    common = []\n    d = defaultdict(lambda : 0)\n    songs.sort(key=lambda x: x[1])\n    for (i, j) in songs:\n        if d[i] == 0:\n            d[i] = 1\n            unique.append((i, j))\n        else:\n            common.append((i, j))\n    songs = unique + common\n    d = defaultdict(lambda : 0)\n    ans = bands = 0\n    for (i, j) in songs:\n        if d[i] == 0:\n            bands += 1\n            d[i] = 1\n        ans += j * bands\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    songs = []\n    for i in range(n):\n        songs.append(tuple(map(int, input().split())))\n    unique = []\n    common = []\n    d = defaultdict(lambda : 0)\n    songs.sort(key=lambda x: x[1])\n    for (i, j) in songs:\n        if d[i] == 0:\n            d[i] = 1\n            unique.append((i, j))\n        else:\n            common.append((i, j))\n    songs = unique + common\n    d = defaultdict(lambda : 0)\n    ans = bands = 0\n    for (i, j) in songs:\n        if d[i] == 0:\n            bands += 1\n            d[i] = 1\n        ans += j * bands\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    songs = []\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    songs.sort(key=lambda x: x[1])\n    d = dict()\n    unique = []\n    common = []\n    for (i, j) in songs:\n        if i not in d:\n            d[i] = 1\n            unique.append((i, j))\n        else:\n            common.append((i, j))\n    songs = unique + common\n    d = dict()\n    dt = 0\n    ans = 0\n    for (i, j) in songs:\n        if i not in d:\n            d[i] = 1\n            dt += 1\n        ans += j * dt\n    print(ans)", "for _ in range(int(input())):\n    num_songs = int(input())\n    songs_list = []\n    for i in range(num_songs):\n        songs_list.append(tuple(map(int, input().split())))\n    songs_list.sort(key=lambda x: x[1])\n    played_list = [False] * num_songs\n    previously_palyed = {}\n    sweetness = 0\n    for i in range(len(songs_list)):\n        song = songs_list[i]\n        if song[0] not in previously_palyed:\n            previously_palyed[song[0]] = True\n            sweetness += song[1] * len(previously_palyed)\n            played_list[i] = True\n    for i in range(len(songs_list)):\n        song = songs_list[i]\n        if not played_list[i]:\n            sweetness += song[1] * len(previously_palyed)\n    print(sweetness)", "for _ in range(int(input())):\n    n = int(input())\n    s = []\n    dp = {}\n    cnt = 0\n    sweetness = 0\n    visited = [False] * n\n    for _ in range(n):\n        s.append([int(x) for x in input().split()])\n    s.sort(key=lambda x: x[1])\n    for i in range(n):\n        if s[i][0] not in dp:\n            dp[s[i][0]] = True\n            cnt += 1\n            sweetness += cnt * s[i][1]\n            visited[i] = True\n    for i in range(n):\n        if not visited[i]:\n            sweetness += cnt * s[i][1]\n    print(sweetness)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    for h in range(n):\n        (a, b) = map(int, input().split())\n        li.append([b, a])\n    li.sort()\n    m = {}\n    a = 0\n    j = 1\n    tot = 0\n    for i in li:\n        if i[1] not in m:\n            m[i[1]] = 1\n            a += i[0] * j\n            j += 1\n        else:\n            tot += i[0]\n    a += tot * (j - 1)\n    print(a)", "for _ in range(int(input())):\n    l = []\n    from collections import defaultdict\n    n = int(input())\n    id = []\n    min = {}\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n        if min.get(a, -1) == -1:\n            min[a] = b\n        elif b < min[a]:\n            min[a] = b\n    li = [min[a] for a in min]\n    li.sort()\n    dist = len(li)\n    sm = 0\n    seen = defaultdict(int)\n    l.sort(key=lambda x: x[1])\n    for i in range(len(li)):\n        sm += li[i] * (i + 1)\n    for i in range(n):\n        id = l[i][0]\n        length = l[i][1]\n        if seen[id] == 0:\n            seen[id] = 1\n        else:\n            sm += length * dist\n    print(sm)", "from collections import Counter\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    l = []\n    typ = []\n    c = Counter(typ)\n    min_dict = Counter(typ)\n    for j in range(n):\n        inp = list(map(int, input().split()))\n        if c[inp[0]] == 0:\n            c[inp[0]] = 1\n        if min_dict[inp[0]] == 0:\n            min_dict[inp[0]] = inp[1]\n        elif inp[1] < min_dict[inp[0]]:\n            min_dict[inp[0]] = inp[1]\n        l.append(tuple(inp))\n    l.sort(key=lambda x: x[0])\n    k = list(min_dict.values())\n    k.sort()\n    p = len(k)\n    ans = 0\n    for item in l:\n        ans += item[1] * p\n    diff = 1\n    for i in range(len(k)):\n        ans -= p * k[i]\n        ans += k[i] * diff\n        diff += 1\n    print(ans)", "t = int(input())\nfrom itertools import permutations as p\nfor _ in range(t):\n    n = int(input())\n    l1 = []\n    l2 = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l1.append([b, a])\n        l2.append([a, b])\n    d = {}\n    for i in l1:\n        try:\n            d[i[0]].append(i[1])\n        except:\n            d[i[0]] = [i[1]]\n    x = list(d.keys())\n    x.sort()\n    ans = 0\n    e = {}\n    f = 0\n    for i in x:\n        for j in d[i]:\n            try:\n                m = e[j]\n                f += i\n            except:\n                e[j] = 0\n                ans += len(e) * i\n    ans += f * len(e)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = {}\n    ld = 0\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x not in l:\n            l[x] = y\n        elif l.get(x) > y:\n            ld += l.get(x)\n            l[x] = y\n        else:\n            ld += y\n    sorted_l = sorted(l.items(), key=lambda x: x[1])\n    s = 0\n    k = 0\n    for i in sorted_l:\n        k += 1\n        s = s + i[1] * k\n    s = s + ld * k\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = {}\n    ld = 0\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x not in l:\n            l[x] = y\n        elif l.get(x) > y:\n            ld += l.get(x)\n            l[x] = y\n        else:\n            ld += y\n    import operator\n    sorted_l = sorted(l.items(), key=operator.itemgetter(1))\n    s = 0\n    k = 0\n    for i in sorted_l:\n        k += 1\n        s = s + i[1] * k\n    s = s + ld * k\n    print(s)", "import time\nstart = time.time()\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    a1 = {}\n    sum1 = 0\n    lt = 0\n    for j in range(n):\n        (b, l) = map(int, input().split())\n        a.append([l, b])\n    a.sort()\n    c = 0\n    for k in a:\n        if k[1] in a1:\n            lt += k[0]\n        else:\n            c += 1\n            sum1 += c * k[0]\n            a1[k[1]] = 1\n    sum1 += c * lt\n    print(sum1)\nend = time.time()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    li = []\n    for j in range(0, n):\n        (b, l) = map(int, input().split())\n        li.append([l, b])\n    li.sort()\n    m = {}\n    total = 0\n    cn = 1\n    ans = 0\n    for x in li:\n        if x[1] not in m:\n            m[x[1]] = 1\n            ans = ans + x[0] * cn\n            cn += 1\n        else:\n            total = total + x[0]\n    print(ans + (cn - 1) * total)", "t = int(input())\nfor _ in range(t):\n    songs = []\n    n = int(input())\n    for _ in range(n):\n        (b, l) = map(int, input().split())\n        songs.append((b, l))\n    songs.sort()\n    total = 0\n    js = []\n    for i in range(n):\n        if i == 0 or songs[i - 1][0] < songs[i][0]:\n            js.append(songs[i][1])\n        else:\n            total = total + songs[i][1]\n    js.sort()\n    ans = 0\n    for i in range(1, len(js) + 1):\n        ans += i * js[i - 1]\n    ans += len(js) * total\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    li = []\n    for j in range(0, n):\n        (b, l) = map(int, input().split())\n        li.append([l, b])\n    li.sort()\n    m = {}\n    total = 0\n    cn = 1\n    ans = 0\n    for x in li:\n        if x[1] not in m:\n            m[x[1]] = 1\n            ans = ans + x[0] * cn\n            cn += 1\n        else:\n            total = total + x[0]\n    print(ans + (cn - 1) * total)", "for _ in range(int(input())):\n    n = int(input())\n    nl = []\n    for i in range(n):\n        nl.append([int(x) for x in input().split()])\n    nl.sort(key=lambda x: x[1])\n    ans = 0\n    vis = [False] * len(nl)\n    bp = {}\n    bb = 0\n    for i in range(n):\n        if nl[i][0] not in bp:\n            bp[nl[i][0]] = True\n            bb += 1\n            ans += bb * nl[i][1]\n            vis[i] = True\n    for i in range(n):\n        if not vis[i]:\n            ans += bb * nl[i][1]\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    li = []\n    for j in range(0, n):\n        (b, l) = map(int, input().split())\n        li.append([l, b])\n    li.sort()\n    m = {}\n    total = 0\n    cn = 1\n    ans = 0\n    for x in li:\n        if x[1] not in m:\n            m[x[1]] = 1\n            ans = ans + x[0] * cn\n            cn += 1\n        else:\n            total = total + x[0]\n    print(ans + (cn - 1) * total)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    val = []\n    s = set()\n    for i in range(n):\n        val.append([int(x) for x in input().split()][::-1])\n    val.sort()\n    c = 0\n    c1 = 0\n    ans = 0\n    for i in range(n):\n        if val[i][1] not in s:\n            s.add(val[i][1])\n            c += 1\n            ans += c * val[i][0]\n        else:\n            c1 += val[i][0]\n    ans += c * c1\n    print(ans)", "for _ in range(int(input())):\n    ls = []\n    s = set()\n    ans = 0\n    temp = []\n    cnt = 0\n    for i in range(int(input())):\n        (b, l) = list(map(int, input().split()))\n        ls.append([l, b])\n    ls.sort()\n    for i in range(len(ls)):\n        if ls[i][1] not in s:\n            s.add(ls[i][1])\n            cnt += 1\n            ans += cnt * ls[i][0]\n        else:\n            temp.append(ls[i][0])\n    for i in range(len(temp)):\n        ans += cnt * temp[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = set()\n    ls = []\n    arr = []\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        ls.append([l, b])\n    ans = 0\n    cnt = 0\n    ls.sort()\n    for i in range(n):\n        if ls[i][1] not in s:\n            cnt += 1\n            ans += cnt * ls[i][0]\n            s.add(ls[i][1])\n        else:\n            arr.append(ls[i][0])\n    for i in range(len(arr)):\n        ans += cnt * arr[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    hash = {}\n    n = int(input())\n    rem = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in hash:\n            if hash[a] > b:\n                rem.append(hash[a])\n                hash[a] = b\n            else:\n                rem.append(b)\n        else:\n            hash[a] = b\n    rem.sort()\n    c = [hash[i] for i in hash.keys()]\n    c.sort()\n    ans = 0\n    for i in range(len(c)):\n        ans += (i + 1) * c[i]\n    m = len(c)\n    ans += m * sum(rem)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = set()\n    ls = list()\n    arr = list()\n    for i in range(n):\n        (b, l) = map(int, input().split())\n        ls.append([l, b])\n    ans = Count = 0\n    ls.sort()\n    for i in range(n):\n        if ls[i][1] not in s:\n            Count += 1\n            ans += Count * ls[i][0]\n            s.add(ls[i][1])\n        else:\n            arr.append(ls[i][0])\n    for i in range(len(arr)):\n        ans += Count * arr[i]\n    print(ans)", "from collections import defaultdict as df\nfor q in range(int(input())):\n    n = int(input())\n    m = df(list)\n    for i in range(n):\n        (p, r) = [int(e) for e in input().split()]\n        m[p].append(r)\n    l = []\n    c = 0\n    for i in m:\n        x = min(m[i])\n        l.append(x)\n        c += sum(m[i]) - x\n    l.sort()\n    p = len(l)\n    c *= p\n    for i in range(p):\n        c += (i + 1) * l[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        (bi, li) = map(int, input().split())\n        l.append((bi, li))\n    l.sort()\n    d = dict()\n    co = 0\n    cb = 0\n    ms = []\n    for (i, j) in l:\n        try:\n            d[i]\n            co += j\n        except KeyError:\n            d[i] = 1\n            cb += 1\n            ms.append(j)\n    ms.sort()\n    co *= cb\n    for i in range(cb):\n        co += (i + 1) * ms[i]\n    print(co)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append([b, a])\n    arr.sort()\n    total = 0\n    j = 1\n    ans = 0\n    su = {}\n    for i in arr:\n        if i[1] not in su:\n            su[i[1]] = 1\n            ans += i[0] * j\n            j += 1\n        else:\n            total += i[0]\n    ans += total * (j - 1)\n    print(ans)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    s = 0\n    d = defaultdict(list)\n    for i in range(n):\n        (b, l1) = [int(k) for k in input().split()]\n        d[b].append(l1)\n        d[b].sort()\n    l1 = list(d.values())\n    l1.sort()\n    j = 1\n    for i in l1:\n        ans += j * i[0]\n        s += sum(i) - i[0]\n        j += 1\n    ans += s * (j - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    while n > 0:\n        n -= 1\n        (a, b) = map(int, input().split())\n        x = (b, a)\n        arr.append(x)\n    arr = sorted(arr)\n    song = {}\n    total = 0\n    k = 1\n    ans = 0\n    for i in arr:\n        if i[1] not in song:\n            song[i[1]] = 1\n            ans += i[0] * k\n            k += 1\n        else:\n            total += i[0]\n    ans += total * (k - 1)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = []\n    while n > 0:\n        n -= 1\n        (a, b) = map(int, input().split())\n        x = (b, a)\n        arr.append(x)\n    arr = sorted(arr)\n    song = {}\n    total = 0\n    k = 1\n    ans = 0\n    for i in arr:\n        if i[1] not in song:\n            song[i[1]] = 1\n            ans += i[0] * k\n            k += 1\n        else:\n            total += i[0]\n    ans += total * (k - 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [list(map(int, input().split())) for j in range(n)]\n    l = sorted(l, key=lambda x: x[1])\n    k = set()\n    f = 0\n    prev = 0\n    sweetness = 0\n    for i in l:\n        if i[0] in k:\n            continue\n        sweetness += (f + 1) * i[1]\n        k.add(i[0])\n        f += 1\n    l = sorted(l)\n    for i in l:\n        if i[0] in k:\n            if prev == i[0]:\n                sweetness += f * i[1]\n        prev = i[0]\n    print(sweetness)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        (b, l) = [int(x) for x in input().strip().split()]\n        arr.append((b, l))\n    arr = sorted(arr, key=lambda x: x[1])\n    band = {}\n    for i in range(n):\n        band[arr[i][0]] = 0\n    k = 0\n    uniqueval = 0\n    repeatedval = 0\n    for i in range(n):\n        if band[arr[i][0]] == 0:\n            k += 1\n            band[arr[i][0]] = 1\n            uniqueval += arr[i][1] * k\n        else:\n            repeatedval += arr[i][1]\n    print(uniqueval + repeatedval * k)", "for _ in range(int(input())):\n    n = int(input())\n    b = []\n    l = []\n    for i in range(n):\n        (bi, li) = map(int, input().split())\n        b.append(bi)\n        l.append(li)\n    d = dict()\n    e = dict()\n    arr = []\n    count = 0\n    sm = 0\n    for i in range(n):\n        if b[i] in d:\n            cur = d[b[i]]\n            if cur > l[i]:\n                sm += cur\n                d[b[i]] = l[i]\n                arr[e[b[i]]] = l[i]\n            else:\n                sm += l[i]\n        else:\n            d[b[i]] = l[i]\n            arr.append(l[i])\n            e[b[i]] = count\n            count += 1\n    arr.sort()\n    ans = 0\n    for i in range(1, count + 1):\n        ans += arr[i - 1] * i\n    if sm > 0:\n        ans += sm * count\n    print(ans)", "for T in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    d = {}\n    ind = {}\n    visited = [True for x in range(n)]\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n        if x not in d:\n            d[x] = []\n        d[x].append(y)\n        if x not in ind:\n            ind[x] = {}\n        if y not in ind[x]:\n            ind[x][y] = []\n        ind[x][y].append(i)\n    mins = []\n    for keys in d:\n        y = min(d[keys])\n        mins.append(y)\n        visited[ind[keys][y][0]] = False\n    mins.sort()\n    sweetness = 0\n    unique = 0\n    for i in range(len(mins)):\n        sweetness += mins[i] * (i + 1)\n        unique += 1\n    for i in range(n):\n        if visited[i]:\n            sweetness += b[i] * unique\n    print(sweetness)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    l = []\n    for i in range(n):\n        (p, q) = map(int, input().strip().split())\n        l.append([q, p])\n    l.sort()\n    d = {}\n    ans = 0\n    ans1 = 0\n    j = 1\n    for i in l:\n        if i[1] not in d:\n            d[i[1]] = 1\n            ans += i[0] * j\n            j += 1\n        else:\n            ans1 += i[0]\n    ans += ans1 * (j - 1)\n    print(ans)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    l = []\n    for i in range(n):\n        (p, q) = map(int, input().strip().split())\n        l.append([q, p])\n    l.sort()\n    d = {}\n    ans = 0\n    ans1 = 0\n    j = 1\n    for i in l:\n        if i[1] not in d:\n            d[i[1]] = 1\n            ans += i[0] * j\n            j += 1\n        else:\n            ans1 += i[0]\n    ans += ans1 * (j - 1)\n    print(ans)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    lst = []\n    for idx in range(n):\n        lst.append(list(map(int, input().strip().split())))\n    lst.sort()\n    distinct_song_dict = {}\n    first_songs = []\n    for song in lst:\n        (band_no, song_length) = (song[0], song[1])\n        if band_no not in distinct_song_dict:\n            distinct_song_dict[band_no] = []\n            first_songs.append(song_length)\n        else:\n            distinct_song_dict[band_no].append(song_length)\n    first_songs.sort()\n    total_sum = 0\n    idx = 0\n    while idx < len(first_songs):\n        idx += 1\n        total_sum += idx * first_songs[idx - 1]\n    for band_no in distinct_song_dict:\n        total_sum += idx * sum(distinct_song_dict[band_no])\n    print(total_sum)", "a = int(input())\nfor _ in range(a):\n    aa = int(input())\n    kk = []\n    table = {}\n    for i in range(aa):\n        bb = list(map(int, input().split()))\n        kk.append((bb[0], bb[1]))\n    kk = sorted(kk, key=lambda x: x[1])\n    count = 0\n    l = 0\n    j = 0\n    for i in kk:\n        if i[0] not in table:\n            l += 1\n            table[i[0]] = 1\n            count += l * i[1]\n        else:\n            j += i[1]\n    print(count + l * j)", "from operator import itemgetter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        a = list(map(int, input().strip().split()))\n        arr.append(a)\n    arr.sort(key=lambda x: (x[0], x[1]))\n    arr1 = []\n    arr1.append(arr[0])\n    total = 0\n    m = 1\n    for j in range(1, len(arr)):\n        if arr[j][0] > arr[j - 1][0]:\n            arr1.append(arr[j])\n            m += 1\n        else:\n            total += arr[j][1]\n    ans = m * total\n    arr1.sort(key=lambda x: x[1])\n    k = 1\n    for j in arr1:\n        ans += k * j[1]\n        k += 1\n    print(ans)", "from collections import defaultdict\ncases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    count = ans = 0\n    hmap = defaultdict(list)\n    for i in range(n):\n        (b, l) = tuple(map(int, input().split()))\n        hmap[b].append(l)\n    check = {}\n    for i in hmap:\n        check[i] = min(hmap[i])\n    tmp = sorted(list(check.values()))\n    for i in range(len(tmp)):\n        ans += (i + 1) * tmp[i]\n    for i in hmap:\n        sm = sum(hmap[i]) - check[i]\n        ans += sm * len(hmap)\n    print(ans)", "def calc_sweetness(l, sweetness):\n    length = 0\n    songs.append(l[0][1])\n    for i in range(len(l) - 1):\n        if l[i][0] < l[i + 1][0]:\n            songs.append(l[i + 1][1])\n        else:\n            length = length + l[i + 1][1]\n    songs.sort()\n    for i in range(1, len(songs) + 1):\n        sweetness = sweetness + i * songs[i - 1]\n    return (sweetness, length)\nno_test_cases = int(input())\nwhile no_test_cases > 0:\n    songs = []\n    li = []\n    no_songs = int(input())\n    sweetness = 0\n    while no_songs > 0:\n        s = input()\n        (b, l) = s.split()\n        t = (int(b), int(l))\n        li.append(t)\n        no_songs = no_songs - 1\n    li.sort()\n    (sweetness, length) = calc_sweetness(li, sweetness)\n    sweetness = sweetness + len(songs) * length\n    print(sweetness)\n    no_test_cases = no_test_cases - 1", "import sys\nimport math\n\nclass Student:\n\n    def __init__(self, B, L):\n        self.B = B\n        self.L = L\n\n    def __repr__(self):\n        return repr((self.B, self.L))\nt = int(sys.stdin.readline())\nfor i in range(t):\n    N = int(sys.stdin.readline())\n    stuobj = []\n    for j in range(N):\n        (b, l) = [int(x) for x in sys.stdin.readline().split()]\n        stuobj.append(Student(b, l))\n    stuobj.sort(key=lambda student: student.L)\n    distinct_band = set()\n    counter = 0\n    mysum = 0\n    for eachstu in stuobj:\n        if eachstu.B not in distinct_band:\n            counter = counter + 1\n            distinct_band.add(eachstu.B)\n            mysum = mysum + counter * eachstu.L\n            eachstu.L = 0\n    for eachstu in stuobj:\n        mysum = mysum + counter * eachstu.L\n    print(mysum, end='\\n')", "from sys import stdin\ndata = stdin.readlines()\nd = 0\nT = int(data[d])\nd += 1\nfor t in range(T):\n    pairs = {}\n    rem = 0\n    N = int(data[d])\n    d += 1\n    length = 0\n    for n in range(N):\n        (b, l) = map(int, data[d].split(' '))\n        d += 1\n        if b not in pairs:\n            pairs[b] = l\n            length += 1\n        elif pairs[b] < l:\n            rem += l\n        else:\n            rem += pairs[b]\n            pairs[b] = l\n    a = []\n    a = pairs.values()\n    a = list(a)\n    a.sort()\n    total = 0\n    j = 1\n    for i in a:\n        total += j * i\n        j += 1\n    total += length * rem\n    print(total)", "for T in range(int(input())):\n    N = int(input())\n    dic = {}\n    no_band = 0\n    for i in range(N):\n        (B, L) = map(int, input().split())\n        try:\n            if L < dic[B][0]:\n                dic[B].insert(0, L)\n            else:\n                dic[B].append(L)\n        except KeyError:\n            no_band += 1\n            dic[B] = [L]\n    li_min = [li.pop(0) for li in dic.values()]\n    li_min.sort()\n    sumi = 0\n    for i in range(len(li_min)):\n        sumi += (i + 1) * li_min[i]\n    total_sumi = 0\n    for li in dic.values():\n        total_sumi += sum(li)\n    print(sumi + total_sumi * no_band)"]