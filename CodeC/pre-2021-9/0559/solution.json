["for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    lo = 0\n    hi = 1000000000\n    ans = 0\n    while lo <= hi:\n        mid = (lo + hi) // 2\n        temp = [(mid - t[i]) // p[i] + 1 for i in range(m) if mid >= t[i]]\n        temp.sort(reverse=True)\n        temp_sum = sum(temp[:n])\n        if temp_sum >= k:\n            hi = mid - 1\n            ans = mid\n        else:\n            lo = mid + 1\n    print(ans)", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def soln(m, n, k, t, p):\n    low = 0\n    res = high = 10 ** 9\n    while low <= high:\n        time = (low + high) // 2\n        cur = []\n        for i in range(m):\n            cur.append(max((time - t[i]) // p[i] + 1, 0))\n        nuts = sum(sorted(cur, reverse=True)[:n])\n        if nuts < k:\n            low = time + 1\n        else:\n            high = time - 1\n            res = time\n    return res\nfor _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(soln(m, n, k, t, p))", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    print(res)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    print(res)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    print(res)", "def solve():\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    return t_ans\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    return t_ans\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    T = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    print(res)", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    T = [int(_) for _ in input().split()]\n    P = [int(_) for _ in input().split()]\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "import math\n\ndef find_best_count(m, n, k, t_arr, p_arr, t):\n    per_tree = [0] * m\n    for i in range(m):\n        p = p_arr[i]\n        ti = t_arr[i]\n        if t >= ti:\n            count = 1 + (t - ti) // p\n            per_tree[i] = count\n    per_tree.sort(reverse=True)\n    total = sum(per_tree[0:n])\n    return total\n\ndef solve(m, n, k, t_arr, p_arr):\n    ans = 0\n    tmin = 0\n    tmax = 1000000000\n    while tmin <= tmax:\n        mid = (tmin + tmax) // 2\n        count = find_best_count(m, n, k, t_arr, p_arr, mid)\n        if count < k:\n            tmin = mid + 1\n        else:\n            tmax = mid - 1\n        if count >= k:\n            ans = mid\n    return ans\nt = int(input())\nfor r in range(1, t + 1):\n    (m, n, k) = list(map(int, input().strip().split(' ')))\n    t = list(map(int, input().strip().split(' ')))\n    p = list(map(int, input().strip().split(' ')))\n    result = solve(m, n, k, t, p)\n    print(result)", "t = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    T = [int(_) for _ in input().split()]\n    P = [int(_) for _ in input().split()]\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "t = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    T = [int(_) for _ in input().split()]\n    P = [int(_) for _ in input().split()]\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fa = [(t_mid - T[i]) // P[i] + 1 for i in range(m) if t_mid >= T[i]]\n        fm = sum(sorted(fa, reverse=True)[:n])\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "def sol():\n    l = 0\n    r = 10 ** 9\n    final = 0\n    while l <= r:\n        mid = (l + r) // 2\n        ans = [0] * m\n        for i in range(m):\n            ans[i] = max(0, (mid - t[i]) // p[i] + 1)\n        ans.sort(reverse=True)\n        x = sum(ans[0:n])\n        if x >= k:\n            r = mid - 1\n            final = mid\n        else:\n            l = mid + 1\n    print(final)\nfor i in range(int(input())):\n    (m, n, k) = [int(x) for x in input().split()]\n    t = [int(x) for x in input().split()]\n    p = [int(x) for x in input().split()]\n    sol()", "def sol():\n    l = 0\n    r = 10 ** 9\n    final = 0\n    while l <= r:\n        mid = (l + r) // 2\n        ans = [0] * m\n        for i in range(m):\n            ans[i] = max(0, (mid - t[i]) // p[i] + 1)\n        ans.sort(reverse=True)\n        x = sum(ans[0:n])\n        if x >= k:\n            r = mid - 1\n            final = mid\n        else:\n            l = mid + 1\n    print(final)\nfor i in range(int(input())):\n    (m, n, k) = [int(x) for x in input().split()]\n    t = [int(x) for x in input().split()]\n    p = [int(x) for x in input().split()]\n    sol()", "def sol():\n    l = 0\n    r = 10 ** 9\n    final = 0\n    while l <= r:\n        mid = (l + r) // 2\n        ans = [0] * m\n        for i in range(m):\n            ans[i] = max(0, (mid - t[i]) // p[i] + 1)\n        ans.sort(reverse=True)\n        x = sum(ans[0:n])\n        if x >= k:\n            r = mid - 1\n            final = mid\n        else:\n            l = mid + 1\n    print(final)\nfor i in range(int(input())):\n    (m, n, k) = [int(x) for x in input().split()]\n    t = [int(x) for x in input().split()]\n    p = [int(x) for x in input().split()]\n    sol()", "def check(t):\n    chestnuts = []\n    for el in arr:\n        chestnuts.append((t - el[0]) // el[1] + 1)\n    chestnuts.sort(reverse=True)\n    if sum(chestnuts[:n]) >= k:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (length, n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [[a[i], b[i]] for i in range(length)]\n    r = 1000000000000\n    l = 0\n    ans = 1000000000000\n    while r >= l:\n        m = (l + r) // 2\n        if check(m):\n            r = m - 1\n            ans = min(ans, m)\n        else:\n            l = m + 1\n    print(l)", "def check(t):\n    chestnuts = []\n    for el in arr:\n        chestnuts.append((t - el[0]) // el[1] + 1)\n    chestnuts.sort(reverse=True)\n    if sum(chestnuts[:n]) >= k:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (length, n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [[a[i], b[i]] for i in range(length)]\n    r = 1000000000000\n    l = 0\n    ans = 1000000000000\n    while r >= l:\n        m = (l + r) // 2\n        if check(m):\n            r = m - 1\n            ans = min(ans, m)\n        else:\n            l = m + 1\n    print(l)", "def check(t):\n    chestnuts = []\n    for el in arr:\n        chestnuts.append((t - el[0]) // el[1] + 1)\n    chestnuts.sort(reverse=True)\n    if sum(chestnuts[:n]) >= k:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (length, n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [[a[i], b[i]] for i in range(length)]\n    r = 1000000000000\n    l = 0\n    ans = 1000000000000\n    while r >= l:\n        m = (l + r) // 2\n        if check(m):\n            r = m - 1\n            ans = min(ans, m)\n        else:\n            l = m + 1\n    print(l)", "def check(t):\n    chestnuts = []\n    for el in arr:\n        chestnuts.append((t - el[0]) // el[1] + 1)\n    chestnuts.sort(reverse=True)\n    if sum(chestnuts[:n]) >= k:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (length, n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [[a[i], b[i]] for i in range(length)]\n    r = 1000000000000\n    l = 0\n    ans = 1000000000000\n    while r >= l:\n        m = (l + r) // 2\n        if check(m):\n            r = m - 1\n            ans = min(ans, m)\n        else:\n            l = m + 1\n    print(l)", "def check(t):\n    chestnuts = []\n    for el in arr:\n        chestnuts.append((t - el[0]) // el[1] + 1)\n    chestnuts.sort(reverse=True)\n    if sum(chestnuts[:n]) >= k:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (length, n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [[a[i], b[i]] for i in range(length)]\n    r = 1000000000000\n    l = 0\n    ans = 1000000000000\n    while r >= l:\n        m = (l + r) // 2\n        if check(m):\n            r = m - 1\n            ans = min(ans, m)\n        else:\n            l = m + 1\n    print(l)", "def binary_search():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        Sum = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\nfor i in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(binary_search())", "def binary_search():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        Sum = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\nfor i in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(binary_search())", "def compute(t, p, m, mid):\n    ans = []\n    for i in range(len(t)):\n        v = 0\n        if t[i] <= mid:\n            v = 1 + (mid - t[i]) // p[i]\n        ans.append(v)\n    ans.sort()\n    ans.reverse()\n    ans = ans[:m]\n    return sum(ans)\nt = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    tm = 2 ** 32 - 1\n    for i in range(m):\n        tm = min(tm, t[i] + p[i] * (k - 1))\n    (st, en) = (0, tm)\n    while st < en:\n        mid = (st + en) // 2\n        curr = compute(t, p, n, mid)\n        if curr < k:\n            st = mid + 1\n        else:\n            en = mid\n    i = en - 1\n    while compute(t, p, n, i) < k:\n        i += 1\n    print(i)", "def binary():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\nt = int(input())\nfor i in range(t):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(binary())", "def binary():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\nt = int(input())\nfor i in range(t):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(binary())", "def geAns(m, n, k, t, p):\n    (l, r) = (0, 10 ** 9 + 999)\n    ans = 0\n    while l <= r:\n        md = (l + r) // 2\n        v = [0] * m\n        for i in range(m):\n            v[i] = max(0, (md - t[i]) // p[i] + 1)\n        v.sort(reverse=True)\n        vl = sum(v[:n])\n        if vl >= k:\n            r = md - 1\n            ans = md\n        else:\n            l = md + 1\n    return ans\ntn = int(input())\nfor _ in range(tn):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(geAns(m, n, k, t, p))", "def geAns(m, n, k, t, p):\n    (l, r) = (0, 10 ** 9 + 999)\n    ans = 0\n    while l <= r:\n        md = (l + r) // 2\n        v = [0] * m\n        for i in range(m):\n            v[i] = max(0, (md - t[i]) // p[i] + 1)\n        v.sort(reverse=True)\n        vl = sum(v[:n])\n        if vl >= k:\n            r = md - 1\n            ans = md\n        else:\n            l = md + 1\n    return ans\ntn = int(input())\nfor _ in range(tn):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(geAns(m, n, k, t, p))", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def f(time):\n    l = [(time - T[i]) // P[i] + 1 for i in range(m) if time >= T[i]]\n    return sum(sorted(l, reverse=True)[:n])\nt = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    T = [int(_) for _ in input().split()]\n    P = [int(_) for _ in input().split()]\n    t_min = 0\n    t_max = 10000000\n    t_ans = 0\n    while t_min <= t_max:\n        t_mid = (t_min + t_max) // 2\n        fm = f(t_mid)\n        if fm < k:\n            t_min = t_mid + 1\n        else:\n            t_max = t_mid - 1\n        if fm >= k:\n            t_ans = t_mid\n    print(t_ans)", "def func():\n    start = 0\n    end = 10 ** 9\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    return res\nfor _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(func())", "def func():\n    start = 0\n    end = 10 ** 9 + 105\n    res = 0\n    while start <= end:\n        sum1 = [0] * m\n        mid = start + (end - start) // 2\n        for i in range(m):\n            sum1[i] = max((mid - t[i]) // p[i] + 1, 0)\n        sum1.sort(reverse=True)\n        val = sum(sum1[:n])\n        if val >= k:\n            end = mid - 1\n            res = mid\n        else:\n            start = mid + 1\n    return res\nfor _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(func())", "for _ in range(int(input())):\n    (m, n, k) = map(int, input().split())\n    Ti = list(map(int, input().split()))\n    Pi = list(map(int, input().split()))\n    sm = [0] * m\n    (l, r) = (1, 100000.0)\n    ans = int()\n    while l <= r:\n        mid = (l + r) // 2\n        for i in range(m):\n            sm[i] = max((mid - Ti[i]) // Pi[i] + 1, 0)\n        sm.sort(reverse=True)\n        if sum(sm[:n]) < k:\n            l = mid + 1\n        else:\n            ans = mid\n            r = mid - 1\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    t = [int(item) for item in input().split()]\n    p = [int(item) for item in input().split()]\n    low = 0\n    high = 10 ** 5 + 105\n    ans = 0\n    while low <= high:\n        arr = [0] * m\n        mid = low + (high - low) // 2\n        for i in range(m):\n            if mid < t[i]:\n                arr[i] = 0\n            arr[i] = 1 + (mid - t[i]) // p[i]\n        arr.sort(reverse=True)\n        temp = 0\n        for i in range(min(m, n)):\n            temp += arr[i]\n        if temp >= k:\n            ans = mid\n            high = mid - 1\n        else:\n            low = mid + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (m, n, k) = map(int, input().split())\n    t = [int(item) for item in input().split()]\n    p = [int(item) for item in input().split()]\n    low = 0\n    high = 10 ** 9 + 105\n    ans = 0\n    while low <= high:\n        arr = [0] * m\n        mid = (high + low) // 2\n        for i in range(m):\n            arr[i] = max(1 + (mid - t[i]) // p[i], 0)\n        arr.sort(reverse=True)\n        temp = sum(arr[0:n])\n        if temp >= k:\n            ans = mid\n            high = mid - 1\n        else:\n            low = mid + 1\n    print(ans)", "t = int(input())\nfor k in range(t):\n    (m, n, k) = input().split()\n    (m, n, k) = (int(m), int(n), int(k))\n    s_t = input().split()\n    s_p = input().split()\n    arr_t = []\n    arr_p = []\n    for i in range(m):\n        arr_t.append(int(s_t[i]))\n        arr_p.append(int(s_p[i]))\n    l = 0\n    r = arr_t[0] + (k - 1) * arr_p[0]\n    mn = r\n    while l <= r:\n        mid = l + (r - l) // 2\n        if mid >= mn:\n            r = mid - 1\n        else:\n            arr = []\n            s = 0\n            for i in range(m):\n                if mid < arr_t[i]:\n                    arr.append(0)\n                else:\n                    arr.append(1 + (mid - arr_t[i]) // arr_p[i])\n                s += arr[i]\n            if n >= m:\n                if s >= k:\n                    mn = mid\n                    r = mid - 1\n                else:\n                    l = mid + 1\n                continue\n            arr.sort(reverse=True)\n            s = 0\n            rem = n\n            for i in range(m):\n                if rem > 0:\n                    s += arr[i]\n                    rem -= 1\n                    if rem == 0:\n                        break\n            if s >= k:\n                mn = mid\n                r = mid - 1\n            else:\n                l = mid + 1\n    print(mn)", "def sol():\n    l = 0\n    r = 10 ** 9\n    final = 0\n    while l <= r:\n        mid = (l + r) // 2\n        ans = [0] * m\n        for i in range(m):\n            ans[i] = max(0, (mid - t[i]) // p[i] + 1)\n        ans.sort(reverse=True)\n        x = sum(ans[0:n])\n        if x >= k:\n            r = mid - 1\n            final = mid\n        else:\n            l = mid + 1\n    print(final)\nfor i in range(int(input())):\n    (m, n, k) = [int(x) for x in input().split()]\n    t = [int(x) for x in input().split()]\n    p = [int(x) for x in input().split()]\n    sol()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (m, n, k) = map(int, stdin.readline().split())\n    first = list(map(int, stdin.readline().split()))\n    second = list(map(int, stdin.readline().split()))\n    time = list(map(list, zip(first, second)))\n    low = 1\n    high = 10 ** 9\n    ans = 10 ** 9\n    while low <= high:\n        mid = (high + low) // 2\n        nuts = []\n        for i in time:\n            if i[0] > mid:\n                nuts.append(0)\n            else:\n                nuts.append(1 + (mid - i[0]) // i[1])\n        nuts.sort(reverse=True)\n        get = sum(nuts[:min(n, m)])\n        if get >= k:\n            ans = mid\n            high = mid - 1\n        else:\n            low = mid + 1\n    print(ans)", "def solve(time):\n    (s, e) = (1, 10 ** 9)\n    ans = 0\n    while s <= e:\n        mid = (s + e) // 2\n        nuts = 0\n        temp = []\n        for i in range(m):\n            if mid - time[i][0] < 0:\n                temp.append(0)\n                continue\n            temp.append(1 + (mid - time[i][0]) // time[i][1])\n        temp.sort(reverse=True)\n        nuts = sum(temp[:min(n, m)])\n        if nuts >= k:\n            ans = mid\n            e = mid - 1\n        else:\n            s = mid + 1\n    print(ans)\nfor _ in range(int(input())):\n    (m, n, k) = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    tp = list(map(int, input().split()))\n    time = list(map(list, zip(t, tp)))\n    solve(time)", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve():\n    l = 0\n    r = 10 ** 9 + 101\n    res = 0\n    while l <= r:\n        temp = [0] * m\n        mid = (l + r) // 2\n        for i in range(m):\n            temp[i] = max((mid - t[i]) // p[i] + 1, 0)\n        temp.sort(reverse=True)\n        x = sum(temp[0:n])\n        if x >= k:\n            r = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(solve())", "def solve(time):\n    chests_nuts = 0\n    (s, e) = (1, 10 ** 9)\n    ans = 0\n    while s <= e:\n        mid = (s + e) // 2\n        nuts = 0\n        temp = []\n        for i in range(m):\n            if mid - time[i][0] < 0:\n                temp.append(0)\n                continue\n            temp.append(1 + (mid - time[i][0]) // time[i][1])\n        temp.sort(reverse=True)\n        nuts = sum(temp[:min(n, m)])\n        if nuts >= k:\n            ans = mid\n            e = mid - 1\n        else:\n            s = mid + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    (m, n, k) = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    t_p = list(map(int, input().split()))\n    time = list(map(list, zip(t, t_p)))\n    solve(time)", "def solve(time):\n    chests_nuts = 0\n    (s, e) = (1, 10 ** 9)\n    ans = 0\n    while s <= e:\n        mid = (s + e) // 2\n        nuts = 0\n        temp = []\n        for i in range(m):\n            if mid - time[i][0] < 0:\n                temp.append(0)\n                continue\n            temp.append(1 + (mid - time[i][0]) // time[i][1])\n        temp.sort(reverse=True)\n        nuts = sum(temp[:min(n, m)])\n        if nuts >= k:\n            ans = mid\n            e = mid - 1\n        else:\n            s = mid + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    (m, n, k) = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    t_p = list(map(int, input().split()))\n    time = list(map(list, zip(t, t_p)))\n    solve(time)", "def solve(time):\n    chests_nuts = 0\n    (s, e) = (1, 10 ** 9)\n    ans = 0\n    while s <= e:\n        mid = (s + e) // 2\n        nuts = 0\n        temp = []\n        for i in range(m):\n            if mid - time[i][0] < 0:\n                temp.append(0)\n                continue\n            temp.append(1 + (mid - time[i][0]) // time[i][1])\n        temp.sort(reverse=True)\n        nuts = sum(temp[:min(n, m)])\n        if nuts >= k:\n            ans = mid\n            e = mid - 1\n        else:\n            s = mid + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    (m, n, k) = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    t_p = list(map(int, input().split()))\n    time = list(map(list, zip(t, t_p)))\n    solve(time)", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 105\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())", "def BinarySearch():\n    left = 0\n    right = 10 ** 9 + 101\n    res = 0\n    while left <= right:\n        Sum = [0] * m\n        mid = (left + right) // 2\n        for i in range(m):\n            Sum[i] = max((mid - t[i]) // p[i] + 1, 0)\n        Sum.sort(reverse=True)\n        x = sum(Sum[0:n])\n        if x >= k:\n            right = mid - 1\n            res = mid\n        else:\n            left = mid + 1\n    return res\na = int(input())\nwhile a != 0:\n    a -= 1\n    (m, n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(BinarySearch())"]