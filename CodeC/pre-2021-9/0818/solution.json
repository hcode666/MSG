["for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (j, i, mx) = (0, 0, 0)\n    d = dict()\n    while j < n:\n        if l[j] in d:\n            d[l[j]] += 1\n        else:\n            d[l[j]] = 1\n        if len(d) <= k - 1:\n            mx = max(mx, j - i + 1)\n            j += 1\n        else:\n            while len(d) > k - 1:\n                d[l[i]] -= 1\n                if d[l[i]] == 0:\n                    d.pop(l[i])\n                i += 1\n            j += 1\n    print(mx)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    j = 0\n    r = 0\n    ans = 0\n    x = Counter([])\n    for i in range(n):\n        if x[a[i]] == 0:\n            r += 1\n        x[a[i]] += 1\n        while r == k:\n            x[a[j]] -= 1\n            if x[a[j]] == 0:\n                r -= 1\n            j += 1\n        ans = max(i - j + 1, ans)\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    j = 0\n    r = 0\n    ans = 0\n    x = Counter([])\n    for i in range(n):\n        if x[a[i]] == 0:\n            r += 1\n        x[a[i]] += 1\n        while r == k:\n            x[a[j]] -= 1\n            if x[a[j]] == 0:\n                r -= 1\n            j += 1\n        ans = max(i - j + 1, ans)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    hashmap = {i: 0 for i in range(1, k + 1)}\n    l = 0\n    r = 0\n    res = 1\n    c = 0\n    while r < len(f):\n        hashmap[f[r]] += 1\n        while not 0 in hashmap.values():\n            hashmap[f[l]] -= 1\n            l += 1\n        c = r - l + 1\n        res = max(res, c)\n        r += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for z in range(n):\n        if d[l[z] - 1] == 0:\n            s += 1\n        d[l[z] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(z - j + 1, m)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for z in range(n):\n        if d[l[z] - 1] == 0:\n            s += 1\n        d[l[z] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(z - j + 1, m)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for z in range(n):\n        if d[l[z] - 1] == 0:\n            s += 1\n        d[l[z] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(z - j + 1, m)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for z in range(n):\n        if d[l[z] - 1] == 0:\n            s += 1\n        d[l[z] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(z - j + 1, m)\n    print(m)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dk = dd(int)\n    cnt = mx = 0\n    left = 0\n    right = 0\n    while right != n:\n        dk[lst[right]] += 1\n        if dk[lst[right]] == 1:\n            cnt += 1\n        while cnt == k:\n            dk[lst[left]] -= 1\n            mx = max(mx, right - left)\n            if dk[lst[left]] == 0:\n                cnt -= 1\n            left += 1\n        right += 1\n    print(max(mx, right - left))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dk = dd(int)\n    cnt = mx = 0\n    left = 0\n    right = 0\n    while right != n:\n        dk[lst[right]] += 1\n        if dk[lst[right]] == 1:\n            cnt += 1\n        while cnt == k:\n            dk[lst[left]] -= 1\n            mx = max(mx, right - left)\n            if dk[lst[left]] == 0:\n                cnt -= 1\n            left += 1\n        right += 1\n    print(max(mx, right - left))", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dk = dd(int)\n    cnt = mx = 0\n    left = 0\n    right = 0\n    while right != n:\n        dk[lst[right]] += 1\n        if dk[lst[right]] == 1:\n            cnt += 1\n        while cnt == k:\n            dk[lst[left]] -= 1\n            mx = max(mx, right - left)\n            if dk[lst[left]] == 0:\n                cnt -= 1\n            left += 1\n        right += 1\n    print(max(mx, right - left))", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dk = dd(int)\n    cnt = mx = 0\n    left = 0\n    right = 0\n    while right != n:\n        dk[lst[right]] += 1\n        if dk[lst[right]] == 1:\n            cnt += 1\n        while cnt == k:\n            dk[lst[left]] -= 1\n            mx = max(mx, right - left)\n            if dk[lst[left]] == 0:\n                cnt -= 1\n            left += 1\n        right += 1\n    print(max(mx, right - left))", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dk = dd(int)\n    cnt = mx = 0\n    left = 0\n    right = 0\n    while right != n:\n        dk[lst[right]] += 1\n        if dk[lst[right]] == 1:\n            cnt += 1\n        while cnt == k:\n            dk[lst[left]] -= 1\n            mx = max(mx, right - left)\n            if dk[lst[left]] == 0:\n                cnt -= 1\n            left += 1\n        right += 1\n    print(max(mx, right - left))", "def main():\n    t = int(input())\n    while t > 0:\n        (n, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        freq = [0] * 100001\n        k = k - 1\n        st = 0\n        end = 0\n        currentcount = 0\n        prevelement = 0\n        for i in range(n):\n            freq[arr[i]] += 1\n            if freq[arr[i]] == 1:\n                currentcount += 1\n            while currentcount > k:\n                freq[arr[prevelement]] -= 1\n                if freq[arr[prevelement]] == 0:\n                    currentcount -= 1\n                prevelement += 1\n            if i - prevelement + 1 >= end - st + 1:\n                end = i\n                st = prevelement\n        print(end - st + 1)\n        t = t - 1\nmain()", "for _ in range(int(input())):\n    (n_31809, k_31809) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k_31809\n    (s_31809, m_31809, j_31809) = (0, 0, 0)\n    for i in range(n_31809):\n        if d[l[i] - 1] == 0:\n            s_31809 += 1\n        d[l[i] - 1] += 1\n        while s_31809 >= k_31809:\n            d[l[j_31809] - 1] -= 1\n            if d[l[j_31809] - 1] == 0:\n                s_31809 -= 1\n            j_31809 += 1\n        m_31809 = max(i - j_31809 + 1, m_31809)\n    print(m_31809)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    l = 0\n    r = 0\n    ans = 0\n    d = {i + 1: 0 for i in range(k)}\n    s = set()\n    while l <= r < n:\n        if len(s) != k:\n            s.add(x[r])\n            d[x[r]] += 1\n            if len(s) != k:\n                ans = max(ans, r - l + 1)\n            r += 1\n        else:\n            d[x[l]] -= 1\n            if d[x[l]] == 0:\n                s.remove(x[l])\n            l += 1\n    print(ans)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * k\n    (s, m, j) = (0, 0, 0)\n    for i in range(n):\n        if d[l[i] - 1] == 0:\n            s += 1\n        d[l[i] - 1] += 1\n        while s >= k:\n            d[l[j] - 1] -= 1\n            if d[l[j] - 1] == 0:\n                s -= 1\n            j += 1\n        m = max(i - j + 1, m)\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    se = set()\n    ma = max(lis)\n    co = [0 for _ in range(ma + 1)]\n    se.add(lis[0])\n    co[lis[0]] += 1\n    i1 = 0\n    mal = 1\n    for i2 in range(1, n):\n        se.add(lis[i2])\n        co[lis[i2]] += 1\n        while len(se) == k:\n            if co[lis[i1]] == 1:\n                se.remove(lis[i1])\n                co[lis[i1]] -= 1\n                i1 += 1\n            else:\n                co[lis[i1]] -= 1\n                i1 += 1\n        if i2 - i1 > mal - 1:\n            mal = i2 - i1 + 1\n    print(mal)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    se = set()\n    ma = max(lis)\n    co = [0 for _ in range(ma + 1)]\n    se.add(lis[0])\n    co[lis[0]] += 1\n    i1 = 0\n    mal = 1\n    for i2 in range(1, n):\n        se.add(lis[i2])\n        co[lis[i2]] += 1\n        while len(se) == k:\n            if co[lis[i1]] == 1:\n                se.remove(lis[i1])\n                co[lis[i1]] -= 1\n                i1 += 1\n            else:\n                co[lis[i1]] -= 1\n                i1 += 1\n        if i2 - i1 > mal - 1:\n            mal = i2 - i1 + 1\n    print(mal)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            while l[i] == x:\n                i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            while l[i] == x:\n                i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            while i < n and l[i] == x:\n                i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            while l[i] == x:\n                i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter()\n    i = t = ans = 0\n    for j in range(n):\n        if c[a[j]] == 0:\n            t += 1\n        c[a[j]] += 1\n        while t == k and i <= j:\n            c[a[i]] -= 1\n            if c[a[i]] == 0:\n                t -= 1\n            i += 1\n        ans = max(ans, j - i + 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    count = 0\n    unique = 0\n    path = 1\n    d = {}\n    j = 0\n    for i in range(n):\n        if arr[i] in d:\n            if d[arr[i]] == 0:\n                unique = unique + 1\n            count = count + 1\n            d[arr[i]] = d[arr[i]] + 1\n        else:\n            unique = unique + 1\n            count = count + 1\n            d[arr[i]] = 1\n        if unique == k:\n            path = max(path, count - 1)\n            while unique == k and j < i:\n                if d[arr[j]] == 1:\n                    unique = unique - 1\n                d[arr[j]] = d[arr[j]] - 1\n                count = count - 1\n                j = j + 1\n    if unique == k:\n        path = max(path, count - 1)\n    else:\n        path = max(path, count)\n    print(path)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter()\n    i = t = ans = 0\n    for j in range(n):\n        if c[a[j]] == 0:\n            t += 1\n        c[a[j]] += 1\n        while t == k and i <= j:\n            c[a[i]] -= 1\n            if c[a[i]] == 0:\n                t -= 1\n            i += 1\n        ans = max(ans, j - i + 1)\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    (maxl, e, s) = (0, 0, 0)\n    d = defaultdict(int)\n    while e < n:\n        d[li[e]] += 1\n        while len(d) == k:\n            d[li[s]] -= 1\n            if d[li[s]] == 0:\n                del d[li[s]]\n            s += 1\n        e += 1\n        maxl = max(maxl, e - s)\n    print(maxl)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = [0] * (k + 1)\n    c2 = 0\n    res = 0\n    r = 0\n    for j in range(n):\n        while r < n and (c[a[r]] > 0 or c2 < k - 1):\n            if c[a[r]] == 0:\n                c2 += 1\n            c[a[r]] += 1\n            r += 1\n        res = max(res, r - j)\n        c[a[j]] -= 1\n        if c[a[j]] == 0:\n            c2 -= 1\n    print(res)", "from collections import Counter\nfor tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter()\n    i = t = ans = 0\n    for j in range(n):\n        if c[a[j]] == 0:\n            t += 1\n        c[a[j]] += 1\n        while t == k and i <= j:\n            c[a[i]] -= 1\n            if c[a[i]] == 0:\n                t -= 1\n            i += 1\n        ans = max(ans, j - i + 1)\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    d = defaultdict(int)\n    (i, j) = (0, 0)\n    ans = 0\n    while j < n:\n        d[lst[j]] += 1\n        while len(d) == k:\n            d[lst[i]] -= 1\n            if d[lst[i]] == 0:\n                del d[lst[i]]\n            i += 1\n        j += 1\n        ans = max(ans, j - i)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    t = set()\n    (i, j, a) = (0, 0, 0)\n    while i < n and j < n:\n        t.add(l[j])\n        if len(t) < k:\n            a = max(a, j + 1 - i)\n            j = j + 1\n        else:\n            d = l[i]\n            i = i + 1\n            if d not in l[i:j + 1]:\n                t.remove(d)\n    print(a)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = [0] * (k + 1)\n    c2 = 0\n    res = 0\n    r = 0\n    for j in range(n):\n        while r < n and (c[a[r]] > 0 or c2 < k - 1):\n            if c[a[r]] == 0:\n                c2 += 1\n            c[a[r]] += 1\n            r += 1\n        res = max(res, r - j)\n        c[a[j]] -= 1\n        if c[a[j]] == 0:\n            c2 -= 1\n    print(res)", "def answer():\n    c = [0] * (k + 1)\n    (res, d, length) = (0, 0, 0)\n    ind = 0\n    for v in a:\n        if c[v] == 0:\n            d += 1\n            c[v] += 1\n            if d == k:\n                while 1:\n                    c[a[ind]] -= 1\n                    length -= 1\n                    if c[a[ind]] == 0:\n                        ind += 1\n                        break\n                    else:\n                        ind += 1\n                d -= 1\n            c[v] -= 1\n        length += 1\n        res = max(res, length)\n        c[v] += 1\n    return res\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    res = 0\n    s = set()\n    while j < n and i < n:\n        s.add(ar[j])\n        if len(s) >= k:\n            ele = ar[i]\n            i += 1\n            if ele not in ar[i:j + 1]:\n                s.remove(ele)\n        else:\n            res = max(res, j + 1 - i)\n            j += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    se = set()\n    (i, j, mx) = (0, 0, 0)\n    while i < n and j < n:\n        se.add(a[j])\n        if len(se) < k:\n            mx = max(mx, j - i + 1)\n            j = j + 1\n        else:\n            d = a[i]\n            i = i + 1\n            if d not in a[i:j + 1]:\n                se.remove(d)\n    print(mx)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    se = set()\n    (i, j, mx) = (0, 0, 0)\n    while i < n and j < n:\n        se.add(a[j])\n        if len(se) < k:\n            mx = max(mx, j - i + 1)\n            j = j + 1\n        else:\n            d = a[i]\n            i = i + 1\n            if d not in a[i:j + 1]:\n                se.remove(d)\n    print(mx)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    t = set()\n    (i, j, a) = (0, 0, 0)\n    while i < n and j < n:\n        t.add(l[j])\n        if len(t) < k:\n            a = max(a, j + 1 - i)\n            j = j + 1\n        else:\n            d = l[i]\n            i = i + 1\n            if d not in l[i:j + 1]:\n                t.remove(d)\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    t = set()\n    (i, j, a) = (0, 0, 0)\n    while i < n and j < n:\n        t.add(l[j])\n        if len(t) < k:\n            a = max(a, j + 1 - i)\n            j = j + 1\n        else:\n            d = l[i]\n            i = i + 1\n            if d not in l[i:j + 1]:\n                t.remove(d)\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    t = set()\n    (i, j, a) = (0, 0, 0)\n    while i < n and j < n:\n        t.add(l[j])\n        if len(t) < k:\n            a = max(a, j + 1 - i)\n            j = j + 1\n        else:\n            d = l[i]\n            i = i + 1\n            if d not in l[i:j + 1]:\n                t.remove(d)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    res = 0\n    s = set()\n    while j < n and i < n:\n        s.add(arr[j])\n        if len(s) >= k:\n            ele = arr[i]\n            i += 1\n            if ele not in arr[i:j + 1]:\n                s.remove(ele)\n        else:\n            res = max(res, j + 1 - i)\n            j += 1\n    print(res)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, a) = (0, 0, 0)\n    t = set()\n    while i < n and j < n:\n        t.add(l[j])\n        if len(t) < k:\n            a = max(a, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            i += 1\n            if x not in l[i:j + 1]:\n                t.remove(x)\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    res = 0\n    s = set()\n    while j < n and i < n:\n        s.add(ar[j])\n        if len(s) >= k:\n            ele = ar[i]\n            i += 1\n            if ele not in ar[i:j + 1]:\n                s.remove(ele)\n        else:\n            res = max(res, j + 1 - i)\n            j += 1\n    print(res)", "t = int(input())\nfor k in range(t):\n    (a, b) = map(int, input().split())\n    li = list(map(int, input().split()))\n    (i, j, re) = (0, 0, 0)\n    st = set()\n    while i < a and j < a:\n        st.add(li[j])\n        if len(st) < b:\n            re = max(re, j - i + 1)\n            j += 1\n        else:\n            m = li[i]\n            i += 1\n            if m not in li[i:j + 1] and m in st:\n                st.remove(m)\n    print(re)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(l[j])\n        if len(s) < k:\n            ans = max(ans, j + 1 - i)\n            j += 1\n        else:\n            x = l[i]\n            i += 1\n            if x not in l[i:j + 1]:\n                s.remove(x)\n    print(ans)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, res) = (0, 0, 0)\n    s = set()\n    while i < m and j < m:\n        s.add(arr[j])\n        if len(s) < n:\n            res = max(res, j - i + 1)\n            j += 1\n        else:\n            b = arr[i]\n            i += 1\n            if b not in arr[i:j + 1] and b in s:\n                s.remove(b)\n    print(res)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, res) = (0, 0, 0)\n    s = set()\n    while i < m and j < m:\n        s.add(arr[j])\n        if len(s) < n:\n            res = max(res, j - i + 1)\n            j += 1\n        else:\n            b = arr[i]\n            i += 1\n            if b not in arr[i:j + 1] and b in s:\n                s.remove(b)\n    print(res)", "def answer():\n    c = [0] * (k + 1)\n    (ans, d, length) = (0, 0, 0)\n    ind = 0\n    for v in a:\n        if c[v] == 0:\n            d += 1\n            c[v] += 1\n            if d == k:\n                while 1:\n                    c[a[ind]] -= 1\n                    length -= 1\n                    if c[a[ind]] == 0:\n                        ind += 1\n                        break\n                    else:\n                        ind += 1\n                d -= 1\n            c[v] -= 1\n        length += 1\n        ans = max(ans, length)\n        c[v] += 1\n    return ans\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = [0] * (k + 1)\n    c2 = 0\n    ans = 0\n    r = 0\n    for j in range(n):\n        while r < n and (c[a[r]] > 0 or c2 < k - 1):\n            if c[a[r]] == 0:\n                c2 += 1\n            c[a[r]] += 1\n            r += 1\n        ans = max(ans, r - j)\n        c[a[j]] -= 1\n        if c[a[j]] == 0:\n            c2 -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = [0] * (k + 1)\n    c2 = 0\n    ans = 0\n    r = 0\n    for l in range(n):\n        while r < n and (c[a[r]] > 0 or c2 < k - 1):\n            if c[a[r]] == 0:\n                c2 += 1\n            c[a[r]] += 1\n            r += 1\n        ans = max(ans, r - l)\n        c[a[l]] -= 1\n        if c[a[l]] == 0:\n            c2 -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    ptr1 = 0\n    ptr2 = 0\n    dt = dict()\n    maxlen = 0\n    while ptr2 < n:\n        if len(dt) < k and ptr2 == n - 1:\n            if lst[ptr2] in dt:\n                dt[lst[ptr2]] += 1\n            else:\n                dt[lst[ptr2]] = 1\n            if len(dt) == k:\n                maxlen = max(maxlen, ptr2 - ptr1)\n            else:\n                maxlen = max(maxlen, ptr2 - ptr1 + 1)\n            break\n        elif len(dt) < k:\n            if lst[ptr2] in dt:\n                dt[lst[ptr2]] += 1\n            else:\n                dt[lst[ptr2]] = 1\n            ptr2 += 1\n        else:\n            maxlen = max(maxlen, ptr2 - ptr1 - 1)\n            dt[lst[ptr1]] -= 1\n            if dt[lst[ptr1]] <= 0:\n                dt.pop(lst[ptr1])\n            ptr1 += 1\n    print(maxlen)", "def main():\n    t = int(input())\n    while t != 0:\n        (n, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        freq = [0] * 100001\n        k = k - 1\n        st = 0\n        end = 0\n        currentCount = 0\n        previousElement = 0\n        for i in range(n):\n            freq[arr[i]] += 1\n            if freq[arr[i]] == 1:\n                currentCount += 1\n            while currentCount > k:\n                freq[arr[previousElement]] -= 1\n                if freq[arr[previousElement]] == 0:\n                    currentCount -= 1\n                previousElement += 1\n            if i - previousElement + 1 >= end - st + 1:\n                end = i\n                st = previousElement\n        print(end - st + 1)\n        t = t - 1\nmain()", "def main():\n    t = int(input())\n    while t != 0:\n        (n, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        freq = [0] * 100001\n        k = k - 1\n        st = 0\n        end = 0\n        currentCount = 0\n        previousElement = 0\n        for i in range(n):\n            freq[arr[i]] += 1\n            if freq[arr[i]] == 1:\n                currentCount += 1\n            while currentCount > k:\n                freq[arr[previousElement]] -= 1\n                if freq[arr[previousElement]] == 0:\n                    currentCount -= 1\n                previousElement += 1\n            if i - previousElement + 1 >= end - st + 1:\n                end = i\n                st = previousElement\n        print(end - st + 1)\n        t = t - 1\nmain()", "def sol(arr, n, k):\n    m = -1\n    for i in range(n):\n        flag = 0\n        count = 1\n        s = set()\n        s.add(arr[i])\n        temp = i\n        for j in range(i + 1, n):\n            if arr[j] not in s:\n                if len(s) == k - 1:\n                    flag = 1\n                else:\n                    s.add(arr[j])\n                    count += 1\n            else:\n                count += 1\n            if flag == 1:\n                break\n        if count > m:\n            m = count\n    return m\ntest = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 2:\n        mi = sol(arr, n, k)\n        print(mi)\n        continue\n    freq = [0] * n\n    i = 0\n    j = 0\n    c = 0\n    l = 0\n    mx = -1\n    k -= 1\n    for x in range(n):\n        freq[arr[x]] += 1\n        if freq[arr[x]] == 1:\n            c += 1\n        while c > k:\n            freq[arr[l]] -= 1\n            if freq[arr[l]] == 0:\n                c -= 1\n            l += 1\n        if x - l + 1 >= j - i + 1:\n            j = x\n            i = l\n    print(j - i + 1)", "def sol(arr, n, k):\n    m = -1\n    for i in range(n):\n        flag = 0\n        count = 1\n        s = set()\n        s.add(arr[i])\n        temp = i\n        for j in range(i + 1, n):\n            if arr[j] not in s:\n                if len(s) == k - 1:\n                    flag = 1\n                else:\n                    s.add(arr[j])\n                    count += 1\n            else:\n                count += 1\n            if flag == 1:\n                break\n        if count > m:\n            m = count\n    return m\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 2:\n        mi = sol(arr, n, k)\n        print(mi)\n        continue\n    freq = [0] * n\n    i = 0\n    j = 0\n    c = 0\n    l = 0\n    mx = -1\n    k -= 1\n    for x in range(n):\n        freq[arr[x]] += 1\n        if freq[arr[x]] == 1:\n            c += 1\n        while c > k:\n            freq[arr[l]] -= 1\n            if freq[arr[l]] == 0:\n                c -= 1\n            l += 1\n        if x - l + 1 >= j - i + 1:\n            j = x\n            i = l\n    print(j - i + 1)", "for T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(len(a))\n    else:\n        (f, t, c) = ([], [], 1)\n        key = a[0]\n        for i in range(1, n):\n            if a[i] == key:\n                c += 1\n            else:\n                f.append(c)\n                t.append(key)\n                key = a[i]\n                c = 1\n        f.append(c)\n        t.append(key)\n        check = [0] * (k + 1)\n        (i, start, l, m, uni) = (0, 0, 0, 0, 0)\n        while i < len(t) and start < len(t):\n            check[t[i]] += 1\n            if check[t[i]] == 1:\n                uni += 1\n            if uni == k:\n                check[t[i]] -= 1\n                m = max(m, l)\n                check[t[start]] -= 1\n                if check[t[start]] == 0:\n                    uni -= 1\n                l -= f[start]\n                start += 1\n                uni -= 1\n                continue\n            l += f[i]\n            i += 1\n        m = max(m, l)\n        print(m)", "for _ in range(int(input())):\n    ip = list(map(int, input().split()))\n    n = ip[0]\n    k = ip[1]\n    l = list(map(int, input().split()))\n    d = {}\n    i = 0\n    start = 0\n    end = 0\n    j = 0\n    m = 0\n    while j < n:\n        d.setdefault(l[j], 0)\n        d[l[j]] += 1\n        if len(d) >= k:\n            start = i\n            end = j\n            if d[l[i]] > 1:\n                d[l[i]] -= 1\n            else:\n                d.pop(l[i])\n            if d[l[j]] > 1:\n                d[l[j]] -= 1\n            else:\n                d.pop(l[j])\n            j -= 1\n            i += 1\n        start = i\n        end = j + 1\n        if m <= end - start:\n            m = end - start\n        j += 1\n    print(m)", "for _ in range(int(input())):\n    ip = list(map(int, input().split()))\n    n = ip[0]\n    k = ip[1]\n    l = list(map(int, input().split()))\n    d = {}\n    i = 0\n    start = 0\n    end = 0\n    j = 0\n    m = 0\n    while j < n:\n        d.setdefault(l[j], 0)\n        d[l[j]] += 1\n        if len(d) >= k:\n            start = i\n            end = j\n            if d[l[i]] > 1:\n                d[l[i]] -= 1\n            else:\n                d.pop(l[i])\n            if d[l[j]] > 1:\n                d[l[j]] -= 1\n            else:\n                d.pop(l[j])\n            j -= 1\n            i += 1\n        start = i\n        end = j + 1\n        if m <= end - start:\n            m = end - start\n        j += 1\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    l = 0\n    r = 0\n    ans = 0\n    d = {i + 1: 0 for i in range(k)}\n    s = set()\n    while l <= r < n:\n        if len(s) != k:\n            s.add(x[r])\n            d[x[r]] += 1\n            if len(s) != k:\n                ans = max(ans, r - l + 1)\n            r += 1\n        else:\n            d[x[l]] -= 1\n            if d[x[l]] == 0:\n                s.remove(x[l])\n            l += 1\n    print(ans)", "import sys\nfrom collections import defaultdict\n\ndef fin():\n    return sys.stdin.readline().strip()\n\ndef fout(s, end='\\n'):\n    sys.stdout.write(str(s) + end)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, fin().split())\n    a = [int(x) for x in fin().split()]\n    freq = defaultdict(int)\n    freq[a[0]] += 1\n    temp = set([a[0]])\n    ans = 1\n    prev = 0\n    for i in range(1, n):\n        freq[a[i]] += 1\n        temp.add(a[i])\n        if len(temp) < k:\n            ans = max(ans, i - prev + 1)\n        else:\n            while len(temp) >= k:\n                freq[a[prev]] -= 1\n                if freq[a[prev]] == 0:\n                    temp.remove(a[prev])\n                prev += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    ind = [[] for i in range(k)]\n    for i in range(n):\n        ind[a[i] - 1].append(i)\n    maxi = 0\n    flag = 0\n    for i in ind:\n        if len(i) == 0:\n            flag = 1\n            break\n        maxi = max(maxi, i[0])\n        for j in range(1, len(i)):\n            maxi = max(i[j] - i[j - 1] - 1, maxi)\n        maxi = max(n - i[-1] - 1, maxi)\n    if flag == 1:\n        print(n)\n    else:\n        print(maxi)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = 0\n    sm = 0\n    ans = 0\n    d = dict()\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n        if d[a[i]] == 1:\n            sm += 1\n        if sm == k:\n            ans = max(ans, i - p)\n            while sm == k:\n                d[a[p]] = d[a[p]] - 1\n                p += 1\n                if d[a[p - 1]] == 0:\n                    sm -= 1\n                    break\n    ans = max(ans, n - p)\n    if ans == 0:\n        ans = n\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(arr[j])\n        if len(s) < k:\n            ans = max(ans, j - i + 1)\n            j += 1\n        else:\n            b = arr[i]\n            i += 1\n            if b not in arr[i:j + 1] and b in s:\n                s.remove(b)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    s = set()\n    while i < n and j < n:\n        s.add(arr[j])\n        if len(s) < k:\n            ans = max(ans, j - i + 1)\n            j += 1\n        else:\n            b = arr[i]\n            i += 1\n            if b not in arr[i:j + 1] and b in s:\n                s.remove(b)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    sun = set()\n    while i < n and j < n:\n        sun.add(arr[j])\n        if len(sun) < k:\n            ans = max(ans, j - i + 1)\n            j += 1\n        else:\n            blak = arr[i]\n            i += 1\n            if blak not in arr[i:j + 1] and blak in sun:\n                sun.remove(blak)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    l = 0\n    r = 0\n    ans = 0\n    freq = {i + 1: 0 for i in range(k)}\n    flavors = set()\n    while l <= r < n:\n        if len(flavors) != k:\n            flavors.add(x[r])\n            freq[x[r]] += 1\n            if len(flavors) != k:\n                ans = max(ans, r - l + 1)\n            r += 1\n        else:\n            freq[x[l]] -= 1\n            if freq[x[l]] == 0:\n                flavors.remove(x[l])\n            l += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (i, j, ans) = (0, 0, 0)\n    sun = set()\n    while i < n and j < n:\n        sun.add(arr[j])\n        if len(sun) < k:\n            ans = max(ans, j - i + 1)\n            j += 1\n        else:\n            blak = arr[i]\n            i += 1\n            if blak not in arr[i:j + 1] and blak in sun:\n                sun.remove(blak)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    c_set = set()\n    ans = 0\n    while i < n and j < n:\n        c_set.add(arr[j])\n        if len(c_set) <= k - 1:\n            ans = max(ans, j - i + 1)\n            j += 1\n        else:\n            crnt = arr[i]\n            i += 1\n            if crnt not in arr[i:j + 1] and crnt in c_set:\n                c_set.remove(crnt)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    x = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = [0] * k\n    p = 0\n    for i in range(n):\n        a = l[i]\n        q = 0\n        for j in range(p, n):\n            m[l[j] - 1] += 1\n            if 0 not in m:\n                x = max(x, j - i)\n                q = 1\n                p = j\n                m[l[j] - 1] -= 1\n                break\n        m[l[i] - 1] -= 1\n        if q == 0:\n            x = max(x, j - i + 1)\n            p = n\n    print(x)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(len(a))\n    else:\n        d = {}\n        l = []\n        for i in range(1, k + 1):\n            d[i] = []\n        for i in range(n):\n            d[a[i]].append(i)\n        for i in range(1, k + 1):\n            d1 = []\n            d1.append(d[i][0])\n            d1.append(n - d[i][-1] - 1)\n            for j in range(len(d[i]) - 1):\n                x = d[i][j + 1] - d[i][j] - 1\n                d1.append(x)\n            l.append(max(d1))\n        print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set()\n    ans = 0\n    start = 0\n    dic = dict()\n    for i in range(n):\n        if arr[i] in s:\n            dic[arr[i]] += 1\n        else:\n            s.add(arr[i])\n            dic[arr[i]] = 1\n        if len(s) == k:\n            while len(s) == k:\n                dic[arr[start]] -= 1\n                if dic[arr[start]] == 0:\n                    s.remove(arr[start])\n                start += 1\n        ans = max(ans, i - start + 1)\n    print(ans)", "t = int(input())\nfor item in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    a = [0 for i in range(k)]\n    count = 0\n    i = 0\n    j = 0\n    max_length = 0\n    while i < n:\n        if count == k - 1 and a[arr[i] - 1] == 0:\n            a[arr[j] - 1] -= 1\n            if a[arr[j] - 1] == 0:\n                count -= 1\n            j += 1\n        else:\n            if a[arr[i] - 1] > 0:\n                a[arr[i] - 1] += 1\n            else:\n                a[arr[i] - 1] += 1\n                count += 1\n            i += 1\n        cl = i - j\n        max_length = max(max_length, cl)\n    print(max_length)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    arr = list(map(int, input().strip().split()))[:n]\n    used_arr = [0 for i in range(k)]\n    count = 0\n    i = 0\n    j = 0\n    max_length = 0\n    while i < n:\n        if count == k - 1 and used_arr[arr[i] - 1] == 0:\n            used_arr[arr[j] - 1] -= 1\n            if used_arr[arr[j] - 1] == 0:\n                count -= 1\n            j += 1\n        else:\n            if used_arr[arr[i] - 1] > 0:\n                used_arr[arr[i] - 1] += 1\n            else:\n                used_arr[arr[i] - 1] += 1\n                count += 1\n            i += 1\n        curr_length = i - j\n        max_length = max(max_length, curr_length)\n    print(max_length)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set()\n    ans = 0\n    start = 0\n    dic = dict()\n    for i in range(n):\n        if arr[i] in s:\n            dic[arr[i]] += 1\n        else:\n            s.add(arr[i])\n            dic[arr[i]] = 1\n        if len(s) == k:\n            while len(s) == k:\n                dic[arr[start]] -= 1\n                if dic[arr[start]] == 0:\n                    s.remove(arr[start])\n                start += 1\n        ans = max(ans, i - start + 1)\n    print(ans)", "import sys\n\ndef Ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef Strs():\n    return map(str, sys.stdin.readline().strip().split())\n\ndef Array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Str():\n    return sys.stdin.readline().strip()\n\ndef Int():\n    return int(sys.stdin.readline().strip())\n\ndef MOD():\n    return 1000000007\n\ndef notAll(arr, N, k):\n    counter = [0] * (N + 5)\n    current = 0\n    ans = 0\n    start = end = 0\n    for i in range(N):\n        counter[arr[i]] += 1\n        if counter[arr[i]] == 1:\n            current += 1\n        while current > k:\n            counter[arr[start]] -= 1\n            if counter[arr[start]] == 0:\n                current -= 1\n            start += 1\n        ans = max(ans, abs(i - start + 1))\n    return ans\nt = Int()\nwhile t:\n    (N, K) = Ints()\n    arr = Array()\n    print(notAll(arr, N, K - 1))\n    t -= 1", "import sys\n\ndef Ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef Strs():\n    return map(str, sys.stdin.readline().strip().split())\n\ndef Array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Str():\n    return sys.stdin.readline().strip()\n\ndef Int():\n    return int(sys.stdin.readline().strip())\n\ndef MOD():\n    return 1000000007\n\ndef notAll(a, N, K):\n    K -= 1\n    freq = [0] * (N + 100)\n    start = 0\n    end = 0\n    now = 0\n    l = 0\n    for i in range(N):\n        freq[a[i]] += 1\n        if freq[a[i]] == 1:\n            now += 1\n        while now > K:\n            freq[a[l]] -= 1\n            if freq[a[l]] == 0:\n                now -= 1\n            l += 1\n        if i - l + 1 >= end - start + 1:\n            end = i\n            start = l\n    ans = 0\n    for i in range(start, end + 1):\n        ans += 1\n    return ans\nt = Int()\nwhile t:\n    (N, K) = Ints()\n    arr = Array()\n    print(notAll(arr, N, K))\n    t -= 1", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left\nimport sys\nmod = 1000000007\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef printIn(ob):\n    return stdout.write(str(ob) + '\\n')\n\ndef powerLL(n, p):\n    result = 1\n    while p:\n        if p & 1:\n            result = result * n % mod\n        p = int(p / 2)\n        n = n * n % mod\n    return result\nimport sys\n\ndef myCode():\n    (n, k) = In()\n    A = L()\n    d = defaultdict(int)\n    i = 0\n    j = 0\n    flavour = 0\n    ans = 0\n    for i in range(n):\n        if d[A[i]] == 0:\n            flavour += 1\n        d[A[i]] += 1\n        if flavour < k:\n            ans = max(ans, i - j + 1)\n        while flavour >= k:\n            d[A[j]] -= 1\n            if d[A[j]] == 0:\n                flavour -= 1\n            j += 1\n    print(ans)\n\ndef main():\n    for t in range(I()):\n        myCode()\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = []\n    for _ in range(k):\n        s.append(0)\n    res = 0\n    r = 1\n    t = 1\n    f = 0\n    for i in range(1, n):\n        if l[i] != l[i - 1]:\n            s[l[i - 1] - 1] = i\n            if s[l[i] - 1] == f:\n                t = t + 1\n            s[l[i] - 1] = i + 1\n            if t == k:\n                if r > res:\n                    res = r\n                r = r - min(s) + f\n                t = t - 1\n                f = min(s)\n            r = r + 1\n        else:\n            r = r + 1\n    if r > res:\n        res = r\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    freq = [0] * (k + 1)\n    (i, j) = (0, 0)\n    (max_seg, flav) = (0, 0)\n    while i < n:\n        if freq[arr[i]] == 0:\n            flav += 1\n        freq[arr[i]] += 1\n        if flav == k:\n            if i - j > max_seg:\n                max_seg = i - j\n            while j <= i:\n                freq[arr[j]] -= 1\n                j += 1\n                if freq[arr[j - 1]] == 0:\n                    flav -= 1\n                    break\n        i += 1\n    if i - j > max_seg:\n        max_seg = i - j\n    print(max_seg)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    freq = [0] * (k + 1)\n    l = list(map(int, input().split()))\n    i = 0\n    j = 0\n    max_seg = 0\n    flavours = 0\n    seg = 0\n    while i < n:\n        if freq[l[i]] == 0:\n            flavours += 1\n        freq[l[i]] += 1\n        if flavours == k:\n            if i - j > max_seg:\n                max_seg = i - j\n            while j <= i:\n                freq[l[j]] -= 1\n                j += 1\n                if freq[l[j - 1]] == 0:\n                    flavours -= 1\n                    break\n        i += 1\n    if i - j > max_seg:\n        max_seg = i - j\n    print(max_seg)\n    t -= 1", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    (n, k) = map(int, ip().split())\n    a = [*map(int, ip().split())]\n    if n == 1:\n        print('1')\n        continue\n    m = [0] * (k + 1)\n    k -= 1\n    i = 0\n    ans = 0\n    prev = a[0]\n    v = 1\n    m[prev] = 1\n    for j in range(1, n):\n        val = a[j]\n        if not prev == val:\n            if m[val] == 0:\n                v += 1\n            m[val] += 1\n        prev = a[j]\n        if v > k:\n            ans = max(ans, j - i)\n            v -= 1\n            curr = a[i]\n            pr = curr\n            while True:\n                i += 1\n                curr = a[i]\n                if not pr == curr:\n                    m[pr] -= 1\n                if m[pr] == 0:\n                    break\n                pr = curr\n    ans = max(ans, n - i)\n    print(ans)", "def lng(a, n, k):\n    freq = [0] * n\n    end = 0\n    now = 0\n    start = 0\n    l = 0\n    for i in range(n):\n        freq[a[i]] += 1\n        if freq[a[i]] == 1:\n            now += 1\n        while now > k:\n            freq[a[l]] -= 1\n            if freq[a[l]] == 0:\n                now -= 1\n            l += 1\n        if i - l + 1 >= end - start + 1:\n            end = i\n            start = l\n    return end - start + 1\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    lst = list(map(int, input().split(' ')))\n    maxi = 0\n    if k == 2:\n        ctr = 0\n        while True:\n            ele = lst[ctr]\n            count = 1\n            while ctr != len(lst) - 1:\n                ctr += 1\n                if lst[ctr] != ele:\n                    break\n                else:\n                    count += 1\n            if count > maxi:\n                maxi = count\n            if ctr >= len(lst) - 1:\n                break\n        print(maxi)\n    else:\n        print(lng(lst, n, k - 1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    freq = {}\n    set1 = set(l)\n    for i in list(set1):\n        freq[i] = 0\n    diff = 0\n    ans = []\n    i = 0\n    j = 0\n    while i < n and j < n:\n        freq[l[i]] += 1\n        if freq[l[i]] == 1:\n            diff += 1\n        while diff >= k:\n            freq[l[j]] -= 1\n            if freq[l[j]] == 0:\n                diff -= 1\n            j += 1\n        ans.append(i - j + 1)\n        i += 1\n    if len(ans) > 0:\n        print(max(ans))\n    else:\n        print(n)", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    d = defaultdict(int)\n    ans = 1\n    (i, j) = (0, 0)\n    while j < n:\n        if d[array[j]] == 0:\n            k -= 1\n        d[array[j]] += 1\n        while k == 0:\n            d[array[i]] -= 1\n            if d[array[i]] == 0:\n                k += 1\n            i += 1\n        ans = max(ans, j - i + 1)\n        j += 1\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (d, j, ans) = ({}, 0, 0)\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if arr[i] in d:\n            d[arr[i]] = i\n        elif len(d) == k - 1:\n            (m, mk) = (1000000000, 0)\n            for (key, val) in d.items():\n                if val < m:\n                    m = val\n                    mk = key\n            j = d[mk] + 1\n            del d[mk]\n            d[arr[i]] = i\n        elif len(d) < k - 1:\n            d[arr[i]] = i\n        ans = max(ans, i - j + 1)\n    print(ans)\n    t -= 1", "def longest(a, n, k):\n    freq = [0] * n\n    start = 0\n    end = 0\n    now = 0\n    l = 0\n    for i in range(n):\n        freq[a[i]] += 1\n        if freq[a[i]] == 1:\n            now += 1\n        while now > k:\n            freq[a[l]] -= 1\n            if freq[a[l]] == 0:\n                now -= 1\n            l += 1\n        if i - l + 1 >= end - start + 1:\n            end = i\n            start = l\n    return end - start + 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    lst = list(map(int, input().split(' ')))\n    maxi = 0\n    if k == 2:\n        ctr = 0\n        while True:\n            ele = lst[ctr]\n            count = 1\n            while ctr != len(lst) - 1:\n                ctr += 1\n                if lst[ctr] != ele:\n                    break\n                else:\n                    count += 1\n            if count > maxi:\n                maxi = count\n            if ctr >= len(lst) - 1:\n                break\n        print(maxi)\n    else:\n        print(longest(lst, n, k - 1))", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, stdin.readline().split())\n    cakes = list(map(int, stdin.readline().split()))\n    last = [-1] * k\n    max_ans = -1\n    last_min_ind = 0\n    for r in range(n):\n        last[cakes[r] - 1] = r\n        if cakes[r] - 1 == last_min_ind:\n            last_min_ind = last.index(min(last))\n        ans = r - last[last_min_ind]\n        max_ans = max(max_ans, ans)\n    print(max_ans)", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, stdin.readline().split())\n    cakes = list(map(int, stdin.readline().split()))\n    last = [-1] * k\n    max_ans = -1\n    last_min_ind = 0\n    for r in range(n):\n        last[cakes[r] - 1] = r\n        if cakes[r] - 1 == last_min_ind:\n            last_min_ind = last.index(min(last))\n        ans = r - last[last_min_ind]\n        max_ans = max(max_ans, ans)\n    print(max_ans)"]