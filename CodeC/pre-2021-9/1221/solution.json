["from decimal import *\ngetcontext().prec = 100\n\ndef main():\n    t = int(input())\n    for test in range(t):\n        p = []\n        (n, m) = list(map(int, input().split(' ')))\n        for i in range(n):\n            x = input().strip().split(' ')\n            inp = list(map(Decimal, x))\n            p.append(inp)\n        a = Decimal('1.0')\n        for i in range(m):\n            a *= p[0][i]\n        s = Decimal('0.0')\n        for i in range(1, n):\n            b = Decimal('1.0')\n            for j in range(m):\n                b *= p[i][j]\n            s += b\n        if a + s == 0:\n            ans = 0\n        else:\n            ans = a / (a + s)\n        print('{0:.6f}'.format(ans))\n    return 0\nmain()", "import functools\nfrom decimal import Decimal\nfrom operator import mul\nt = int(input())\nfor jj in range(t):\n    (n, m) = map(int, input().split())\n    a = [0] * n\n    num = 1\n    for i in range(n):\n        a[i] = list(map(Decimal, input().split()))\n        if i == 0:\n            num = Decimal(functools.reduce(mul, a[i]))\n    temp = 0\n    if num == 0:\n        print(0)\n        continue\n    for j in range(n):\n        den = 1\n        den = Decimal(functools.reduce(mul, a[j]))\n        den = den / num\n        temp += den\n    x = 1 / temp\n    print(x)", "from decimal import *\ngetcontext().prec = 100\n\ndef main():\n    t = int(input())\n    for test in range(t):\n        p = []\n        (n, m) = list(map(int, input().split(' ')))\n        for i in range(n):\n            x = input().strip().split(' ')\n            inp = list(map(Decimal, x))\n            p.append(inp)\n        a = Decimal('1.0')\n        for i in range(m):\n            a *= p[0][i]\n        s = Decimal('0.0')\n        for i in range(1, n):\n            b = Decimal('1.0')\n            for j in range(m):\n                b *= p[i][j]\n            s += b\n        if a + s == 0:\n            ans = 0\n        else:\n            ans = a / (a + s)\n        print('{0:.6f}'.format(ans))\n    return 0\nmain()", "from decimal import *\ngetcontext().prec = 100\n\ndef main():\n    t = int(input().strip())\n    for test in range(t):\n        p = []\n        (n, m) = list(map(int, input().strip().split(' ')))\n        for i in range(n):\n            x = input().strip().split(' ')\n            inp = list(map(Decimal, x))\n            p.append(inp)\n        a = Decimal('1.0')\n        for i in range(m):\n            a *= p[0][i]\n        s = Decimal('0.0')\n        for i in range(1, n):\n            b = Decimal('1.0')\n            for j in range(m):\n                b *= p[i][j]\n            s += b\n        if a + s == 0:\n            ans = 0\n        else:\n            ans = a / (a + s)\n        print('{0:.6f}'.format(ans))\n    return 0\nmain()", "def getin():\n    while True:\n        line = input().strip()\n        if not line:\n            pass\n        else:\n            return line\nt = int(getin())\nfor i in range(t):\n    (n, m) = map(int, getin().split())\n    if n < 1 or m < 1:\n        pa = throwerror\n    ts = 0\n    for j in range(n):\n        ls = [25 * float(temp) for temp in getin().split()]\n        s = 1\n        for k in range(m):\n            s = s * ls[k]\n        if j == 0:\n            sj = s\n        ts = ts + s\n    if ts == 0:\n        ans = 0.0\n    else:\n        ans = float(sj / ts)\n    print('{:.10f}'.format(ans))", "import math\nfrom decimal import *\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    for i in range(1, n + 1):\n        b = list(map(float, input().split()))\n        s = 1.0\n        for j in range(0, m):\n            s = Decimal(s) * Decimal(b[j])\n        if i == 1:\n            sum1 = Decimal(s)\n            go = Decimal(s)\n        else:\n            sum1 = Decimal(sum1) + Decimal(s)\n    if sum1 != 0:\n        go = Decimal(go) / Decimal(sum1)\n    else:\n        go = 0.0\n    print(format(go, '.6f'))", "import math\nfrom decimal import *\nt = int(input())\nb = [0.0] * 1000000\nc = [0.0] * 1000000\nd = [0.0] * 1000000\nk = 0\ngo = float(0.0)\nwhile t:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    sum1 = 0.0\n    for i in range(1, n + 1):\n        g = m\n        b = list(map(float, input().split()))\n        for k in range(1, m + 1):\n            c[k] = b[k - 1]\n        while g != 1:\n            if g % 2 == 0:\n                v = int(g / 2)\n                j = 1\n                for k in range(1, v + 1):\n                    d[k] = Decimal(c[j]) * Decimal(c[j + 1])\n                    j = j + 2\n                for k in range(1, v + 1):\n                    c[k] = Decimal(d[k])\n                g = v\n            else:\n                v = int(g / 2)\n                j = 1\n                for k in range(1, v + 1):\n                    d[k] = Decimal(c[j]) * Decimal(c[j + 1])\n                    j = j + 2\n                d[v + 1] = c[g]\n                for k in range(1, v + 2):\n                    c[k] = Decimal(d[k])\n                g = v + 1\n        if i == 1:\n            go = Decimal(c[1])\n        sum1 = Decimal(sum1) + Decimal(c[1])\n    if sum1 == 0:\n        go = 0.0\n    else:\n        go = Decimal(Decimal(go) / Decimal(sum1))\n    print(format(go, '.6f'))", "from decimal import Decimal\n\ndef solve(N, M):\n    a = Decimal(1.0)\n    c = Decimal(0.0)\n    prob = []\n    for i in range(N):\n        prob = input().split()\n        prob = [Decimal(p) for p in prob]\n        b = Decimal(1.0)\n        for j in range(M):\n            b = b * prob[j]\n        if i == 0:\n            a = b\n        c += b\n    if c == 0:\n        return 0\n    else:\n        ans = Decimal(a / c)\n        return ans\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        (N, M) = map(int, input().split())\n        e = solve(N, M)\n        print('%.12f' % e)\n    return 0\nmain()", "t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    tot = 0\n    first = 0\n    for i in range(n):\n        a = list(map(float, input().split()))\n        cur = 1\n        for j in range(k):\n            cur = cur * round(a[j] * 10000)\n        tot += cur\n        if i == 0:\n            first = cur\n    if tot == 0:\n        print('%.9f' % 0)\n    else:\n        print('%.9f' % (first / tot))", "inp = int(input())\nwhile inp:\n    inp -= 1\n    li = list(map(int, input().split()))\n    n = li[0]\n    m = li[1]\n    total = 0\n    for i in range(n):\n        term = int(1)\n        strt = input()\n        li = strt.split()\n        for j in range(m):\n            length = len(li[j])\n            tt = int(100000) * int(li[j][0])\n            param = int(10000)\n            for k in range(3, length + 1):\n                tt = tt + int(param) * int(li[j][k - 1])\n                param //= 10\n            term = term * tt\n        if i == 0:\n            sereja = term\n        total = total + term\n    if total == 0:\n        print('0.000000')\n    else:\n        div = sereja / total\n        print('%.6f' % div)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    st = s.split()\n    n = int(st[0])\n    m = int(st[1])\n    summ = 0\n    prod = 1\n    s = input()\n    f = s.split()\n    for j in range(m):\n        leng = len(f[j])\n        if leng == 6:\n            gg = int(f[j][5]) + 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n        elif leng == 5:\n            gg = 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n        elif leng == 4:\n            gg = 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n        elif leng == 3:\n            gg = 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n        elif leng == 1:\n            gg = 10000 * int(f[j][0])\n        prod *= gg\n    summ += prod\n    saved = prod\n    for i in range(1, n):\n        prod = 1\n        s = input()\n        f = s.split()\n        for j in range(m):\n            leng = len(f[j])\n            if leng == 6:\n                gg = int(f[j][5]) + 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 5:\n                gg = 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 4:\n                gg = 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 3:\n                gg = 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 1:\n                gg = 10000 * int(f[j][0])\n            prod *= gg\n        summ += prod\n    if summ == 0:\n        print('0.000000')\n    else:\n        xr = saved / summ\n        print('%.6f' % xr)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    st = s.split()\n    n = int(st[0])\n    m = int(st[1])\n    summ = 0\n    for i in range(n):\n        prod = 1\n        s = input()\n        f = s.split()\n        for j in range(m):\n            leng = len(f[j])\n            if leng == 6:\n                gg = int(f[j][5]) + 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 5:\n                gg = 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 4:\n                gg = 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 3:\n                gg = 1000 * int(f[j][2]) + 10000 * int(f[j][0])\n            elif leng == 1:\n                gg = 10000 * int(f[j][0])\n            prod *= gg\n        if i == 0:\n            saved = prod\n        summ += prod\n    if summ == 0:\n        print('0.000000')\n    else:\n        xr = saved / summ\n        print('%.6f' % xr)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    st = s.split()\n    n = int(st[0])\n    m = int(st[1])\n    summ = 0\n    for i in range(n):\n        prod = 1\n        s = input()\n        f = s.split()\n        for j in range(m):\n            leng = len(f[j])\n            if leng == 6:\n                gg = int(f[j][5]) + 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 100000 * int(f[j][0])\n            elif leng == 5:\n                gg = 10 * int(f[j][4]) + 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 100000 * int(f[j][0])\n            elif leng == 4:\n                gg = 100 * int(f[j][3]) + 1000 * int(f[j][2]) + 100000 * int(f[j][0])\n            elif leng == 3:\n                gg = 1000 * int(f[j][2]) + 100000 * int(f[j][0])\n            elif leng == 1:\n                gg = 100000 * int(f[j][0])\n            prod *= gg\n        if i == 0:\n            saved = prod\n        summ += prod\n    if summ == 0:\n        print('0.000000')\n    else:\n        xr = saved / summ\n        print('%.6f' % xr)", "import sys\nimport functools\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, m) = map(int, sys.stdin.readline().split())\n    p = []\n    for i in range(n):\n        t = 1\n        for s in sys.stdin.readline().split():\n            t *= int((float(s) + 1e-06) * 10000)\n        p.append(t)\n    if p[0] == 0:\n        print('0.000000')\n    else:\n        print('%.06lf' % (p[0] / sum(p)))", "import sys\nimport functools\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, m) = map(int, sys.stdin.readline().split())\n    p = []\n    for i in range(n):\n        t = 1\n        for s in sys.stdin.readline().split():\n            t *= int((float(s) + 1e-06) * 10000)\n        p.append(t)\n    if p[0] == 0:\n        print('0.000000')\n    else:\n        print('%.06lf' % (p[0] / sum(p)))", "import sys\nimport functools\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, m) = map(int, sys.stdin.readline().split())\n    p = []\n    for i in range(n):\n        t = 1\n        for s in sys.stdin.readline().split():\n            t *= int((float(s) + 1e-06) * 10000)\n        p.append(t)\n    if p[0] == 0:\n        print('0.000000')\n    else:\n        t = p[0]\n        q = [float(x / t) for x in p]\n        print('%.06lf' % (1 / sum(q)))", "import math\nTT = int(input())\nwhile TT > 0:\n    TT -= 1\n    (n, m) = map(int, input().split())\n    res1 = 1\n    res2 = 0\n    a = list(map(float, input().split()))\n    for i in range(0, m):\n        res1 *= int(round(10000 * a[i]))\n    res2 = res1\n    for i in range(1, n):\n        a = list(map(float, input().split()))\n        t = 1\n        for j in range(0, m):\n            t *= int(round(10000 * a[j]))\n        res2 += t\n    if res2 != 0:\n        print('%.6f' % (res1 / res2))\n    else:\n        print(0.0)", "t = int(input())\nfor it in range(t):\n    (n, m) = [int(word) for word in input().split()]\n    wsig = [1.0] * 13\n    wpower = [0] * 13\n    is_zero = [False] * 13\n    all_zero = True\n    for i in range(n):\n        words = input().split()\n        for j in range(m):\n            ival = int(words[j][0] + words[j][2:])\n            if ival == 0:\n                is_zero[i] = True\n                wsig[i] = 0\n                break\n            fval = float(words[j])\n            wsig[i] *= fval\n            while wsig[i] < 1.0:\n                wpower[i] -= 4\n                wsig[i] *= 10000.0\n        if not is_zero[i]:\n            all_zero = False\n    if all_zero:\n        res = 0\n    else:\n        maxpower = max(wpower)\n        wsum = 0.0\n        for i in range(n):\n            wpower[i] -= maxpower\n            wsum += wsig[i] * 10 ** wpower[i]\n        w0 = wsig[0] * 10 ** wpower[0]\n        res = w0 / wsum\n    print('%.6f' % res)", "from decimal import *\nimport math\nt = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    prob = Decimal(1)\n    for j in input().split():\n        prob = prob * Decimal(j)\n    sumprob = prob\n    for j in range(1, n):\n        tprobi = Decimal(1)\n        for k in input().split():\n            tprobi = tprobi * Decimal(k)\n        sumprob = sumprob + tprobi\n    if prob > 0.0:\n        print('{0:.6f}'.format(prob / sumprob))\n    else:\n        print('{0:.6f}'.format(Decimal(0)))", "def solve():\n    (n, m) = (int(s) for s in input().split())\n    ser = 0\n    total = 0\n    for i in range(n):\n        inp = input().split()\n        th = 1\n        for j in range(m):\n            th *= int(round(float(inp[j]) * 10000))\n        if i == 0:\n            ser = th\n        total += th\n    if total == 0:\n        print('0.000000')\n    else:\n        print('%.6f' % (ser / total))\ntestcase = int(input())\nfor i in range(testcase):\n    solve()", "from fractions import *\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        (N, M) = [int(x) for x in input().split()]\n        A = []\n        for i in range(N):\n            row = input().split()\n            for j in range(len(row)):\n                if '.' not in row[j]:\n                    while True:\n                        y = 1\n                row[j] = int(10000 * (eval(row[j]) + 2e-05))\n            A.append(row)\n        Pw = 1\n        for j in range(M):\n            Pw *= A[0][j]\n            if Pw == 0:\n                break\n        if Pw == 0:\n            print('0.000000')\n            continue\n        wins = Pw\n        for i in range(1, N):\n            tmp = 1\n            for j in range(M):\n                tmp *= A[i][j]\n                if tmp == 0:\n                    break\n            wins += tmp\n        print('%0.6f' % Fraction(Pw / wins))\nmain()", "import math\nimport decimal\n\ndef main():\n    t = int(input())\n    i = 0\n    while i < t:\n        iarr = input().split()\n        n = int(iarr[0])\n        m = int(iarr[1])\n        j = 0\n        sum = 0\n        prod1 = 1\n        k = 0\n        arr = input().split()\n        while k < m:\n            temp2 = math.floor(decimal.Decimal(arr[k]) * 10000 + decimal.Decimal(0.5))\n            prod1 = prod1 * temp2\n            k = k + 1\n        sum = sum + prod1\n        j = 0\n        while j < n - 1:\n            prod = 1\n            k = 0\n            arr = input().split()\n            while k < m:\n                temp2 = math.floor(decimal.Decimal(arr[k]) * 10000 + decimal.Decimal(0.5))\n                prod = prod * temp2\n                k = k + 1\n            sum = sum + prod\n            j = j + 1\n        if prod1 == 0:\n            print(0.0)\n        else:\n            print(format(decimal.Decimal(prod1) / sum, '.6f'))\n        i = i + 1\nmain()"]