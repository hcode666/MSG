["mod = 10 ** 9 + 7\nN = 10 ** 5\np2 = [1] * (N + 1)\nfor i in range(N):\n    p2[i + 1] = (p2[i] << 1) % mod\n\ndef getmask(s):\n    ans = 0\n    mask = 1\n    for i in range(9, -1, -1):\n        if s[i] == 'w' or s[i] == '+':\n            ans |= mask\n        mask = mask << 1\n    return ans\nval = 1 << 10\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    smask = getmask(s)\n    cnt = [0] * val\n    for i in range(n):\n        fil = input()\n        cnt[getmask(fil)] += 1\n    pre = [0] * val\n    pre[0] = 1\n    for i in range(val):\n        if cnt[i]:\n            cur = [0] * val\n            for j in range(val):\n                cur[j] = (pre[j] + pre[i ^ j]) * p2[cnt[i] - 1] % mod\n            pre = cur\n    print(pre[smask])", "mod = 10 ** 9 + 7\nN = 10 ** 5\np2 = [1] * (N + 1)\nfor i in range(N):\n    p2[i + 1] = (p2[i] << 1) % mod\n\ndef getmask(s):\n    ans = 0\n    mask = 1\n    for i in range(9, -1, -1):\n        if s[i] == 'w' or s[i] == '+':\n            ans |= mask\n        mask = mask << 1\n    return ans\nval = 1 << 10\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    smask = getmask(s)\n    cnt = [0] * val\n    for i in range(n):\n        fil = input()\n        cnt[getmask(fil)] += 1\n    pre = [0] * val\n    pre[0] = 1\n    for i in range(val):\n        if cnt[i]:\n            cur = [0] * val\n            for j in range(val):\n                cur[j] = (pre[j] + pre[i ^ j]) * p2[cnt[i] - 1] % mod\n            pre = cur\n    print(pre[smask])", "mod = 10 ** 9 + 7\nN = 10 ** 5\np2 = [1] * (N + 1)\nfor i in range(N):\n    p2[i + 1] = (p2[i] << 1) % mod\n\ndef getmask(s):\n    ans = 0\n    mask = 1\n    for i in range(9, -1, -1):\n        if s[i] == 'w' or s[i] == '+':\n            ans |= mask\n        mask = mask << 1\n    return ans\nval = 1 << 10\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    smask = getmask(s)\n    cnt = [0] * val\n    for i in range(n):\n        fil = input()\n        cnt[getmask(fil)] += 1\n    pre = [0] * val\n    pre[0] = 1\n    for i in range(val):\n        if cnt[i]:\n            cur = [0] * val\n            for j in range(val):\n                cur[j] = (pre[j] + pre[i ^ j]) * p2[cnt[i] - 1] % mod\n            pre = cur\n    print(pre[smask])", "mod = 10 ** 9 + 7\nN = 10 ** 5\np2 = [1] * (N + 1)\nfor i in range(N):\n    p2[i + 1] = (p2[i] << 1) % mod\n\ndef getmask(s):\n    mask = 0\n    for i in range(10):\n        if s[i] == 'w' or s[i] == '+':\n            mask |= 1 << 10 - i - 1\n    return mask\nval = 1 << 10\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    smask = getmask(s)\n    cnt = [0] * val\n    for i in range(n):\n        fil = input()\n        cnt[getmask(fil)] += 1\n    dp = [0] * val\n    dp[0] = 1\n    for i in range(val):\n        if cnt[i]:\n            for j in range(val):\n                if j <= j ^ i:\n                    dp[j] = dp[j ^ i] = (dp[j] + dp[i ^ j]) * p2[cnt[i] - 1] % mod\n    print(dp[smask])", "fs = 'bbbbbbbbbb'\nMOD = 1000000007\npar = [512, 256, 128, 64, 32, 16, 8, 4, 2, 1]\nfor _ in range(0, int(input())):\n    s = str(input())\n    ts = ''\n    for i in range(0, len(s)):\n        if s[i] != fs[i]:\n            ts = ts + '1'\n        else:\n            ts = ts + '0'\n    t = int(input())\n    f = [0] * t\n    inb = [0] * 1024\n    for i in range(0, t):\n        x = str(input())\n        for j in range(0, len(x)):\n            if x[j] == '+':\n                f[i] = f[i] + par[j]\n        inb[f[i]] = 1 + inb[f[i]]\n    q = int(ts, 2)\n    way = [[0 for i in range(1024)] for j in range(1025)]\n    way[0][0] = 1\n    for i in range(1, 1025):\n        if inb[i - 1] != 0:\n            pw = 1\n            for pp in range(0, inb[i - 1] - 1):\n                pw = pw * 2 % MOD\n            for j in range(0, 1024):\n                way[i][j] = (way[i - 1][j] + way[i - 1][j ^ i - 1]) * pw % MOD\n        else:\n            for j in range(0, 1024):\n                way[i][j] = way[i - 1][j]\n    print(way[1024][q])", "from collections import Counter\nfrom sys import stdin\n_data = iter(stdin.read().split('\\n'))\ninput = lambda : next(_data)\nMOD = 1000000007\nL = 10\nfor _ in range(int(input())):\n    s = int(input().replace('b', '0').replace('w', '1'), 2)\n    n = int(input())\n    ct = Counter((int(input().replace('-', '0').replace('+', '1'), 2) for _ in range(n)))\n    g = [False] * 2 ** L\n    g[s] = True\n    m = 0\n    for (f, x) in ct.items():\n        if not g[f ^ s]:\n            for i in range(2 ** L):\n                if g[i]:\n                    g[i ^ f] = True\n            m += 1\n    print(pow(2, n - m, MOD) if g[0] else 0)", "from collections import Counter\nfrom sys import stdin\n_data = iter(stdin.read().split('\\n'))\ninput = lambda : next(_data)\nMOD = 1000000007\nL = 10\nfor _ in range(int(input())):\n    s = int(input().replace('b', '0').replace('w', '1'), 2)\n    n = int(input())\n    a = [int(input().replace('-', '0').replace('+', '1'), 2) for _ in range(n)]\n    ct = Counter(a)\n    g = [False] * 2 ** L\n    g[s] = True\n    ans = 1\n    for (f, x) in ct.items():\n        if not g[f ^ s]:\n            h = [False] * 2 ** L\n            for i in range(2 ** L):\n                if g[i]:\n                    h[i] = True\n                    h[i ^ f] = True\n            g = h\n            ans *= pow(2, x - 1, MOD)\n            ans %= MOD\n        else:\n            ans *= pow(2, x, MOD)\n            ans %= MOD\n    print(ans if g[0] else 0)"]