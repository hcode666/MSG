["(N, K) = map(int, input().split())\nct = list(map(int, input().split()))\nhashmap = {}\ncount = 0\nfor i in range(N):\n    try:\n        hashmap[ct[i]].append(i)\n    except:\n        hashmap[ct[i]] = [i]\nfor i in hashmap:\n    h = hashmap[i]\n    j = 0\n    k = 0\n    while j < len(h):\n        while k < len(h) and h[k] - h[j] < K:\n            k = k + 1\n        count = count + 1\n        j = k\nprint(count)", "(N, K) = map(int, input().split())\nct = list(map(int, input().split()))\nhashmap = {}\ncount = 0\nfor i in range(N):\n    try:\n        hashmap[ct[i]].append(i)\n    except:\n        hashmap[ct[i]] = [i]\nfor i in hashmap:\n    h = hashmap[i]\n    j = 0\n    k = 0\n    while j < len(h):\n        while k < len(h) and h[k] - h[j] < K:\n            k = k + 1\n        count = count + 1\n        j = k\nprint(count)", "(N, K) = map(int, input().split())\nct = list(map(int, input().split()))\nhashmap = {}\ncount = 0\nfor i in range(N):\n    try:\n        hashmap[ct[i]].append(i)\n    except:\n        hashmap[ct[i]] = [i]\nfor i in hashmap:\n    h = hashmap[i]\n    j = 0\n    k = 0\n    while j < len(h):\n        while k < len(h) and h[k] - h[j] < K:\n            k = k + 1\n        count = count + 1\n        j = k\nprint(count)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = [i]\n    else:\n        d[a[i]].append(i)\nans = 0\nfor j in d:\n    h = d[j]\n    z = 0\n    k1 = 0\n    while z < len(h):\n        while k1 < len(h) and h[k1] - h[z] < k:\n            k1 += 1\n        ans += 1\n        z = k1\nprint(ans)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = [i]\n    else:\n        d[a[i]].append(i)\nans = 0\nfor j in d:\n    h = d[j]\n    z = 0\n    k1 = 0\n    while z < len(h):\n        while k1 < len(h) and h[k1] - h[z] < k:\n            k1 += 1\n        ans += 1\n        z = k1\nprint(ans)", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\n(n, k) = list(map(int, input().strip().split()))\narr = list(map(int, input().strip().split()))\nd = defaultdict(list)\nfor i in range(n):\n    d[arr[i]].append(i)\nans = 0\nfor key in d:\n    val = d[key]\n    val.append(1000000)\n    prev = val[0]\n    for index in val:\n        if index > prev + k - 1:\n            ans += 1\n            prev = index\nprint(ans)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = [i]\n    else:\n        d[a[i]].append(i)\nans = 0\nfor j in d:\n    h = d[j]\n    z = 0\n    k1 = 0\n    while z < len(h):\n        while k1 < len(h) and h[k1] - h[z] < k:\n            k1 += 1\n        ans += 1\n        z = k1\nprint(ans)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = [i]\n    else:\n        d[a[i]].append(i)\nans = 0\nfor j in d:\n    h = d[j]\n    z = 0\n    k1 = 0\n    while z < len(h):\n        while k1 < len(h) and h[k1] - h[z] < k:\n            k1 += 1\n        ans += 1\n        z = k1\nprint(ans)", "(n, K) = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = [i]\n    else:\n        d[a[i]].append(i)\nans = 0\nfor i in d:\n    h = d[i]\n    j = 0\n    k = 0\n    while j < len(h):\n        while k < len(h) and h[k] - h[j] < K:\n            k = k + 1\n        ans += 1\n        j = k\nprint(ans)", "(N, K) = input().split()\nN = int(N)\nK = int(K)\nf = list(map(int, input().split()))\nhashmap = {}\ncount = 0\nfor i in range(N):\n    try:\n        hashmap[f[i]].append(i)\n    except:\n        hashmap[f[i]] = [i]\nfor i in hashmap:\n    h = hashmap[i]\n    j = 0\n    k = 0\n    while j < len(h):\n        while k < len(h) and h[k] - h[j] < K:\n            k = k + 1\n        count = count + 1\n        j = k\nprint(count)"]