["for _ in range(int(input())):\n    arr = []\n    (N, M) = list(map(int, input().split()))\n    for i in range(N):\n        Z = input()\n        arr.append(Z)\n    ans = [[-1] * M for _ in range(N)]\n    r = set()\n    c = set()\n    for i in range(N):\n        for j in range(M):\n            if arr[i][j] == '1':\n                r.add(i)\n                c.add(j)\n    if len(c) != 0:\n        for i in range(N):\n            for j in range(M):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif i in r or j in c:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for i in range(N):\n        print(*ans[i])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    res = [[-1] * m for i in range(n)]\n    r = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                r[i] = 1\n                col[j] = 1\n    if sum(r) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    res[i][j] = 0\n                elif r[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    for i in res:\n        print(*i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    res = [[-1] * m for i in range(n)]\n    r = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                r[i] = 1\n                col[j] = 1\n    if sum(r) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    res[i][j] = 0\n                elif r[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    for i in res:\n        print(*i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    res = [[-1] * m for i in range(n)]\n    r = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                r[i] = 1\n                col[j] = 1\n    if sum(r) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    res[i][j] = 0\n                elif r[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    for i in res:\n        print(*i)", "t = input()\nt = int(t)\nwhile t:\n    t = t - 1\n    n_m = input()\n    n_m = n_m.split(' ')\n    n = int(n_m[0])\n    m = int(n_m[1])\n    matrix = []\n    for i in range(n):\n        row = input()\n        row = list(row)\n        row = list(map(int, row))\n        matrix.append(row)\n    v_rows = [False] * n\n    v_cols = [False] * m\n    ans = [[-1 for j in range(m)] for i in range(n)]\n    exist = False\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                exist = True\n                v_rows[i] = True\n                v_cols[j] = True\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                ans[i][j] = 0\n            elif v_rows[i] == True:\n                ans[i][j] = 1\n            elif v_cols[j] == True:\n                ans[i][j] = 1\n            elif exist:\n                ans[i][j] = 2\n            else:\n                ans[i][j] = -1\n    for i in range(n):\n        col_j = ''\n        for j in range(m):\n            col_j = col_j + str(ans[i][j]) + ' '\n        print(col_j)", "t = input()\nt = int(t)\nwhile t:\n    t = t - 1\n    n_m = input()\n    n_m = n_m.split(' ')\n    n = int(n_m[0])\n    m = int(n_m[1])\n    matrix = []\n    for i in range(n):\n        row = input()\n        row = list(row)\n        row = list(map(int, row))\n        matrix.append(row)\n    v_rows = [False] * n\n    v_cols = [False] * m\n    ans = [[-1 for j in range(m)] for i in range(n)]\n    exist = False\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                exist = True\n                v_rows[i] = True\n                v_cols[j] = True\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                ans[i][j] = 0\n            elif v_rows[i] == True:\n                ans[i][j] = 1\n            elif v_cols[j] == True:\n                ans[i][j] = 1\n            elif exist:\n                ans[i][j] = 2\n            else:\n                ans[i][j] = -1\n    for i in range(n):\n        col_j = ''\n        for j in range(m):\n            col_j = col_j + str(ans[i][j]) + ' '\n        print(col_j)", "t = input()\nt = int(t)\nwhile t:\n    t = t - 1\n    n_m = input()\n    n_m = n_m.split(' ')\n    n = int(n_m[0])\n    m = int(n_m[1])\n    matrix = []\n    for i in range(n):\n        row = input()\n        row = list(row)\n        row = list(map(int, row))\n        matrix.append(row)\n    v_rows = [False] * n\n    v_cols = [False] * m\n    ans = [[-1 for j in range(m)] for i in range(n)]\n    exist = False\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                exist = True\n                v_rows[i] = True\n                v_cols[j] = True\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                ans[i][j] = 0\n            elif v_rows[i] == True:\n                ans[i][j] = 1\n            elif v_cols[j] == True:\n                ans[i][j] = 1\n            elif exist:\n                ans[i][j] = 2\n            else:\n                ans[i][j] = -1\n    for i in range(n):\n        col_j = ''\n        for j in range(m):\n            col_j = col_j + str(ans[i][j]) + ' '\n        print(col_j)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    q = [[0] * m for i in range(n)]\n    a = [input() for i in range(n)]\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == '1':\n                r[i] = 1\n                c[j] = 1\n    if sum(r) + sum(c) > 0:\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == '0':\n                    if r[i] == 0 and c[j] == 0:\n                        q[i][j] = 2\n                    else:\n                        q[i][j] = 1\n            print(*q[i])\n    else:\n        for i in range(n):\n            for j in range(m):\n                q[i][j] = -1\n            print(*q[i])", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    (N, M) = read_int_arr()\n    r = set()\n    c = set()\n    rc = set()\n    for i in range(N):\n        row = input()\n        for j in range(M):\n            if row[j] == '1':\n                r.add(i)\n                c.add(j)\n                rc.add(tuple([i, j]))\n    ans = [[None] * M for _ in range(N)]\n    for i in range(N):\n        for j in range(M):\n            if (i, j) in rc:\n                ans[i][j] = 0\n            elif i in r or j in c:\n                ans[i][j] = 1\n            elif len(rc) == 0:\n                ans[i][j] = -1\n            else:\n                ans[i][j] = 2\n    for row in ans:\n        print(*row)\nfor _ in range(int(input())):\n    solve()", "from heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, m) = il()\n    mat = []\n    f = True\n    for __ in range(n):\n        val = list(ip())\n        mat.append(val)\n        if '1' in val:\n            f = False\n    if f:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    dr = {}\n    for i in range(n):\n        if '1' in mat[i]:\n            dr[i] = True\n    dc = {}\n    for i in range(m):\n        for j in range(n):\n            if mat[j][i] == '1':\n                dc[i] = True\n                break\n    res = []\n    for i in range(n):\n        res.append([-1] * m)\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j] == '1':\n                res[i][j] = 0\n            elif i in dr or j in dc:\n                res[i][j] = 1\n            else:\n                res[i][j] = 2\n    for k in res:\n        print(*k)", "mod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    (r, c) = integer_list()\n    matix = [list(input()) for i in range(r)]\n    row_ones = set()\n    col_ones = set()\n    for i in range(r):\n        for j in range(c):\n            if matix[i][j] == '1':\n                row_ones.add(i)\n                col_ones.add(j)\n    ans = [[-1 for i in range(c)] for j in range(r)]\n    if not row_ones and (not col_ones):\n        for i in range(r):\n            print(*ans[i])\n    else:\n        ans = [[2 for i in range(c)] for j in range(r)]\n        for i in range(r):\n            if i in row_ones:\n                for j in range(c):\n                    if matix[i][j] == '1':\n                        ans[i][j] = '0'\n                    else:\n                        ans[i][j] = '1'\n        for i in range(c):\n            if i in col_ones:\n                for j in range(r):\n                    if matix[j][i] == '1':\n                        ans[j][i] = '0'\n                    else:\n                        ans[j][i] = '1'\n        for i in range(r):\n            print(*ans[i])", "def call(n, m, matrix):\n    res = [[-1] * m for i in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j]:\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if matrix[i][j]:\n                    res[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    return res\nt = int(input())\nwhile t > 0:\n    (n, m) = list(map(int, input().split()))\n    matrix = [list(map(int, list(input()))) for i in range(n)]\n    res = call(n, m, matrix)\n    for row in res:\n        for ele in row:\n            print(ele, end=' ')\n        print()\n    t -= 1", "def call(n, m, matrix):\n    res = [[-1] * m for i in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j]:\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if matrix[i][j]:\n                    res[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    return res\nt = int(input())\nwhile t > 0:\n    (n, m) = list(map(int, input().split()))\n    matrix = [list(map(int, list(input()))) for i in range(n)]\n    res = call(n, m, matrix)\n    for row in res:\n        for ele in row:\n            print(ele, end=' ')\n        print()\n    t -= 1", "def call(n, m, matrix):\n    res = [[-1] * m for i in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j]:\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if matrix[i][j]:\n                    res[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    res[i][j] = 1\n                else:\n                    res[i][j] = 2\n    return res\nt = int(input())\nwhile t > 0:\n    (n, m) = list(map(int, input().split()))\n    matrix = [list(map(int, list(input()))) for i in range(n)]\n    res = call(n, m, matrix)\n    for row in res:\n        for ele in row:\n            print(ele, end=' ')\n        print()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        s = input()\n        arr.append(s)\n    ans = [[-1] * m for _ in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                row[i] = 1\n                col[j] = 1\n    if sum(row) + sum(col) != 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    ans[i][j] = 0\n                elif row[i] == 1 or col[j] == 1:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n    for item in ans:\n        print(*item)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        lst = list(input())\n        arr.append(lst)\n    row = [0] * n\n    col = [0] * m\n    flag = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                flag = 1\n                row[i] = 1\n                col[j] = 1\n    if flag:\n        ans = [[0] * m for _ in range(n)]\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '0':\n                    if row[i] == 1 or col[j] == 1:\n                        ans[i][j] = 1\n                    else:\n                        ans[i][j] = 2\n    else:\n        ans = [[-1] * m for _ in range(n)]\n    for item in ans:\n        print(*item)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = {}\n    b = {}\n    l = []\n    for i in range(n):\n        a[i] = 0\n    for i in range(m):\n        b[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                a[i] = 1\n                b[j] = 2\n    if sum(a.values()) + sum(b.values()) == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif a[i] or b[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            for j in range(m):\n                print(ans[i][j], end=' ')\n            print()", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    s = 0\n    for i in range(r):\n        b = list(input())\n        a.append(b)\n        s += b.count('1')\n    if s == 0:\n        for i in range(r):\n            for j in range(c):\n                print('-1', end=' ')\n            print()\n    else:\n        d = []\n        for j in range(c):\n            b = []\n            for i in range(r):\n                if a[i][j] == '1':\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n                b.append(a[i][j])\n            d.append(b)\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] == 1:\n                    print(0, end=' ')\n                elif sum(a[i]) > 0 or sum(d[j]) > 0:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    s = 0\n    for i in range(r):\n        b = list(input())\n        a.append(b)\n        s += b.count('1')\n    if s == 0:\n        for i in range(r):\n            for j in range(c):\n                print('-1', end=' ')\n            print()\n    else:\n        d = []\n        for j in range(c):\n            b = []\n            for i in range(r):\n                if a[i][j] == '1':\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n                b.append(a[i][j])\n            d.append(b)\n        for i in range(r):\n            for j in range(c):\n                if a[i][j] == 1:\n                    print(0, end=' ')\n                elif sum(a[i]) > 0 or sum(d[j]) > 0:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = {}\n    b = {}\n    l = []\n    for i in range(n):\n        a[i] = 0\n    for i in range(m):\n        b[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                a[i] = 1\n                b[j] = 1\n    if sum(a.values()) + sum(b.values()) == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif a[i] or b[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            for j in range(m):\n                print(ans[i][j], end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = {}\n    b = {}\n    l = []\n    for i in range(n):\n        a[i] = 0\n    for i in range(m):\n        b[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                a[i] = 1\n                b[j] = 1\n    if sum(a.values()) + sum(b.values()) == 0:\n        k = [-1] * m\n        for i in range(n):\n            print(*k)\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif a[i] or b[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            for j in range(m):\n                print(ans[i][j], end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    d = {}\n    e = {}\n    l = []\n    for i in range(n):\n        d[i] = 0\n    for i in range(m):\n        e[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                d[i] = 1\n                e[j] = 1\n    if sum(d.values()) + sum(e.values()) == 0:\n        k = [-1] * m\n        for i in range(n):\n            print(*k)\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif d[i] or e[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            for j in range(m):\n                print(ans[i][j], end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    d = {}\n    e = {}\n    l = []\n    for i in range(n):\n        d[i] = 0\n    for i in range(m):\n        e[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                d[i] = 1\n                e[j] = 1\n    ans = []\n    if sum(d.values()) + sum(e.values()) == 0:\n        k = [-1] * m\n        for i in range(n):\n            print(*k)\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif d[i] or e[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            print(*ans[i])", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        mat = list(input())\n        for k in range(len(mat)):\n            mat[k] = int(mat[k])\n        l.append(mat)\n    l1 = []\n    q1 = []\n    q2 = []\n    for j in range(n):\n        q1.append(sum(l[j]))\n    for j in range(m):\n        s = 0\n        for k in range(n):\n            s += l[k][j]\n        q2.append(s)\n    p = []\n    for j in range(n):\n        p1 = []\n        for k in range(m):\n            p1.append([q1[j], q2[k]])\n        p.append(p1)\n    check1 = 0\n    check2 = 0\n    for j in q1:\n        if j != 0:\n            check1 = 1\n    for j in q2:\n        if j != 0:\n            check2 = 1\n    if check1 == 0 and check2 == 0:\n        for j in range(n):\n            for k in range(m):\n                print('-1', end=' ')\n            print()\n    else:\n        for j in range(n):\n            f = []\n            for k in range(m):\n                if p[j][k][0] > 0 or p[j][k][1] > 0:\n                    if l[j][k] == 1:\n                        f.append(0)\n                    else:\n                        f.append(1)\n                elif p[j][k][0] == 0 and p[j][k][1] == 0:\n                    f.append(2)\n            l1.append(f)\n        for j in range(n):\n            for k in range(m):\n                print(l1[j][k], end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    d = {}\n    e = {}\n    l = []\n    for i in range(n):\n        d[i] = 0\n    for i in range(m):\n        e[i] = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                d[i] = 1\n                e[j] = 1\n    ans = []\n    if sum(d.values()) + sum(e.values()) == 0:\n        k = [-1] * m\n        for i in range(n):\n            print(*k)\n    else:\n        ans = []\n        for i in range(n):\n            ans.append([0] * m)\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] == '1':\n                    ans[i][j] = 0\n                elif d[i] or e[j]:\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n        for i in range(n):\n            print(*ans[i])", "t = int(input())\nfor _ in range(t):\n    flag = 0\n    (n, m) = [int(x) for x in input().split()]\n    A = [None] * n\n    for i in range(n):\n        sint = input()\n        inp = [None] * m\n        for j in range(m):\n            inp[j] = int(sint[j])\n        A[i] = inp\n    B = [[-1 for j in range(m)] for i in range(n)]\n    row = [0] * n\n    column = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if A[i][j] == 1:\n                flag = 1\n                row[i] = 1\n                column[j] = 1\n                B[i][j] = 0\n    if flag == 0:\n        pass\n    else:\n        for i in range(n):\n            for j in range(m):\n                if A[i][j] == 0:\n                    if row[i] == 1 or column[j] == 1:\n                        B[i][j] = 1\n                    else:\n                        B[i][j] = 2\n    for i in range(n):\n        print(*B[i])", "t = int(input())\nfor _ in range(t):\n    flag = 0\n    (n, m) = [int(x) for x in input().split()]\n    A = [None] * n\n    for i in range(n):\n        sint = input()\n        inp = [None] * m\n        for j in range(m):\n            inp[j] = int(sint[j])\n        A[i] = inp\n    B = [[-1 for j in range(m)] for i in range(n)]\n    row = {}\n    column = {}\n    for i in range(n):\n        row[i] = 0\n    for j in range(m):\n        column[j] = 0\n    for i in range(n):\n        for j in range(m):\n            if A[i][j] == 1:\n                flag = 1\n                row[i] = 1\n                column[j] = 1\n                B[i][j] = 0\n    if flag == 0:\n        pass\n    else:\n        for i in range(n):\n            for j in range(m):\n                if A[i][j] == 0:\n                    if row[i] == 1 or column[j] == 1:\n                        B[i][j] = 1\n                    else:\n                        B[i][j] = 2\n    for i in range(n):\n        print(*B[i])", "t = int(input())\nfor _ in range(t):\n    flag = 0\n    (n, m) = [int(x) for x in input().split()]\n    A = [None] * n\n    for i in range(n):\n        sint = input()\n        inp = [None] * m\n        for j in range(m):\n            inp[j] = int(sint[j])\n        A[i] = inp\n    B = [[-1 for j in range(m)] for i in range(n)]\n    row = [0] * n\n    column = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if A[i][j] == 1:\n                flag = 1\n                row[i] = 1\n                column[j] = 1\n                B[i][j] = 0\n    if flag == 0:\n        pass\n    else:\n        for i in range(n):\n            for j in range(m):\n                if A[i][j] == 0:\n                    if row[i] == 1 or column[j] == 1:\n                        B[i][j] = 1\n                    else:\n                        B[i][j] = 2\n    for i in range(n):\n        print(*B[i])", "t = int(input())\nwhile t:\n    dim = input().split()\n    n = int(dim[0])\n    m = int(dim[1])\n    a = []\n    for i in range(n):\n        temp = []\n        s = input()\n        for j in range(m):\n            temp.append(int(s[j]))\n        a.append(temp)\n    res = [[0 for i in range(m)] for j in range(n)]\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                row[i] = 1\n                col[j] = 1\n    r = 0\n    c = 0\n    for i in range(n):\n        if row[i] == 0:\n            r += 1\n    for j in range(m):\n        if col[j] == 0:\n            c += 1\n    for i in range(n):\n        for j in range(m):\n            if r == n and c == m:\n                res[i][j] = -1\n            elif a[i][j] == 1:\n                res[i][j] = 0\n            elif row[i] == 1 or col[j] == 1:\n                res[i][j] = 1\n            else:\n                res[i][j] = 2\n    for i in range(n):\n        for j in range(m):\n            print(res[i][j], end=' ')\n        print()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = []\n    flag = 0\n    for i in range(n):\n        k = list(input())\n        z = list(map(int, k))\n        l.append(z)\n        if 1 in z and flag == 0:\n            flag = 1\n    hash_rows = {}\n    hash_columns = {}\n    for i in range(n):\n        hash_rows[i] = False\n    for i in range(m):\n        hash_columns[i] = False\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                hash_rows[i] = True\n                hash_columns[j] = True\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 0:\n                if hash_rows[i] == True or hash_columns[j] == True:\n                    l[i][j] = 1\n                elif flag == 1:\n                    l[i][j] = 2\n                else:\n                    l[i][j] = -1\n            else:\n                l[i][j] = 0\n    for i in range(n):\n        print(*l[i])", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    l = [[int(x) for x in input().strip()] for y in range(x)]\n    ans = [[2] * y for k in range(x)]\n    temp = 0\n    rows = set()\n    col = set()\n    for i in range(x):\n        for j in range(y):\n            if l[i][j] == 1:\n                temp = 1\n                rows.add(i)\n                col.add(j)\n                ans[i][j] = 0\n    for ii in rows:\n        for var in range(y):\n            if ans[ii][var] == 2:\n                ans[ii][var] = 1\n    for jj in col:\n        for var in range(x):\n            if ans[var][jj] == 2:\n                ans[var][jj] = 1\n    if temp == 0:\n        ans = [[-1] * y for k in range(x)]\n    for li in ans:\n        print(*li)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    dp = [[0 for i in range(m)] for i in range(n)]\n    f = 0\n    mat = []\n    for i in range(n):\n        l = list(input())\n        l = [int(i) for i in l]\n        mat.append(l)\n        if 1 in l:\n            f = 1\n    if f == 0:\n        for i in range(n):\n            z = [-1] * m\n            print(*z)\n    else:\n        bad_row = set()\n        bad_col = set()\n        for i in range(n):\n            for j in range(m):\n                if mat[i][j] == 1:\n                    dp[i][j] = 0\n                    bad_row.add(i)\n                    bad_col.add(j)\n        for i in bad_row:\n            for j in range(m):\n                if mat[i][j] != 1:\n                    dp[i][j] = 1\n        for j in bad_col:\n            for i in range(n):\n                if mat[i][j] != 1:\n                    dp[i][j] = 1\n        for i in range(n):\n            for j in range(m):\n                if i not in bad_row and j not in bad_col:\n                    dp[i][j] = 2\n        for i in range(n):\n            print(*dp[i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = ['0'] * n\n    check = 0\n    for t in range(n):\n        l1 = list(str(input()))\n        l[t] = l1\n        hello = set(l1)\n        if '1' in hello:\n            check = 1\n    if check == 0:\n        main = [['-1'] * m] * n\n        for t in main:\n            ans = ' '.join(t)\n            print(ans)\n    else:\n        main = []\n        for t in range(n):\n            k = []\n            for y in range(m):\n                k.append('0')\n            main.append(k)\n        for y in range(n):\n            for i in range(m):\n                elem = l[y][i]\n                if elem == '1':\n                    main[y][i] = '0'\n                else:\n                    check1 = l[y]\n                    (c, fu) = (0, 0)\n                    if '1' in check1:\n                        main[y][i] = '1'\n                        c = 1\n                    if c == 0:\n                        check2 = [l[x][i] for x in range(n)]\n                        if '1' in check2:\n                            main[y][i] = '1'\n                            fu = 1\n                    if c == 0 and fu == 0:\n                        main[y][i] = '2'\n        for t in main:\n            ans = ' '.join(t)\n            print(ans)", "GI = lambda : int(input())\nGIS = lambda : map(int, input().split())\nLGIS = lambda : list(GIS())\n\ndef main():\n    for t in range(GI()):\n        (n, m) = GIS()\n        mat = [[int(c) for c in input()] for _ in range(n)]\n        cr = [int(any((x for x in row))) for row in mat]\n        cc = [int(any((x for x in col))) for col in zip(*mat)]\n        nat = [[-1] * m for i in range(n)]\n        if any((any(cr), any(cc))):\n            for r in range(n):\n                for c in range(m):\n                    if mat[r][c]:\n                        res = 0\n                    elif cr[r] or cc[c]:\n                        res = 1\n                    else:\n                        res = 2\n                    nat[r][c] = res\n        for row in nat:\n            for c in row:\n                print(c, end=' ')\n            print()\nmain()", "def findcol(j):\n    for _ in range(N):\n        if r[_][j] == '1':\n            return 1\n    return 0\n\ndef findrow(i):\n    for _ in range(M):\n        if r[i][_] == '1':\n            return 1\n    return 0\nT = int(input())\nwhile T:\n    T = T - 1\n    l = input().split()\n    (N, M) = (int(l[0]), int(l[1]))\n    ans = [[0 for j in range(M)] for i in range(N)]\n    r = []\n    found = 0\n    for _ in range(N):\n        r.append(input())\n        for __ in range(M):\n            if found == 0 and r[_][__] == '1':\n                found = 1\n    if found == 0:\n        for _ in range(N):\n            for __ in range(M):\n                print('-1 ', end='')\n            print()\n    else:\n        for i in range(N):\n            for j in range(M):\n                if r[i][j] == '1':\n                    ans[i][j] = 0\n                elif findcol(j) or findrow(i):\n                    ans[i][j] = 1\n                else:\n                    ans[i][j] = 2\n                print(ans[i][j], end=' ')\n            print()", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split(' '))\n    matrix = [[0 for i in range(m)] for j in range(n)]\n    fin = [[0 for i in range(m)] for j in range(n)]\n    check = [[0 for i in range(m)] for j in range(n)]\n    go = [[0 for i in range(m)] for j in range(n)]\n    res = []\n    ans = []\n    for i in range(0, n):\n        ch = input()\n        ch = list(ch)\n        for j in range(0, m):\n            matrix[i][j] = int(ch[j])\n    res.insert(0, [sum(x) for x in matrix])\n    res.insert(1, [sum(x) for x in zip(*matrix)])\n    for i in range(0, n):\n        for j in range(0, m):\n            fin[i][j] = res[0][i] + res[1][j]\n    ans.insert(0, [sum(x) for x in fin])\n    ans.insert(1, [sum(x) for x in zip(*fin)])\n    for i in range(0, n):\n        for j in range(0, m):\n            check[i][j] = ans[0][i] + ans[1][j]\n    for i in range(0, n):\n        for j in range(0, m):\n            if matrix[i][j] == 1:\n                go[i][j] = 0\n            elif matrix[i][j] == 0:\n                if fin[i][j] >= 1:\n                    go[i][j] = 1\n                elif fin[i][j] == 0:\n                    if check[i][j] >= 1:\n                        go[i][j] = 2\n                    elif check[i][j] == 0:\n                        go[i][j] = -1\n    for i in range(0, n):\n        print(*go[i])\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    colCheck = [False] * m\n    rowCheck = [False] * n\n    atleast1 = False\n    for i in range(n):\n        rows = [int(i) for i in list(input())]\n        if 1 in rows:\n            rowCheck[i] = True\n            atleast1 = True\n        for j in range(m):\n            if rows[j] == 1:\n                colCheck[j] = True\n        matrix.append(rows)\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                print(0, end=' ')\n            elif rowCheck[i] == True or colCheck[j] == True:\n                print(1, end=' ')\n            elif atleast1 == True:\n                print(2, end=' ')\n            else:\n                print(-1, end=' ')\n        print()", "from numpy import *\nfor z in range(int(input())):\n    (r, c) = map(int, input().split())\n    (m, cn, mr, mc) = ([], [], [], [])\n    for j in range(r):\n        m.append(list(map(int, input())))\n        cn.append([0] * c)\n    if m == cn:\n        for i in range(len(m)):\n            for j in range(len(m[i])):\n                m[i][j] = -1\n    else:\n        mr = m\n        ar = array(mr)\n        for j in range(c):\n            mc.append(ar[:, j].tolist())\n        for i in range(len(mr)):\n            if 1 in mr[i]:\n                for j in range(len(mr[i])):\n                    if m[i][j] == 0:\n                        m[i][j] = 1\n                    else:\n                        m[i][j] = 0\n            else:\n                for j in range(len(mr[i])):\n                    m[i][j] = 2\n        m = transpose(array(m)).tolist()\n        for i in range(len(mc)):\n            if 1 in mc[i]:\n                for j in range(len(m[i])):\n                    if m[i][j] == 2:\n                        m[i][j] = 1\n        m = transpose(array(m)).tolist()\n    for i in range(len(m)):\n        for j in range(len(m[i])):\n            print(m[i][j], end=' ')\n        print('')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input())\n    s = list(set(a))\n    if len(s) == 1 and '1' not in s[0]:\n        for i in range(n):\n            for i in range(m):\n                print('-1', end=' ')\n            print()\n    else:\n        r = set()\n        c = set()\n        for i in range(n):\n            if '1' in a[i]:\n                r.add(i)\n        for i in range(m):\n            for j in range(n):\n                if a[j][i] == '1':\n                    c.add(i)\n                    break\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == '0':\n                    if i in r or j in c:\n                        print('1', end=' ')\n                    else:\n                        print('2', end=' ')\n                else:\n                    print('0', end=' ')\n            print()", "def row_has1(matrix, i):\n    if '1' in matrix[i]:\n        return True\n    return False\n\ndef column_has1(matrix, i):\n    a = any([row[i] == '1' for row in matrix])\n    return a\n\ndef main():\n    testcases = int(input())\n    for i in range(testcases):\n        (n, m) = [int(j) for j in input().strip().split()]\n        matrix = []\n        answer_matrix = []\n        has1 = False\n        for j in range(n):\n            matrix.append(input().strip())\n            answer_matrix.append([-1 for k in range(m)])\n            if '1' in matrix[-1]:\n                has1 = True\n        if has1:\n            for row_index in range(n):\n                for column_index in range(m):\n                    if matrix[row_index][column_index] == '1':\n                        answer_matrix[row_index][column_index] = 0\n                    elif row_has1(matrix, row_index) or column_has1(matrix, column_index):\n                        answer_matrix[row_index][column_index] = 1\n                    else:\n                        answer_matrix[row_index][column_index] = 2\n        for l in answer_matrix:\n            print(' '.join([str(obj) for obj in l]))\nmain()", "for t in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        x = input()\n        l.append(x)\n    row = [0] * (n + 1)\n    col = [0] * (m + 1)\n    fl = 0\n    for i in range(n):\n        for j in range(m):\n            if int(l[i][j]):\n                row[i] = 1\n                col[j] = 1\n                fl = 1\n    if not fl:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if not int(l[i][j]):\n                if row[i] or col[j]:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            else:\n                print(0, end=' ')\n        print()", "for t in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        x = input()\n        l.append(x)\n    row = [0] * (n + 1)\n    col = [0] * (m + 1)\n    fl = 0\n    for i in range(n):\n        for j in range(m):\n            if int(l[i][j]):\n                row[i] = 1\n                col[j] = 1\n                fl = 1\n    if not fl:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if not int(l[i][j]):\n                if row[i] or col[j]:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            else:\n                print(0, end=' ')\n        print()", "from numpy import *\nfor z in range(int(input())):\n    (r, c) = map(int, input().split())\n    (m, cn, mr, mc) = ([], [], [], [])\n    for j in range(r):\n        m.append(list(map(int, input())))\n        cn.append([0] * c)\n    if m == cn:\n        for i in range(len(m)):\n            for j in range(len(m[i])):\n                m[i][j] = -1\n    else:\n        mr = m\n        ar = array(mr)\n        for j in range(c):\n            mc.append(ar[:, j].tolist())\n        for i in range(len(mr)):\n            if 1 in mr[i]:\n                for j in range(len(mr[i])):\n                    if m[i][j] == 0:\n                        m[i][j] = 1\n                    else:\n                        m[i][j] = 0\n            else:\n                for j in range(len(mr[i])):\n                    m[i][j] = 2\n        m = transpose(array(m)).tolist()\n        for i in range(len(mc)):\n            if 1 in mc[i]:\n                for j in range(len(m[i])):\n                    if m[i][j] == 2:\n                        m[i][j] = 1\n        m = transpose(array(m)).tolist()\n    for i in range(len(m)):\n        for j in range(len(m[i])):\n            print(m[i][j], end=' ')\n        print('')", "from numpy import *\nfor z in range(int(input())):\n    (r, c) = map(int, input().split())\n    (m, cn, mr, mc) = ([], [], [], [])\n    for j in range(r):\n        m.append(list(map(int, input())))\n        cn.append([0] * c)\n    if m == cn:\n        for i in range(len(m)):\n            for j in range(len(m[i])):\n                m[i][j] = -1\n    else:\n        mr = m\n        ar = array(mr)\n        for j in range(c):\n            mc.append(ar[:, j].tolist())\n        for i in range(len(mr)):\n            if 1 in mr[i]:\n                for j in range(len(mr[i])):\n                    if m[i][j] == 0:\n                        m[i][j] = 1\n                    else:\n                        m[i][j] = 0\n            else:\n                for j in range(len(mr[i])):\n                    m[i][j] = 2\n        m = transpose(array(m)).tolist()\n        for i in range(len(mc)):\n            if 1 in mc[i]:\n                for j in range(len(m[i])):\n                    if m[i][j] == 2:\n                        m[i][j] = 1\n        m = transpose(array(m)).tolist()\n    for i in range(len(m)):\n        for j in range(len(m[i])):\n            print(m[i][j], end=' ')\n        print('')", "for t in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        x = input()\n        l.append(x)\n    row = [0] * (n + 1)\n    col = [0] * (m + 1)\n    fl = 0\n    for i in range(n):\n        for j in range(m):\n            if int(l[i][j]):\n                row[i] = 1\n                col[j] = 1\n                fl = 1\n    if not fl:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if not int(l[i][j]):\n                if row[i] or col[j]:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            else:\n                print(0, end=' ')\n        print()", "def findS(s, N, M):\n    rows = []\n    cols = []\n    for i in range(M):\n        temp = 0\n        for j in range(N):\n            temp = temp | s[j][i]\n        cols.append(temp)\n    for i in s:\n        temp = 0\n        for j in i:\n            temp = temp | j\n        rows.append(temp)\n    y = []\n    d = {0: 1, 1: 0}\n    if rows.count(0) == N and cols.count(0) == M:\n        return [[-1] * M] * N\n    for i in s:\n        temp = []\n        for j in i:\n            temp.append(d[j])\n        y.append(temp)\n    if 0 in rows and 0 in cols:\n        for i in range(N):\n            for j in range(M):\n                if rows[i] == 0 and cols[j] == 0:\n                    y[i][j] = 2\n    return y\nT = int(input())\nfor i in range(T):\n    (N, M) = [int(x) for x in input().split(' ')]\n    (A, t) = ([], [])\n    for j in range(N):\n        t = [int(x) for x in input()]\n        A.append(t)\n    x = findS(A, N, M)\n    for i in x:\n        print(' '.join([str(x) for x in i]))", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    l2 = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l2.append([-1] * m)\n        l.append(l1)\n    for i in l:\n        if 1 in i:\n            flag = 1\n            break\n    if flag == 0:\n        for i in l2:\n            print(*i, sep=' ')\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    l2 = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l2.append([-1] * m)\n        l.append(l1)\n    for i in l:\n        if 1 in i:\n            flag = 1\n            break\n    if flag == 0:\n        for i in l2:\n            print(*i, sep=' ')\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l.append(l1)\n    for i in l:\n        for j in i:\n            if j == 1:\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l.append(l1)\n    for i in l:\n        for j in i:\n            if j == 1:\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l.append(l1)\n    for i in l:\n        for j in i:\n            if j == 1:\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l.append(l1)\n    for i in l:\n        for j in i:\n            if j == 1:\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l1 = []\n    l = []\n    flag = 0\n    for i in range(n):\n        l1 = list(map(int, input()))\n        l.append(l1)\n    for i in l:\n        for j in i:\n            if j == 1:\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                print(0, end=' ')\n            else:\n                flag = 0\n                for k in range(m):\n                    if l[i][k] == 1:\n                        flag = 1\n                        print(1, end=' ')\n                        break\n                if flag == 0:\n                    for k in range(n):\n                        if l[k][j] == 1:\n                            flag = 1\n                            print(1, end=' ')\n                            break\n                if flag == 0:\n                    print(2, end=' ')\n        print()", "from numpy import *\nfor z in range(int(input())):\n    (r, c) = map(int, input().split())\n    (m, cn, mr, mc) = ([], [], [], [])\n    for j in range(r):\n        m.append(list(map(int, input())))\n        cn.append([0] * c)\n    if m == cn:\n        for i in range(len(m)):\n            for j in range(len(m[i])):\n                m[i][j] = -1\n    else:\n        mr = m\n        ar = array(mr)\n        for j in range(c):\n            mc.append(ar[:, j].tolist())\n        for i in range(len(mr)):\n            if 1 in mr[i]:\n                for j in range(len(mr[i])):\n                    if m[i][j] == 0:\n                        m[i][j] = 1\n                    else:\n                        m[i][j] = 0\n            else:\n                for j in range(len(mr[i])):\n                    m[i][j] = 2\n        m = transpose(array(m)).tolist()\n        for i in range(len(mc)):\n            if 1 in mc[i]:\n                for j in range(len(m[i])):\n                    if m[i][j] == 2:\n                        m[i][j] = 1\n        m = transpose(array(m)).tolist()\n    for i in range(len(m)):\n        for j in range(len(m[i])):\n            print(m[i][j], end=' ')\n        print('')", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    R = [False for i in range(N)]\n    C = [False for i in range(M)]\n    mat = []\n    for n in range(N):\n        r = list(input().strip())\n        for m in range(M):\n            if r[m] == '1':\n                R[n] = True\n                C[m] = True\n        mat.append(r)\n    if sum(R) or sum(C):\n        for n in range(N):\n            for m in range(M):\n                if mat[n][m] == '1':\n                    mat[n][m] = '0'\n                elif R[n] or C[m]:\n                    mat[n][m] = '1'\n                else:\n                    mat[n][m] = '2'\n        for row in mat:\n            print(*row, sep=' ')\n    else:\n        for i in range(N):\n            print(*[-1] * M, sep=' ')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = input().split(' ')\n    (n, m) = (int(n), int(m))\n    a = []\n    for i in range(n):\n        row = input()\n        r = list(row)\n        for i in range(m):\n            r[i] = int(r[i])\n        a.append(r)\n    s = 0\n    r = []\n    c = []\n    for i in range(n):\n        r.append(sum(a[i]))\n        s += r[i]\n    for i in range(m):\n        v = 0\n        for j in range(n):\n            v += a[j][i]\n        c.append(v)\n    f = [[0 for x in range(m)] for y in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if s == 0:\n                f[i][j] = '-1'\n            elif a[i][j] != 0:\n                f[i][j] = '0'\n            elif r[i] != 0 or c[j] != 0:\n                f[i][j] = '1'\n            else:\n                f[i][j] = '2'\n    for i in range(n):\n        print(' '.join(f[i]))", "t = int(input())\nwhile t > 0:\n    a = input().split()\n    n = int(a[0])\n    m = int(a[1])\n    l = []\n    for i in range(n):\n        a = input()\n        l.append(a)\n    k = [[int(0) for i in range(m)] for j in range(n)]\n    flag = 1\n    cols = [False for i in range(m)]\n    rows = [False for i in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '1':\n                flag = 0\n                if not rows[i]:\n                    rows[i] = True\n                    for x in range(m):\n                        k[i][x] = 1\n                if not cols[j]:\n                    cols[j] = True\n                    for x in range(n):\n                        k[x][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if flag == 1:\n                print(-1, ' ', end='')\n            elif l[i][j] == '1':\n                print(0, ' ', end='')\n            elif k[i][j] == 0:\n                print(2, ' ', end='')\n            else:\n                print(k[i][j], ' ', end='')\n        print()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    a = []\n    (n, m) = map(int, input().split())\n    for k in range(n):\n        s = input()\n        b = []\n        for j in s:\n            b.append(int(j))\n        a.append(b)\n    r = [0 for j in range(n)]\n    c = [0 for j in range(m)]\n    flag = 0\n    res = [[0 for j in range(m)] for k in range(n)]\n    for j in range(n):\n        for k in range(m):\n            if a[j][k] == 1:\n                res[j][k] = 0\n                flag = 1\n                r[j] = 1\n                c[k] = 1\n    if flag == 0:\n        for j in range(n):\n            for k in range(m):\n                print('-1', end=' ')\n            print()\n    else:\n        for j in range(n):\n            for k in range(m):\n                if a[j][k] == 0:\n                    if r[j] == 1 or c[k] == 1:\n                        res[j][k] = 1\n                    else:\n                        res[j][k] = 2\n        for j in range(n):\n            for k in range(m):\n                print(res[j][k], end=' ')\n            print()", "def modifyMatrix(mat):\n    row = [0] * R\n    col = [0] * C\n    for i in range(0, R):\n        row[i] = 0\n    for i in range(0, C):\n        col[i] = 0\n    for i in range(0, R):\n        for j in range(0, C):\n            if mat[i][j] == 1:\n                row[i] = 1\n                col[j] = 1\n    for i in range(0, R):\n        for j in range(0, C):\n            if row[i] == 1 or col[j] == 1:\n                mat[i][j] = 1\n\ndef printMatrix(mat):\n    for i in range(0, R):\n        for j in range(0, C):\n            print(mat[i][j], end=' ')\n        print()\nT = int(input())\nwhile T > 0:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    R = n\n    C = m\n    a = [None] * n\n    rout = 0\n    one = []\n    for i in range(n):\n        a[i] = input()\n        a[i] = list(a[i])\n        for j in range(m):\n            a[i][j] = int(a[i][j])\n            if a[i][j] == 1:\n                one.append([i, j])\n                rout = 1\n    aa = a[:]\n    if rout == 0:\n        for i in range(n):\n            for j in range(m):\n                aa[i][j] = -1\n        printMatrix(aa)\n    else:\n        modifyMatrix(aa)\n        for i in range(n):\n            for j in range(m):\n                if aa[i][j] == 0:\n                    aa[i][j] = 2\n        for i in range(len(one)):\n            aa[one[i][0]][one[i][1]] = 0\n        printMatrix(aa)\n    T -= 1", "def modifyMatrix(mat):\n    row = [0] * R\n    col = [0] * C\n    for i in range(0, R):\n        row[i] = 0\n    for i in range(0, C):\n        col[i] = 0\n    for i in range(0, R):\n        for j in range(0, C):\n            if mat[i][j] == 1:\n                row[i] = 1\n                col[j] = 1\n    for i in range(0, R):\n        for j in range(0, C):\n            if row[i] == 1 or col[j] == 1:\n                mat[i][j] = 1\n\ndef printMatrix(mat):\n    for i in range(0, R):\n        for j in range(0, C):\n            print(mat[i][j], end=' ')\n        print()\nT = int(input())\nwhile T > 0:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    R = n\n    C = m\n    a = [None] * n\n    rout = 0\n    one = []\n    for i in range(n):\n        a[i] = input()\n        a[i] = list(a[i])\n        for j in range(m):\n            a[i][j] = int(a[i][j])\n            if a[i][j] == 1:\n                one.append([i, j])\n                rout = 1\n    aa = a[:]\n    if rout == 0:\n        for i in range(n):\n            for j in range(m):\n                aa[i][j] = -1\n        printMatrix(aa)\n    else:\n        modifyMatrix(aa)\n        for i in range(n):\n            for j in range(m):\n                if aa[i][j] == 0:\n                    aa[i][j] = 2\n        for i in range(len(one)):\n            aa[one[i][0]][one[i][1]] = 0\n        printMatrix(aa)\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    result = []\n    for _ in range(n):\n        temp = list(input())\n        result_temp = [0] * len(temp)\n        arr.append(temp)\n        result.append(result_temp)\n    flag = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '1':\n                flag = 1\n                break\n    if flag == 0:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n    else:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    result[i][j] = 0\n                else:\n                    f = 0\n                    for k in range(n):\n                        if arr[k][j] == '1':\n                            f = 1\n                            break\n                    for k in range(m):\n                        if arr[i][k] == '1':\n                            f = 1\n                            break\n                    if f == 1:\n                        result[i][j] = 1\n                    else:\n                        result[i][j] = 2\n        for i in range(n):\n            for j in range(m):\n                print(result[i][j], end=' ')\n            print()", "def moves(i, j):\n    if mat[i][j] == 1:\n        res[i][j] = 0\n        return 0\n    else:\n        l = [k for k in mat[i]]\n        if 1 in l:\n            res[i][j] = 1\n            return 1\n        for k in range(N):\n            l.append(mat[k][j])\n        if 1 in l:\n            res[i][j] = 1\n            return 1\n        else:\n            res[i][j] = 2\n            return 2\nimport random\ntests = int(input())\nwhile tests > 0:\n    temp = input().split()\n    N = int(temp[0])\n    M = int(temp[1])\n    mat = [[None] * M for i in range(N)]\n    allzero = True\n    for i in range(N):\n        temp = input()\n        for j in range(len(temp)):\n            mat[i][j] = int(temp[j])\n            if mat[i][j] == 1:\n                allzero = False\n    res = [[None] * M for i in range(N)]\n    if allzero:\n        for i in range(N):\n            for j in range(M):\n                print(-1, end=' ')\n            print('\\n')\n    else:\n        for i in range(N):\n            for j in range(M):\n                if res[i][j] == None:\n                    moves(i, j)\n                print(res[i][j], end=' ')\n            print('\\n')\n    tests = tests - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = [int(x) for x in input().split()]\n    matrix = []\n    cnt = 0\n    for i in range(n):\n        s = list(input())\n        cnt += s.count('0')\n        matrix.append(s)\n    matrix2 = []\n    for i in range(m):\n        temp = []\n        for j in range(n):\n            temp.append(matrix[j][i])\n        matrix2.append(temp)\n    ans = []\n    for i in range(n):\n        ans.append([-1] * m)\n    if cnt != n * m:\n        for i in range(n):\n            for j in range(m):\n                if matrix[i][j] != '1':\n                    (l1, l2) = (matrix[i], matrix2[j])\n                    if len(set(l1)) > 1 or len(set(l2)) > 1:\n                        ans[i][j] = 1\n                    else:\n                        ans[i][j] = 2\n                else:\n                    ans[i][j] = 0\n    for row in ans:\n        print(*row)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split(' '))\n    a = []\n    b = []\n    c = []\n    e = 0\n    f = []\n    g = []\n    for i in range(n):\n        a.append(input())\n        b = []\n        if int(a[i]) > 0:\n            f.append(1)\n        else:\n            f.append(0)\n        for j in range(m):\n            b.append(int(a[i][j]))\n        c.append(b)\n    d = [sum(x) for x in zip(*c)]\n    if sum(d) == 0:\n        for i in range(n):\n            e = 1\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n    else:\n        for i in f:\n            b = []\n            for j in d:\n                b.append(i or j)\n            g.append(b)\n        for i in range(n):\n            for j in range(m):\n                if g[i][j] == c[i][j] and g[i][j] == 0:\n                    print(2, end=' ')\n                elif c[i][j] == 1:\n                    print(0, end=' ')\n                else:\n                    print(1, end=' ')\n            print()\n    print()\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = [int(x) for x in input().split()]\n    row = [0] * n\n    col = [0] * m\n    arr = []\n    for i in range(n):\n        temp = [0] * m\n        arr.append([0] * m)\n        s = str(input())\n        for j in range(m):\n            p = int(s[j])\n            arr[i][j] = p\n            row[i] = max(row[i], p)\n            col[j] = max(col[j], p)\n    if row.count(1) == 0 and col.count(1) == 0:\n        for i in range(n):\n            print(*[-1] * m)\n        continue\n    else:\n        for i in range(n):\n            temp = []\n            for j in range(m):\n                if arr[i][j] == 1:\n                    temp.append(0)\n                elif row[i] == 1 or col[j] == 1:\n                    temp.append(1)\n                else:\n                    temp.append(2)\n            print(*temp)", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(i) for i in input()])\n    r = []\n    c = []\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r.append(i)\n                break\n    for j in range(m):\n        for i in range(n):\n            if a[i][j] == 1:\n                c.append(j)\n                break\n    if r == []:\n        for i in range(n):\n            print('-1 ' * m)\n        continue\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                print(0, end=' ')\n            elif i in r or j in c:\n                print(1, end=' ')\n            else:\n                print(2, end=' ')\n        print()", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    all_zero = True\n    cols = [0 for _ in range(M)]\n    rows = [0 for _ in range(N)]\n    res = [['1' for _ in range(M)] for _ in range(N)]\n    for i in range(N):\n        A_row = input()\n        for j in range(M):\n            if A_row[j] == '1':\n                all_zero = False\n                cols[j] = 1\n                rows[i] = 1\n                res[i][j] = '0'\n    for i in range(N):\n        if all_zero:\n            print('-1 ' * (M - 1) + '-1')\n        else:\n            if not rows[i]:\n                res[i] = [str(2 - cols[j]) for j in range(M)]\n            print(' '.join(res[i]))", "T = int(input())\nfor i in range(0, T):\n    inputs = input().split()\n    inputs = list(map(int, inputs))\n    N = inputs[0]\n    M = inputs[1]\n    matrix = []\n    output_matrix = [[-1 for q in range(0, M)] for p in range(0, N)]\n    impossible = True\n    for j in range(0, N):\n        row = list(input())\n        row = list(map(int, row))\n        if 1 in row:\n            impossible = False\n        matrix.append(row)\n    if impossible == True:\n        for j in range(0, N):\n            print(*output_matrix[j], sep=' ')\n    else:\n        for p in range(0, N):\n            for q in range(0, M):\n                if matrix[p][q] == 1:\n                    output_matrix[p][q] = 0\n                elif 1 in matrix[p] or 1 in [row[q] for row in matrix]:\n                    output_matrix[p][q] = 1\n                else:\n                    output_matrix[p][q] = 2\n        for j in range(0, N):\n            print(*output_matrix[j], sep=' ')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mx = []\n    r = []\n    c = []\n    z = 0\n    for i in range(n):\n        a = list(input())\n        z += a.count('1')\n        r.append(a.count('1'))\n        mx.append(a)\n    for i in range(m):\n        for j in range(n):\n            if mx[j][i] == '1':\n                c.append(1)\n                break\n        else:\n            c.append(0)\n    if z == 0:\n        ans = n * [m * [-1]]\n        print('\\n'.join((' '.join((str(i) for i in row)) for row in ans)))\n    else:\n        for i in range(n):\n            a = ''\n            for j in range(m):\n                if mx[i][j] == '1':\n                    a += '0 '\n                elif c[j] != 0 or r[i] != 0:\n                    a += '1 '\n                else:\n                    a += '2 '\n            print(a[:-1])", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    if any(r):\n        c = [reduce(or_, x) for x in zip(*a)]\n        for (x, row) in zip(r, a):\n            print(*(0 if u else 1 if x | y else 2 for (y, u) in zip(c, row)))\n    else:\n        for _ in r:\n            print(*[-1] * m)", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    if any(r):\n        c = [reduce(or_, x) for x in zip(*a)]\n        for (x, row) in zip(r, a):\n            print(*(0 if u else 1 if x | y else 2 for (y, u) in zip(c, row)))\n    else:\n        for _ in r:\n            print(*[-1] * m)", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    if any(r):\n        c = [reduce(or_, x) for x in zip(*a)]\n        for (x, row) in zip(r, a):\n            print(*((u, x | y, 1).index(1) for (y, u) in zip(c, row)))\n    else:\n        for _ in r:\n            print(*[-1] * m)", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    if any(r):\n        c = [reduce(or_, x) for x in zip(*a)]\n        for (x, row) in zip(r, a):\n            print(*(0 if u else 1 if x | y else 2 for (y, u) in zip(c, row)))\n    else:\n        for _ in r:\n            print(*[-1] * m)", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    c = [reduce(or_, x) for x in zip(*a)]\n    if not any(r):\n        for _ in r:\n            print(*[-1] * m)\n    else:\n        for (x, row) in zip(r, a):\n            print(*(0 if u else 1 if x | y else 2 for (y, u) in zip(c, row)))", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    c = [reduce(or_, x) for x in zip(*a)]\n    if not any(r):\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        for (x, row) in zip(r, a):\n            print(*(0 if u else 1 if x | y else 2 for (y, u) in zip(c, row)))", "from functools import reduce\nfrom operator import or_\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    r = [reduce(or_, x) for x in a]\n    c = [reduce(or_, x) for x in zip(*a)]\n    if not any(r):\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        for i in range(n):\n            print(*(0 if a[i][j] else 1 if r[i] | c[j] else 2 for j in range(m)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        a.append(list(map(int, input())))\n        for j in range(m):\n            r[i] |= a[i][j]\n            c[j] |= a[i][j]\n    if all((x == 0 for x in r)):\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        for i in range(n):\n            print(*(0 if a[i][j] else 1 if r[i] | c[j] else 2 for j in range(m)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    if all((a[i][j] == 0 for i in range(n) for j in range(m))):\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        rows = set((i for i in range(n) for j in range(m) if a[i][j]))\n        cols = set((j for i in range(n) for j in range(m) if a[i][j]))\n        for i in range(n):\n            print(*(0 if a[i][j] else 1 if i in rows or j in cols else 2 for j in range(m)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input())) for _ in range(n)]\n    if all((a[i][j] == 0 for i in range(n) for j in range(m))):\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        b = [[2] * m for _ in range(n)]\n        rows = set((i for i in range(n) for j in range(m) if a[i][j]))\n        cols = set((j for i in range(n) for j in range(m) if a[i][j]))\n        for i in range(n):\n            print(*(0 if a[i][j] else 1 if i in rows or j in cols else 2 for j in range(m)))", "t = int(input())\nfor tt in range(t):\n    A = []\n    B = list(map(int, input().split()))\n    (n, m) = (B[0], B[1])\n    C = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    for i in range(n):\n        x = input()\n        A.append(x)\n    row = [0] * (n + 1)\n    col = [0] * (m + 1)\n    fl = 0\n    for i in range(n):\n        for j in range(m):\n            if int(A[i][j]):\n                row[i] = 1\n                col[j] = 1\n                fl = 1\n    if not fl:\n        for i in range(n):\n            for j in range(m):\n                print(-1, end=' ')\n            print()\n        continue\n    for i in range(n):\n        for j in range(m):\n            if not int(A[i][j]):\n                if row[i] or col[j]:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            else:\n                print(0, end=' ')\n        print()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    L = []\n    for i in range(n):\n        L.append([int(j) for j in input()])\n    p = []\n    q = []\n    res = [[-1] * m] * n\n    for i in range(n):\n        if 1 in L[i]:\n            res[i] = [1] * m\n    for i in range(m):\n        if 1 in [j[i] for j in L]:\n            for j in range(n):\n                res[j][i] = 1\n    if sum((sum(j) for j in L)) == 0:\n        for i in range(n):\n            print(*[-1] * m)\n    else:\n        for i in range(n):\n            for j in range(m):\n                if L[i][j] == 1:\n                    res[i][j] = 0\n                if res[i][j] == -1:\n                    res[i][j] = 2\n        for i in range(n):\n            print(*res[i])", "for _ in range(int(input())):\n    (M, N) = map(int, input().split())\n    arr = [[1 for i in range(N)] for j in range(M)]\n    zero_cols = []\n    zero_rows = [0] * N\n    arr2 = []\n    for i in range(M):\n        col = input()\n        if '1' not in col:\n            zero_cols.append(i)\n        temp = []\n        for dig in col:\n            temp.append(int(dig))\n        for k in range(len(temp)):\n            zero_rows[k] |= temp[k]\n        arr2.append(temp)\n    if len(zero_cols) == M:\n        for i in range(M):\n            print('-1 ' * N)\n        continue\n    for i in range(M):\n        for j in range(N):\n            arr[i][j] ^= arr2[i][j]\n    for i in zero_cols:\n        for j in range(len(zero_rows)):\n            if zero_rows[j] == 0:\n                arr[i][j] += 1\n    for col in arr:\n        print(*col, sep=' ')", "import copy\nT = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    lt = []\n    for i in range(n):\n        lt1 = input()\n        lt1 = list(lt1)\n        lt.append(lt1)\n    lt2 = copy.deepcopy(lt)\n    lto = n * [m * ['0']]\n    if lt != lto:\n        indl = []\n        for i in range(n):\n            if '1' in lt[i]:\n                for j in range(m):\n                    if lt[i][j] == '1':\n                        indl.append(j)\n                for j in range(m):\n                    if lt[i][j] == '0':\n                        lt2[i][j] = '1'\n                    else:\n                        lt2[i][j] = '0'\n        for i in range(n):\n            if '1' not in lt[i]:\n                for j in indl:\n                    lt2[i][j] = '1'\n                for j in range(m):\n                    if lt2[i][j] == '0':\n                        lt2[i][j] = '2'\n        for i in lt2:\n            print(' '.join(i))\n    else:\n        lto = n * [m * ['-1']]\n        for i in lto:\n            print(' '.join(i))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    a = [[int(d) for d in input()] for i in range(n)]\n    if sum((sum(i) for i in a)):\n        sol = [[2] * m] * n\n        for i in range(n):\n            if 1 in a[i]:\n                sol[i] = [1] * m\n                for j in range(m):\n                    sol[i][j] -= a[i][j]\n        for j in range(m):\n            if 1 in [i[j] for i in a]:\n                for i in range(n):\n                    sol[i][j] = 1 - a[i][j]\n    else:\n        sol = [[-1] * m] * n\n    print('\\n'.join((' '.join((str(i) for i in row)) for row in sol)))"]