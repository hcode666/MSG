["for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = set()\n    l = list(map(int, input().split()))\n    for i in range(n):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    b = []\n    for (i, v) in enumerate(l):\n        b.append((v, i))\n    l = b\n    l.sort()\n    f = l[0][0]\n    for i in range(n):\n        l[i] = (l[i][0] - f, l[i][1])\n    l.sort(key=lambda a: a[1])\n    l = [i[0] for i in l]\n    for (i, v) in enumerate(l):\n        if i != v:\n            c = 1\n            break\n    if c:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "(i, j) = (input, int)\nfor t in [0] * j(i()):\n    n = j(i())\n    (*w,) = map(j, i().split())\n    for k in range(n):\n        w[k] -= k\n    print([1, n][len(set(w)) < 2])", "(i, j) = (input, int)\nfor t in [0] * j(i()):\n    n = j(i())\n    (*w,) = map(j, i().split())\n    for k in range(n):\n        w[k] -= k\n    print([1, n][len(set(w)) < 2])", "for tea in range(int(input())):\n    n = int(input())\n    waw = [int(x) for x in input().split()]\n    for i in range(n):\n        waw[i] -= i\n    if len(set(waw)) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    X = [W[i] - (i + 1) for i in range(n)]\n    if all([X[i] == X[0] for i in range(n)]):\n        print(n)\n    else:\n        print(1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    for i in range(n):\n        d[w[i] - i] += 1\n    if len(d) == 1:\n        print(n)\n    else:\n        print(1)", "for z in range(int(input())):\n    n = int(input())\n    w = [int(x) for x in input().split()]\n    v = set()\n    b = True\n    for i in range(1, n + 1):\n        if i - w[i - 1] in v:\n            b = False\n        v.add(i - w[i - 1])\n    if b:\n        print(1)\n    else:\n        print(n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    c = 0\n    res = list(map(int, input().strip().split()))[:n]\n    for i in range(1, n):\n        if i + 1 - i == res[i] - res[i - 1]:\n            c = n\n        else:\n            c = n - i\n    print(c)\n    t = t - 1", "import collections\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set()\n    for i in range(len(arr)):\n        s.add(arr[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(a):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(a)\n    else:\n        print(1)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(a):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(a)\n    else:\n        print(1)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(a):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(a)\n    else:\n        print(1)", "from collections import Counter, defaultdict\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef main():\n    count = 0\n    temp = [lst[i] - (i + 1) for i in range(n)]\n    dct = Counter(temp)\n    for ele in dct:\n        count = max(dct[ele], count)\n    print(count)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    main()", "from collections import Counter, defaultdict\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef main():\n    node = set()\n    graph = defaultdict(list)\n    count = 0\n    temp = [lst[i] - (i + 1) for i in range(n)]\n    dct = Counter(temp)\n    for ele in dct:\n        count = max(dct[ele], count)\n    print(count)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    main()", "import math\nimport sys\nfrom collections import Counter, defaultdict\nmod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef main():\n    node = set()\n    graph = defaultdict(list)\n    count = 0\n    temp = [lst[i] - (i + 1) for i in range(n)]\n    dct = Counter(temp)\n    for ele in dct:\n        count = max(dct[ele], count)\n    print(count)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    visited = set()\n    main()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    for i in range(n):\n        w[i] = w[i] - i\n    print(n - len(set(w)) + 1)", "from heapq import heapify, heappush, heappop\nfrom cmath import pi\nfrom distutils import extension\nfrom pickle import FALSE\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil\nfrom collections import deque, defaultdict\nfrom tkinter.tix import Tree\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\nfor _ in range(ii()):\n    n = ii()\n    arr = il()\n    for l in range(n):\n        arr[l] -= l\n    d = {}\n    for l in arr:\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    print(d[arr[0]])", "from heapq import heapify, heappush, heappop\nfrom cmath import pi\nfrom distutils import extension\nfrom pickle import FALSE\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil\nfrom collections import deque, defaultdict\nfrom tkinter.tix import Tree\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\nfor _ in range(ii()):\n    n = ii()\n    arr = il()\n    for l in range(n):\n        arr[l] -= l\n    d = {}\n    for l in arr:\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    print(d[arr[0]])", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    W = set(A)\n    count = 0\n    if len(W) == 1:\n        print(N)\n    else:\n        for i in range(N - 1):\n            j = i + 1\n            if A[j] - A[i] != j - i:\n                count = 1\n    print(1 if count > 0 else N)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    c = 0\n    res = list(map(int, input().strip().split()))[:n]\n    for i in range(1, n):\n        if i + 1 - i == res[i] - res[i - 1]:\n            c = n\n        else:\n            c = n - i\n    print(c)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    ans = set()\n    for i in range(n):\n        ans.add(w[i] - i)\n    if len(ans) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr) - 1):\n        j = i + 1\n        if arr[j] - arr[i] != j - i:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = [l[x] - x + 1 for x in range(n)]\n    print(n if len(set(s)) == 1 else 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = [l[i] - i + 1 for i in range(n)]\n    if len(set(l)) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a = [a[i] - i for i in range(n)]\n    res = 0\n    for i in range(1, n):\n        if a[i] != a[0]:\n            res = 1\n    if res == 1:\n        print(1)\n    else:\n        print(n)", "try:\n    for t in range(int(input())):\n        N = int(input())\n        W = list(map(int, input().split()))\n        A = []\n        for i in range(N):\n            A.append(W[i] - i)\n        flag = 0\n        for i in range(N):\n            if A[i] != A[0]:\n                flag = 1\n                break\n        if flag == 1:\n            print(1)\n        else:\n            print(N)\nexcept:\n    pass", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    diff = []\n    for i in range(n):\n        diff.append(arr[i] - i)\n    c = Counter(diff)\n    if len(c) > 1:\n        ans = 1\n    else:\n        ans = c[arr[0]]\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    for i in range(n):\n        d[l[i] - i] += 1\n    if len(d) >= 2:\n        print(1)\n    else:\n        print(n)", "try:\n    for T in range(int(input())):\n        N = int(input())\n        A = list(map(int, input().split()))\n        const = []\n        for i in range(N):\n            const.append(A[i] - i + 1)\n        if const.count(const[0]) == N:\n            print(N)\n        else:\n            print(1)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    w_s = list(map(int, input().split()))\n    index = 0\n    count = 0\n    for i in range(len(w_s) - 1):\n        if i + 1 - i != w_s[i + 1] - w_s[i]:\n            count = 1\n            break\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    w_s = list(map(int, input().split()))\n    index = 0\n    count = 0\n    for i in range(len(w_s) - 1):\n        if i + 1 - i != w_s[i + 1] - w_s[i]:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    x = [w[i] - i - 1 for i in range(len(w))]\n    if len(set(x)) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    s = set()\n    n = int(input())\n    w = list(map(int, input().split()))\n    for j in range(n):\n        s.add(w[j] - j)\n    if len(s) == 1:\n        print(n)\n    else:\n        print('1')\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[l[i] - i] = 1\n    if len(d) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        s.add(w[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    for i in range(n):\n        arr[i] = arr[i] - i\n    if len(set(arr)) == 1:\n        print(n)\n    else:\n        print(1)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = set()\n    l = list(map(int, input().split()))\n    for i in range(n):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    graph = []\n    flag = 0\n    for i in range(n):\n        graph.append(L[i] - i)\n    for i in range(1, n):\n        if graph[i] != graph[i - 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print(1)\n    else:\n        print(len(graph))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = set()\n    l = list(map(int, input().split()))\n    for i in range(n):\n        s.add(l[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print('1')\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [a[i] - i for i in range(n)]\n    if b.count(b[0]) == len(b):\n        print(n)\n    else:\n        print(1)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [a[i] - i for i in range(n)]\n    if b.count(b[0]) == len(b):\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = dict()\n    for i in range(n):\n        arr[i] = arr[i] - (i + 1)\n        if arr[i] not in m:\n            m[arr[i]] = 0\n        m[arr[i]] += 1\n    if len(m) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr) - 1):\n        j = i + 1\n        if arr[j] - arr[i] != j - i:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = set()\n    w = list(map(int, input().split()))\n    for i in range(n):\n        s.add(w[i] - i)\n    if len(s) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    set1 = set(arr)\n    if len(set1) == 1:\n        print(n)\n    else:\n        count = 0\n        for i in range(len(arr) - 1):\n            j = i + 1\n            if arr[j] - arr[i] != j - i:\n                count += 1\n    if count > 0:\n        print('1')\n    else:\n        print(n)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr) - 1):\n        j = i + 1\n        if arr[j] - arr[i] != j - i:\n            count += 1\n    if count > 0:\n        print('1')\n    else:\n        print(n)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr) - 1):\n        j = i + 1\n        if arr[j] - arr[i] != j - i:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr) - 1):\n        j = i + 1\n        if arr[j] - arr[i] != j - i:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "for i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    s = set()\n    for i in range(len(A)):\n        s.add(A[i] - i)\n    if len(s) == 1:\n        print(N)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = []\n    for i in range(n):\n        a.append(w[i] - i)\n    if len(set(a)) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(len(a) - 1):\n        j = i + 1\n        if a[j] - a[i] != j - i:\n            count += 1\n    if count > 0:\n        print(1)\n    else:\n        print(n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    w = list(map(int, input().strip().split()))\n    temp = set()\n    for i in range(len(w)):\n        temp.add(w[i] - i)\n    if len(temp) == 1:\n        print(n)\n    else:\n        print('1')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    for i in range(n):\n        w[i] -= i\n    w = set(w)\n    if len(w) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor xx in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    res = False\n    for i in range(1, n):\n        if arr[i] - arr[i - 1] != 1:\n            res = True\n            break\n    if res:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = n\n    for i in range(n):\n        if l[0] + i != l[i]:\n            c -= 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = n\n    for i in range(n):\n        if l[0] + i != l[i]:\n            c -= 1\n    print(c)", "for i in range(int(input())):\n    N = int(input())\n    weights = list(map(int, input().split()))\n    arr = []\n    for i in range(len(weights)):\n        arr.append(weights[i] - i)\n    if len(set(arr)) == 1:\n        print(N)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = set()\n    for i in range(n):\n        l.add(arr[i] - i)\n    if len(l) == 1:\n        print(n)\n    else:\n        print(1)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    counter = 1\n    weights = [int(i) for i in input().split()]\n    for i in range(n - 1):\n        if weights[i + 1] - weights[i] == 1:\n            counter += 1\n    print(counter)", "for _ in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 1\n    ans = 0\n    for i in range(0, n - 1):\n        if l[i] + 1 == l[i + 1]:\n            count += 1\n        else:\n            count = 1\n            ans = ans + count\n    if count > 1:\n        ans = ans + count\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    d = {}\n    for i in range(n):\n        l[i] = l[i] - i\n        d[l[i]] = True\n    if len(d) == 1:\n        print(n)\n    else:\n        print('1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] == 1:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nodes = list(map(int, input().split()))\n    for i in range(n):\n        nodes[i] -= i\n    arr = set(nodes)\n    if len(arr) == 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    c = 1\n    A = list(map(int, input().split()))\n    for i in range(N):\n        A[i] -= c\n        c += 1\n    S = set(A)\n    if len(S) == 1:\n        print(N)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    wt = list(map(int, input().split()))\n    dic = {}\n    for i in range(n):\n        x = wt[i] - i - 1\n        if x in dic:\n            dic[x].append(i)\n        else:\n            dic[x] = [i]\n    if len(dic) > 1:\n        print(1)\n    else:\n        print(len(dic[list(dic.keys())[0]]))", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = arr[i] - i\n    arr = set(arr)\n    if len(arr) == 1:\n        print(n)\n    else:\n        print(1)", "test = int(input())\nfor i in range(0, test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(0, len(arr)):\n        arr[i] = arr[i] - i\n    same = 0\n    for i in range(0, len(arr) - 1):\n        if arr[i] != arr[i + 1]:\n            same = 1\n    if same:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n):\n            if l[i] - l[i - 1] != 1:\n                print(1)\n                break\n        else:\n            print(n)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n):\n            if l[i] - l[i - 1] != 1:\n                print(1)\n                break\n        else:\n            print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(len(l)):\n        l[i] = l[i] - (i + 1)\n    l = set(l)\n    print(n + 1 - len(l))", "t = int(input())\nfor ew in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        l[i] -= i\n    if len(set(l)) == 1:\n        print(n)\n    else:\n        print(1)", "def solve():\n    t = int(input())\n    for j in range(t):\n        n = int(input())\n        w = list(map(int, input().split()))\n        par = set()\n        for i in range(n):\n            par.add(w[i] - i)\n        l = len(par)\n        if l == 1:\n            print(n)\n        else:\n            print(1)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    num = []\n    for i in range(n):\n        num.append(l[i] - i - 1)\n    if len(set(num)) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    nodes = list(map(int, input().split()))\n    flag = 1\n    for i in range(1, n):\n        if nodes[0] != nodes[i] - i:\n            flag = 0\n            break\n    print(1 if flag == 0 else n)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        l[i] -= i\n    ans = 1\n    if max(l) == min(l):\n        ans = n\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n - 1):\n        if w[i + 1] - w[i] == 1:\n            cnt += 1\n    if cnt == n - 1:\n        print(n)\n    else:\n        print(1)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0] - 1\n    for rr in range(1, n):\n        if a[rr] - rr - 1 == b:\n            continue\n        else:\n            print(1)\n            break\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 0\n    for i in range(n - 1):\n        if l[i + 1] - l[i] != 1:\n            k += 1\n    if k > 0:\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 0\n    for i in range(n - 1):\n        if l[i + 1] - l[i] != 1:\n            k += 1\n    if k > 0:\n        print(1)\n    else:\n        print(n)", "t_tests = int(input())\nfor t in range(t_tests):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    lt = 1\n    for i in range(0, n - 1):\n        if 1 == arr[i + 1] - arr[i]:\n            lt += 1\n    print(lt)", "for _ in range(int(input())):\n    n = int(input())\n    weightList = list(map(int, input().split()))\n    counter = 0\n    for i in range(n - 1):\n        j = i + 1\n        if not j - i == weightList[j] - weightList[i]:\n            counter += 1\n    if counter > 0:\n        print(1)\n    else:\n        print(n)", "num = int(input())\nfor i in range(num):\n    num1 = int(input())\n    w = list(map(int, input().split()))\n    n = [0] * (num1 + 1)\n    for i in range(1, len(w) + 1):\n        n[i] = i\n    d = []\n    for j in range(len(w)):\n        d.append(w[j] - n[j + 1])\n    f = 0\n    for k in range(num1 - 1):\n        if d[k] != d[k + 1]:\n            f = 1\n            break\n    if f == 0:\n        print(len(w))\n    else:\n        print(1)"]