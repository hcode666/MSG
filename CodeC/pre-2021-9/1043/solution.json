["for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    b.append(a[0])\n    w = []\n    w.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], b[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], w[i - 1] * a[i])))\n        else:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], w[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], b[i - 1] * a[i])))\n    print(w[n - 1])", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    b.append(a[0])\n    w = []\n    w.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], b[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], w[i - 1] * a[i])))\n        else:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], w[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], b[i - 1] * a[i])))\n    print(w[n - 1])", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    b.append(a[0])\n    w = []\n    w.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], b[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], w[i - 1] * a[i])))\n        else:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], w[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], b[i - 1] * a[i])))\n    print(w[n - 1])", "def eval(A):\n    best_eval = [0] * (len(A) + 1)\n    worst_eval = [0] * (len(A) + 1)\n    best_eval[0] = A[0]\n    worst_eval[0] = A[0]\n    for i in range(1, len(A)):\n        if A[i] > 0:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n        else:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n    return worst_eval[len(A) - 1]\not = []\ntest = int(input())\nfor i in range(test):\n    l = []\n    e = int(input())\n    l = list(map(int, input().split()))\n    ot.append(l)\nfor i in ot:\n    print(eval(i))", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    b.append(a[0])\n    w = []\n    w.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], b[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], w[i - 1] * a[i])))\n        else:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], w[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], b[i - 1] * a[i])))\n    print(w[n - 1])", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    b.append(a[0])\n    w = []\n    w.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], b[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], w[i - 1] * a[i])))\n        else:\n            b.append(max(b[i - 1] + a[i], max(b[i - 1] - a[i], w[i - 1] * a[i])))\n            w.append(min(w[i - 1] + a[i], min(w[i - 1] - a[i], b[i - 1] * a[i])))\n    print(w[n - 1])", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "def eval(A):\n    N = len(A)\n    best_eval = [0] * N\n    worst_eval = [0] * N\n    best_eval[0] = A[0]\n    worst_eval[0] = A[0]\n    for i in range(1, N):\n        if A[i] > 0:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n        else:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n    return worst_eval[N - 1]\not = []\ntest = int(input())\nfor i in range(test):\n    l = []\n    e = int(input())\n    l = list(map(int, input().split()))\n    ot.append(l)\nfor i in ot:\n    print(eval(i))", "def eval(A):\n    best_eval = [0] * (len(A) + 1)\n    worst_eval = [0] * (len(A) + 1)\n    best_eval[0] = A[0]\n    worst_eval[0] = A[0]\n    for i in range(1, len(A)):\n        if A[i] > 0:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n        else:\n            best_eval[i] = max(best_eval[i - 1] + A[i], best_eval[i - 1] - A[i], worst_eval[i - 1] * A[i])\n            worst_eval[i] = min(worst_eval[i - 1] + A[i], worst_eval[i - 1] - A[i], best_eval[i - 1] * A[i])\n    return worst_eval[len(A) - 1]\not = []\ntest = int(input())\nfor i in range(test):\n    l = []\n    e = int(input())\n    l = list(map(int, input().split()))\n    ot.append(l)\nfor i in ot:\n    print(eval(i))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "test = int(input())\nfor why in range(test):\n    n = int(input())\n    arr = [int(k) for k in input().split()]\n    mini_arr = [0 for i in range(n)]\n    max_arr = [0 for i in range(n)]\n    mini_arr[0] = arr[0]\n    max_arr[0] = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > 0:\n            mini_arr[i] = min(mini_arr[i - 1] + arr[i], mini_arr[i - 1] - arr[i], mini_arr[i - 1] * arr[i])\n            max_arr[i] = max(max_arr[i - 1] + arr[i], max_arr[i - 1] - arr[i], max_arr[i - 1] * arr[i])\n        else:\n            mini_arr[i] = min(mini_arr[i - 1] + arr[i], mini_arr[i - 1] - arr[i], max_arr[i - 1] * arr[i])\n            max_arr[i] = max(max_arr[i - 1] + arr[i], max_arr[i - 1] - arr[i], mini_arr[i - 1] * arr[i])\n    print(mini_arr[n - 1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    minsofar = [0 for i in range(n)]\n    maxsofar = [0 for i in range(n)]\n    minsofar[0] = arr[0]\n    maxsofar[0] = arr[0]\n    for i in range(1, n):\n        if arr[i] > 0:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n        else:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n    print(minsofar[n - 1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    minsofar = [0 for i in range(n)]\n    maxsofar = [0 for i in range(n)]\n    minsofar[0] = arr[0]\n    maxsofar[0] = arr[0]\n    for i in range(1, n):\n        if arr[i] > 0:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n        else:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n    print(minsofar[n - 1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    minsofar = [0 for i in range(n)]\n    maxsofar = [0 for i in range(n)]\n    minsofar[0] = arr[0]\n    maxsofar[0] = arr[0]\n    for i in range(1, n):\n        if arr[i] > 0:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n        else:\n            minsofar[i] = min(minsofar[i - 1] + arr[i], minsofar[i - 1] - arr[i], maxsofar[i - 1] * arr[i])\n            maxsofar[i] = max(maxsofar[i - 1] + arr[i], maxsofar[i - 1] - arr[i], minsofar[i - 1] * arr[i])\n    print(minsofar[n - 1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    mini = [0 for i in range(n)]\n    maxi = [0 for i in range(n)]\n    mini[0] = arr[0]\n    maxi[0] = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > 0:\n            mini[i] = min(mini[i - 1] + arr[i], mini[i - 1] - arr[i], mini[i - 1] * arr[i])\n            maxi[i] = max(maxi[i - 1] + arr[i], maxi[i - 1] - arr[i], maxi[i - 1] * arr[i])\n        else:\n            mini[i] = min(mini[i - 1] + arr[i], mini[i - 1] - arr[i], maxi[i - 1] * arr[i])\n            maxi[i] = max(maxi[i - 1] + arr[i], maxi[i - 1] - arr[i], mini[i - 1] * arr[i])\n    print(mini[n - 1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    mini = [0 for i in range(len(arr))]\n    maxi = [0 for i in range(len(arr))]\n    mini[0] = arr[0]\n    maxi[0] = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > 0:\n            mini[i] = min(mini[i - 1] + arr[i], mini[i - 1] - arr[i], mini[i - 1] * arr[i])\n            maxi[i] = max(maxi[i - 1] + arr[i], maxi[i - 1] - arr[i], maxi[i - 1] * arr[i])\n        else:\n            mini[i] = min(mini[i - 1] + arr[i], mini[i - 1] - arr[i], maxi[i - 1] * arr[i])\n            maxi[i] = max(maxi[i - 1] + arr[i], maxi[i - 1] - arr[i], mini[i - 1] * arr[i])\n    print(mini[n - 1])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    best = a[0]\n    worst = a[0]\n    for i in range(1, n):\n        newbest = best\n        newworst = worst\n        newbest = max(newbest, best + a[i])\n        newbest = max(newbest, worst + a[i])\n        newbest = max(newbest, best - a[i])\n        newbest = max(newbest, worst - a[i])\n        newbest = max(newbest, best * a[i])\n        newbest = max(newbest, worst * a[i])\n        newworst = min(newworst, worst + a[i])\n        newworst = min(newworst, best + a[i])\n        newworst = min(newworst, worst - a[i])\n        newworst = min(newworst, best - a[i])\n        newworst = min(newworst, worst * a[i])\n        newworst = min(newworst, best * a[i])\n        best = newbest\n        worst = newworst\n    print(worst)", "def doshit(arr, val):\n    if len(arr) == 1:\n        v = arr[0]\n        l = [v + val, v - val, v * val]\n        return (max(l), min(l))\n    else:\n        (ma, mi) = doshit(arr[:-1], arr[-1])\n        l = [ma + val, ma - val, ma * val, mi + val, mi - val, mi * val]\n        return (max(l), min(l))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    if len(arr) == 1:\n        print(arr[0])\n    else:\n        (ma, mi) = doshit(arr[:-1], arr[-1])\n        print(mi)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    best = []\n    worst = []\n    best.append(a[0])\n    worst.append(a[0])\n    for i in range(1, n):\n        if a[i] > 0:\n            best.append(max([best[i - 1] + a[i], best[i - 1] - a[i], best[i - 1] * a[i]]))\n            worst.append(min([worst[i - 1] + a[i], worst[i - 1] - a[i], worst[i - 1] * a[i]]))\n        else:\n            best.append(max([best[i - 1] + a[i], best[i - 1] - a[i], worst[i - 1] * a[i]]))\n            worst.append(min([worst[i - 1] + a[i], worst[i - 1] - a[i], best[i - 1] * a[i]]))\n    print(worst[n - 1])", "N = int(input())\nfor i in range(N):\n    M = int(input())\n    arr = list(map(int, input().split()))\n    dp = [[0, 0] for x in range(M)]\n    dp[0][0] = dp[0][1] = arr[0]\n    for j in range(1, M):\n        ch = [0 for x in range(6)]\n        for k in range(2):\n            ch[k * 3] = dp[j - 1][k] + arr[j]\n            ch[k * 3 + 1] = dp[j - 1][k] - arr[j]\n            ch[k * 3 + 2] = dp[j - 1][k] * arr[j]\n        ch.sort()\n        dp[j][0] = ch[0]\n        dp[j][1] = ch[5]\n    print(dp[M - 1][0])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maxval = [0] * n\n    maxval[0] = arr[0]\n    minval = [0] * n\n    minval[0] = arr[0]\n    for i in range(1, n):\n        if arr[i] > 0:\n            maxval[i] = max(maxval[i - 1] + arr[i], maxval[i - 1] - arr[i], maxval[i - 1] * arr[i])\n            minval[i] = min(minval[i - 1] + arr[i], minval[i - 1] - arr[i], minval[i - 1] * arr[i])\n        else:\n            maxval[i] = max(maxval[i - 1] + arr[i], maxval[i - 1] - arr[i], minval[i - 1] * arr[i])\n            minval[i] = min(minval[i - 1] + arr[i], minval[i - 1] - arr[i], maxval[i - 1] * arr[i])\n    print(minval[-1])", "import re\nfrom functools import reduce\nINPUT_PAT = re.compile('(-?\\\\d+)\\\\s*')\n\ndef smallest_expression(a, b):\n    return (min(a[0] - b, a[0] + b, a[0] * b, a[1] * b), max(a[1] - b, a[1] + b, a[0] * b, a[1] * b))\nnum_examples = int(input())\nfor _ in range(num_examples):\n    n = int(input())\n    (a0, *a) = (int(i) for i in INPUT_PAT.findall(input()))\n    print(reduce(smallest_expression, a, (a0, a0))[0])"]