["from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    colors = input()\n    count_r = 0\n    count_b = 0\n    count_g = 0\n    for i in range(n):\n        if colors[i] == 'R':\n            count_r += 1\n        elif colors[i] == 'G':\n            count_g += 1\n        else:\n            count_b += 1\n    print(n - max(count_b, count_g, count_r))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    colors = input()\n    count_r = 0\n    count_b = 0\n    count_g = 0\n    for i in range(n):\n        if colors[i] == 'R':\n            count_r += 1\n        elif colors[i] == 'G':\n            count_g += 1\n        else:\n            count_b += 1\n    print(n - max(count_b, count_g, count_r))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    l.append(s.count('R'))\n    l.append(s.count('G'))\n    l.append(s.count('B'))\n    print(n - max(l))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = max(s.count('G'), s.count('R'), s.count('B'))\n    print(n - a)", "test = int(input())\nfor i in range(test):\n    (r, g, b) = (0, 0, 0)\n    n = int(input())\n    st = input()\n    for i in st:\n        if i == 'R':\n            r += 1\n        elif i == 'G':\n            g += 1\n        else:\n            b += 1\n    lis = [r, g, b]\n    a = n - max(lis)\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {'R': 0, 'G': 0, 'B': 0}\n    for i in s:\n        d[i] += 1\n    m = 0\n    for i in d:\n        if d[i] > m:\n            m = d[i]\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    s = input().lower()\n    (r, g, b) = (0, 0, 0)\n    for i in s:\n        if i == 'r':\n            r += 1\n        elif i == 'g':\n            g += 1\n        else:\n            b += 1\n    c = max([r, g, b])\n    print(n - c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input().lower()\n    (r, g, b) = (0, 0, 0)\n    for i in s:\n        if i == 'r':\n            r += 1\n        elif i == 'g':\n            g += 1\n        else:\n            b += 1\n    c = max([r, g, b])\n    print(n - c)", "try:\n    for _ in range(int(input())):\n        N = int(input())\n        C = list(input())\n        l = [C.count('R'), C.count('G'), C.count('B')]\n        print(sum(l) - max(l))\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    x = s.count('R')\n    y = s.count('G')\n    z = s.count('B')\n    k = max(x, y, z)\n    print(n - k)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = Counter(s)\n    l = []\n    for i in c.values():\n        l.append(i)\n    print(n - max(l))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "for i in range(int(input())):\n    S = int(input())\n    C = input()\n    count = 0\n    c = set(C)\n    for i in c:\n        if C.count(i) > count:\n            count = C.count(i)\n        if count == len(C):\n            break\n    print(S - count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    val1 = s.count('R')\n    val2 = s.count('G')\n    val3 = s.count('B')\n    print(len(s) - max(val1, val2, val3))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "for i in range(int(input())):\n    N = int(input())\n    S = input()\n    c1 = S.count('G')\n    c2 = S.count('B')\n    c3 = S.count('R')\n    print(N - max(c1, c2, c3))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    s1 = Counter(s)\n    print(n - s1.most_common()[0][1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = Counter(input())\n    print(n - s.most_common(1)[0][1])", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    u = max(s.count('R'), s.count('G'), s.count('B'))\n    print(n - u)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    u = max(s.count('R'), s.count('G'), s.count('B'))\n    print(n - u)", "for testcases in range(int(input())):\n    a = int(input())\n    s = input()\n    d = {}\n    for i in s:\n        try:\n            d[i]\n        except:\n            d[i] = 1\n        else:\n            d[i] += 1\n    c = True\n    for i in d:\n        if c == True:\n            c = d[i]\n        elif d[i] > c:\n            c = d[i]\n    print(a - c)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    a = max(s.count('G'), s.count('R'), s.count('B'))\n    print(n - a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    u = max(s.count('R'), s.count('G'), s.count('B'))\n    print(n - u)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    color = Counter(s)\n    (_, num) = color.most_common()[0]\n    print(n - num)", "from statistics import mode\nfor _ in range(int(input())):\n    r = int(input())\n    s = input()\n    mo = mode(s)\n    if s.count(mo) > 1:\n        print(r - s.count(mo))\n    else:\n        print(r - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = max(s.count('R'), s.count('G'), s.count('B'))\n    print(n - x)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(input())\n    m = ['R', 'G', 'B']\n    k = []\n    for i in m:\n        if i in l:\n            k.append(l.count(i))\n        else:\n            k.append(0)\n    k.sort()\n    print(sum(k[:2]))", "from statistics import mode\nfor _ in range(int(input())):\n    r = int(input())\n    s = input()\n    mo = mode(s)\n    if s.count(mo) > 1:\n        print(r - s.count(mo))\n    else:\n        print(r - 1)", "n = int(input())\n\ndef maxCount(inp):\n    R = inp.count('R')\n    G = inp.count('G')\n    B = inp.count('B')\n    if R >= G and R >= B:\n        print(G + B)\n    elif G >= B and G >= R:\n        print(B + R)\n    elif B >= R and B >= G:\n        print(R + G)\nfor i in range(n):\n    t = int(input())\n    inp = input().strip()\n    maxCount(inp)", "n = int(input())\nfor i in range(1, n + 1):\n    s = int(input())\n    c = 0\n    z = input()\n    k = max(z.count('R'), z.count('G'), z.count('B'))\n    print(s - k)", "n = int(input())\nfor i in range(1, n + 1):\n    s = int(input())\n    c = 0\n    z = input()\n    k = max(z.count('R'), z.count('G'), z.count('B'))\n    print(s - k)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    maximum = max(r, g, b)\n    if maximum == n:\n        print(0)\n    else:\n        print(n - maximum)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    maximum = max(r, g, b)\n    if maximum == n:\n        print(0)\n    else:\n        print(n - maximum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = input()\n    m = max(z.count('R'), z.count('G'), z.count('B'))\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = max(s.count('R'), s.count('G'), s.count('B'))\n    print(n - ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(input())\n    r = 0\n    g = 0\n    b = 0\n    for j in arr:\n        if j == 'R':\n            r += 1\n        elif j == 'G':\n            g += 1\n        else:\n            b += 1\n    print(n - max(r, g, b))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    col = input()\n    m = max(col.count('R'), col.count('G'), col.count('B'))\n    print(n - m)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = Counter(s)\n    print(n - max(d.values()))", "from collections import Counter\nT = int(input())\nr = []\nfor _ in range(T):\n    input()\n    r.append(input())\nfor i in r:\n    c = Counter(i)\n    ch = max(c, key=c.get)\n    print(len(i) - c[ch])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(str(input()))\n    count1 = s.count('R')\n    count2 = s.count('G')\n    count3 = s.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(n - count1)\n    elif count2 >= count3:\n        print(n - count2)\n    else:\n        print(n - count3)", "for nt in range(int(input())):\n    (nc, sc, rc, gc, bc) = (int(input()), input(), 0, 0, 0)\n    for i in sc:\n        if i == 'R':\n            rc += 1\n        elif i == 'G':\n            gc += 1\n        elif i == 'B':\n            bc += 1\n    print(nc - max(rc, gc, bc))", "for nt in range(int(input())):\n    (nc, sc, rc, gc, bc) = (int(input()), input(), 0, 0, 0)\n    for i in sc:\n        if i == 'R':\n            rc += 1\n        elif i == 'G':\n            gc += 1\n        elif i == 'B':\n            bc += 1\n    print(nc - max(rc, gc, bc))", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    s = input()\n    colors = []\n    colors.append(0)\n    colors.append(0)\n    colors.append(0)\n    for x in range(0, int(n)):\n        if s[x] == 'R':\n            colors[0] += 1\n        elif s[x] == 'G':\n            colors[1] += 1\n        else:\n            colors[2] += 1\n    print(int(n) - max(colors))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    r = 0\n    for i in set(s):\n        x = s.count(i)\n        if x > r:\n            r = x\n    print(str(n - r))", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    x = max(a.count('R'), a.count('G'), a.count('B'))\n    print(n - x)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    r = 0\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    for i in set(s):\n        x = s.count(i)\n        if x > r:\n            r = x\n    sys.stdout.write(str(n - r) + '\\n')", "t = int(input())\nwhile t:\n    N = int(input())\n    col = list(input())\n    r = col.count('R')\n    g = col.count('G')\n    b = col.count('B')\n    s = max(r, g, b)\n    print(N - s)\n    t = t - 1", "t = int(input())\nwhile t:\n    N = int(input())\n    col = list(input())\n    r = col.count('R')\n    g = col.count('G')\n    b = col.count('B')\n    s = max(r, g, b)\n    print(N - s)\n    t = t - 1", "t = int(input())\nwhile t:\n    N = int(input())\n    col = list(input())\n    r = col.count('R')\n    g = col.count('G')\n    b = col.count('B')\n    s = max(r, g, b)\n    print(N - s)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = dict()\n    for i in s:\n        d[i] = d.get(i, 0) + 1\n    print(n - max(d.values()))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    s = set(S)\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        c1 = s.pop()\n        c2 = s.pop()\n        print(min(S.count(c1), S.count(c2)))\n    else:\n        c = max(S.count('R'), S.count('G'), S.count('B'))\n        print(N - c)", "for _ in range(int(input())):\n    N = int(input())\n    S = input().strip()\n    A = set(S)\n    if len(A) == 1:\n        print(0)\n    elif len(A) == 2:\n        color1 = A.pop()\n        color2 = A.pop()\n        print(min(S.count(color1), S.count(color2)))\n    else:\n        color = max(S.count('R'), S.count('G'), S.count('B'))\n        print(N - color)", "for _ in range(int(input())):\n    N = int(input())\n    S = input().strip()\n    A = set(S)\n    if len(A) == 1:\n        print(0)\n    elif len(A) == 2:\n        color1 = A.pop()\n        color2 = A.pop()\n        print(min(S.count(color1), S.count(color2)))\n    else:\n        color = max(S.count('R'), S.count('G'), S.count('B'))\n        print(N - color)", "from collections import Counter\nfor i in range(int(input())):\n    a = int(input())\n    b = list(input())\n    c = Counter(b)\n    print(a - max(c.values()))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (r, g, b) = (0, 0, 0)\n    for x in s:\n        if x == 'R':\n            r += 1\n        elif x == 'G':\n            g += 1\n        else:\n            b += 1\n    print(n - max(r, g, b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(str(input()))\n    count1 = s.count('R')\n    count2 = s.count('G')\n    count3 = s.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(n - count1)\n    elif count2 >= count3:\n        print(n - count2)\n    else:\n        print(n - count3)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    l = list(str(input()))\n    count1 = l.count('R')\n    count2 = l.count('G')\n    count3 = l.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(k - count1)\n    elif count2 >= count3:\n        print(k - count2)\n    else:\n        print(k - count3)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    l = list(str(input()))\n    count1 = l.count('R')\n    count2 = l.count('G')\n    count3 = l.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(k - count1)\n    elif count2 >= count3:\n        print(k - count2)\n    else:\n        print(k - count3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(str(input()))\n    count1 = s.count('R')\n    count2 = s.count('G')\n    count3 = s.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(n - count1)\n    elif count2 >= count3:\n        print(n - count2)\n    else:\n        print(n - count3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(str(input()))\n    count1 = s.count('R')\n    count2 = s.count('G')\n    count3 = s.count('B')\n    if count1 >= count2 and count1 >= count3:\n        print(n - count1)\n    elif count2 >= count3:\n        print(n - count2)\n    else:\n        print(n - count3)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    sm = max(max(r, g), b)\n    print(n - sm)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    r = 0\n    g = 0\n    b = 0\n    for j in s:\n        if j == 'R':\n            r += 1\n        elif j == 'G':\n            g += 1\n        else:\n            b += 1\n    temp = max(r, g, b)\n    print(r + g + b - temp)", "for _ in range(int(input(''))):\n    n = int(input(''))\n    r = g = b = 0\n    c = input()\n    for i in c:\n        if i == 'R':\n            r += 1\n        elif i == 'G':\n            g += 1\n        elif i == 'B':\n            b += 1\n    m = max(r, g, b)\n    print(n - m)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    s = input()\n    c1 = s.count('R')\n    c2 = s.count('G')\n    c3 = s.count('B')\n    m = max(max(c1, c2), c3)\n    M = len(s) - m\n    print(M)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    s = input()\n    c1 = s.count('R')\n    c2 = s.count('G')\n    c3 = s.count('B')\n    m = max(max(c1, c2), c3)\n    M = len(s) - m\n    print(M)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    (r, g, b) = (0, 0, 0)\n    for x in s:\n        if x == 'R':\n            r += 1\n        elif x == 'G':\n            g += 1\n        else:\n            b += 1\n    m = max(r, g, b)\n    print(len(s) - m)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    x = s.count('R')\n    y = s.count('G')\n    z = s.count('B')\n    print(n - max(x, y, z))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    x = s.count('R')\n    y = s.count('B')\n    z = s.count('G')\n    a = max(x, y, z)\n    print(n - a)\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    s = list(input().upper())\n    a = set(s)\n    count = []\n    for j in a:\n        sum = 0\n        for k in s:\n            if j == k:\n                sum += 1\n            count.append(sum)\n    print(n - max(count))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    s1 = set(s)\n    l = []\n    for i in s1:\n        l.append(s.count(i))\n    print(n - max(l))", "for i in range(int(input())):\n    n = int(input())\n    color = list(input())\n    s = set(color)\n    count = 0\n    for j in s:\n        if color.count(j) > count:\n            count = color.count(j)\n    print(n - count)", "for i in range(int(input())):\n    a = int(input())\n    s = input()\n    x = 0\n    for i in set(s):\n        x = max(x, s.count(i))\n    print(a - x)", "from statistics import mode\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    print(N - S.count(mode(S)))", "from statistics import mode\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    print(N - S.count(mode(S)))", "from statistics import mode\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    print(N - S.count(mode(S)))", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(str(input()))\n    b = []\n    b.append(a.count('R'))\n    b.append(a.count('G'))\n    b.append(a.count('B'))\n    c = max(b)\n    print(n - c)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    print(n - max(r, g, b))\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    print(n - max(r, g, b))\n    t -= 1", "for tc in range(int(input())):\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    if r >= g and r >= b:\n        print(len(s) - r)\n    elif g >= r and g >= b:\n        print(len(s) - g)\n    else:\n        print(len(s) - b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    rgb = [s.count('R'), s.count('G'), s.count('B')]\n    print(n - max(rgb))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (R, G, B) = (0, 0, 0)\n    for x in range(n):\n        if s[x] == 'R':\n            R += 1\n        elif s[x] == 'G':\n            G += 1\n        elif s[x] == 'B':\n            B += 1\n    if R > G and R > B:\n        print(n - R)\n    elif G > B:\n        print(n - G)\n    else:\n        print(n - B)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    l = input()\n    r = l.count('R')\n    g = l.count('G')\n    b = l.count('B')\n    print(len(l) - max(r, g, b))", "t = int(input())\nfor ni in range(t):\n    n = int(input())\n    s = input()\n    sr = s.count('R')\n    sg = s.count('G')\n    sb = s.count('B')\n    smax = max(sr, sg, sb)\n    print(n - smax)", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = [s.count('R'), s.count('G'), s.count('B')]\n    print(n - max(l))", "for __ in range(int(input())):\n    walls = int(input())\n    s = input()\n    R = len(s) - len(s.replace('R', ''))\n    G = len(s) - len(s.replace('G', ''))\n    B = len(s) - len(s.replace('B', ''))\n    L = [R, G, B]\n    L.sort()\n    print(L[0] + L[1])", "try:\n    for _ in range(int(input())):\n        N = int(input())\n        C = list(input())\n        l = [C.count('R'), C.count('G'), C.count('B')]\n        print(sum(l) - max(l))\nexcept:\n    pass", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    x = input()\n    y = Counter(x)\n    print(n - max(y.values()))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    x = input()\n    y = Counter(x)\n    print(n - max(y.values()))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    x = input()\n    y = Counter(x)\n    print(n - max(y.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    dict = {'R': 0, 'G': 0, 'B': 0}\n    for j in st:\n        dict[j] += 1\n    if max(dict, key=lambda x: dict[x]) == 'R':\n        print(dict['G'] + dict['B'])\n    elif max(dict, key=lambda x: dict[x]) == 'G':\n        print(dict['R'] + dict['B'])\n    else:\n        print(dict['R'] + dict['G'])", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = list(input())\n    final = []\n    for i in ['R', 'G', 'B']:\n        a = S.count(i)\n        final.append(a)\n    print(N - max(final))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    r = S.count('R')\n    b = S.count('B')\n    g = S.count('G')\n    l = len(S)\n    print(l - max(r, b, g))", "t = int(input())\nwhile t:\n    N = int(input())\n    col = list(input())\n    r = col.count('R')\n    g = col.count('G')\n    b = col.count('B')\n    s = max(r, g, b)\n    print(N - s)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    dic = {}\n    for i in s:\n        dic[i] = 0\n    for i in s:\n        dic[i] += 1\n    maxy = max(list(dic.values()))\n    print(n - maxy)", "t = int(input())\nfor dummy in range(t):\n    n = int(input())\n    s = input()\n    c = [s.count('R'), s.count('G'), s.count('B')]\n    c.sort()\n    print(sum(c[0:2]))", "for _ in range(int(input())):\n    n = int(input())\n    s = input().upper()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    print(n - max(r, g, b))"]