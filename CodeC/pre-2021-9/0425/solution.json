["(L1, L2) = ([0, 20, 36, 51], [16, 21, 22, 22])\nfor T in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(L1[n])\n    else:\n        print(L2[n % 4] + 11 * n)", "(L1, L2) = ([0, 20, 36, 51], [16, 21, 22, 22])\nfor T in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(L1[n])\n    else:\n        print(L2[n % 4] + 11 * n)", "(L1, L2) = ([0, 20, 36, 51], [16, 21, 22, 22])\nfor T in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(L1[n])\n    else:\n        print(L2[n % 4] + 11 * n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n < 4:\n        print([0, 20, 36, 51][n])\n    else:\n        print([16, 21, 22, 22][n % 4] + 11 * n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n < 4:\n        print([0, 20, 36, 51][n])\n    else:\n        print([16, 21, 22, 22][n % 4] + 11 * n)", "(L1, L2) = ([0, 20, 36, 51], [16, 21, 22, 22])\nfor T in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(L1[n])\n    else:\n        print(L2[n % 4] + 11 * n)", "for T in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print([0, 20, 36, 51][n])\n    else:\n        print([16, 21, 22, 22][n % 4] + 11 * n)", "tests = int(input())\nfor i in range(tests):\n    dies = int(input())\n    ans = 0\n    four_stacks = dies // 4\n    dies = dies % 4\n    if four_stacks > 0:\n        ans += four_stacks * 4 * 11\n        ans += (4 - dies) * 4\n    if dies == 3:\n        ans += 51\n    elif dies == 2:\n        ans += 36\n    elif dies == 1:\n        ans += 20\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    if n <= 4:\n        y = n % 4\n        if y == 1:\n            s += 20\n        if y == 2:\n            s += 36\n        if y == 3:\n            s += 15 + 18 + 18\n        if y == 0:\n            s += 15 + 15 + 15 + 15\n    else:\n        x = n // 4\n        s = s + x * 44\n        if n % 4 == 1:\n            s += 4 + 4 + 4 + 20\n        if n % 4 == 2:\n            s += 4 + 4 + 36\n        if n % 4 == 3:\n            s += 4 + 15 + 18 + 18\n        if n % 4 == 0:\n            s += 4 + 4 + 4 + 4\n    print(s)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    t -= 1\n    sum = 0\n    if n <= 4:\n        y = n % 4\n        if y == 1:\n            sum += 20\n        if y == 2:\n            sum += 36\n        if y == 3:\n            sum += 15 + 18 + 18\n        if y == 0:\n            sum += 15 + 15 + 15 + 15\n    else:\n        x = n // 4\n        sum = sum + x * 44\n        if n % 4 == 1:\n            sum += 4 + 4 + 4 + 20\n        if n % 4 == 2:\n            sum += 4 + 4 + 36\n        if n % 4 == 3:\n            sum += 4 + 15 + 18 + 18\n        if n % 4 == 0:\n            sum += 4 + 4 + 4 + 4\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    d = {1: 20, 2: 36, 3: 51, 4: 60}\n    if n < 5:\n        print(d[n])\n    elif n % 4 == 0:\n        print((n // 4 - 1) * 44 + d[4])\n    else:\n        print(n // 4 * 44 + d[n % 4] + (4 - n % 4) * 4)", "q = int(input())\nwhile q > 0:\n    q -= 1\n    n1 = int(input())\n    total = 0\n    n = n1\n    if n > 4:\n        temp = n // 4\n        total += temp * 44\n        n -= 4 * temp\n        if n == 0:\n            total += 16\n        elif n % 4 == 3:\n            total += 55\n        elif n % 4 == 2:\n            total += 44\n        else:\n            total += 32\n    elif n == 4:\n        total = 60\n    elif n == 3:\n        total = 51\n    elif n == 2:\n        total = 36\n    else:\n        total = 20\n    print(total)", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    dic = {0: 0, 1: 20, 2: 36, 3: 51, 4: 60}\n    if n <= 4:\n        print(dic[n])\n    else:\n        a = n % 4\n        b = n // 4\n        res = b * 44 + dic[a] + 4 * (4 - a)\n        print(res)", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    dic = {0: 0, 1: 20, 2: 36, 3: 51, 4: 60}\n    if n <= 4:\n        print(dic[n])\n    else:\n        a = n % 4\n        b = n // 4\n        res = b * 44 + dic[a] + 4 * (4 - a)\n        print(res)", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    dic = {0: 0, 1: 20, 2: 36, 3: 51, 4: 60}\n    if n <= 4:\n        print(dic[n])\n    else:\n        a = n % 4\n        b = n // 4\n        res = b * 44 + dic[a] + 4 * (4 - a)\n        print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    dic = {0: 0, 1: 20, 2: 36, 3: 51, 4: 60}\n    if n <= 4:\n        print(dic[n])\n    else:\n        a = n % 4\n        b = n // 4\n        res = b * 44 + dic[a] + 4 * (4 - a)\n        print(res)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(20)\n    elif n == 2:\n        print(36)\n    elif n == 3:\n        print(51)\n    elif n == 4:\n        print(60)\n    else:\n        rem = n % 4\n        ans = (n - rem) * 11\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(20)\n    elif n == 2:\n        print(36)\n    elif n == 3:\n        print(51)\n    elif n == 4:\n        print(60)\n    else:\n        rem = n % 4\n        ans = (n - rem) * 11\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n        print(ans)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    k = (n - 1) // 4\n    if n % 4 == 3:\n        if n == 3:\n            s = 51\n        else:\n            s = 51 + 44 * k + 4\n    elif n % 4 == 1:\n        if n == 1:\n            s = 20\n        else:\n            s = 20 + 44 * k + 12\n    elif n % 4 == 2:\n        if n == 2:\n            s = 36\n        else:\n            s = 36 + 44 * k + 8\n    else:\n        s = 60 + 44 * k\n    print(s)", "for j in range(int(input())):\n    n = int(input())\n    ans = [20, 36, 51]\n    if n < 4:\n        print(ans[n - 1])\n    else:\n        ans = [0] + ans\n        (en_l, tp_l) = (n // 4, n % 4)\n        print((en_l - 1) * 44 + 60 + ans[tp_l] - 4 * tp_l)", "for _ in range(int(input())):\n    N = int(input())\n    height = N // 4\n    base = 44 * height\n    if height == 0:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 20)\n        if N % 4 == 2:\n            print(base + 36)\n        if N % 4 == 3:\n            print(base + 51)\n    else:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 32)\n        if N % 4 == 2:\n            print(base + 44)\n        if N % 4 == 3:\n            print(base + 55)", "for test_case in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(20 if n == 1 else 36 if n == 2 else 51 if n == 3 else 60 if n == 4 else 0)\n    elif n % 4 == 0:\n        print(60 + 44 * (int(n / 4) - 1))\n    else:\n        count = 24 + 44 * (int(n / 4) - 1)\n        if n % 4 == 1:\n            count = count + 16 + 36\n            print(count)\n        elif n % 4 == 2:\n            count = count + 28 + 36\n            print(count)\n        elif n % 4 == 3:\n            count = count + 39 + 36\n            print(count)", "for test_case in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(20 if n == 1 else 36 if n == 2 else 51 if n == 3 else 60 if n == 4 else 0)\n    elif n % 4 == 0:\n        print(60 + 44 * (int(n / 4) - 1))\n    else:\n        count = 24 + 44 * (int(n / 4) - 1)\n        if n % 4 == 1:\n            count = count + 16 + 36\n            print(count)\n        elif n % 4 == 2:\n            count = count + 28 + 36\n            print(count)\n        elif n % 4 == 3:\n            count = count + 39 + 36\n            print(count)", "for test_case in range(int(input())):\n    n = int(input())\n    count = 44 * max(0, int(n / 4) - 1)\n    count = count + (36 if n >= 4 else 0)\n    count = count + (20 if n % 4 == 1 else 0) + (36 if n % 4 == 2 else 0) + (51 if n % 4 == 3 else 0) + (24 if n % 4 == 0 else 0)\n    if n > 4:\n        count = count + 6 * (4 - n % 4 if n % 4 != 0 else 0) + 2 * (n % 4)\n    print(count)", "for i in range(int(input())):\n    die = int(input())\n    arr = [0, 20, 36, 51]\n    if die < 4:\n        print(arr[die])\n    elif die % 4 == 1:\n        print(2 * 1 + 3 * 1 + 4 * 4 + 5 * die + 6 * die)\n    elif die % 4 == 0:\n        print(4 * 4 + 5 * die + 6 * die)\n    else:\n        j = 3 * 2 + 4 * 4 + 5 * die + 6 * die\n        print(j)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(20)\n    elif n == 2:\n        print(36)\n    elif n == 3:\n        print(51)\n    elif n == 4:\n        print(60)\n    else:\n        rem = n % 4\n        ans = (n - rem) * 11\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n        print(ans)", "for _ in range(int(input())):\n    k = int(input())\n    a = [20, 36, 51, 60]\n    if k < 5:\n        print(a[k - 1])\n        continue\n    steps = int(k / 4)\n    answer = 44 * steps\n    if k % 4 == 1:\n        answer = answer + 32\n    elif k % 4 == 2:\n        answer = answer + 44\n    elif k % 4 == 3:\n        answer = answer + 55\n    else:\n        answer = answer + 16\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    if n <= 4:\n        if n == 1:\n            ans = 20\n        elif n == 2:\n            ans = 36\n        elif n == 3:\n            ans = 51\n        else:\n            ans = 60\n    else:\n        x = n % 4\n        y = n // 4 * 11 * 4\n        if x == 0:\n            ans = y + 16\n        elif x == 1:\n            ans = y + 32\n        elif x == 2:\n            ans = y + 44\n        else:\n            ans = y + 55\n    print(ans)", "val = [0, 20, 36, 51]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    b = n // 4\n    t = n % 4\n    total = (b - 1) * 44 + 60\n    if b == 0:\n        print(val[n])\n    else:\n        print(val[t] + total - 4 * t)", "N = int(input())\nres = 0\nfor i in range(N):\n    no_of_dice = int(input())\n    d = {0: 0, 1: 20, 2: 36, 3: 51}\n    dice_on_top = no_of_dice % 4\n    height_of_stack = no_of_dice // 4\n    full_levels = (height_of_stack - 1) * 44 + 60\n    if height_of_stack == 0:\n        print(d.get(no_of_dice))\n    else:\n        res = full_levels + d.get(dice_on_top) - 4 * dice_on_top\n        print(res)", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51, 16, 12, 8, 4]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    topDice = N % 4\n    H = 44 * (N // 4)\n    if not H:\n        sys.stdout.write(str(ans[topDice]) + '\\n')\n        continue\n    sys.stdout.write(str(ans[topDice] + H + ans[topDice + 4]) + '\\n')", "tries = int(input())\nfor i in range(0, tries):\n    dices = int(input())\n    mydict = {1: 20, 2: 36, 3: 51, 4: 60, 5: 76, 6: 88, 7: 99, 8: 104}\n    if dices // 8 == 0:\n        print(mydict.get(dices))\n    else:\n        print(44 * (dices // 4 - 1) + mydict.get(dices % 4 + 4))", "for j in range(int(input())):\n    n = int(input())\n    ans = [20, 36, 51]\n    if n < 4:\n        print(ans[n - 1])\n    else:\n        ans = [0] + ans\n        (en_l, tp_l) = (n // 4, n % 4)\n        print((en_l - 1) * 44 + 60 + ans[tp_l] - 4 * tp_l)", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51, 16, 12, 8, 4]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    topDice = N % 4\n    H = 44 * (N // 4)\n    if not H:\n        sys.stdout.write(str(ans[topDice]) + '\\n')\n        continue\n    sys.stdout.write(str(ans[topDice] + H + ans[topDice + 4]) + '\\n')", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    H = N // 4 * 44\n    if not H:\n        sys.stdout.write(str(ans[N]) + '\\n')\n        continue\n    topDice = N % 4\n    sys.stdout.write(str(ans[topDice] + H + 4 * (4 - topDice)) + '\\n')", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    H = (N >> 2) * 44\n    topDice = N % 4\n    if not H:\n        sys.stdout.write(str(ans[topDice]) + '\\n')\n        continue\n    sys.stdout.write(str(ans[topDice] + H + 4 * (4 - topDice)) + '\\n')", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    topDice = N % 4\n    H = 44 * (N // 4)\n    sys.stdout.write(str(ans[topDice] + H + min(H, 1) * 4 * (4 - topDice)) + '\\n')", "T = int(input())\nfor i in range(0, T):\n    x = int(input())\n    mydict = {1: 20, 2: 36, 3: 51, 4: 60, 5: 76, 6: 88, 7: 99, 8: 104}\n    if x // 8 == 0:\n        print(mydict.get(x))\n    else:\n        print(44 * (x // 4 - 1) + mydict.get(x % 4 + 4))", "def Solution(arr):\n    sol_arr = []\n    for dice_num in arr:\n        if dice_num == 1:\n            sol_arr.append(20)\n        if dice_num == 2:\n            sol_arr.append(36)\n        if dice_num == 3:\n            sol_arr.append(51)\n        if dice_num == 4:\n            sol_arr.append(60)\n        if dice_num > 4:\n            height = dice_num // 4\n            remain_ontop = dice_num % 4\n            if remain_ontop == 1:\n                sol_arr.append(height * 44 + 20 + 4 * (4 - remain_ontop))\n            if remain_ontop == 2:\n                sol_arr.append(44 * height + 36 + 4 * (4 - remain_ontop))\n            if remain_ontop == 3:\n                sol_arr.append(44 * height + 51 + 4 * (4 - remain_ontop))\n            if remain_ontop == 0:\n                sol_arr.append(44 * height + 4 * (4 - remain_ontop))\n    return sol_arr\narr = []\nfor i in range(int(input())):\n    arr.append(int(input()))\nfor i in Solution(arr):\n    print(i)", "import sys\nT = int(sys.stdin.readline())\nans = [0, 20, 36, 51]\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    topDice = N % 4\n    H = 44 * (N // 4)\n    if not H:\n        sys.stdout.write(str(ans[topDice]) + '\\n')\n        continue\n    sys.stdout.write(str(ans[topDice] + H + 4 * (4 - topDice)) + '\\n')", "T = int(input())\nt = 0\nwhile t < T:\n    a = str(input())\n    a = int(a)\n    answer = {1: 20, 2: 36, 3: 51, 4: 60, 5: 76, 6: 88, 7: 99, 8: 104}\n    if a in answer:\n        print(answer[a])\n        t += 1\n        continue\n    final_ans = 44 * (a // 4 - 1) + answer[4 + a % 4]\n    print(final_ans)\n    t += 1", "t = int(input())\nwhile t != 0:\n    a = int(input())\n    l = [0, 20, 36, 51]\n    ans = 0\n    dice_on_top = a % 4\n    height = a // 4\n    enclosed = (height - 1) * 44 + 60\n    if height == 0:\n        ans = l[a]\n    else:\n        ans = enclosed + l[dice_on_top] - 4 * dice_on_top\n    print(int(ans))\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    sm = n // 4 * 44\n    rem = n % 4\n    if n >= 4:\n        if rem == 0:\n            sm += 16\n        if rem == 1:\n            sm += 32\n        if rem == 2:\n            sm += 44\n        if rem == 3:\n            sm += 55\n        print(sm)\n    else:\n        if n == 1:\n            print(20)\n        if n == 2:\n            print(36)\n        if n == 3:\n            print(51)\n    t -= 1", "import sys\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\nfor i in range(get_int()):\n    N = int(input())\n    ans = 0\n    if N == 1:\n        ans = 20\n    elif N == 2:\n        ans = 36\n    elif N == 3:\n        ans = 51\n    elif N == 4:\n        ans = 60\n    else:\n        levels = N // 4\n        ans = levels * 44\n        rem = N % 4\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n    print(ans)", "import sys\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\nfor i in range(get_int()):\n    N = int(input())\n    ans = 0\n    if N == 1:\n        ans = 20\n    elif N == 2:\n        ans = 36\n    elif N == 3:\n        ans = 51\n    elif N == 4:\n        ans = 60\n    else:\n        levels = N // 4\n        ans = levels * 44\n        rem = N % 4\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n    print(ans)", "t = int(input())\nl = [[1, 20], [2, 36], [3, 51], [4, 60], [8, 104]]\nwhile t:\n    n = int(input())\n    if n <= 4:\n        for i in range(0, 5):\n            if l[i][0] == n:\n                print(l[i][1])\n                break\n    else:\n        d = n % 4\n        n1 = (n - d) // 4\n        r = (n1 - 1) * 44 + 60\n        if d == 1:\n            r += 20 - 4\n        elif d == 2:\n            r += 36 - 8\n        elif d == 3:\n            r += 51 - 12\n        print(r)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    ans = 0\n    if N == 1:\n        ans = 20\n    elif N == 2:\n        ans = 36\n    elif N == 3:\n        ans = 51\n    elif N == 4:\n        ans = 60\n    else:\n        levels = N // 4\n        ans = levels * 44\n        rem = N % 4\n        if rem == 0:\n            ans += 16\n        elif rem == 1:\n            ans += 32\n        elif rem == 2:\n            ans += 44\n        elif rem == 3:\n            ans += 55\n    print(ans)", "import sys\n\ndef get_inpt():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef p_str(x):\n    sys.stdout.write(x + '\\n')\n\ndef p_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef p_arr(arr):\n    sys.stdout.write(' '.join(map(str, arr)) + '\\n')\nfor _ in range(get_int()):\n    n = get_int()\n    s = n // 4\n    k = n % 4\n    sum_ = 11 * (n - k)\n    if n == 1:\n        sum_ = 20\n    elif n == 2:\n        sum_ = 36\n    elif n == 3:\n        sum_ = 51\n    elif n == 4:\n        sum_ = 60\n    elif k == 1:\n        sum_ += 32\n    elif k == 2:\n        sum_ += 44\n    elif k == 3:\n        sum_ += 55\n    elif k == 0:\n        sum_ += 16\n    print(sum_)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    answer = 0\n    if n == 1:\n        answer = 20\n    elif n == 2:\n        answer = 36\n    elif n == 3:\n        answer = 51\n    elif n == 4:\n        answer = 60\n    else:\n        levels = n // 4\n        answer = levels * 44\n        remainder = n % 4\n        if remainder == 0:\n            answer += 16\n        elif remainder == 1:\n            answer += 32\n        elif remainder == 2:\n            answer += 44\n        elif remainder == 3:\n            answer += 55\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('20')\n    elif n == 2:\n        print('36')\n    elif n == 3:\n        print('51')\n    elif n == 4:\n        print('60')\n    else:\n        remain = n % 4\n        ans = (n - remain) // 4 * 44\n        if remain == 0:\n            ans += 16\n        elif remain == 1:\n            ans += 32\n        elif remain == 2:\n            ans += 44\n        elif remain == 3:\n            ans += 55\n        print(ans)", "def solve(n):\n    topPts = [20, 36, 51, 60]\n    bottomLayers = int((n - 1) / 4)\n    t = n % 4\n    s = (bottomLayers >= 1) * bottomLayers * 44 + (n > 4 and t > 0) * (4 - t) * 4 + topPts[t - 1]\n    return s\nt = int(input())\nfor i in range(1, t + 1):\n    k = int(input())\n    j = solve(k)\n    print(str(j))", "F = [0, 6, 11, 15, 18, 20, 21]\n\ndef f(n):\n    return F[n]\n\ndef h(n):\n    return {1: f(5), 2: 2 * f(4), 3: 2 * f(4) + f(3), 4: 4 * f(3)}[n]\n\ndef g(n):\n    k = n % 4 or 4\n    return h(k) + (n > 4) * ((4 - k) * f(3) + k * f(2)) + max(n - k - 4, 0) * f(2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(g(n))", "F = [0, 6, 11, 15, 18, 20, 21]\n\ndef f(n):\n    return F[n]\n\ndef h(n):\n    return (n == 1) * f(5) + (n == 2) * (2 * f(4)) + (n == 3) * (2 * f(4) + f(3)) + (n == 4) * (4 * f(3))\n\ndef g(n):\n    k = n % 4 or 4\n    return h(k) + (n > 4) * ((4 - k) * f(3) + k * f(2)) + max(n - k - 4, 0) * f(2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(g(n))", "F = [0, 6, 11, 15, 18, 20, 21]\n\ndef f(n):\n    return F[n]\n\ndef h(n):\n    return (n == 1) * f(5) + (n == 2) * (2 * f(4)) + (n == 3) * (2 * f(4) + f(3)) + (n == 4) * (4 * f(3))\n\ndef g(n):\n    k = n % 4 + (n % 4 == 0) * 4\n    return h(k) + (n > 4) * ((4 - k) * f(3) + k * f(2)) + max(n - k - 4, 0) * f(2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(g(n))", "def f(n):\n    return sum(range(6, 6 - n, -1))\n\ndef h(n):\n    return (n == 1) * f(5) + (n == 2) * (2 * f(4)) + (n == 3) * (2 * f(4) + f(3)) + (n == 4) * (4 * f(3))\n\ndef g(n):\n    k = n % 4 + (n % 4 == 0) * 4\n    return h(k) + (n > 4) * ((4 - k) * f(3) + k * f(2)) + max(n - k - 4, 0) * f(2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(g(n))", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    c += 11 * (n - n % 4)\n    if n >= 4:\n        c += 4 * (4 - n % 4)\n    t = n % 4\n    if t == 1:\n        c += 20\n    elif t == 2:\n        c += 36\n    elif t == 3:\n        c += 51\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    if n // 4 < 1:\n        if n % 4 == 1:\n            print(20)\n        elif n % 4 == 2:\n            print(36)\n        elif n % 4 == 3:\n            print(51)\n    else:\n        c = 0\n        floor = n // 4\n        c += 44 * (n // 4)\n        if n % 4 == 1:\n            c += 20 + 3 * 4\n        elif n % 4 == 2:\n            c += 36 + 2 * 4\n        elif n % 4 == 3:\n            c += 51 + 4\n        else:\n            c += 16\n        print(c)", "f = [20, 36, 51, 60]\nfor i in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(f[n - 1])\n    elif n % 4 == 0:\n        print(44 * (n // 4 - 1) + 60)\n    else:\n        p = n // 4\n        r = p * 44\n        rem = n % 4\n        dd = rem\n        pp = 4 - dd\n        pp = pp * 4\n        r = r + pp\n        if dd == 0:\n            dd = 4\n        print(f[dd - 1] + r)", "f = [20, 36, 51, 60]\nfor i in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(f[n - 1])\n    elif n % 4 == 0:\n        print(44 * (n // 4 - 1) + 60)\n    else:\n        p = n // 4\n        r = p * 44\n        rem = n % 4\n        dd = rem\n        pp = 4 - dd\n        pp = pp * 4\n        r = r + pp\n        if dd == 0:\n            dd = 4\n        print(f[dd - 1] + r)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('20')\n    elif n == 2:\n        print('36')\n    elif n == 3:\n        print('51')\n    elif n == 4:\n        print('60')\n    else:\n        remain = n % 4\n        ans = n // 4 * 44\n        if remain == 0:\n            ans += 16\n        elif remain == 1:\n            ans += 32\n        elif remain == 2:\n            ans += 44\n        elif remain == 3:\n            ans += 55\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n <= 4:\n        s = 0\n        if n == 1:\n            print(20)\n        elif n == 2:\n            print(36)\n        elif n == 3:\n            print(51)\n        elif n == 4:\n            print(60)\n    else:\n        k = n % 4\n        q = n // 4\n        if k == 1:\n            s = q * 44 + 12 + 20\n        elif k == 2:\n            s = q * 44 + 8 + 36\n        elif k == 3:\n            s = q * 44 + 4 + 51\n        elif k == 0:\n            s = q * 44 + 16\n        print(s)", "for _ in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        top = [20, 36, 51, 60]\n        print(top[n - 1])\n    ans = 0\n    if n > 4:\n        height = n // 4\n        ans += height * 44\n        if n % 4 == 1:\n            ans += 20 + 12\n        elif n % 4 == 2:\n            ans += 36 + 8\n        elif n % 4 == 3:\n            ans += 51 + 4\n        elif n % 4 == 0:\n            ans += 16\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    height = n // 4\n    left = n % 4\n    one_comp_level_pip = 44\n    if left == 1:\n        pip_left = 20\n    elif left == 2:\n        pip_left = 36\n    elif left == 3:\n        pip_left = 51\n    elif left == 0:\n        pip_left = 0\n    if height > 0:\n        top_visible_pip = (4 - left) * 4\n    else:\n        top_visible_pip = 0\n    print(one_comp_level_pip * height + pip_left + top_visible_pip)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    dice = [0, 20, 36, 51, 60]\n    pips = 0\n    if n > 4:\n        k = n % 4\n        l = n // 4\n        pips += (l - 1) * 44 + (dice[k] + 11 * k) + (4 - k) * 15\n    else:\n        pips = dice[n]\n    print(pips)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(20)\n    elif n == 2:\n        print(36)\n    elif n == 3:\n        print(51)\n    elif n == 4:\n        print(60)\n    else:\n        layers = n // 4\n        rem = n % 4\n        if rem == 0:\n            r = 0\n        elif rem == 1:\n            r = 20\n        elif rem == 2:\n            r = 36\n        elif rem == 3:\n            r = 51\n        ans = 44 * layers + (4 - rem) * 4 + r\n        print(ans)", "def solve(n):\n    if n == 1:\n        return 20\n    elif n == 2:\n        return 36\n    elif n == 3:\n        return 51\n    elif n == 4:\n        return 60\n    rem = n % 4\n    empty = 4 - rem\n    floors = n // 4\n    ans = floors * 44 + empty * 4\n    if rem == 1:\n        ans += 20\n    elif rem == 2:\n        ans += 36\n    elif rem == 3:\n        ans += 51\n    return ans\nlocal_ans = []\nlocal_mode = False\n\ndef getArr():\n    return list(map(int, input().split()))\n\ndef getNums():\n    return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if local_mode:\n        local_ans.append(solve(n))\n    else:\n        print(solve(n))\nif local_mode:\n\n    def printAll(sol):\n        for val in sol:\n            print(val)\n    printAll(local_ans)", "for _ in range(int(input())):\n    n = int(input())\n    extra = n % 4\n    enclosed = n // 4\n    tempArr = [0, 20, 36, 51]\n    if enclosed == 0:\n        ans = tempArr[extra]\n    else:\n        ans = (enclosed - 1) * 44 + 60 + (tempArr[extra] - 4 * extra)\n    print(ans)", "import numpy as vcy\n\ndef solve(n):\n    poss = vcy.array([20, 36, 51, 60])\n    first = 20\n    sec = 18\n    third = 15\n    four = 11\n    if n == 1:\n        print(first, '\\n')\n    elif n == 2:\n        print(sec * 2, '\\n')\n    elif n == 3:\n        print(sec * 2 + third, '\\n')\n    elif n == 4:\n        print(third * 4, '\\n')\n    else:\n        n1 = int(n / 4)\n        n2 = 60 + 44 * (n1 - 1)\n        if n % 4 == 0:\n            print(n2, '\\n')\n        else:\n            print(n2 + poss[n % 4 - 1] - 4 * (n % 4))\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 4:\n        if n % 4 == 0:\n            ans = (n // 4 - 1) * 44\n            ans += 60\n            print(ans)\n        elif n % 4 == 1:\n            ans = (n // 4 - 1) * 44\n            ans += 76\n            print(ans)\n        elif n % 4 == 2:\n            ans = (n // 4 - 1) * 44\n            ans += 88\n            print(ans)\n        elif n % 4 == 3:\n            ans = (n // 4 - 1) * 44\n            ans += 99\n            print(ans)\n    elif n == 1:\n        print(20)\n    elif n == 2:\n        print(36)\n    elif n == 3:\n        print(51)", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = [20, 36, 51, 60]\n        if n >= 1 and n < 5:\n            print(arr[n - 1])\n        else:\n            top = n % 4\n            enclosed = n // 4\n            if top != 0:\n                sum1 = (enclosed - 1) * 44 + 60 + arr[top - 1] - 4 * top\n            else:\n                sum1 = (enclosed - 1) * 44 + 60\n            print(sum1)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = n // 4\n    b = n % 4\n    sum = 0\n    if a >= 1:\n        sum += (a - 1) * 44\n        sum += 60\n    if b == 1:\n        sum += 16\n    elif b == 2:\n        sum += 28\n    elif b == 3:\n        sum += 39\n    if a == 0:\n        sum += b * 4\n    print(sum)", "d = {1: 20, 2: 36, 3: 51, 4: 60}\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(d[n])\n    else:\n        var1 = n // 4\n        var2 = n % 4\n        res = 44 * var1\n        if var2 != 0:\n            res += d[var2] + 4 * (4 - var2)\n        else:\n            res += 16\n        print(res)", "li = [0, 20, 36, 51, 60]\nre = {1: 16, 2: 12, 3: 11, 0: 5}\n\ndef solve(N):\n    base_sum = li[4]\n    if N <= 4:\n        return li[N]\n    sum = base_sum\n    r = N % 4\n    while r > 0:\n        sum += re[r]\n        r -= 1\n    sum += (N // 4 - 1) * 44\n    return sum\nT = int(input())\nwhile T > 0:\n    n = int(input())\n    print(solve(n))\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    remain = n // 4\n    ans += 44 * remain\n    n = n % 4\n    if n == 0:\n        if remain > 0:\n            ans += 16\n    elif n == 1:\n        if remain > 0:\n            ans += 12\n        ans += 20\n    elif n == 2:\n        if remain > 0:\n            ans += 8\n        ans += 36\n    else:\n        if remain > 0:\n            ans += 4\n        ans += 51\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    height = N // 4\n    base = 44 * height\n    if height == 0:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 20)\n        if N % 4 == 2:\n            print(base + 36)\n        if N % 4 == 3:\n            print(base + 51)\n    else:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 32)\n        if N % 4 == 2:\n            print(base + 44)\n        if N % 4 == 3:\n            print(base + 55)", "def main():\n    t = int(input())\n    for i in range(t):\n        k = int(input())\n        ans = 0\n        t = k % 4\n        if t == 0:\n            ans = 0\n        if t == 1:\n            ans = 20\n        if t == 2:\n            ans = 36\n        if t == 3:\n            ans = 51\n        n = int(k / 4)\n        z = n * 11\n        if k >= 4:\n            ans = ans + n * 11 * 4 + (4 - t) * 4\n        print(ans)\nmain()", "def main():\n    t = int(input())\n    for i in range(t):\n        k = int(input())\n        ans = 0\n        t = k % 4\n        if t == 0:\n            ans = 0\n        if t == 1:\n            ans = 20\n        if t == 2:\n            ans = 36\n        if t == 3:\n            ans = 51\n        n = int(k / 4)\n        z = n * 11\n        if k >= 4:\n            ans = ans + n * 11 * 4 + (4 - t) * 4\n        print(ans)\nmain()", "d = {1: 20, 2: 36, 3: 51, 4: 60}\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(d[n])\n    else:\n        var1 = n // 4\n        var2 = n % 4\n        res = 44 * var1\n        if var2 != 0:\n            res += d[var2] + 4 * (4 - var2)\n        else:\n            res += 16\n        print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = n % 4\n    div = n // 4\n    res = div * 44\n    if r == 0:\n        res += 4 * 4\n    elif r == 1:\n        res += 20\n        if div > 0:\n            res += 4 * 3\n    elif r == 2:\n        res += 36\n        if div > 0:\n            res += 4 * 2\n    else:\n        res += 51\n        if div > 0:\n            res += 4 * 1\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    d = {1: 20, 2: 36, 3: 51, 4: 60}\n    d1 = {1: 16, 2: 28, 3: 39, 4: 44}\n    r = n % 4\n    q = n // 4\n    if n <= 4:\n        print(d[n])\n    elif n % 4 == 0:\n        print(d[4] + (q - 1) * 44)\n    else:\n        print(d[4] + (q - 1) * 44 + d1[r])", "d = {1: 20, 2: 36, 3: 51, 4: 60}\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(d[n])\n    else:\n        level = n // 4\n        remaining = n % 4\n        if remaining == 0:\n            print(level * d[4] - (n - 4) * 4)\n        else:\n            print(level * d[4] + d[remaining] - (n - 4) * 4)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        if n == 3:\n            print(51)\n        elif n == 2:\n            print(36)\n        elif n == 1:\n            print(20)\n    elif n % 4 == 0:\n        print(15 * 4 + max(0, (n - 4) * 11))\n    elif n % 4 == 3:\n        print(2 * 18 + 2 * 15 + max(0, (n - 4) * 11))\n    elif n % 4 == 2:\n        print(2 * 18 + 2 * 15 + max(0, (n - 4) * 11))\n    elif n % 4 == 1:\n        print(20 + 3 * 15 + max(0, (n - 4) * 11))", "for _ in range(int(input())):\n    N = int(input())\n    height = N // 4\n    base = 44 * height\n    if height == 0:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 20)\n        if N % 4 == 2:\n            print(base + 36)\n        if N % 4 == 3:\n            print(base + 51)\n    else:\n        if N % 4 == 0:\n            print(base + 16)\n        if N % 4 == 1:\n            print(base + 32)\n        if N % 4 == 2:\n            print(base + 44)\n        if N % 4 == 3:\n            print(base + 55)", "t = int(input())\nl = [0, 20, 36, 51]\nfor x in range(t):\n    n = int(input())\n    r = int(n % 4)\n    c = int(n / 4)\n    m = (c - 1) * 44 + 60\n    p = 4 - r\n    if c > 0:\n        print(m + l[r] - r * 4)\n    else:\n        print(l[r])", "li = [0, 20, 36, 51, 60]\nre = {1: 16, 2: 12, 3: 11, 0: 5}\n\ndef solve(N):\n    base_sum = li[4]\n    if N <= 4:\n        return li[N]\n    sum = base_sum\n    r = N % 4\n    while r > 0:\n        sum += re[r]\n        r -= 1\n    sum += (N // 4 - 1) * 44\n    return sum\nT = int(input())\nwhile T > 0:\n    n = int(input())\n    print(solve(n))\n    T -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    top = n % 4\n    h = n // 4\n    th = (h - 1) * 44 + 60\n    list1 = [0, 20, 36, 51]\n    if h == 0:\n        total = list1[n]\n    else:\n        total = th + list1[top] - 4 * top\n    print(total)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    top = n % 4\n    h = n // 4\n    th = (h - 1) * 44 + 60\n    list1 = [0, 20, 36, 51]\n    if h == 0:\n        total = list1[n]\n    else:\n        total = th + list1[top] - 4 * top\n    print(total)", "testcases = int(input())\nnList = []\nfor i in range(testcases):\n    nList.append(int(input()))\nfor n in nList:\n    q = n // 4\n    r = n % 4\n    lastLine = 0 if r == 0 else 20 if r == 1 else 36 if r == 2 else 51\n    maxim = lastLine if n < 4 else max(q - 1, 0) * 44 + (4 - r) * 15 + r * 11 + lastLine\n    print(maxim)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N == 1:\n        print(20)\n    elif N == 2:\n        print(36)\n    elif N == 3:\n        print(51)\n    elif N == 4:\n        print(60)\n    elif N > 4:\n        d = N % 4\n        q = N // 4\n        if d == 1:\n            x = 60 * q + 20 - 4 * (N - 4)\n            print(x)\n        elif d == 2:\n            x = 60 * q + 36 - 4 * (N - 4)\n            print(x)\n        elif d == 3:\n            x = 60 * q + 51 - 4 * (N - 4)\n            print(x)\n        elif d == 0:\n            x = 60 * q + 0 - 4 * (N - 4)\n            print(x)\n        else:\n            pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d1 = [0, 20, 36, 51, 60]\n    if n > 4:\n        on_top = n % 4\n        below = n // 4\n        s = below * 44 + d1[on_top] + (4 - on_top) * 4\n    else:\n        s = d1[n]\n    print(int(s))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N == 1:\n        print(20)\n    elif N == 2:\n        print(36)\n    elif N == 3:\n        print(51)\n    elif N == 4:\n        print(60)\n    elif N > 4:\n        d = N % 4\n        q = N // 4\n        if d == 1:\n            x = 60 * q + 20 - 4 * (N - 4)\n            print(x)\n        elif d == 2:\n            x = 60 * q + 36 - 4 * (N - 4)\n            print(x)\n        elif d == 3:\n            x = 60 * q + 51 - 4 * (N - 4)\n            print(x)\n        elif d == 0:\n            x = 60 * q + 0 - 4 * (N - 4)\n            print(x)\n        else:\n            pass", "def getNumOfPips(n):\n    getValue = lambda x, y: (4 - y) * 4 if x > 0 else 0\n    retVal = 0\n    numOfStacks = n // 4\n    retVal = numOfStacks * 44\n    remainingDice = n % 4\n    if remainingDice == 1:\n        retVal = retVal + getValue(numOfStacks, remainingDice) + 20\n    elif remainingDice == 2:\n        retVal = retVal + getValue(numOfStacks, remainingDice) + 36\n    elif remainingDice == 3:\n        retVal = retVal + getValue(numOfStacks, remainingDice) + 51\n    elif remainingDice == 0:\n        retVal = retVal + 16\n    return retVal\nfor testCase in range(int(input())):\n    numOfPips = 0\n    n = int(input())\n    numOfPips = getNumOfPips(n)\n    print(numOfPips)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    if n % 4 == 1:\n        ans += 20\n    elif n % 4 == 2:\n        ans += 36\n    elif n % 4 == 3:\n        ans += 51\n    x = n // 4\n    ans += x * 44\n    if x >= 1:\n        ans += 4 * (4 - n % 4)\n    print(ans)", "import sys, math\nfrom collections import deque, defaultdict\nimport operator as op\nfrom functools import reduce\nfrom itertools import permutations\nI = sys.stdin.readline\nalpha = 'abcdefghijklmnopqrstuvwxyz'\n\ndef ii():\n    return int(I().strip())\n\ndef li():\n    return list(map(int, I().strip().split()))\n\ndef mi():\n    return map(int, I().strip().split())\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    elif n <= 2:\n        return True\n    else:\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\ndef main():\n    ans = ''\n    tmp = [0, 20, 36, 51]\n    for _ in range(ii()):\n        n = ii()\n        x = n // 4 * 44 + tmp[n % 4]\n        if n // 4 > 0:\n            x += (4 - n % 4) * 4\n        ans += str(x) + '\\n'\n    print(ans)\nmain()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    p = n // 4\n    q = n % 4\n    if q == 1:\n        r = 20\n    elif q == 2:\n        r = 36\n    elif q == 3:\n        r = 51\n    else:\n        r = 0\n    if p < 1:\n        ans = r\n    else:\n        ans = p * 44 + r + 4 * (4 - q)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    n1 = 6 + 5 + 4 + 3 + 2\n    n2 = 2 * 6 + 2 * 5 + 2 * 4 + 2 * 3\n    n3 = 3 * 6 + 3 * 5 + 3 * 4 + 2 * 3\n    if n == 1:\n        print(n1)\n        continue\n    if n == 2:\n        print(n2)\n        continue\n    if n == 3:\n        print(n3)\n        continue\n    x = int(n / 4)\n    p = 6 * 4 + 5 * 4\n    ans = x * p + 4 * 4\n    if n % 4 > 0:\n        if n % 4 == 1:\n            ans = ans + n1 - 4\n        elif n % 4 == 2:\n            ans = ans + n2 - 2 * 4\n        else:\n            ans = ans + n3 - 3 * 4\n    print(ans)", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    d = n % 4\n    n = n // 4\n    s = n * 44\n    if d == 0:\n        s = s + 16\n    elif d == 1:\n        s = s + 20\n        if n > 0:\n            s = s + 12\n    elif d == 2:\n        s = s + 36\n        if n > 0:\n            s = s + 8\n    else:\n        s = s + 51\n        if n > 0:\n            s = s + 4\n    l.append(s)\nfor i in l:\n    print(i)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N == 1:\n        print(20)\n    elif N == 2:\n        print(36)\n    elif N == 3:\n        print(51)\n    elif N == 4:\n        print(60)\n    elif N > 4:\n        d = N % 4\n        q = N // 4\n        if d == 1:\n            x = 60 * q + 20 - 4 * (N - 4)\n            print(x)\n        elif d == 2:\n            x = 60 * q + 36 - 4 * (N - 4)\n            print(x)\n        elif d == 3:\n            x = 60 * q + 51 - 4 * (N - 4)\n            print(x)\n        elif d == 0:\n            x = 60 * q + 0 - 4 * (N - 4)\n            print(x)\n        else:\n            pass"]