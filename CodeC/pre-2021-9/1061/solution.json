["N1 = 100001\ndivisors = [[] for d in range(N1)]\nlpf = [0] * N1\nfor d in range(2, N1):\n    if lpf[d]:\n        for n in range(d, N1, d):\n            divisors[n].append(d)\n    else:\n        for n in range(d, N1, d):\n            lpf[n] = d\n            divisors[n].append(d)\ndisp = [0, 0]\nfor n in range(2, N1):\n    disp.append(disp[n // lpf[n]] + (n % (lpf[n] * lpf[n]) != 0))\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(int)\n    for s in input().split():\n        for i in divisors[int(s)]:\n            d[i] += 1\n    ans = 0\n    for i in d:\n        x = disp[i] * d[i]\n        if x > ans:\n            ans = x\n    print(ans)", "N1 = 100001\ndivisors = [[] for d in range(N1)]\nlpf = [0] * N1\nfor d in range(2, N1):\n    if lpf[d]:\n        for n in range(d, N1, d):\n            divisors[n].append(d)\n    else:\n        for n in range(d, N1, d):\n            lpf[n] = d\n            divisors[n].append(d)\ndisp = [0, 0]\nfor n in range(2, N1):\n    disp.append(disp[n // lpf[n]] + (n % (lpf[n] * lpf[n]) != 0))\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(int)\n    for s in input().split():\n        for i in divisors[int(s)]:\n            d[i] += 1\n    ans = 0\n    for i in d:\n        x = disp[i] * d[i]\n        if x > ans:\n            ans = x\n    print(ans)", "def func(i, counterArr):\n    ans = 0\n    for j in range(i, n, i):\n        ans += counterArr[j]\n    return ans\nn = int(100000.0 + 1)\nprimes = [0] * n\nfor i in range(2, n):\n    if primes[i] == 0:\n        for j in range(i, n, i):\n            primes[j] += 1\nt = int(input())\nfrom collections import Counter\nfor aaa in range(t):\n    xxx = int(input())\n    counterArr = Counter(map(int, input().split()))\n    print(max((func(i, counterArr) * primes[i] for i in range(2, n))))", "def func(i, counterArr):\n    ans = 0\n    for j in range(i, n, i):\n        ans += counterArr[j]\n    return ans\nn = int(100000.0 + 1)\nprimes = [0] * n\nfor i in range(2, n):\n    if primes[i] == 0:\n        for j in range(i, n, i):\n            primes[j] += 1\nt = int(input())\nfrom collections import Counter\nfor aaa in range(t):\n    xxx = int(input())\n    counterArr = Counter(map(int, input().split()))\n    print(max((func(i, counterArr) * primes[i] for i in range(2, n))))", "def func(i, counterArr):\n    ans = 0\n    for j in range(i, n, i):\n        ans += counterArr[j]\n    return ans\nn = int(100000.0 + 1)\nprimes = [0] * n\nfor i in range(2, n):\n    if primes[i] == 0:\n        for j in range(i, n, i):\n            primes[j] += 1\nt = int(input())\nfrom collections import Counter\nfor aaa in range(t):\n    xxx = int(input())\n    counterArr = Counter(map(int, input().split()))\n    print(max((func(i, counterArr) * primes[i] for i in range(2, n))))", "def func(i, counterArr):\n    ans = 0\n    for j in range(i, n, i):\n        ans += counterArr[j]\n    return ans\nn = int(100000.0 + 1)\nprimes = [0] * n\nfor i in range(2, n):\n    if primes[i] == 0:\n        for j in range(i, n, i):\n            primes[j] += 1\nt = int(input())\nfrom collections import Counter\nfor aaa in range(t):\n    xxx = int(input())\n    counterArr = Counter(map(int, input().split()))\n    print(max((func(i, counterArr) * primes[i] for i in range(2, n))))", "from collections import Counter\nn = int(100000.0 + 1)\npf = [0] * n\nfor i in range(2, n):\n    if pf[i] == 0:\n        for j in range(i, n, i):\n            pf[j] += 1\ntest = int(input())\nfor _ in range(test):\n    input()\n    cnt = Counter(map(int, input().split()))\n    s = lambda i: sum((cnt[j] for j in range(i, n, i)))\n    print(max((s(i) * pf[i] for i in range(2, n))))", "from collections import Counter\nn = int(100000.0 + 1)\npf = [0] * n\nfor i in range(2, n):\n    if pf[i] == 0:\n        for j in range(i, n, i):\n            pf[j] += 1\ntest = int(input())\nfor _ in range(test):\n    input()\n    cnt = Counter(map(int, input().split()))\n    s = lambda i: sum((cnt[j] for j in range(i, n, i)))\n    print(max((s(i) * pf[i] for i in range(2, n))))", "from collections import Counter\nn = int(100000.0 + 1)\npf = [0] * n\nfor i in range(2, n):\n    if pf[i] == 0:\n        for j in range(i, n, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = Counter(map(int, input().split()))\n    s = lambda i: sum((cnt[j] for j in range(i, n, i)))\n    print(max((s(i) * pf[i] for i in range(2, n))))", "p = 10 ** 5 + 9\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    from collections import Counter\n    c = Counter(l)\n    f = [0] * p\n    maxi = 0\n    for i in range(2, p):\n        if f[i] == 0:\n            for j in range(i, p, i):\n                f[j] += 1\n        cnt = 0\n        for j in range(i, p, i):\n            cnt += c[j]\n        maxi = max(maxi, cnt * f[i])\n    print(maxi)", "from collections import Counter\nN = 100001\npf = [0] * N\nfor i in range(2, N):\n    if pf[i] == 0:\n        for j in range(i, N, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = Counter(map(int, input().split()))\n    s = lambda i: sum((cnt[j] for j in range(i, N, i)))\n    print(max((s(i) * pf[i] for i in range(2, N))))", "t = int(input())\n\ndef factors(a):\n    count = 0\n    while a % 2 == 0:\n        a = a // 2\n        count = 1\n    for i in range(3, int(a ** 0.5) + 1, 2):\n        if a % i == 0:\n            count += 1\n            while a % i == 0:\n                a = a // i\n    if a > 2:\n        count += 1\n    return count\nfactor = {}\nfor g in range(2, 10 ** 5 + 1):\n    factor[g] = factors(g)\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    val = {}\n    for i in a:\n        val[i] = val.get(i, 0) + 1\n    m = max(a)\n    ma = 0\n    for g in range(2, m + 1):\n        f = factor[g]\n        c = 0\n        for i in range(g, m + 1, g):\n            if i in val:\n                c += val[i]\n        if c * f > ma:\n            ma = c * f\n    print(ma)", "t = int(input())\n\ndef factors(a):\n    count = 0\n    s = set()\n    while a % 2 == 0:\n        a = a // 2\n        count = 1\n        s.add(2)\n    for i in range(3, int(a ** 0.5) + 1, 2):\n        if a % i == 0:\n            count += 1\n            while a % i == 0:\n                a = a // i\n            s.add(i)\n    if a > 2:\n        if a not in s:\n            count += 1\n    return count\nfactor = {}\nfor g in range(2, 10 ** 5 + 1):\n    factor[g] = factors(g)\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    val = {}\n    for i in a:\n        val[i] = val.get(i, 0) + 1\n    m = max(a)\n    ma = 0\n    for g in range(2, m + 1):\n        f = factor[g]\n        c = 0\n        for i in range(g, m + 1, g):\n            if i in val:\n                c += val[i]\n        if c * f > ma:\n            ma = c * f\n    print(ma)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nlim = 10 ** 5\np = [0] * (lim + 3)\nfor i in range(2, lim + 1):\n    if p[i] == 0:\n        for k in range(i, lim + 1, i):\n            p[k] += 1\nfor _ in range(int(input())):\n    n = input()\n    ns = list(map(int, input().split()))\n    maxN = max(ns)\n    vs = [0] * (maxN + 3)\n    for i in ns:\n        vs[i] += 1\n    maxi = 0\n    for g in range(2, maxN + 1):\n        size = 0\n        for k in range(g, maxN + 1, g):\n            size += vs[k]\n        if p[g] * size > maxi:\n            maxi = p[g] * size\n    print(maxi)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\n\ndef distinct_factors(lim):\n    p = [0] * (lim + 3)\n    for i in range(2, lim + 1):\n        if p[i] == 0:\n            for k in range(i, lim + 1, i):\n                p[k] += 1\n    return p\np = distinct_factors(10 ** 5 + 3)\nfor _ in range(int(input())):\n    n = input()\n    ns = list(map(int, input().split()))\n    maxN = max(ns)\n    vs = [0] * (maxN + 3)\n    for i in ns:\n        vs[i] += 1\n    maxi = 0\n    for g in range(2, maxN + 1):\n        size = 0\n        for k in range(g, maxN + 1, g):\n            size += vs[k]\n        if p[g] * size > maxi:\n            maxi = p[g] * size\n    print(maxi)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    n = input()\n    ns = list(map(int, input().split()))\n    maxN = max(ns)\n    vs = [0] * (maxN + 3)\n    for i in ns:\n        vs[i] += 1\n    p = [0] * (maxN + 3)\n    maxi = 0\n    for g in range(2, maxN + 1):\n        size = 0\n        prime = False\n        if p[g] == 0:\n            prime = True\n        for k in range(g, maxN + 1, g):\n            size += vs[k]\n            if prime:\n                p[k] += 1\n        if prime:\n            p[g] = 1\n        if p[g] * size > maxi:\n            maxi = p[g] * size\n    print(maxi)", "N = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    ans = 0\n    cnt = [0] * N\n    for x in map(int, input().split()):\n        cnt[x] += 1\n    for i in range(2, N):\n        if cnt[i]:\n            for v in f[i]:\n                d[v] += pfc[v] * cnt[i]\n    print(max(d))", "from collections import Counter\nN = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    ans = 0\n    for (x, c) in Counter(map(int, input().split())).items():\n        for v in f[x]:\n            d[v] += pfc[v] * c\n    print(max(d))", "N = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    ans = 0\n    for x in map(int, input().split()):\n        for v in f[x]:\n            d[v] += pfc[v]\n    print(max(d))", "N = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    ans = 0\n    for x in map(int, input().split()):\n        for v in f[x]:\n            d[v] += pfc[v]\n            ans = max(ans, d[v])\n    print(ans)", "N = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = {}\n    for x in map(int, input().split()):\n        for v in f[x]:\n            d[v] = d.get(v, 0) + pfc[v]\n    print(max(d.values()))", "N = 100001\npf = [0] * N\nfor i in range(2, N):\n    if pf[i] == 0:\n        for j in range(i, N, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = [0] * N\n    m = 0\n    for x in map(int, input().split()):\n        cnt[x] += 1\n        m = max(m, x)\n    m += 1\n    s = lambda i: sum((cnt[j] for j in range(i, m, i)))\n    print(max((s(i) * pf[i] for i in range(2, m))))", "N = 100001\npfc = [0] * N\nf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if pfc[i] == 0:\n        for j in range(i, N, i):\n            pfc[j] += 1\n            t = f[j][:]\n            f[j].append(i)\n            f[j].extend((x * i for x in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    for x in map(int, input().split()):\n        for v in f[x]:\n            d[v] += pfc[v]\n    print(max(d))", "N = 100001\npf = [[] for _ in range(N)]\nfor i in range(2, N):\n    if not pf[i]:\n        for j in range(i, N, i):\n            t = pf[j][:]\n            pf[j].append((i, 1))\n            pf[j].extend(((x * i, c + 1) for (x, c) in t))\nt = int(input())\nfor _ in range(t):\n    input()\n    d = [0] * N\n    for x in map(int, input().split()):\n        for (v, c) in pf[x]:\n            d[v] += c\n    print(max(d))", "from collections import Counter\nN = 100001\npf = [0] * N\nfor i in range(2, N):\n    if pf[i] == 0:\n        for j in range(i, N, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = Counter(map(int, input().split()))\n    m = max(cnt) + 1\n    s = lambda i: sum((cnt[j] for j in range(i, m, i)))\n    print(max((s(i) * pf[i] for i in range(2, m))))", "for _ in range(int(input())):\n    n = input()\n    ns = list(map(int, input().split()))\n    maxN = max(ns)\n    vs = [0] * (maxN + 3)\n    for i in ns:\n        vs[i] += 1\n    p = [0] * (maxN + 3)\n    maxi = 0\n    for g in range(2, maxN + 1):\n        size = 0\n        prime = False\n        if p[g] == 0:\n            prime = True\n        for k in range(g, maxN + 1, g):\n            size += vs[k]\n            if prime:\n                p[k] += 1\n        if prime:\n            p[g] = 1\n        if p[g] * size > maxi:\n            maxi = p[g] * size\n    print(maxi)", "import math\nfor _ in range(int(input())):\n    n = input()\n    ns = list(map(int, input().split()))\n    maxN = max(ns)\n    vs = [0] * (maxN + 3)\n    for i in ns:\n        vs[i] += 1\n    p = [0] * (maxN + 3)\n    maxi = 0\n    for g in range(2, maxN + 1):\n        size = 0\n        prime = False\n        if p[g] == 0:\n            prime = True\n        for k in range(g, maxN + 1, g):\n            size += vs[k]\n            if prime:\n                p[k] += 1\n        if p[g] == 0:\n            p[g] = 1\n        if p[g] * size > maxi:\n            maxi = p[g] * size\n    print(maxi)", "from collections import Counter\nN = 100001\npf = [0] * N\nfor i in range(2, N):\n    if pf[i] == 0:\n        for j in range(i, N, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = Counter(map(int, input().split()))\n    s = lambda i: sum((cnt[j] for j in range(i, N, i)))\n    print(max((s(i) * pf[i] for i in range(2, N))))", "N = 100001\npf = [0] * N\nfor i in range(2, N):\n    if pf[i] == 0:\n        for j in range(i, N, i):\n            pf[j] += 1\nt = int(input())\nfor _ in range(t):\n    input()\n    cnt = [0] * N\n    for x in map(int, input().split()):\n        cnt[x] += 1\n    s = lambda i: sum((cnt[j] for j in range(i, N, i)))\n    print(max((s(i) * pf[i] for i in range(2, N))))", "n = 10 ** 5 + 5\ncount = [0 for i in range(n + 1)]\n\ndef Sieve():\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p <= n:\n        if prime[p] == True:\n            count[p] = 1\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n                count[i] += 1\n        p += 1\nSieve()\nimport math\n\ndef get_divisors(element):\n    i = 1\n    while i <= math.sqrt(element):\n        if element % i == 0:\n            if element // i == i:\n                count_of_divisors[i] += 1\n            else:\n                count_of_divisors[i] += 1\n                count_of_divisors[element // i] += 1\n        i += 1\nT = int(input())\nvec = [[] for i in range(100005)]\nfor k in range(1, 10 ** 5 + 1):\n    for l in range(k, 10 ** 5 + 1, k):\n        vec[l].append(k)\nfor t in range(T):\n    count_of_divisors = [0 for i in range(n + 1)]\n    ans = 0\n    N = int(input())\n    a = list(map(int, input().split()))\n    for element in a:\n        for j in vec[element]:\n            count_of_divisors[j] += 1\n    for j in range(n + 1):\n        x = count[j] * count_of_divisors[j]\n        if x > ans:\n            ans = x\n    print(ans)"]