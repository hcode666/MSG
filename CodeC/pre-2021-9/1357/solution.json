["from collections import Counter\nfrom operator import itemgetter\n\ndef find_x1(num, q):\n    a1 = 0\n    r1 = num // q\n    r2 = num % q\n    a2 = r1\n    for r3 in range(r1 + 1):\n        r4 = r2 % (q + 1)\n        if r4 == 0:\n            a1 = r2 // (q + 1)\n            break\n        else:\n            a2 -= 1\n            r2 += q\n    num1 = a1 * (q + 1) + a2 * q\n    if num1 != num:\n        (a1, a2) = (0, 0)\n    return (a1, a2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = [int(x) for x in input().split()]\n    if n == k:\n        print('YES')\n        print(*a)\n    else:\n        a1 = Counter(a)\n        m = n % k\n        q = n // k\n        q1 = len(a1)\n        ans = 'YES'\n        if q1 > k:\n            ans = 'NO'\n        else:\n            m1 = 0\n            a2 = []\n            b1 = []\n            b2 = []\n            for (k1, v1) in a1.items():\n                (x1, y1) = find_x1(v1, q)\n                if x1 == 0 and y1 == 0:\n                    ans = 'NO'\n                    break\n                else:\n                    m1 += x1\n                    if m1 > m:\n                        ans = 'NO'\n                        break\n                    x2 = y1 // (q + 1)\n                    x3 = y1 % (q + 1)\n                    k2 = int(k1)\n                    w = (k2, x2)\n                    b1 = b1 + [k2] * x1\n                    b2 = b2 + [k2] * x3\n                    a2.append(w)\n            if ans == 'YES' and (m - m1) % q != 0:\n                ans = 'NO'\n            if ans == 'YES':\n                a2.sort(key=itemgetter(1), reverse=True)\n                remaining = (m - m1) // q\n                for i in a2:\n                    x2 = i[1]\n                    k2 = i[0]\n                    if x2 > 0 and x2 < remaining:\n                        remaining -= x2\n                        b1 = b1 + [k2] * (x2 * q)\n                    elif x2 > 0 and remaining > 0:\n                        b1 = b1 + [k2] * (remaining * q)\n                        x2 -= remaining\n                        remaining = 0\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                    elif x2 > 0:\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                if remaining != 0:\n                    ans = 'NO'\n                else:\n                    b = b1 + b2\n                    b = b * q\n                    b = b + b1\n        print(ans)\n        if ans == 'YES':\n            print(*b)", "from collections import Counter\nfrom operator import itemgetter\n\ndef find_x1(num, q):\n    a1 = 0\n    r1 = num // q\n    r2 = num % q\n    a2 = r1\n    for r3 in range(r1 + 1):\n        r4 = r2 % (q + 1)\n        if r4 == 0:\n            a1 = r2 // (q + 1)\n            break\n        else:\n            a2 -= 1\n            r2 += q\n    num1 = a1 * (q + 1) + a2 * q\n    if num1 != num:\n        (a1, a2) = (0, 0)\n    return (a1, a2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = [int(x) for x in input().split()]\n    if n == k:\n        print('YES')\n        print(*a)\n    else:\n        a1 = Counter(a)\n        m = n % k\n        q = n // k\n        q1 = len(a1)\n        ans = 'YES'\n        if q1 > k:\n            ans = 'NO'\n        else:\n            m1 = 0\n            a2 = []\n            b1 = []\n            b2 = []\n            for (k1, v1) in a1.items():\n                (x1, y1) = find_x1(v1, q)\n                if x1 == 0 and y1 == 0:\n                    ans = 'NO'\n                    break\n                else:\n                    m1 += x1\n                    if m1 > m:\n                        ans = 'NO'\n                        break\n                    x2 = y1 // (q + 1)\n                    x3 = y1 % (q + 1)\n                    k2 = int(k1)\n                    w = (k2, x2)\n                    b1 = b1 + [k2] * x1\n                    b2 = b2 + [k2] * x3\n                    a2.append(w)\n            if ans == 'YES' and (m - m1) % q != 0:\n                ans = 'NO'\n            if ans == 'YES':\n                a2.sort(key=itemgetter(1), reverse=True)\n                remaining = (m - m1) // q\n                for i in a2:\n                    x2 = i[1]\n                    k2 = i[0]\n                    if x2 > 0 and x2 < remaining:\n                        remaining -= x2\n                        b1 = b1 + [k2] * (x2 * q)\n                    elif x2 > 0 and remaining > 0:\n                        b1 = b1 + [k2] * (remaining * q)\n                        x2 -= remaining\n                        remaining = 0\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                    elif x2 > 0:\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                if remaining != 0:\n                    ans = 'NO'\n                else:\n                    b = b1 + b2\n                    b = b * q\n                    b = b + b1\n        print(ans)\n        if ans == 'YES':\n            print(*b)", "from collections import Counter\nfrom operator import itemgetter\n\ndef find_x1(num, q):\n    a1 = 0\n    r1 = num // q\n    r2 = num % q\n    a2 = r1\n    for r3 in range(r1 + 1):\n        r4 = r2 % (q + 1)\n        if r4 == 0:\n            a1 = r2 // (q + 1)\n            break\n        else:\n            a2 -= 1\n            r2 += q\n    num1 = a1 * (q + 1) + a2 * q\n    if num1 != num:\n        (a1, a2) = (0, 0)\n    return (a1, a2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = [int(x) for x in input().split()]\n    if n == k:\n        print('YES')\n        print(*a)\n    else:\n        a1 = Counter(a)\n        m = n % k\n        q = n // k\n        q1 = len(a1)\n        ans = 'YES'\n        if q1 > k:\n            ans = 'NO'\n        else:\n            m1 = 0\n            a2 = []\n            b1 = []\n            b2 = []\n            for (k1, v1) in a1.items():\n                (x1, y1) = find_x1(v1, q)\n                if x1 == 0 and y1 == 0:\n                    ans = 'NO'\n                    break\n                else:\n                    m1 += x1\n                    if m1 > m:\n                        ans = 'NO'\n                        break\n                    x2 = y1 // (q + 1)\n                    x3 = y1 % (q + 1)\n                    k2 = int(k1)\n                    w = (k2, x2)\n                    b1 = b1 + [k2] * x1\n                    b2 = b2 + [k2] * x3\n                    a2.append(w)\n            if ans == 'YES' and (m - m1) % q != 0:\n                ans = 'NO'\n            if ans == 'YES':\n                a2.sort(key=itemgetter(1), reverse=True)\n                remaining = (m - m1) // q\n                for i in a2:\n                    x2 = i[1]\n                    k2 = i[0]\n                    if x2 > 0 and x2 < remaining:\n                        remaining -= x2\n                        b1 = b1 + [k2] * (x2 * q)\n                    elif x2 > 0 and remaining > 0:\n                        b1 = b1 + [k2] * (remaining * q)\n                        x2 -= remaining\n                        remaining = 0\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                    elif x2 > 0:\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                if remaining != 0:\n                    ans = 'NO'\n                else:\n                    b = b1 + b2\n                    b = b * q\n                    b = b + b1\n        print(ans)\n        if ans == 'YES':\n            print(*b)", "from collections import Counter\nfrom operator import itemgetter\n\ndef find_x1(num, q):\n    a1 = 0\n    r1 = num // q\n    r2 = num % q\n    a2 = r1\n    for r3 in range(r1 + 1):\n        r4 = r2 % (q + 1)\n        if r4 == 0:\n            a1 = r2 // (q + 1)\n            break\n        else:\n            a2 -= 1\n            r2 += q\n    num1 = a1 * (q + 1) + a2 * q\n    if num1 != num:\n        (a1, a2) = (0, 0)\n    return (a1, a2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = [int(x) for x in input().split()]\n    if n == k:\n        print('YES')\n        print(*a)\n    else:\n        a1 = Counter(a)\n        m = n % k\n        q = n // k\n        q1 = len(a1)\n        ans = 'YES'\n        if q1 > k:\n            ans = 'NO'\n        else:\n            m1 = 0\n            a2 = []\n            b1 = []\n            b2 = []\n            for (k1, v1) in a1.items():\n                (x1, y1) = find_x1(v1, q)\n                if x1 == 0 and y1 == 0:\n                    ans = 'NO'\n                    break\n                else:\n                    m1 += x1\n                    if m1 > m:\n                        ans = 'NO'\n                        break\n                    x2 = y1 // (q + 1)\n                    x3 = y1 % (q + 1)\n                    k2 = int(k1)\n                    w = (k2, x2)\n                    b1 = b1 + [k2] * x1\n                    b2 = b2 + [k2] * x3\n                    a2.append(w)\n            if ans == 'YES' and (m - m1) % q != 0:\n                ans = 'NO'\n            if ans == 'YES':\n                a2.sort(key=itemgetter(1), reverse=True)\n                remaining = (m - m1) // q\n                for i in a2:\n                    x2 = i[1]\n                    k2 = i[0]\n                    if x2 > 0 and x2 < remaining:\n                        remaining -= x2\n                        b1 = b1 + [k2] * (x2 * q)\n                    elif x2 > 0 and remaining > 0:\n                        b1 = b1 + [k2] * (remaining * q)\n                        x2 -= remaining\n                        remaining = 0\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                    elif x2 > 0:\n                        b2 = b2 + [k2] * (x2 * (q + 1))\n                if remaining != 0:\n                    ans = 'NO'\n                else:\n                    b = b1 + b2\n                    b = b * q\n                    b = b + b1\n        print(ans)\n        if ans == 'YES':\n            print(*b)", "import operator\nfrom math import *\nt = int(input())\nfor y in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    c = ceil(n / k)\n    ch = []\n    ch1 = []\n    count = 0\n    for i in d.keys():\n        noh = []\n        nol = []\n        while d[i]:\n            if d[i] % c == 0:\n                noh.insert(0, i)\n                d[i] -= c\n                count += 1\n            elif d[i] % (c - 1) == 0:\n                nol.append(i)\n                d[i] -= c - 1\n                count += 1\n            elif d[i] > c:\n                noh.insert(0, i)\n                d[i] -= c\n                count += 1\n            else:\n                print('NO')\n                break\n        else:\n            if noh:\n                ch.append(noh)\n            if nol:\n                ch1.append(nol)\n            continue\n        break\n    else:\n        if count > k:\n            print('NO')\n        else:\n            while k - count:\n                for i in ch:\n                    if len(i) >= c - 1:\n                        ch1.append([i[0]] * c)\n                        for z in range(c - 1):\n                            del i[0]\n                        count += 1\n                        break\n                else:\n                    break\n            if k == count:\n                print('YES')\n                ch2 = []\n                for i in ch:\n                    ch2.extend(i)\n                for i in ch1:\n                    ch2.extend(i)\n                for i in range(n):\n                    print(ch2[i % k], end=' ')\n                print()\n            else:\n                print('NO')"]