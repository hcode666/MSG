["import sys\nBitsSetTable256 = [0] * 256\n\ndef initialize():\n    BitsSetTable256[0] = 0\n    for i in range(256):\n        BitsSetTable256[i] = (i & 1) + BitsSetTable256[i // 2]\n\ndef countSetBits(n):\n    return BitsSetTable256[n & 255] + BitsSetTable256[n >> 8 & 255] + BitsSetTable256[n >> 16 & 255] + BitsSetTable256[n >> 24]\nfor _ in range(int(sys.stdin.readline())):\n    initialize()\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    even = 0\n    odd = 0\n    for i in range(n):\n        if countSetBits(arr[i]) & 1:\n            odd += 1\n        else:\n            even += 1\n    for i in range(q):\n        a = int(sys.stdin.readline())\n        if countSetBits(a) & 1:\n            sys.stdout.write(f'{odd} {even}\\n')\n        else:\n            sys.stdout.write(f'{even} {odd}\\n')", "import sys\nBitsSetTable256 = [0] * 256\n\ndef initialize():\n    BitsSetTable256[0] = 0\n    for i in range(256):\n        BitsSetTable256[i] = (i & 1) + BitsSetTable256[i // 2]\n\ndef countSetBits(n):\n    return BitsSetTable256[n & 255] + BitsSetTable256[n >> 8 & 255] + BitsSetTable256[n >> 16 & 255] + BitsSetTable256[n >> 24]\nfor _ in range(int(sys.stdin.readline())):\n    initialize()\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    even = 0\n    odd = 0\n    for i in range(n):\n        if countSetBits(arr[i]) & 1:\n            odd += 1\n        else:\n            even += 1\n    for i in range(q):\n        a = int(sys.stdin.readline())\n        if countSetBits(a) & 1:\n            sys.stdout.write(f'{odd} {even}\\n')\n        else:\n            sys.stdout.write(f'{even} {odd}\\n')", "import sys\nBitsSetTable256 = [0] * 256\n\ndef initialize():\n    BitsSetTable256[0] = 0\n    for i in range(256):\n        BitsSetTable256[i] = (i & 1) + BitsSetTable256[i // 2]\n\ndef countSetBits(n):\n    return BitsSetTable256[n & 255] + BitsSetTable256[n >> 8 & 255] + BitsSetTable256[n >> 16 & 255] + BitsSetTable256[n >> 24]\nfor _ in range(int(sys.stdin.readline())):\n    initialize()\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    even = 0\n    odd = 0\n    for i in range(n):\n        if countSetBits(arr[i]) & 1:\n            odd += 1\n        else:\n            even += 1\n    for i in range(q):\n        a = int(sys.stdin.readline())\n        if countSetBits(a) & 1:\n            sys.stdout.write(f'{odd} {even}\\n')\n        else:\n            sys.stdout.write(f'{even} {odd}\\n')", "import sys\n\ndef xor_engine():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        (n, q) = map(int, sys.stdin.readline().strip().split())\n        numbers = list(map(int, sys.stdin.readline().strip().split()))\n        (numbers_even_ones_count, numbers_odd_ones_count) = (0, 0)\n        for number in numbers:\n            if bin(number).count('1') % 2 == 0:\n                numbers_even_ones_count += 1\n        numbers_odd_ones_count = n - numbers_even_ones_count\n        for ___ in range(q):\n            p = int(sys.stdin.readline().strip())\n            if numbers_odd_ones_count == numbers_even_ones_count:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n                continue\n            are_p_ones_even = bin(p).count('1') % 2 == 0\n            if are_p_ones_even:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n            else:\n                sys.stdout.write(f'{numbers_odd_ones_count} {numbers_even_ones_count}\\n')\nxor_engine()", "import sys\n\ndef xor_engine():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        (n, q) = map(int, sys.stdin.readline().strip().split())\n        numbers = list(map(int, sys.stdin.readline().strip().split()))\n        (numbers_even_ones_count, numbers_odd_ones_count) = (0, 0)\n        for number in numbers:\n            if bin(number).count('1') % 2 == 0:\n                numbers_even_ones_count += 1\n        numbers_odd_ones_count = n - numbers_even_ones_count\n        for ___ in range(q):\n            p = int(sys.stdin.readline().strip())\n            if numbers_odd_ones_count == numbers_even_ones_count:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n                continue\n            are_p_ones_even = bin(p).count('1') % 2 == 0\n            if are_p_ones_even:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n            else:\n                sys.stdout.write(f'{numbers_odd_ones_count} {numbers_even_ones_count}\\n')\nxor_engine()", "import sys\n\ndef xor_engine():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        (n, q) = map(int, sys.stdin.readline().strip().split())\n        numbers = list(map(int, sys.stdin.readline().strip().split()))\n        (numbers_even_ones_count, numbers_odd_ones_count) = (0, 0)\n        for number in numbers:\n            if bin(number).count('1') % 2 == 0:\n                numbers_even_ones_count += 1\n        numbers_odd_ones_count = n - numbers_even_ones_count\n        for ___ in range(q):\n            p = int(sys.stdin.readline().strip())\n            if numbers_odd_ones_count == numbers_even_ones_count:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n                continue\n            are_p_ones_even = bin(p).count('1') % 2 == 0\n            if are_p_ones_even:\n                sys.stdout.write(f'{numbers_even_ones_count} {numbers_odd_ones_count}\\n')\n            else:\n                sys.stdout.write(f'{numbers_odd_ones_count} {numbers_even_ones_count}\\n')\nxor_engine()", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (op, zp) = (0, 0)\n    for i in a:\n        curr = bin(i).count('1')\n        if curr & 1:\n            op += 1\n        else:\n            zp += 1\n    query = [int(input()) for i in range(q)]\n    for b in query:\n        p = bin(b).count('1')\n        if p & 1:\n            print(op, zp)\n        else:\n            print(zp, op)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (op, zp) = (0, 0)\n    for i in a:\n        curr = bin(i).count('1')\n        if curr & 1:\n            op += 1\n        else:\n            zp += 1\n    query = [int(input()) for i in range(q)]\n    for b in query:\n        p = bin(b).count('1')\n        if p & 1:\n            print(op, zp)\n        else:\n            print(zp, op)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (op, zp) = (0, 0)\n    for i in a:\n        curr = bin(i).count('1')\n        if curr & 1:\n            op += 1\n        else:\n            zp += 1\n    query = [int(input()) for i in range(q)]\n    for b in query:\n        p = bin(b).count('1')\n        if p & 1:\n            print(op, zp)\n        else:\n            print(zp, op)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (op, zp) = (0, 0)\n    for i in a:\n        curr = bin(i).count('1')\n        if curr & 1:\n            op += 1\n        else:\n            zp += 1\n    query = [int(input()) for i in range(q)]\n    for b in query:\n        p = bin(b).count('1')\n        if p & 1:\n            print(op, zp)\n        else:\n            print(zp, op)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    od = ev = 0\n    for j in arr:\n        if bin(j).count('1') % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    que = [int(input()) for i in range(q)]\n    for i in que:\n        if bin(i).count('1') % 2 == 0:\n            print(ev, od)\n        else:\n            print(od, ev)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    od = ev = 0\n    for j in arr:\n        if bin(j).count('1') % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    que = [int(input()) for i in range(q)]\n    for i in que:\n        if bin(i).count('1') % 2 == 0:\n            print(ev, od)\n        else:\n            print(od, ev)", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "import sys\nt = int(sys.stdin.readline().rstrip())\nwhile t:\n    (N, Q) = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    A = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    c = 0\n    for i in range(N):\n        if bin(A[i]).count('1') % 2 == 0:\n            c += 1\n    co = N - c\n    for i in range(Q):\n        p = int(sys.stdin.readline().rstrip())\n        p = bin(p).count('1')\n        if p % 2 == 0:\n            string = str(c) + ' ' + str(co) + '\\n'\n            sys.stdout.write(string)\n        else:\n            string = str(co) + ' ' + str(c) + '\\n'\n            sys.stdout.write(string)\n    t = t - 1", "import sys\nT = int(sys.stdin.readline().strip())\nfor i in range(T):\n    (n, q) = [int(X) for X in sys.stdin.readline().strip().split()]\n    arr = [int(X) for X in sys.stdin.readline().strip().split()]\n    count_even = 0\n    for i in arr:\n        if bin(i).count('1') % 2 == 0:\n            count_even += 1\n    count_odd = n - count_even\n    for z in range(q):\n        p = int(sys.stdin.readline().strip())\n        if bin(p).count('1') % 2 == 0:\n            string = str(count_even) + ' ' + str(count_odd) + '\\n'\n            sys.stdout.write(string)\n        else:\n            string = str(count_odd) + ' ' + str(count_even) + '\\n'\n            sys.stdout.write(string)", "import sys\nT = int(sys.stdin.readline().strip())\nfor i in range(T):\n    (n, q) = [int(X) for X in sys.stdin.readline().strip().split()]\n    arr = [int(X) for X in sys.stdin.readline().strip().split()]\n    count_even = 0\n    for i in arr:\n        if bin(i).count('1') % 2 == 0:\n            count_even += 1\n    count_odd = n - count_even\n    for z in range(q):\n        p = int(sys.stdin.readline().strip())\n        if bin(p).count('1') % 2 == 0:\n            string = str(count_even) + ' ' + str(count_odd) + '\\n'\n            sys.stdout.write(string)\n        else:\n            string = str(count_odd) + ' ' + str(count_even) + '\\n'\n            sys.stdout.write(string)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, q) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    e = 0\n    o = 0\n    for i in arr:\n        x = bin(i)[2:].count('1')\n        if x & 1 == 0:\n            e += 1\n        else:\n            o += 1\n    for i in range(q):\n        p = int(input())\n        m = bin(p)[2:].count('1')\n        if m % 2 == 0:\n            print(e, o)\n        else:\n            print(o, e)", "import os, io, sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for i in l:\n        x = bin(i)[2:].count('1')\n        if x % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    for i in range(q):\n        c = int(input())\n        x = bin(c)[2:].count('1')\n        if x % 2 == 0:\n            print(e, o)\n        else:\n            print(o, e)", "import os, io, sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = [0, 0]\n    for j in arr:\n        res[bin(j).count('1') % 2] += 1\n    for _ in range(q):\n        cnt = bin(int(input())).count('1')\n        print(*res) if not cnt % 2 else print(*res[::-1])", "T = int(input())\nfor i in range(T):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "T = int(input())\nfor i in range(T):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "t = int(input())\nfor _ in range(t):\n    (c, d) = (0, 0)\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [int(input()) for i in range(q)]\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    for i in k:\n        if bin(i).count('1') % 2 == 0:\n            print(c, d)\n        else:\n            print(d, c)", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    [N, Q] = list(map(int, sys.stdin.readline().split()))\n    arr = list(map(int, sys.stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in range(N):\n        temp = bin(arr[i]).count('1')\n        if temp % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for j in range(Q):\n        p = int(sys.stdin.readline())\n        p_ones = bin(p).count('1')\n        if p_ones % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    [N, Q] = list(map(int, sys.stdin.readline().split()))\n    arr = list(map(int, sys.stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in range(N):\n        temp = bin(arr[i]).count('1')\n        if temp % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for j in range(Q):\n        p = int(sys.stdin.readline())\n        p_ones = bin(p).count('1')\n        if p_ones % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "try:\n    from sys import stdin, stdout\n    for _ in range(int(input())):\n        (n, k) = map(int, stdin.readline().split())\n        a = list(map(int, stdin.readline().split()))\n        (even, odd) = (0, 0)\n        for i in range(n):\n            count_of_q = bin(a[i]).count('1')\n            if count_of_q % 2 == 0:\n                even += 1\n            else:\n                odd += 1\n        for i in range(k):\n            q = int(stdin.readline())\n            count_of_i = bin(q).count('1')\n            if count_of_i % 2 == 0:\n                print(even, odd)\n            else:\n                print(odd, even)\nexcept:\n    pass", "from sys import stdin, stdout\n\ndef main():\n    t = int(stdin.readline())\n    for i in range(t):\n        list2 = []\n        (n, q) = map(int, stdin.readline().split())\n        a = list(map(int, stdin.readline().split()))\n        for i in range(len(a)):\n            list2.append(bin(a[i]).count('1'))\n        o = 0\n        e = 0\n        for i in range(len(list2)):\n            if list2[i] % 2 == 0:\n                e += 1\n            else:\n                o += 1\n        for i in range(q):\n            b = 0\n            b = int(stdin.readline())\n            e1 = 0\n            e1 = bin(b).count('1')\n            if e1 % 2 == 0:\n                print(e, end=' ')\n                print(o)\n            else:\n                print(o, end=' ')\n                print(e)\nmain()", "import sys\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\nans = []\nfor _ in range(T):\n    (n, q) = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    dic = defaultdict(int)\n    for ele in x:\n        if bin(ele).count('1') % 2 == 0:\n            dic['even'] += 1\n        else:\n            dic['odd'] += 1\n    for o in range(q):\n        l = int(sys.stdin.readline())\n        if bin(l).count('1') % 2 != 0:\n            print(dic['odd'], dic['even'])\n        else:\n            print(dic['even'], dic['odd'])", "import sys\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\nans = []\nfor _ in range(T):\n    (n, q) = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    dic = defaultdict(int)\n    for ele in x:\n        if bin(ele).count('1') % 2 == 0:\n            dic['even'] += 1\n        else:\n            dic['odd'] += 1\n    for o in range(q):\n        l = int(sys.stdin.readline())\n        if bin(l).count('1') % 2 != 0:\n            print(dic['odd'], dic['even'])\n        else:\n            print(dic['even'], dic['odd'])", "import sys\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\nans = []\nfor _ in range(T):\n    (n, q) = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    dic = defaultdict(int)\n    for ele in x:\n        if bin(ele).count('1') % 2 == 0:\n            dic['even'] += 1\n        else:\n            dic['odd'] += 1\n    for o in range(q):\n        l = int(sys.stdin.readline())\n        if bin(l).count('1') % 2 != 0:\n            print(dic['odd'], dic['even'])\n        else:\n            print(dic['even'], dic['odd'])", "t = int(input())\nfor j in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    e = o = 0\n    m = []\n    for i in l:\n        if bin(i).count('1') % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    a = str(e) + ' ' + str(o)\n    b = str(o) + ' ' + str(e)\n    for i in range(q):\n        p = int(input())\n        m.append(p)\n    for i in range(q):\n        if bin(m[i]).count('1') % 2 == 0:\n            print(a)\n        else:\n            print(b)", "for T in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (even, qu) = (0, [])\n    for i in range(n):\n        if bin(l[i]).count('1') % 2 == 0:\n            even += 1\n    str1 = str(even) + ' ' + str(n - even)\n    str2 = str(n - even) + ' ' + str(even)\n    for i in range(q):\n        qu.append(int(input()))\n    for i in range(q):\n        print(str1) if bin(qu[i]).count('1') % 2 == 0 else print(str2)", "for T in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (even, odd) = (0, 0)\n    qu = []\n    for i in range(n):\n        if bin(l[i]).count('1') % 2 == 0:\n            even += 1\n    str1 = str(even) + ' ' + str(n - even)\n    str2 = str(n - even) + ' ' + str(even)\n    for i in range(q):\n        p = int(input())\n        qu.append(p)\n    for i in range(q):\n        if bin(qu[i]).count('1') % 2 == 0:\n            print(str1)\n        else:\n            print(str2)", "for T in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (even, odd) = (0, 0)\n    qu = []\n    for i in range(n):\n        if bin(l[i]).count('1') % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    str1 = str(even) + ' ' + str(odd)\n    str2 = str(odd) + ' ' + str(even)\n    for i in range(q):\n        p = int(input())\n        qu.append(p)\n    for i in range(q):\n        if bin(qu[i]).count('1') % 2 == 0:\n            print(str1)\n        else:\n            print(str2)", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    (n, q) = [int(x) for x in stdin.readline().split()]\n    a = [f'{int(x):b}' for x in stdin.readline().split()]\n    (od, ev) = (0, 0)\n    for x in a:\n        cnt = x.count('1')\n        if cnt % 2:\n            od += 1\n        else:\n            ev += 1\n    while q:\n        query = int(stdin.readline())\n        cons = f'{query:b}'\n        odd_even = cons.count('1')\n        if odd_even % 2:\n            print(od, ev)\n        else:\n            print(ev, od)\n        q -= 1\n    t -= 1", "from sys import stdin, stdout\nimport math\nfrom collections import Counter, deque\nL = lambda : list(map(int, stdin.readline().strip().split()))\nM = lambda : map(int, stdin.readline().strip().split())\nI = lambda : int(stdin.readline().strip())\nIN = lambda : stdin.readline().strip()\nC = lambda : stdin.readline().strip().split()\nmod = 1000000007\n\ndef s(a):\n    print(' '.join(list(map(str, a))))\nBit = [0] * 256\n\ndef initialize():\n    Bit[0] = 0\n    for i in range(256):\n        Bit[i] = (i & 1) + Bit[i // 2]\n\ndef countsetbits(n):\n    return Bit[n & 255] + Bit[n >> 8 & 255] + Bit[n >> 16 & 255] + Bit[n >> 24]\ninitialize()\nfor _ in range(I()):\n    (n, q) = M()\n    a = L()\n    (e, o) = (0, 0)\n    for i in range(n):\n        x = countsetbits(a[i])\n        if x % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    for i in range(q):\n        p = I()\n        if countsetbits(p) % 2 == 0:\n            print(e, o)\n        else:\n            print(o, e)", "for t in range(int(input())):\n    (n, q) = map(int, input().split())\n    qu = []\n    lst = list(map(int, input().split()))\n    evnbt = 0\n    oddbt = 0\n    for i in lst:\n        if bin(i).count('1') % 2 == 0:\n            evnbt += 1\n        else:\n            oddbt += 1\n    str1 = str(evnbt) + ' ' + str(oddbt)\n    str2 = str(oddbt) + ' ' + str(evnbt)\n    for i in range(q):\n        p = int(input())\n        qu.append(p)\n    for i in qu:\n        if bin(i).count('1') % 2 == 0:\n            print(str1)\n        else:\n            print(str2)", "for T in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (even, odd) = (0, 0)\n    qu = []\n    for i in range(n):\n        if bin(l[i]).count('1') % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    str1 = str(even) + ' ' + str(odd)\n    str2 = str(odd) + ' ' + str(even)\n    for i in range(q):\n        p = int(input())\n        qu.append(p)\n    for i in range(q):\n        if bin(qu[i]).count('1') % 2 == 0:\n            print(str1)\n        else:\n            print(str2)", "from sys import stdin\nfor tc in range(int(stdin.readline())):\n    (N, Q) = map(int, stdin.readline().split())\n    n_list = list(map(int, stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in n_list:\n        if bin(i)[2:].count('1') % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for q in range(Q):\n        P = int(stdin.readline())\n        if bin(P).count('1') % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "import sys\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\nfor _ in range(T):\n    (n, q) = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    odd = 0\n    even = 0\n    for ele in x:\n        if bin(ele).count('1') % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for o in range(q):\n        l = int(sys.stdin.readline())\n        if bin(l).count('1') % 2 != 0:\n            print(odd, even)\n        else:\n            print(even, odd)", "import sys\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\nans = []\nfor _ in range(T):\n    (n, q) = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    dic = defaultdict(int)\n    for ele in x:\n        if bin(ele).count('1') % 2 == 0:\n            dic['even'] += 1\n        else:\n            dic['odd'] += 1\n    for o in range(q):\n        l = int(sys.stdin.readline())\n        if bin(l).count('1') % 2 != 0:\n            print(dic['odd'], dic['even'])\n        else:\n            print(dic['even'], dic['odd'])", "import sys\nfor _ in range(int(input())):\n    (n, q) = map(int, sys.stdin.readline().rstrip().split())\n    b = list(map(int, sys.stdin.readline().rstrip().split()))\n    q1 = 0\n    q2 = 0\n    for i in b:\n        if bin(i).count('1') % 2 == 0:\n            q1 += 1\n        else:\n            q2 += 1\n    for _ in range(q):\n        q = int(sys.stdin.readline())\n        if bin(q).count('1') % 2 == 0:\n            s = str(q1) + ' ' + str(q2)\n        else:\n            s = str(q2) + ' ' + str(q1)\n        sys.stdout.write(s)\n        sys.stdout.write('\\n')", "import sys\nfor _ in range(int(input())):\n    (n, q) = map(int, sys.stdin.readline().rstrip().split())\n    b = list(map(int, sys.stdin.readline().rstrip().split()))\n    q1 = 0\n    q2 = 0\n    for i in b:\n        if bin(i).count('1') % 2 == 0:\n            q1 += 1\n        else:\n            q2 += 1\n    for _ in range(q):\n        q = int(sys.stdin.readline())\n        if bin(q).count('1') % 2 == 0:\n            s = str(q1) + ' ' + str(q2)\n        else:\n            s = str(q2) + ' ' + str(q1)\n        sys.stdout.write(s)\n        sys.stdout.write('\\n')", "from sys import stdin\nt = int(stdin.readline())\nwhile t > 0:\n    n = list(map(int, stdin.readline().split()))\n    a = list(map(int, stdin.readline().split()))\n    e = 0\n    o = 0\n    for i in range(0, n[0]):\n        if str(bin(a[i])).count('1') % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    while n[1] > 0:\n        e1 = 0\n        o1 = 0\n        q = int(stdin.readline())\n        if str(bin(q)).count('1') % 2 == 0:\n            e1 = e\n            o1 = o\n        else:\n            e1 = o\n            o1 = e\n        print(e1, o1)\n        n[1] = n[1] - 1\n    t = t - 1", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        (n, q) = [int(a) for a in input().split()]\n        numbers = list(map(int, input().split()))\n        evens = 0\n        for j in numbers:\n            if bin(j).count('1') % 2 == 0:\n                evens += 1\n        for __ in range(q):\n            if bin(int(input())).count('1') % 2 == 0:\n                print(evens, n - evens)\n            else:\n                print(n - evens, evens)\nmain()", "import sys\n\ndef binary(x):\n    x = bin(int(x)).count('1')\n    if x % 2:\n        return 0\n    else:\n        return 1\nfor _ in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    s = list(map(binary, sys.stdin.readline().split()))\n    even = sum(s)\n    odd = a - even\n    for j in range(b):\n        x = bin(int(sys.stdin.readline())).count('1')\n        if x % 2:\n            print(odd, even)\n        else:\n            print(even, odd)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in arr:\n        if bin(i).count('1') % 2:\n            odd += 1\n        else:\n            even += 1\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        if bin(k).count('1') % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in arr:\n        if bin(i).count('1') % 2:\n            odd += 1\n        else:\n            even += 1\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        if bin(k).count('1') % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    (even, odd) = (0, 0)\n    for i in arr:\n        if bin(i).count('1') % 2:\n            odd += 1\n        else:\n            even += 1\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        if bin(k).count('1') % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)", "import sys\nfor testcase in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    even = 0\n    odd = 0\n    for i in a:\n        if bin(i).count('1') % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    for i in range(b):\n        p = int(sys.stdin.readline())\n        if bin(p).count('1') % 2 == 0:\n            print(str(even) + ' ' + str(odd))\n        else:\n            print(str(odd) + ' ' + str(even))", "import sys\nfor qwe in range(int(sys.stdin.readline())):\n    (n, q) = list(map(int, sys.stdin.readline().split()))\n    L = list(map(int, sys.stdin.readline().split()))\n    even = 0\n    odd = 0\n    for i in range(n):\n        x = bin(L[i]).count('1')\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for asdea in range(q):\n        p = int(sys.stdin.readline())\n        ans1 = even\n        ans2 = odd\n        if bin(p).count('1') % 2 == 1:\n            (ans1, ans2) = (ans2, ans1)\n        print(str(ans1) + ' ' + str(ans2))", "import sys\n\ndef input():\n    return sys.stdin.readline()\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = [int(i) for i in input().strip().split(' ')]\n    odd = 0\n    even = 0\n    for i in arr:\n        if bin(i)[2:].count('1') % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    for _ in range(q):\n        p = bin(int(input()))[2:].count('1')\n        if p % 2 == 0:\n            print(even, odd)\n        else:\n            print(odd, even)"]