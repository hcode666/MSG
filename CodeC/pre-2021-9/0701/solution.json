["def solve():\n    (n, m, k) = map(int, input().rstrip().split())\n    if n < m:\n        return -1\n    for i in range(n // m, 0, -1):\n        if (n - m * i) % k == 0:\n            return (n - m * i) // k\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    (n, m, k) = map(int, input().rstrip().split())\n    if n < m:\n        return -1\n    for i in range(n // m, 0, -1):\n        if (n - m * i) % k == 0:\n            return (n - m * i) // k\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    (n, m, k) = map(int, input().rstrip().split())\n    if n < m:\n        return -1\n    left = n // m\n    for i in range(left, 0, -1):\n        t = n - m * i\n        if t % k == 0:\n            return t // k\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "import sys\n\ndef solve():\n    (n, m, k) = map(int, input().rstrip().split())\n    if n < m:\n        return -1\n    left = n // m\n    for i in range(left, 0, -1):\n        t = n - m * i\n        if t % k == 0:\n            return t // k\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            i = 1\n            break\n        count += 1\n        n -= k\n    if i == 1:\n        print(count)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            i = 1\n            break\n        count += 1\n        n -= k\n    if i == 1:\n        print(count)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            i = 1\n            break\n        count += 1\n        n -= k\n    if i == 1:\n        print(count)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            i = 1\n            break\n        count += 1\n        n -= k\n    if i == 1:\n        print(count)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            i = 1\n            break\n        count += 1\n        n -= k\n    if i == 1:\n        print(count)\n    else:\n        print(-1)", "import sys\nfrom collections import Counter, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return sys.stdin.readline()[:-1]\nfor tastcas in range(int(input())):\n    (n, m, k) = li()\n    rem = []\n    c = 0\n    r = n % m\n    if r == 0:\n        print(c)\n        continue\n    rem.append(r)\n    c += 1\n    n -= k\n    while n > 0:\n        r = n % m\n        if r == rem[0] or r == 0:\n            rem.append(r)\n            break\n        c += 1\n        n -= k\n    if n > 0 and rem[-1] == 0:\n        print(c)\n    else:\n        print(-1)", "from math import gcd\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        inv = n * mod_inverse(k, m) % m\n        if n - k * inv < m:\n            ans = -1\n        else:\n            ans = inv\n    print(ans)", "from math import gcd\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        inv = n * mod_inverse(k, m) % m\n        if n - k * inv < m:\n            ans = -1\n        else:\n            ans = inv\n    print(ans)", "from math import gcd\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        inv = n * mod_inverse(k, m) % m\n        if n - k * inv < m:\n            ans = -1\n        else:\n            ans = inv\n    print(ans)", "from math import gcd\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        inv = n * mod_inverse(k, m) % m\n        if n - k * inv < m:\n            ans = -1\n        else:\n            ans = inv\n    print(ans)", "def gcd(a, b):\n    if b > a:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef snek(a, b):\n    if b == 0:\n        return (1, 0)\n    s = snek(b, a % b)\n    x = s[1]\n    y = s[0] - a // b * s[1]\n    return (x, y)\n\ndef snak(a, b):\n    ans = snek(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        c = n * snak(k, m) % m\n        if n - k * c < m:\n            ans = -1\n        else:\n            ans = c\n    print(ans)", "def gcd(a, b):\n    if b > a:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        check = False\n        while n > 0:\n            if n % m == 0:\n                check = True\n                break\n            ans += 1\n            n -= k\n        if check == False:\n            ans = -1\n    print(ans)", "def gcd(a, b):\n    if b > a:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef mod_inverse_helper(a, b):\n    if b == 0:\n        return (1, 0)\n    small = mod_inverse_helper(b, a % b)\n    x = small[1]\n    y = small[0] - a // b * small[1]\n    return (x, y)\n\ndef mod_inverse(a, b):\n    ans = mod_inverse_helper(a, b)\n    return (ans[0] + b) % b\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n < m or n % gcd(m, k) != 0:\n        ans = -1\n    else:\n        g = gcd(m, k)\n        n //= g\n        m //= g\n        k //= g\n        inv = n * mod_inverse(k, m) % m\n        if n - k * inv < m:\n            ans = -1\n        else:\n            ans = inv\n    print(ans)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    x = n % m\n    f = 0\n    c = 0\n    while n > 0:\n        if n % m == 0:\n            f = 1\n            break\n        c += 1\n        n -= k\n    if f == 1:\n        print(c)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    x = n % m\n    flag = False\n    cnt = 0\n    while n > 0:\n        if n % m == 0:\n            flag = True\n            break\n        cnt += 1\n        n -= k\n    if flag:\n        print(cnt)\n    else:\n        print(-1)", "def calc(n, m, k):\n    count = 0\n    while n % m != 0:\n        n -= k\n        count += 1\n        if n <= 0:\n            return -1\n            break\n    return count\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(calc(n, m, k))", "from math import *\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n < m:\n        print(-1)\n    else:\n        cnt = 0\n        while n > 0:\n            if n % m == 0:\n                print(cnt)\n                break\n            else:\n                cnt += 1\n                n -= k\n        else:\n            print(-1)", "def fun1(n, m, k):\n    result = 0\n    while n % m != 0:\n        result += 1\n        n -= k\n        if n <= 0:\n            return -1\n    return result\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(fun1(n, m, k))", "def count(n, m, k):\n    c = 0\n    while n % m != 0:\n        c += 1\n        n -= k\n        if n <= 0:\n            return -1\n    return c\nT = int(input())\nfor _ in range(T):\n    (n, m, k) = map(int, input().split())\n    print(count(n, m, k))", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    fg = 0\n    while n % m != 0:\n        n = n - k\n        c = c + 1\n        if n < m:\n            fg = 1\n            print(-1)\n            break\n    if fg == 0:\n        print(c)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    fg = 0\n    while n % m != 0:\n        n = n - k\n        c = c + 1\n        if n < m:\n            fg = 1\n            print(-1)\n            break\n    if fg == 0:\n        print(c)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    fg = 0\n    while n % m != 0:\n        n = n - k\n        c = c + 1\n        if n < m:\n            fg = 1\n            print(-1)\n            break\n    if fg == 0:\n        print(c)", "def share(candies, friends, dump):\n    x = 0\n    while candies % friends != 0:\n        candies -= dump\n        x += 1\n        if friends > candies:\n            return -1\n    return x\nfor x in range(int(input())):\n    data = str(input()).split(' ')\n    print(share(int(data[0]), int(data[1]), int(data[2])))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if n % m == 0:\n        print(0)\n    elif m > n:\n        print(-1)\n    elif k > n:\n        print(-1)\n    else:\n        count = 0\n        printed = False\n        while n > 0:\n            if n % m == 0:\n                print(count)\n                printed = True\n                break\n            else:\n                count += 1\n                n -= k\n        if not printed:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if n % m == 0:\n        print(0)\n    elif m > n:\n        print(-1)\n    elif k > n:\n        print(-1)\n    else:\n        count = 0\n        printed = False\n        while n > 0:\n            if n % m == 0:\n                print(count)\n                printed = True\n                break\n            else:\n                count += 1\n                n -= k\n        if not printed:\n            print(-1)", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    a = int(x[0])\n    b = int(x[1])\n    c = int(x[2])\n    flag = 0\n    cn = 0\n    while flag == 0 and b <= a:\n        if a % b == 0:\n            flag = 1\n            print(cn)\n            break\n        else:\n            a -= c\n            cn += 1\n    if flag == 0:\n        print('-1')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    t = 0\n    while n >= m:\n        if n % m == 0:\n            c = 1\n            break\n        n -= k\n        t += 1\n    if c == 1:\n        print(t)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    t = False\n    c = 0\n    while n >= m:\n        if n % m == 0:\n            t = True\n            break\n        n = n - k\n        c += 1\n    if t:\n        print(c)\n    else:\n        print(-1)", "for __ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = 0\n    if n % m == 0:\n        print(0)\n    else:\n        t = n % m\n        if t % k == 0:\n            print(t // k)\n        else:\n            x = False\n            while t < n:\n                if t % k == 0:\n                    print(t // k)\n                    x = True\n                    break\n                t += m\n            if x == False:\n                print(-1)", "t = int(input())\nif t < 100000:\n    while t:\n        t = t - 1\n        (n, m, k) = map(int, input().split())\n        if m > n:\n            print(-1)\n        else:\n            (r, c) = (0, 0)\n            while n >= m:\n                if n % m == 0:\n                    r = 1\n                    print(c)\n                    break\n                else:\n                    n = n - k\n                    c = c + 1\n            if r == 0:\n                print(-1)", "for _ in range(int(input())):\n    (c, f, t) = map(int, input().split())\n    k = 0\n    if c < f:\n        print(-1)\n    else:\n        r = 0\n        while c >= f:\n            if c % f == 0:\n                print(k)\n                r = 1\n                break\n            else:\n                k += 1\n                c = c - t\n        if r == 0:\n            print(-1)", "for _ in range(int(input())):\n    (n, m, y) = map(int, input().split())\n    if m > n:\n        print(-1)\n    else:\n        (r, c) = (0, 0)\n        while n >= m:\n            if n % m == 0:\n                r = 1\n                print(c)\n                break\n            else:\n                n = n - y\n                c = c + 1\n        if r == 0:\n            print(-1)", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = -1\n    if n == m or n % m == 0:\n        count = 0\n    elif n > m:\n        b = n / m\n        c = math.floor(b)\n        while c != 0:\n            temp = n - m * c\n            if temp % k == 0:\n                count = temp // k\n                break\n            c -= 1\n    else:\n        count = -1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    [n, m, k] = [int(v) for v in input().strip().split()]\n    if n < m:\n        print('-1')\n    elif n % m == 0:\n        print('0')\n    elif k > n - m:\n        print('-1')\n    else:\n        flag = 0\n        m_ = int(n / m)\n        sub = m * int(n / m)\n        ans = 0\n        while flag == 0:\n            if m_ <= 0:\n                break\n            if (n - sub) % k == 0:\n                ans = n - sub\n                flag = 1\n                break\n            else:\n                m_ -= 1\n                sub = m_ * m\n                ans += 1\n        if flag == 0:\n            print('-1')\n        else:\n            print(int(ans / k))", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    a = int(x[0])\n    b = int(x[1])\n    c = int(x[2])\n    flag = 0\n    cn = 0\n    while flag == 0 and b <= a:\n        if a % b == 0:\n            flag = 1\n            print(cn)\n            break\n        else:\n            a -= c\n            cn += 1\n    if flag == 0:\n        print('-1')", "for __ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = 0\n    flag = 1\n    while n >= m and flag:\n        if n % m == 0:\n            print(count)\n            flag = 0\n            break\n        n = n - k\n        count += 1\n    if flag == 1:\n        print('-1')", "t = int(input())\nwhile t > 0:\n    (N, M, K) = list(map(int, input().split()))\n    count = 0\n    while N > 0:\n        if N % M == 0:\n            break\n        N = N - K\n        count += 1\n    if N <= 0:\n        print(-1)\n    else:\n        print(count)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split()]\n    count = 0\n    while n > 0:\n        if n % m == 0:\n            break\n        n = n - k\n        count += 1\n    if n <= 0:\n        print(-1)\n    else:\n        print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if m > n:\n        print(-1)\n    else:\n        s = n\n        f = 0\n        count = 0\n        while n >= m:\n            if n % m == 0:\n                f = 1\n                print(count)\n                break\n            else:\n                n = n - k\n                count += 1\n        if f == 0:\n            print(-1)", "def candy(a, b, c):\n    s = 0\n    while a % b != 0 and a > 0:\n        a -= c\n        s += 1\n    if a <= 0:\n        return -1\n    return s\nr = []\nt = int(input())\nfor i in range(t):\n    a = input().split()\n    a = [int(i) for i in a]\n    r += [candy(a[0], a[1], a[2])]\nfor i in r:\n    print(i)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    while n % m and n > 0:\n        n = n - k\n        c += 1\n    if n <= 0:\n        print(-1)\n    else:\n        print(c)", "for i in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split()]\n    if n < m:\n        print(-1)\n    else:\n        g = 0\n        c = 0\n        while g != 1 and n > 0:\n            h = n % m\n            if h == 0:\n                g = 1\n                print(c)\n                break\n            else:\n                c += 1\n                n -= k\n        if g == 0:\n            print(-1)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    flag = 0\n    while n > 0 and flag == 0:\n        if n % m == 0:\n            if flag == 0:\n                print(c)\n                flag = 1\n        else:\n            n = n - k\n            c += 1\n    if flag == 0:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    flag = 0\n    while n > 0 and flag == 0:\n        if n % m == 0:\n            if flag == 0:\n                print(c)\n                flag = 1\n        else:\n            n = n - k\n            c += 1\n    if flag == 0:\n        print(-1)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    (n, m, k) = [int(x) for x in input().split()]\n    r = n % m\n    flag = 1\n    while n > r:\n        if r % k == 0:\n            print(r // k)\n            flag = 0\n            break\n        else:\n            r += m\n    if flag:\n        print(-1)", "import math\nt = int(input())\nfor tt in range(t):\n    (n, m, k) = map(int, input().split())\n    aa = n % m\n    cc = n // m\n    while aa % k != 0 and cc != 0:\n        aa += m\n        cc -= 1\n    if cc == 0:\n        print(-1)\n    else:\n        print(aa // k)", "t = int(input())\nfor x in range(t):\n    nm = list(map(int, input().strip().split()))\n    n = nm[0]\n    m = nm[1]\n    k = nm[2]\n    if n >= m:\n        rem = int(n % m)\n        if rem == 0:\n            ans = 0\n        elif rem % k == 0:\n            ans = rem // k\n        else:\n            while rem % k != 0:\n                rem = rem + m\n                if rem > n:\n                    ans = -1\n                    break\n            if rem <= n - m:\n                ans = rem // k\n            else:\n                ans = -1\n        print(ans)\n    else:\n        ans = -1\n        print(ans)", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    equal = int(n / m)\n    ans = -1\n    for i in range(equal, 0, -1):\n        diff = n - m * i\n        if diff % k == 0:\n            ans = int(diff / k)\n            break\n    print(ans)\n    t -= 1", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = -1\n    if n == m or n % m == 0:\n        count = 0\n    elif n > m:\n        b = n / m\n        c = math.floor(b)\n        while c != 0:\n            temp = n - m * c\n            if temp % k == 0:\n                count = temp // k\n                break\n            c -= 1\n    else:\n        count = -1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = input().split()\n    n = int(n)\n    m = int(m)\n    k = int(k)\n    c = 0\n    f = 1\n    while n > 0:\n        if n % m == 0:\n            print(c)\n            f = 0\n            break\n        else:\n            n = n - k\n            c += 1\n            continue\n    if f == 1:\n        print(-1)", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nnb_test = RI()\nfor _ in range(nb_test):\n    (candies, nb_frnd, k) = RMI()\n    throws = 0\n    thrown = 0\n    ans = 0\n    while True:\n        curr = candies - thrown\n        if curr <= 0:\n            ans = -1\n            break\n        if curr % nb_frnd == 0:\n            break\n        thrown += k\n        ans += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, M, K) = map(int, input().split())\n    cnt = 0\n    while N % M != 0 and N > 0:\n        N = N - K\n        cnt += 1\n    if N <= 0:\n        print(-1)\n    else:\n        print(cnt)", "for i in range(0, int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    fg = 0\n    while n % m != 0:\n        n = n - k\n        c = c + 1\n        if n < m:\n            fg = 1\n            print(-1)\n            break\n    if fg == 0:\n        print(c)", "l = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961]\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = n % m\n    c = n // m\n    while a % k != 0 and c != 0:\n        a += m\n        c -= 1\n    else:\n        if c == 0:\n            print(-1)\n        else:\n            print(a // k)", "for _ in range(int(input())):\n    (c, f, t) = map(int, input().split())\n    k = 0\n    if c < f:\n        print(-1)\n    else:\n        r = 0\n        while c >= f:\n            if c % f == 0:\n                print(k)\n                r = 1\n                break\n            else:\n                k += 1\n                c = c - t\n        if r == 0:\n            print(-1)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    while True:\n        if n < m:\n            print(-1)\n            break\n        r = n // m - c\n        if r == 0 and c > 0:\n            print(-1)\n            break\n        r = n - r * m\n        if r % k == 0:\n            print(int(r / k))\n            break\n        c += 1", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    rem = n % m\n    while 1:\n        if rem % k == 0:\n            ans = rem // k\n            break\n        else:\n            rem = rem + m\n            if rem >= n:\n                ans = -1\n                break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    rem = n % m\n    while 1:\n        if rem % k == 0:\n            ans = rem // k\n            break\n        else:\n            rem = rem + m\n            if rem >= n:\n                ans = -1\n                break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    rem = n % m\n    while 1:\n        if rem % k == 0:\n            ans = rem // k\n            break\n        else:\n            rem = rem + m\n            if rem >= n:\n                ans = -1\n                break\n    print(ans)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    (count, f) = (0, 0)\n    while a[0] >= a[1]:\n        if a[0] % a[1] == 0:\n            f = 1\n            print(count)\n            break\n        else:\n            a[0] -= a[2]\n            count += 1\n    if f == 0:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    [n, m, k] = list(map(int, input().split()))\n    q1 = int(n / m)\n    q2 = q1 * m\n    if (n - q2) % k == 0:\n        print(int((n - q2) / k))\n    else:\n        q = 1\n        j = 0\n        ts = 0\n        while True:\n            n = n - q * k\n            j += 1\n            if n < m:\n                break\n            if n % m == 0:\n                print(j)\n                ts = 1\n                break\n        if ts == 0:\n            print(-1)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    (count, f) = (0, 0)\n    while a[0] >= a[1]:\n        if a[0] % a[1] == 0:\n            f = 1\n            print(count)\n            break\n        else:\n            a[0] -= a[2]\n            count += 1\n    if f == 0:\n        print(-1)", "from sys import stdin\nfrom math import gcd\nfor _ in range(int(stdin.readline())):\n    (n, m, k) = map(int, stdin.readline().split())\n    n -= m\n    g = gcd(k, m)\n    if n >= 0:\n        if n % g == 0:\n            cond = True\n            s = []\n            while cond == True and n >= 0:\n                if n % m in s:\n                    cond = False\n                else:\n                    s.append(n % m)\n                    n -= k\n            if 0 in s:\n                pos = s.index(0)\n                print(pos)\n            else:\n                print(-1)\n        else:\n            print(-1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    f = 1\n    ans = 0\n    while n >= m:\n        if n % m == 0:\n            f = 0\n            print(ans)\n            break\n        else:\n            n = n - k\n            ans += 1\n    if f == 1:\n        print('-1')", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    (n, m, k) = [int(x) for x in input().split()]\n    if n % m == 0:\n        print('0')\n        continue\n    count = 0\n    while n >= m and n % m != 0:\n        n -= k\n        count += 1\n    if n < m:\n        print(-1)\n    else:\n        print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if n < m:\n        print(-1)\n    else:\n        throwCandy = n % m\n        if throwCandy % k == 0:\n            print(throwCandy // k)\n        else:\n            i = 1\n            while i * k < n and (n - i * k) % m != 0:\n                i += 1\n            if i * k < n and (n - i * k) % m == 0:\n                print(i)\n            else:\n                print(-1)", "l = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961]\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = n % m\n    c = n // m\n    while a % k != 0 and c != 0:\n        a += m\n        c -= 1\n    else:\n        if c == 0:\n            print(-1)\n        else:\n            print(a // k)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m > n:\n        print(-1)\n    else:\n        (r, c) = (0, 0)\n        while n >= m:\n            if n % m == 0:\n                r = 1\n                print(c)\n                break\n            else:\n                n = n - k\n                c = c + 1\n        if r == 0:\n            print(-1)", "for _ in range(int(input())):\n    (n, m, k) = [int(temp) for temp in input().split()]\n    c = 0\n    q = n // m\n    while q > 0:\n        r = n - m * q\n        if r % k == 0:\n            c += r // k\n            print(c)\n            break\n        q -= 1\n    if q <= 0:\n        print('-1')", "import sys\ninput()\nfor numbers in sys.stdin:\n    (n, m, k) = map(int, numbers.rstrip().split())\n    flag = 0\n    if n < m:\n        print(-1)\n        continue\n    left = n // m\n    for i in range(left, 0, -1):\n        t = n - m * i\n        if t % k == 0:\n            print(t // k)\n            flag = 1\n            break\n    if not flag:\n        print(-1)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    (i, flag) = (0, 0)\n    while i * k <= n:\n        if (n - i * k) % m == 0:\n            flag = 1\n            break\n        i += 1\n    if flag == 1 and (n - i * k) // m > 0:\n        print(i)\n    else:\n        print('-1')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = (int(i) for i in input().split())\n    kk = 0\n    count = 0\n    flag = True\n    while True:\n        temp = n - kk\n        if temp <= 0:\n            flag = True\n            break\n        if temp % m == 0:\n            flag = False\n            break\n        kk += k\n        count += 1\n    if flag:\n        print(-1)\n    else:\n        print(count)", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    k1 = k\n    i = 1\n    flag = 0\n    if n % m == 0:\n        print('0')\n        flag = 1\n    if flag == 0:\n        uio = 0\n        while n % m != 0:\n            n = n - k\n            if n < m:\n                print('-1')\n                uio = 1\n                break\n            i = i + 1\n        if uio == 0:\n            print(i - 1)\n    t = t - 1", "x = int(input())\nfor p in range(x):\n    (a, b, c) = map(int, input().split())\n    n = 0\n    m = 0\n    while a >= b:\n        if a % b == 0:\n            print(n)\n            m = 1\n            break\n        else:\n            n += 1\n            a -= c\n    if m == 0:\n        print(-1)", "t = int(input())\nwhile t:\n    (n, m, k) = map(int, input().split())\n    c = -1\n    if n < m:\n        print(-1)\n    else:\n        while n >= m:\n            n = n - m\n            if n % k == 0:\n                c = n // k\n        print(c)\n    t -= 1", "def solution(a, b, n):\n    i = 0\n    while i * a <= n:\n        if (n - i * a) % b == 0 and n - i * a != 0:\n            return i\n        i = i + 1\n    return -1\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n < m:\n        print(-1)\n    else:\n        print(solution(k, m, n))", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = 1\n    if a < b:\n        print(-1)\n    else:\n        for j in range(a // b):\n            if (a % b + j * b) % c == 0:\n                print((a % b + j * b) // c)\n                k = 0\n                break\n        if k == 1:\n            print(-1)", "def f():\n    t = int(input())\n    while t > 0:\n        (l, m, n) = map(int, input().split())\n        mini = -1\n        temp = m\n        while l >= m:\n            if l % m == 0:\n                mini = 0\n                break\n            if (l - m) % n == 0:\n                x = (l - m) // n\n                mini = x\n            m += temp\n        print(mini)\n        t -= 1\nf()", "for i in range(0, int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    c = 0\n    count = 0\n    while n >= m:\n        if n % m == 0:\n            print(count)\n            c = 1\n            break\n        else:\n            n = n - k\n            count += 1\n    if c == 0:\n        print(-1)", "def modInverse(a, m):\n    m0 = m\n    y = 0\n    x = 1\n    if m == 1:\n        return 0\n    while a > 1:\n        q = a // m\n        t = m\n        m = a % m\n        a = t\n        t = y\n        y = x - q * y\n        x = t\n    if x < 0:\n        x = x + m0\n    return x\n\ndef gcd(n, m):\n    if m == 0:\n        return n\n    if m > n:\n        return gcd(m, n)\n    return gcd(m, n % m)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, m, k) = map(int, input().split())\n        a = gcd(n, m)\n        b = gcd(a, k)\n        n = n // b\n        m = m // b\n        k = k // b\n        if gcd(k, m) != 1:\n            print(-1)\n        else:\n            val = n * modInverse(k, m) % m\n            if n - k * val > 0:\n                print(val)\n            else:\n                print(-1)\nmain()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    import math\n    if m > n:\n        print(-1)\n        continue\n    rem = n % m\n    while rem % k != 0 and rem < n:\n        rem = rem + m\n    if rem % k == 0 and rem < n:\n        print(rem // k)\n    else:\n        print(-1)", "tc = int(input())\nfor q in range(tc):\n    (n, m, k) = map(int, input().split())\n    countre = 0\n    (v1, vl) = (0.0, 0)\n    j = 0\n    while n - k * j > 0:\n        vl = (n - k * j) / m\n        v1 = (n - k * j) // m\n        if vl == v1:\n            countre = j\n            break\n        j += 1\n    if j > 0 and countre == 0:\n        print(-1)\n    else:\n        print(countre)", "import math\n\ndef sol(a, b, c):\n    i = 0\n    while i * a <= c:\n        if (c - a * i) % b == 0 and int((c - a * i) / b) > 0:\n            return i\n        i += 1\n    return -1\nfor ii in range(int(input())):\n    X = input().split()\n    N = int(X[0])\n    M = int(X[1])\n    K = int(X[2])\n    ans = sol(K, M, N)\n    if ans == -1:\n        print(-1)\n    else:\n        print(ans)", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = -1\n    if n == m or n % m == 0:\n        count = 0\n    elif n > m:\n        b = n / m\n        c = math.floor(b)\n        while c != 0:\n            temp = n - m * c\n            if temp % k == 0:\n                count = temp // k\n                break\n            c -= 1\n    else:\n        count = -1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    i = 0\n    while n > 0 and n % m:\n        n -= k\n        i += 1\n    print((-1, i)[n > 0])", "T = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    cont = 0\n    while N % M != 0 and N > M:\n        N -= K\n        cont += 1\n    if N % M == 0 and N >= M:\n        print(cont)\n    else:\n        print(-1)", "for T in range(int(input())):\n    (n, b, a) = map(int, input().split())\n    i = 0\n    f = 0\n    while i * a <= n:\n        if (n - i * a) % b == 0:\n            if (n - i * a) // b != 0:\n                print(i)\n                f = 1\n                break\n        i = i + 1\n    if f == 0:\n        print('-1')", "for i in range(int(input())):\n    (num_can, num_frnd, subs) = map(int, input().split())\n    flag = False\n    multi_ls = []\n    if num_can < num_frnd:\n        print(-1)\n        flag = True\n    else:\n        for j in range(num_frnd * (num_can // num_frnd), num_frnd - 1, -num_frnd):\n            multi_ls.append(j)\n        for k in multi_ls:\n            if (num_can - k) % subs == 0:\n                print((num_can - k) // subs)\n                flag = True\n                break\n        if flag == False:\n            print(-1)", "for i in range(int(input())):\n    (num_can, num_frnd, subs) = map(int, input().split())\n    flag = False\n    multi_ls = []\n    if num_can < num_frnd:\n        print(-1)\n        flag = True\n    else:\n        for j in range(num_frnd * (num_can // num_frnd), num_frnd - 1, -num_frnd):\n            multi_ls.append(j)\n        for k in multi_ls:\n            if (num_can - k) % subs == 0:\n                print((num_can - k) // subs)\n                flag = True\n                break\n        if flag == False:\n            print(-1)"]