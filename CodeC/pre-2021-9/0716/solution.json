["t = int(input())\nfor i in range(t):\n    N = int(input())\n    L = list(map(int, input().split()))\n    if L[0] < max(L):\n        print(-1)\n        continue\n    stack = []\n    for i in range(1, N):\n        if len(stack) == 0 or L[i] < stack[-1]:\n            stack.append(L[i])\n        else:\n            while len(stack) > 0 and stack[-1] <= L[i]:\n                stack.pop()\n            stack.append(L[i])\n    print(len(stack))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    L = list(map(int, input().split()))\n    if L[0] < max(L):\n        print(-1)\n        continue\n    stack = []\n    for i in range(1, N):\n        if len(stack) == 0 or L[i] < stack[-1]:\n            stack.append(L[i])\n        else:\n            while len(stack) > 0 and stack[-1] <= L[i]:\n                stack.pop()\n            stack.append(L[i])\n    print(len(stack))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    L = list(map(int, input().split()))\n    if L[0] < max(L):\n        print(-1)\n        continue\n    stack = []\n    for i in range(1, N):\n        if len(stack) == 0 or L[i] < stack[-1]:\n            stack.append(L[i])\n        else:\n            while len(stack) > 0 and stack[-1] <= L[i]:\n                stack.pop()\n            stack.append(L[i])\n    print(len(stack))", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        m = -1\n        count = 0\n        if a[0] == max(a):\n            for j in range(n - 1, 0, -1):\n                if a[j] > m:\n                    m = a[j]\n                    count = count + 1\n            print(count)\n        else:\n            print(-1)\nexcept:\n    pass", "import sys\nfrom collections import Counter, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return sys.stdin.readline()[:-1]\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    m = -1\n    c = 0\n    if a[0] == max(a):\n        for j in range(n - 1, 0, -1):\n            if a[j] > m:\n                m = a[j]\n                c = c + 1\n        print(c)\n    else:\n        print(-1)", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        m = -1\n        count = 0\n        if a[0] == max(a):\n            for j in range(n - 1, 0, -1):\n                if a[j] > m:\n                    m = a[j]\n                    count = count + 1\n            print(count)\n        else:\n            print(-1)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        m = -1\n        count = 0\n        if a[0] == max(a):\n            for j in range(n - 1, 0, -1):\n                if a[j] > m:\n                    m = a[j]\n                    count = count + 1\n            print(count)\n        else:\n            print(-1)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if max(l) != l[0]:\n        print(-1)\n    else:\n        ans = 0\n        m = l[-1]\n        l[0] += 1\n        for i in range(n - 1, -1, -1):\n            if m < l[i]:\n                m = l[i]\n                ans += 1\n        if m == l[0]:\n            print(ans)\n        else:\n            print(-1)", "t = int(float(input()))\nfor _ in range(t):\n    n = int(float(input()))\n    a = list(map(int, input().split()))\n    st = []\n    flag = 0\n    for i in range(1, n):\n        if a[i] > a[0]:\n            print('-1')\n            flag = 1\n            break\n    if flag == 0:\n        curr_max = -1\n        for i in range(n - 1, 0, -1):\n            if a[i] > curr_max:\n                curr_max = a[i]\n                st.append(curr_max)\n        print(len(st))", "try:\n    for t in range(int(input())):\n        N = int(input())\n        A = list(map(int, input().split()))\n        i = 0\n        count = 0\n        flag = 0\n        max_arr = [A[-1]]\n        curr = N - 1\n        max_index = [N - 1]\n        for i in range(N - 2, -1, -1):\n            if A[i] > max_arr[-1]:\n                max_arr.append(A[i])\n                curr = i\n                max_index.append(curr)\n            else:\n                max_arr.append(max_arr[-1])\n                max_index.append(curr)\n        max_arr.reverse()\n        max_index.reverse()\n        while i < N - 1:\n            if max_arr[i + 1] <= A[i]:\n                i = max_index[i + 1]\n                count += 1\n            else:\n                print(-1)\n                flag = 1\n                break\n        if flag == 1:\n            continue\n        print(count)\nexcept:\n    pass", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    if l[0] != max(l):\n        print(-1)\n        continue\n    if len(set(l)) == 1:\n        print(1)\n        continue\n    j = n - 2\n    s = sorted(list(set(l)))[-2]\n    mx = l[n - 1]\n    while j >= 0:\n        if l[j] > mx:\n            ans += 1\n        mx = max(l[j], mx)\n        j -= 1\n    if l.count(mx) > 1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if max(l) != l[0]:\n        print(-1)\n    else:\n        ans = 0\n        m = l[-1]\n        l[0] += 1\n        for i in range(n - 1, -1, -1):\n            if m < l[i]:\n                m = l[i]\n                ans += 1\n        if m == l[0]:\n            print(ans)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if max(l) != l[0]:\n        print(-1)\n    else:\n        ans = 0\n        m = l[-1]\n        l[0] += 1\n        for i in range(n - 1, -1, -1):\n            if m < l[i]:\n                m = l[i]\n                ans += 1\n        if m == l[0]:\n            print(ans)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    a = int(input())\n    l = [int(i) for i in input().split()]\n    right = []\n    stack = []\n    for i in range(a - 1, -1, -1):\n        while stack != [] and stack[-1] < l[i]:\n            stack.pop()\n        if i == a - 1 or i == 0:\n            right.append(l[i])\n        elif stack == []:\n            right.append(l[i])\n        else:\n            right.append(-1)\n        stack.append(l[i])\n    res1 = []\n    for i in right[::-1]:\n        if i != -1:\n            res1.append(i)\n    count = 0\n    valid = True\n    for i in range(0, len(res1) - 1):\n        if res1[i] >= res1[i + 1]:\n            count += 1\n        else:\n            valid = False\n            break\n    if valid == False:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    blocks = list(map(int, input().split()))\n    j = 1\n    mx = blocks[n - 1]\n    for i in range(n - 1, 1, -1):\n        if blocks[i - 1] > mx:\n            j += 1\n            mx = blocks[i - 1]\n    if blocks[0] >= mx:\n        print(j)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    m = -1\n    for i in range(N - 1, 0, -1):\n        if A[i] > m:\n            ans += 1\n            m = A[i]\n    if m <= A[0]:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = a[::-1]\n    (maxh, ans) = (a[0], 0)\n    for i in range(n - 1):\n        if maxh < a[i]:\n            ans += 1\n            maxh = a[i]\n    if a[n - 1] >= maxh:\n        print(ans + 1)\n    else:\n        print(-1)", "import bisect as bs\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    vis = [0] * n\n    s = sorted(l)\n    d = {}\n    last = {}\n    for i in range(n - 1, -1, -1):\n        if s[i] not in d:\n            d[s[i]] = []\n        d[s[i]].append(i)\n    for i in range(n):\n        last[l[i]] = i\n    j = n - 1\n    ans = 0\n    if l[0] != s[-1]:\n        print(-1)\n        continue\n    else:\n        i = 1\n        vis[n - 1] = 1\n        while i < n:\n            while j >= 0 and vis[j] == 1:\n                j -= 1\n            ans += 1\n            x = last[s[j]]\n            while i < n and i != x:\n                vis[d[l[i]].pop()] = 1\n                i += 1\n            if i == n:\n                break\n            else:\n                vis[d[l[i]].pop()] = 1\n            i += 1\n        print(ans)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()][:n]\n    q = 0\n    c = 0\n    a.reverse()\n    for i in range(n):\n        if i != n - 1:\n            if a[q] < a[i + 1]:\n                c += 1\n                q = i + 1\n            elif a[q] == a[i + 1] and i + 1 != n - 1:\n                q = i + 1\n            elif a[q] == a[i + 1] and i + 1 == n - 1:\n                c += 1\n                q = i + 1\n    if q == n - 1:\n        print(c)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    lmax = h[n - 1]\n    res = 0\n    for i in range(n - 2, -1, -1):\n        if i == 0 and lmax == h[0]:\n            res += 1\n        if h[i] > lmax:\n            res += 1\n            lmax = h[i]\n    if i == 0 and lmax == h[0]:\n        print(res)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    lmax = h[n - 1]\n    res = 0\n    for i in range(n - 2, -1, -1):\n        if i == 0 and lmax == h[0]:\n            res += 1\n        if h[i] > lmax:\n            res += 1\n            lmax = h[i]\n    if i == 0 and lmax == h[0]:\n        print(res)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = a[n - 1]\n    ans = 0\n    for i in reversed(range(1, n - 1)):\n        if x < a[i]:\n            ans += 1\n            x = a[i]\n    if a[0] >= x:\n        print(ans + 1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    p = -1\n    if l[0] == max(l):\n        for j in range(len(l) - 1, 0, -1):\n            if l[j] > p:\n                p = l[j]\n                c = c + 1\n        print(c)\n    else:\n        print(-1)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    n = inp()\n    l = li()\n    if l[0] != max(l):\n        pr(-1)\n        return\n    last = defaultdict(int)\n    x = set()\n    for i in range(n):\n        x.add(l[i])\n        last[l[i]] = i\n    ans = 0\n    x = sorted(list(x), reverse=True)\n    prev = -1\n    for i in x:\n        if last[i] < prev:\n            continue\n        ans += 1\n        prev = last[i]\n    if last[l[0]] == 0:\n        ans -= 1\n    pr(ans)\nfor _ in range(inp()):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    stack = []\n    ans = 0\n    maxx = -1\n    for x in range(n - 1, 0, -1):\n        if arr[x] > maxx:\n            ans += 1\n            maxx = arr[x]\n    if arr[0] >= maxx:\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    ans = 0\n    mx = -1\n    l = int(input())\n    ls = list(map(int, input().split()))[:l]\n    if max(ls) != ls[0]:\n        print(-1)\n    else:\n        for i in range(l - 1, 0, -1):\n            if ls[i] > mx:\n                ans += 1\n                mx = ls[i]\n        print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    b = 0\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > b:\n            ans += 1\n            b = a[i]\n    if a[0] >= b:\n        print(ans)\n    else:\n        print(-1)", "for t in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    stck = []\n    if arr[0] != max(arr):\n        print(-1)\n    else:\n        for i in range(1, N):\n            while stck and stck[-1] <= arr[i]:\n                stck.pop()\n            stck.append(arr[i])\n        print(len(stck))", "import math\nimport os\nimport collections\nfrom itertools import permutations, combinations\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    m = -1\n    for i in range(n - 1, 0, -1):\n        if arr[i] > m:\n            ans += 1\n            m = arr[i]\n    if m <= arr[0]:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    count = 0\n    flag = 0\n    m = max(l)\n    if m != l[0]:\n        print(-1)\n    else:\n        count = 1\n        p = l[n - 1]\n        for i in range(n - 2, 0, -1):\n            if l[i] > p:\n                p = l[i]\n                count += 1\n        print(count)", "t = int(input())\nfor xx in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = arr[0] >= max(arr[1:])\n    if not ans:\n        print(-1)\n    else:\n        stack = [arr[1]]\n        for i in range(1, n):\n            while len(stack) > 0 and stack[-1] <= arr[i]:\n                stack.pop()\n            stack.append(arr[i])\n        print(len(stack))", "t = int(input())\nfor xx in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = arr[0] >= max(arr[1:])\n    if not ans:\n        print(-1)\n    else:\n        stack = [float('inf')]\n        for i in range(1, n):\n            while len(stack) > 0 and stack[-1] <= arr[i]:\n                stack.pop()\n            stack.append(arr[i])\n        print(len(stack) - 1)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (max, ans) = (-1, 0)\n    for i in range(n - 1, 0, -1):\n        if lst[i] > max:\n            max = lst[i]\n            ans += 1\n    if max <= lst[0]:\n        print(ans)\n    else:\n        print('-1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = n - 1\n    last = -1\n    ans = 0\n    while i > 0:\n        if arr[i] > last:\n            last = arr[i]\n            ans += 1\n        i = i - 1\n    if arr[0] >= last:\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = n - 1\n    last = -1\n    ans = 0\n    while i > 0:\n        if arr[i] > last:\n            last = arr[i]\n            ans += 1\n        i = i - 1\n    if arr[0] >= last:\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    start = arr[0]\n    last = arr[-1]\n    arr = arr[1:]\n    place = [i for i in range(1, n)]\n    zipped_lists = zip(arr, place)\n    sorted_pairs = sorted(zipped_lists, reverse=True)\n    tuples = zip(*sorted_pairs)\n    (arr, place) = [list(tuple) for tuple in tuples]\n    if start < arr[0]:\n        print(-1)\n    else:\n        prev = place[0]\n        count = 0\n        m = 0\n        for i in range(1, n - 1):\n            if place[i] > prev:\n                prev = place[i]\n                m = i\n                count += 1\n        if arr[m] == last:\n            print(count + 1)\n        else:\n            print(-1)\n    t -= 1", "def func():\n    n = int(input())\n    ls = list(map(int, input().split()))\n    moves = 1\n    check = ls[n - 1]\n    if check > ls[0]:\n        print(-1)\n        return\n    for i in reversed(ls[1:]):\n        if i > check:\n            if i > ls[0]:\n                print(-1)\n                return\n            else:\n                check = i\n                moves += 1\n    print(moves)\nfor t in range(int(input())):\n    func()", "import heapq\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    b.sort()\n    val = b.pop()\n    if val != a[0]:\n        print(-1)\n    else:\n        d = defaultdict(list)\n        for (i, c) in enumerate(a):\n            d[c].append(i)\n        ptr = 0\n        res = 0\n        while ptr < len(a) - 1:\n            val = b.pop()\n            index = d[val].pop()\n            if index < ptr:\n                continue\n            else:\n                ptr = index\n                res += 1\n        print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = len(arr) - 1\n    ans = 0\n    imp = False\n    if arr[0] != max(arr):\n        imp = True\n    elif arr[0] == arr[-1] == max(arr):\n        ans = 1\n    else:\n        while i > 0:\n            j = i - 1\n            while j > 0 and arr[i] >= arr[j]:\n                j -= 1\n            if j == i:\n                imp = True\n                break\n            elif j == 0:\n                if arr[j] >= arr[i]:\n                    ans += 1\n                    break\n                else:\n                    imp = True\n                    break\n            elif j != -1:\n                ans += 1\n                i = j\n            else:\n                imp = True\n                break\n    if imp:\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ele = A[-1]\n    cnt = 0\n    ind = N\n    for i in range(len(A) - 1, -1, -1):\n        if A[i] > ele:\n            ele = A[i]\n            cnt += 1\n            ind = i\n    if ele == A[0]:\n        if ind == 0:\n            print(cnt)\n        else:\n            print(cnt + 1)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if arr[0] != max(arr):\n        print(-1)\n    else:\n        count = 0\n        maxi = float('-inf')\n        for i in range(n - 1, 0, -1):\n            if maxi < arr[i]:\n                count += 1\n                maxi = arr[i]\n        print(count)\n    t -= 1", "for ii in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if max(arr) > arr[0]:\n        print(-1)\n        continue\n    stack = [arr[0]]\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            stack.append(arr[i])\n        else:\n            while len(stack) > 1 and arr[i] >= stack[-1]:\n                stack.pop()\n            stack.append(arr[i])\n    print(len(stack) - 1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] > p:\n            p = a[i]\n            ans += 1\n    print(ans) if p <= a[0] else print(-1)", "def solve(array, n):\n    rightMax = [0] * n\n    rightMax[-1] = array[-1]\n    for i in range(n - 2, -1, -1):\n        rightMax[i] = max(rightMax[i + 1], array[i])\n    result = 0\n    if array[0] < rightMax[1]:\n        return -1\n    for i in range(2, n):\n        if rightMax[i] == rightMax[i - 1]:\n            continue\n        result += 1\n    result += 1\n    return result\nt_tests = int(input())\nfor t in range(t_tests):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    print(solve(arr, n))", "import sys\ninput = sys.stdin.readline\n\ndef get(ar):\n    m = len(ar)\n    st = [[10 ** 10, -1]]\n    res = []\n    for i in range(m):\n        while st and st[-1][0] <= ar[i]:\n            st.pop()\n        res.append(st[-1][1])\n        st.append([ar[i], i])\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if m != a[0]:\n        print(-1)\n        continue\n    ans = 0\n    last = -1\n    for i in range(n - 1, 0, -1):\n        if a[i] > last:\n            ans += 1\n            last = a[i]\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] > p:\n            p = a[i]\n            ans += 1\n    if p <= a[0]:\n        print(ans)\n    else:\n        print(-1)", "try:\n    num = int(input())\n    for i in range(num):\n        num1 = int(input())\n        l = list(map(int, input().split()))\n        (mx, c) = (-1, 0)\n        for i in range(num1 - 1, 0, -1):\n            if l[i] > mx:\n                c += 1\n                mx = l[i]\n        if l[0] >= mx:\n            print(c)\n        else:\n            print(-1)\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    ip = input().split()\n    a = [int(i) for i in ip]\n    a.insert(0, -1)\n    mx = a[n]\n    step = 0\n    for i in range(n, 0, -1):\n        if i != 1 and mx < a[i]:\n            mx = a[i]\n            step += 1\n        elif i == 1 and mx <= a[i]:\n            mx = a[i]\n            step += 1\n    if mx != a[1]:\n        print('-1')\n    else:\n        print(step)", "for __ in range(int(input())):\n    (MAX, moves) = (-1, 0)\n    N = int(input())\n    A = list(map(int, input().split()))\n    for i in range(N - 1, 0, -1):\n        if MAX < A[i]:\n            MAX = A[i]\n            moves += 1\n    print([-1, moves][MAX <= A[0]])", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    blocks = list(map(int, input().split()))\n    i = n - 1\n    current = -1\n    jump = 0\n    while i > 0:\n        if current < blocks[i]:\n            jump += 1\n            current = blocks[i]\n        i -= 1\n    if blocks[0] >= current:\n        print(jump)\n    else:\n        print(-1)", "def hello():\n    t = int(input())\n    for k in range(t):\n        n = int(input())\n        list1 = list(map(int, input().split(' ')))\n        if n > len(list1):\n            print(-1)\n        elif list1[0] != max(list1[:n]):\n            print(-1)\n        else:\n            list2 = [[i, list1[i]] for i in range(1, n)]\n            list2.sort(key=lambda x: x[1])\n            list2 = list2[::-1]\n            last = [0, list1[0]]\n            step = []\n            i = 0\n            while last[0] != n - 1:\n                if last[1] == list2[i][1]:\n                    if last[0] < list2[i][0]:\n                        last = list2[i]\n                        step.append(list2[i][1])\n                    i = i + 1\n                    continue\n                if last[0] < list2[i][0]:\n                    last = list2[i]\n                    step.append(list2[i][1])\n                i = i + 1\n            print(len(set(step)))\nhello()", "tests = int(input())\nwhile tests > 0:\n    N = int(input())\n    arr = list(map(int, input().split()))\n    st = []\n    check = arr[0]\n    pres = True\n    for i in range(1, N):\n        if arr[i] <= check:\n            while len(st) > 0 and st[-1] <= arr[i]:\n                st.pop()\n            st.append(arr[i])\n        else:\n            pres = False\n            break\n    if pres:\n        print(len(st))\n    else:\n        print(-1)\n    tests = tests - 1", "tests = int(input())\nwhile tests > 0:\n    N = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    mx = -1\n    for i in range(N - 1, 0, -1):\n        if mx < arr[i]:\n            mx = arr[i]\n            ans = ans + 1\n    if mx <= arr[0]:\n        print(ans)\n    else:\n        print(-1)\n    tests = tests - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = a[n - 1]\n    d = [0 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        if m <= a[i]:\n            m = a[i]\n        d[i] = m\n    c = 0\n    if d[0] == a[0]:\n        m = a[0]\n        for i in range(1, n):\n            if i == 1 and d[i] == d[0]:\n                c += 1\n            if d[i] < m:\n                c += 1\n                m = d[i]\n        print(c)\n    else:\n        print(-1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if max(l) != l[0]:\n        print(-1)\n    else:\n        ans = 0\n        max_x = -1\n        for i in range(len(l) - 1, 0, -1):\n            if l[i] > max_x:\n                ans += 1\n                max_x = l[i]\n        print(ans)", "from sys import stdin, stdout\n\ndef get_ints():\n    return map(int, stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef get_singleInt():\n    return int(stdin.readline())\n\ndef main():\n    testCases = get_singleInt()\n    for i in range(testCases):\n        n = get_singleInt()\n        heights = get_list()\n        print(minMoves(heights, n))\n\ndef minMoves(heights, n):\n    maxx = -1\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if heights[i] > maxx:\n            ans += 1\n            maxx = heights[i]\n    if heights[0] >= maxx:\n        return ans\n    return -1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    max_x = -1\n    for i in range(len(l) - 1, 0, -1):\n        if l[i] > max_x:\n            ans += 1\n            max_x = l[i]\n    if max(l) == l[0]:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    max = -1\n    cout = 0\n    for x in l[:0:-1]:\n        if x > max:\n            cout += 1\n            max = x\n    if l[0] >= max:\n        print(cout)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    dp = [1] * n\n    l = list(map(int, input().split()))\n    stack = []\n    if max(l) != l[0]:\n        print(-1)\n        continue\n    for i in range(1, n):\n        while stack and l[stack[-1]] <= l[i]:\n            stack.pop()\n        if stack:\n            dp[i] = max(dp[i], dp[stack[-1]] + 1)\n        stack.append(i)\n    print(dp[-1])", "for _ in range(int(input())):\n    n = int(input())\n    dp = [1] * n\n    l = list(map(int, input().split()))\n    stack = []\n    if max(l) != l[0]:\n        print(-1)\n        continue\n    for i in range(1, n):\n        while stack and l[stack[-1]] <= l[i]:\n            stack.pop()\n        if stack:\n            dp[i] = max(dp[i], dp[stack[-1]] + 1)\n        stack.append(i)\n    print(dp[-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_from_right = [a[-1]]\n    max_from_left = a[0]\n    cmx = a[-1]\n    for h in a[-2::-1]:\n        cmx = max(cmx, h)\n        max_from_right.append(cmx)\n    cmx = a[1]\n    for h in a[1:]:\n        cmx = max(cmx, h)\n        max_from_left = cmx\n    max_from_right = list(reversed(max_from_right))\n    ans = 0\n    if a[0] < max_from_right[1]:\n        ans = -1\n    else:\n        h = max_from_right[1]\n        j = 1\n        for i in range(2, n):\n            if max_from_right[i] != h:\n                j += 1\n                h = max_from_right[i]\n        ans = j\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxim = 0\n    maxpos = 0\n    for j in range(0, n):\n        if a[j] > maxim:\n            maxim = a[j]\n            maxpos = j\n    if maxpos != 0:\n        print(-1)\n    else:\n        current = n - 1\n        j = n - 1\n        moves = 0\n        while current != 0:\n            if a[j] > a[current]:\n                a[current] = a[j]\n                current = j\n                moves += 1\n            if a[j] == a[0] and j != 0:\n                moves += 1\n                current = 0\n            j -= 1\n        print(moves)", "def code(n, arr):\n    steps = 0\n    curr = arr[-1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] == curr:\n            if i == 0:\n                steps += 1\n            else:\n                continue\n        elif arr[i] > curr:\n            steps += 1\n            curr = arr[i]\n    if curr != arr[0]:\n        return -1\n    return steps\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(code(n, arr))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != max(a):\n        print(-1)\n    else:\n        jumps = 0\n        maxi = -1\n        for i in range(n - 1, 0, -1):\n            if a[i] > maxi:\n                jumps += 1\n                maxi = a[i]\n        print(jumps)", "def prog_name():\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 1000000007\n    cnt = 0\n    l.reverse()\n    j = 0\n    if l[-1] != max(l):\n        print(-1)\n    else:\n        for x in range(len(l) - 1):\n            if l[x] > j:\n                cnt += 1\n                j = l[x]\n        print(cnt)\nT = int(input())\nfor unique in range(T):\n    prog_name()", "def prog_name():\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 1000000007\n    cnt = 0\n    l.reverse()\n    j = 0\n    if l[-1] != max(l):\n        print(-1)\n    else:\n        for x in range(len(l) - 1):\n            if l[x] > j:\n                cnt += 1\n                j = l[x]\n        print(cnt)\nT = int(input())\nfor unique in range(T):\n    prog_name()", "mod = 1000000007\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    li = list(map(int, stdin.readline().split()))\n    if max(li) != li[0]:\n        print(-1)\n        continue\n    (ans, maxi) = (0, -1)\n    for i in range(n - 1, 0, -1):\n        if li[i] > maxi:\n            ans += 1\n            maxi = li[i]\n    if maxi <= li[0]:\n        print(ans)\n    else:\n        print(-1)", "def ma(a):\n    if len(a) == 1:\n        return a[0]\n    m = float('-inf')\n    for i in a:\n        if i > m:\n            m = i\n    return m\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = float('-inf')\n    c = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] > m:\n            c += 1\n            m = a[i]\n    if a[0] >= m:\n        print(c)\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = 0\n    m = -1\n    for i in range(n - 1, 0, -1):\n        if a[i] > m:\n            c += 1\n            m = a[i]\n    if a[0] >= m:\n        print(c)\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = 0\n    m = -1\n    for i in range(n - 1, 0, -1):\n        if a[i] > m:\n            c += 1\n            m = a[i]\n    if a[0] >= m:\n        print(c)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    height = list(map(int, input().split()))\n    if height[0] < height[-1]:\n        print(-1)\n    else:\n        height = height[::-1]\n        cur_max = height[0]\n        count = 0\n        flag = False\n        for i in range(1, n - 1):\n            if height[n - 1] < cur_max:\n                flag = True\n                break\n            if height[i] > cur_max:\n                count += 1\n                cur_max = height[i]\n        if flag:\n            print(-1)\n        else:\n            print(count + 1)", "num = int(input())\nfor i in range(num):\n    res = []\n    n = int(input())\n    flag = 0\n    ls = list(map(int, input().split()))\n    for t in range(1, n):\n        if ls[t] > ls[0]:\n            print('-1')\n            flag = 1\n            break\n    if flag == 0:\n        for p in range(1, n):\n            while len(res) and res[-1] <= ls[p]:\n                res.pop()\n            res.append(ls[p])\n        print(len(res))", "for m in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    step = 0\n    max1 = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] > max1:\n            max1 = a[i]\n            step += 1\n    if max1 <= a[0]:\n        print(step)\n    else:\n        print(-1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = [[-1] for i in range(n)]\n    if l[0] < l[n - 1]:\n        print(-1)\n        continue\n    l.reverse()\n    s = []\n    for i in range(n):\n        while s and l[s[-1]] < l[i]:\n            r[s.pop()].append(i)\n        q = []\n        while s and l[s[-1]] == l[i]:\n            x = s.pop()\n            q.append(x)\n            r[x].append(i)\n        while q:\n            s.append(q.pop(0))\n        s.append(i)\n    res = [max(i) for i in r]\n    c = 0\n    f = True\n    a = 0\n    while a != -1:\n        c += 1\n        if a == n - 1:\n            f = False\n            print(c - 1)\n            break\n        a = res[a]\n    if f:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    ma = -1\n    for i in range(n - 1, 0, -1):\n        if arr[i] > ma:\n            ans += 1\n            ma = arr[i]\n    if arr[0] == max(arr):\n        print(ans)\n    else:\n        print(-1)\n    t -= 1", "from collections import defaultdict as dd\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = [a[0]]\n    for i in range(1, n):\n        while st and st[-1] <= a[i]:\n            if len(st) == 1 and st[0] == a[i]:\n                break\n            st.pop()\n        if not st:\n            break\n        st.append(a[i])\n    print(len(st) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    c = 0\n    mx = l[-1]\n    for i in range(n - 2, 0, -1):\n        if l[i] > mx:\n            mx = l[i]\n            c += 1\n    if l[0] >= mx:\n        print(c + 1)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    H = list(map(int, input().split()))\n    m = max(H)\n    if H[0] != m:\n        print(-1)\n        continue\n    m = H[-1]\n    l = [m]\n    ind = 0\n    for i in H[::-1]:\n        if i > l[-1]:\n            l.append(i)\n    if H.count(H[0]) == 1:\n        print(len(l) - 1)\n    else:\n        print(len(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    c = 0\n    mx = -1\n    for i in range(n - 1, 0, -1):\n        if l[i] > mx:\n            mx = l[i]\n            c += 1\n    if l[0] >= mx:\n        print(c)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    num = [lis[-1]]\n    for i in range(n - 2, -1, -1):\n        if lis[i] >= num[-1]:\n            num.append(lis[i])\n    if len(num) == 1 or num[-1] != lis[0]:\n        print(-1)\n    else:\n        numd = []\n        le = len(num)\n        c1 = num.count(lis[0])\n        if c1 == 1:\n            numd.append(lis[0])\n        else:\n            numd.append(lis[0])\n            numd.append(lis[0])\n        for i in range(le - (c1 + 1), -1, -1):\n            if numd[-1] != num[i]:\n                numd.append(num[i])\n        print(len(numd) - 1)", "from collections import Counter\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    m = max(l)\n    s = -1\n    if m == l[0]:\n        for i in range(n - 1, 0, -1):\n            if s < l[i]:\n                s = l[i]\n                ans = ans + 1\n    else:\n        ans = -1\n    print(ans)\n    t = t - 1", "try:\n    for _ in range(int(input())):\n        n = input()\n        n = int(n)\n        l = list(map(int, input().split(' ')))\n        k = max(l)\n        h = []\n        if k != l[0]:\n            print(-1)\n        else:\n            d = 1\n            for i in range(1, n):\n                h.append(l[0] - l[i])\n            f = h[len(h) - 1]\n            for i in range(0, len(h)):\n                if h[len(h) - 1 - i] < f:\n                    f = h[len(h) - 1 - i]\n                    d = d + 1\n            print(d)\nexcept:\n    pass", "def check(n, a):\n    data = []\n    for i in range(1, n):\n        if a[0] < a[i]:\n            return -1\n    for i in range(1, n):\n        while len(data) and data[-1] <= a[i]:\n            data.pop()\n        data.append(a[i])\n    return len(data)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(check(n, a))", "T = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    ans = []\n    status = True\n    for index in range(1, N):\n        if arr[index] > arr[0]:\n            print(-1)\n            status = False\n            break\n    if status:\n        for i in range(1, N):\n            while len(ans) > 0 and ans[-1] <= arr[i]:\n                ans.pop()\n            ans.append(arr[i])\n        print(len(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    mx = -1\n    for i in range(n - 1, 0, -1):\n        if a[i] > mx:\n            ans += 1\n            mx = a[i]\n    if a[0] >= mx:\n        print(ans)\n    else:\n        print(-1)", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 5)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mx = max(arr)\n    if arr[0] != mx:\n        print(-1)\n        continue\n    d = dd(list)\n    c = 0\n    for i in arr:\n        d[i].append(c)\n        c += 1\n    ll = []\n    arr.sort(reverse=True)\n    for i in arr:\n        if i == mx:\n            ll += [d[i][0], d[i][-1]]\n        else:\n            ll += [d[i][-1]]\n    ans = 0\n    mx = 0\n    for i in range(1, len(ll)):\n        if ll[i] > mx:\n            mx = ll[i]\n            ans += 1\n    print(ans)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    dp = [0] * n\n    i = n - 2\n    mx = num[-1]\n    mp = 0\n    while i > 0:\n        if num[i] > mx:\n            dp[i] = mp + 1\n            mp = dp[i]\n            mx = num[i]\n        elif num[i] == mx:\n            dp[i] = mp\n        else:\n            dp[i] = -1\n        i -= 1\n    if num[i] >= mx:\n        dp[i] = mp + 1\n    else:\n        dp[i] = -1\n    print(dp[0])", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 1:\n        ma = l[-1]\n        ans = 1\n        for i in range(n - 1, 0, -1):\n            if ma < l[i]:\n                ma = l[i]\n                ans += 1\n        if ma <= l[0]:\n            print(ans)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_ele = -1\n    count = 0\n    for i in range(n - 1, 0, -1):\n        if arr[i] > max_ele:\n            count += 1\n            max_ele = arr[i]\n    if arr[0] >= max_ele:\n        print(count)\n    else:\n        print('-1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    r = a[::-1]\n    mval = []\n    maxi = 0\n    for i in range(n):\n        if r[i] > maxi:\n            maxi = r[i]\n        mval.append(maxi)\n    mval = mval[::-1]\n    i = 0\n    jump = 0\n    s = 0\n    while i < n - 1:\n        if s == 0 and a[i] >= mval[i + 1]:\n            s = 1\n            jump += 1\n        elif s == 1 and a[i] > mval[i + 1]:\n            s = 0\n            i -= 1\n        elif s == 0 and a[i] < mval[i]:\n            jump = -1\n            break\n        i += 1\n    print(jump)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    first = nums[0]\n    cot = 0\n    for i in range(len(nums)):\n        if nums[i] > first:\n            cot = -1\n    if cot == -1:\n        print(cot)\n        t -= 1\n        continue\n    s = []\n    for i in range(1, n):\n        while len(s) > 0 and s[-1] <= nums[i]:\n            s.pop()\n        s.append(nums[i])\n    ans = 0\n    while len(s) > 0:\n        ans += 1\n        s.pop()\n    print(ans)\n    t -= 1"]