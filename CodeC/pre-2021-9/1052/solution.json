["def fun(n, b):\n    if n <= b:\n        return n\n    n = n - 1\n    a = n // b\n    d = b - 1\n    r = n % b\n    return 1 + a * d + r\nt = int(input())\nl = []\nfor i in range(t):\n    (n, b) = tuple(map(int, input().split()))\n    l.append(fun(n, b))\nfor i in l:\n    print(i)", "for i in range(int(input())):\n    (n, b) = map(int, input().split())\n    ans = n - (n - 1) // b\n    print(ans)", "for i in range(int(input())):\n    (n, b) = map(int, input().split())\n    ans = n - (n - 1) // b\n    print(ans)", "for _ in range(int(input())):\n    (N, B) = map(int, input().split())\n    ans = N - (N - 1) // B\n    print(ans)", "def f():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, b) = map(int, input().split())\n        if b >= n:\n            print(n)\n        elif n % b == 0:\n            ans = (n // b - 1) * (b - 1) + b\n            print(ans)\n        else:\n            ans = ((n - 1) // b - 1) * (b - 1) + b + (n - 1) % b\n            print(ans)\nf()", "for _ in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    print(n - int((n - 1) / b))", "for _ in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    print(n - int((n - 1) / b))", "for i in range(int(input())):\n    (n, b) = list(map(int, input().split()))\n    print(1 + n * (b - 1) // b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - int((a - 1) / b))", "for _ in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    print(n - int((n - 1) / b))", "t = int(input())\nfor i in range(t):\n    (n, b) = map(int, input().split())\n    q = n // b\n    if n % b == 0:\n        a = n - q + 1\n    else:\n        a = n - q\n    print(a)", "t = int(input())\nfor i in range(t):\n    (n, b) = map(int, input().split())\n    x = n // b\n    if n % b == 0:\n        a = n - x + 1\n    else:\n        a = n - x\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    low = 1\n    high = n\n    if b == 1:\n        print(1)\n        continue\n    while low < high and abs(high - low) > 4:\n        mid = (low + high) // 2\n        a = mid // b\n        aa = mid % b\n        d = mid\n        while a:\n            d += a\n            tt = a + aa\n            a = tt // b\n            aa = tt % b\n        if d >= n:\n            high = mid\n        if d < n:\n            low = mid + 1\n    for mid in range(low, high + 1):\n        a = mid // b\n        aa = mid % b\n        d = mid\n        while d < n and a:\n            d += a\n            tt = a + aa\n            a = tt // b\n            aa = tt % b\n        if d >= n:\n            tt = mid\n            break\n    print(tt)", "t = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    low = 0\n    high = n\n    while low < high:\n        mid = (low + high) // 2\n        cook = mid\n        left = mid\n        while True:\n            book = left // b\n            if book == 0:\n                break\n            left = book + left % b\n            cook += book\n        if high - low < 3:\n            for i in range(low, high + 1):\n                cook = i\n                left = i\n                while True:\n                    book = left // b\n                    if book == 0:\n                        break\n                    left = book + left % b\n                    cook += book\n                ans = i\n                if cook >= n:\n                    break\n            break\n        if cook > n:\n            ans = mid\n            high = mid\n        elif cook < n:\n            low = mid\n        if cook == n:\n            ans = mid\n            high = mid\n    print(ans)", "for _ in range(int(input())):\n    (n, b) = list(map(int, input().split()))\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif n % b:\n        print(ans)\n    else:\n        print(ans + 1)", "def finder(k):\n    eaten = 0\n    crumbs = 0\n    while k > 0:\n        eaten += k\n        crumbs += k\n        k = crumbs // b\n        crumbs %= b\n    return eaten\n\ndef search(N):\n    lo = 1\n    hi = N\n    while lo < hi:\n        mid = (lo + hi) // 2\n        total = finder(mid)\n        if total < n:\n            lo = mid + 1\n        else:\n            hi = mid\n    print(hi)\nfor _ in range(int(input())):\n    (n, b) = map(int, input().split())\n    search(n)", "import math\nt = int(input())\nwhile t > 0:\n    (n, b) = map(int, input().split())\n    tobemade = math.ceil((n * (b - 1) + 1) / b)\n    print(tobemade)\n    t -= 1", "def count(mid, b):\n    ans = mid\n    crumb = mid\n    while crumb >= b:\n        ans += crumb // b\n        crumb = crumb // b + crumb % b\n    return ans\nfor _ in range(int(input())):\n    (n, b) = map(int, input().split())\n    low = 1\n    high = 10 ** 11\n    while low <= high:\n        mid = (low + high) // 2\n        if count(mid, b) >= n:\n            high = mid - 1\n            ans = mid\n        else:\n            low = mid + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, b) = map(int, input().split())\n    a = n - n // b\n    if n % b == 0:\n        a = a + 1\n    print(a)", "t = int(input())\nfor i in range(t):\n    (n, b) = map(int, input().split())\n    a = n - n // b\n    if n % b == 0:\n        a = a + 1\n    print(a)", "for _ in range(int(input())):\n    (n, b) = input().split()\n    (n, b) = (int(n), int(b))\n    a = int(n / b)\n    c = n - a\n    if n % b == 0:\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, b) = map(int, input().strip().split())\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif n % b:\n        print(ans)\n    else:\n        print(ans + 1)", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    a = m - m // n\n    if n == 1:\n        print(1)\n    elif m % n:\n        print(a)\n    else:\n        print(a + 1)", "def resck(a, c):\n    cr = a\n    net = a\n    while cr >= c:\n        new = cr // c\n        net += new\n        cr -= new * (c - 1)\n    return net\nfor _ in range(int(input())):\n    (n, b) = map(int, input().split())\n    lo = 0\n    hi = n\n    while hi - lo > 1:\n        md = (lo + hi) // 2\n        if resck(md, b) < n:\n            lo = md\n        else:\n            hi = md\n    print(hi)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n - (n - 1) // k)", "for i in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    ans = n - (n - 1) // b\n    print(ans)", "for i in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    ans = n - (n - 1) // b\n    print(ans)", "for i in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    ans = n - n // b\n    if n % b == 0:\n        ans += 1\n    print(ans)", "t = int(input())\ni = 0\nwhile t > i:\n    (n, b) = map(int, input().split())\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif not n % b:\n        print(ans + 1)\n    else:\n        print(ans)\n    i += 1", "def check(n, m):\n    ct = 0\n    if n >= m:\n        ct = int(n / m)\n        ct += check(int(n / m) + int(n % m), m)\n    return ct\n\ndef bsearch(n, m):\n    lo = 1\n    hi = n\n    while lo < hi:\n        mid = int((lo + hi) / 2)\n        val = mid + check(mid, m)\n        if val >= n:\n            hi = mid\n        else:\n            lo = mid + 1\n    return lo\nt = int(input())\nwhile t > 0:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    val = bsearch(n, m)\n    print(val)\n    t -= 1", "t = int(input())\nfor j in range(t):\n    (a, b) = list(map(int, input().split()))\n    L = 1\n    R = a\n    while R - L > 1:\n        mid = (L + R) // 2\n        cookies = mid\n        crumbles = 0\n        hours = 0\n        while cookies > b - 1:\n            leftOver = cookies % b\n            hours += cookies - leftOver\n            cookiesEaten = cookies - leftOver\n            cookies = cookiesEaten // b + leftOver\n        hours += cookies\n        if hours < a:\n            L = mid + 1\n        else:\n            R = mid\n    cookies = L\n    crumbles = 0\n    hours = L\n    while cookies > b - 1:\n        crumbles = cookies % b\n        hours += cookies // b\n        cookies = cookies // b + crumbles\n    if hours < a:\n        print(R)\n    else:\n        print(L)", "test = int(input())\nwhile test != 0:\n    test = test - 1\n    (n, b) = map(int, input().split())\n    pp = n // b\n    ans = n - pp\n    if n % b == 0:\n        ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (N, B) = [int(x) for x in input().split()]\n    print(math.ceil(N - N // B + (N % B == 0)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = n\n    sum = 0\n    while n // (k + 1) != 0:\n        sum += n // (k + 1)\n        n -= k * (n // (k + 1))\n    print(p - sum)", "def cookies(N, B):\n    ans = N\n    crumbs = N\n    while crumbs >= B:\n        ans += crumbs // B\n        crumbs = crumbs // B + crumbs % B\n    return ans\n\ndef b_search(N, B):\n    low = 1\n    high = N\n    ans = N\n    while low < high:\n        mid = low + (high - low) // 2\n        qty = cookies(mid, B)\n        if qty >= N:\n            high = mid\n            ans = mid\n        else:\n            low = mid + 1\n    return ans\nT = int(input())\nfor t in range(T):\n    [N, B] = [int(i) for i in input().split()]\n    print(b_search(N, B))", "T = int(input())\nfor _ in range(T):\n    (n, b) = list(map(int, input().split()))\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif n % b:\n        print(ans)\n    else:\n        print(ans + 1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, b) = [int(i) for i in input().split()]\n    if int(n % b) == 0:\n        print(n - int(n / b) + 1)\n    else:\n        print(n - int(n / b))", "import math\nfor i in range(int(input())):\n    (n, b) = map(int, input().split())\n    a = n - n // b\n    if n % b == 0:\n        a += 1\n    print(a)", "t = int(input())\nwhile t:\n    (n, b) = list(map(int, input().split()))\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif n % b:\n        print(ans)\n    else:\n        print(ans + 1)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, b) = list(map(int, input().split()))\n    ans = n - n // b\n    if b == 1:\n        print(1)\n    elif n % b:\n        print(ans)\n    else:\n        print(ans + 1)\n    t -= 1", "t = int(input())\nfor j in range(t):\n    (a, b) = list(map(int, input().split()))\n    L = 1\n    R = a\n    while R - L > 1:\n        mid = (L + R) // 2\n        cookies = mid\n        crumbles = 0\n        hours = mid\n        while cookies > b - 1:\n            crumbles = cookies % b\n            hours += cookies // b\n            cookies = cookies // b + crumbles\n        if hours < a:\n            L = mid + 1\n        else:\n            R = mid\n    cookies = L\n    crumbles = 0\n    hours = L\n    while cookies > b - 1:\n        crumbles = cookies % b\n        hours += cookies // b\n        cookies = cookies // b + crumbles\n    if hours < a:\n        print(R)\n    else:\n        print(L)"]