["import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nn = inp()\nl = li()\nMA = max(l)\ncount = [0] * (MA + 1)\nfor i in l:\n    count[i] += 1\nfor i in range(1, MA + 1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] += count[j]\n    count[i] = count[i] * (count[i] - 1) * (count[i] - 2) // 6\nfor i in range(MA, 0, -1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] -= count[j]\npr(count[1])", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nn = inp()\nl = li()\nMA = max(l)\ncount = [0] * (MA + 1)\nfor i in l:\n    count[i] += 1\nfor i in range(1, MA + 1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] += count[j]\n    count[i] = count[i] * (count[i] - 1) * (count[i] - 2) // 6\nfor i in range(MA, 0, -1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] -= count[j]\npr(count[1])", "import os.path\nfrom math import *\nfrom collections import *\nimport sys\nn = input()\nl = list(map(int, sys.stdin.readline().split()))\nm = max(l)\ncount = [0] * (m + 1)\nfor i in l:\n    count[i] += 1\nfor i in range(1, m + 1):\n    for j in range(2 * i, m + 1, i):\n        count[i] += count[j]\n    count[i] = count[i] * (count[i] - 1) * (count[i] - 2) // 6\nfor i in range(m, 0, -1):\n    for j in range(2 * i, m + 1, i):\n        count[i] -= count[j]\nprint(count[1])", "n = int(input())\nl = list(map(int, input().split()))\nMA = max(l)\ncount = [0] * (MA + 1)\nfor i in l:\n    count[i] += 1\nfor i in range(1, MA + 1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] += count[j]\n    count[i] = count[i] * (count[i] - 1) * (count[i] - 2) // 6\nfor i in range(MA, 0, -1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] -= count[j]\nprint(count[1])", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nn = inp()\nl = li()\nMA = max(l)\ncount = [0] * (MA + 1)\nfor i in l:\n    count[i] += 1\nfor i in range(1, MA + 1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] += count[j]\n    count[i] = count[i] * (count[i] - 1) * (count[i] - 2) // 6\nfor i in range(MA, 0, -1):\n    for j in range(2 * i, MA + 1, i):\n        count[i] -= count[j]\npr(count[1])", "N = 10 ** 6 + 100\nsv = [i for i in range(N)]\nfor i in range(2, N):\n    if i * i >= N:\n        break\n    if sv[i] < i:\n        continue\n    for j in range(i * i, N, i):\n        sv[j] = min(sv[j], i)\n\ndef getPrimes(a):\n    pr = []\n    if a == 1:\n        return pr\n    pr.append(sv[a])\n    while a > 1:\n        if sv[a] != pr[-1]:\n            pr.append(sv[a])\n        a //= sv[a]\n    return pr\nnp = [0] * N\nF = [0] * N\nn = int(input())\nA = list(map(int, input().split()))\nfor a in A:\n    pr = getPrimes(a)\n    for i in range(1 << len(pr)):\n        (prod, nb) = (1, 0)\n        for j in range(len(pr)):\n            if i & 1 << j:\n                prod *= pr[j]\n                nb += 1\n        F[prod] += 1\n        np[prod] = nb\nans = 0\nfor i in range(N):\n    cnt = F[i]\n    cnt = cnt * (cnt - 1) * (cnt - 2) // 6\n    if np[i] & 1:\n        ans -= cnt\n    else:\n        ans += cnt\nprint(ans)", "import sys\ndata = sys.stdin.read().split()\ndata.reverse()\n\ndef read():\n    return int(data.pop())\n\ndef readStr():\n    return data.pop()\nN = 10 ** 6 + 100\nsv = [i for i in range(N)]\nfor i in range(2, N):\n    if i * i >= N:\n        break\n    if sv[i] < i:\n        continue\n    for j in range(i * i, N, i):\n        sv[j] = min(sv[j], i)\n\ndef getPrimes(a):\n    pr = []\n    if a == 1:\n        return pr\n    pr.append(sv[a])\n    while a > 1:\n        if sv[a] != pr[-1]:\n            pr.append(sv[a])\n        a //= sv[a]\n    return pr\nnp = [0] * N\nF = [0] * N\nn = read()\nA = [read() for i in range(n)]\nfor a in A:\n    pr = getPrimes(a)\n    for i in range(1 << len(pr)):\n        (prod, nb) = (1, 0)\n        for j in range(len(pr)):\n            if i & 1 << j:\n                prod *= pr[j]\n                nb += 1\n        F[prod] += 1\n        np[prod] = nb\nans = 0\nfor i in range(N):\n    cnt = F[i]\n    cnt = cnt * (cnt - 1) * (cnt - 2) // 6\n    if np[i] & 1:\n        ans -= cnt\n    else:\n        ans += cnt\nprint(ans)"]