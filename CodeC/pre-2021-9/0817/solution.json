["t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    s.append(n)\nn = max(s) + 1\nl = [0 for x in range(n)]\np = 1\na = 1\nfor j in range(1, n):\n    a = a * j % 1000000007\n    p = p * a % 1000000007\n    l[j] = p\nfor k in s:\n    print(l[k])", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    s.append(n)\nn = max(s) + 1\nl = [0 for x in range(n)]\np = 1\na = 1\nfor j in range(1, n):\n    a = a * j % 1000000007\n    p = p * a % 1000000007\n    l[j] = p\nfor k in s:\n    print(l[k])", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    s.append(n)\nn = max(s) + 1\nl = [0 for x in range(n)]\np = 1\na = 1\nfor j in range(1, n):\n    a = a * j % 1000000007\n    p = p * a % 1000000007\n    l[j] = p\nfor k in s:\n    print(l[k])", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    s.append(n)\nn = max(s) + 1\nl = [0 for x in range(n)]\np = 1\na = 1\nfor j in range(1, n):\n    a = a * j % 1000000007\n    p = p * a % 1000000007\n    l[j] = p\nfor k in s:\n    print(l[k])", "T = int(input())\nt = []\nfor _ in range(T):\n    N = int(input())\n    t.append(N)\nN = max(t) + 1\nl = [0 for i in range(N)]\np = 1\na = 1\nfor i in range(1, N):\n    a = a * i % 1000000007\n    p = p * a % 1000000007\n    l[i] = p\nfor i in t:\n    print(l[i])", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nM = 10 ** 9 + 7\nf = [1] * 1000001\nfor i in range(2, 1000001):\n    f[i] = i * f[i - 1] % M\nfor i in range(2, 1000001):\n    f[i] = f[i] * f[i - 1] % M\nfor _ in range(inp()):\n    n = inp()\n    print(f[n])", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nM = 10 ** 9 + 7\nf = [1] * 1000001\nfor i in range(2, 1000001):\n    f[i] = i * f[i - 1] % M\nfor i in range(2, 1000001):\n    f[i] = f[i] * f[i - 1] % M\nfor _ in range(inp()):\n    n = inp()\n    print(f[n])", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nM = 10 ** 9 + 7\nf = [1] * 1000001\nfor i in range(2, 1000001):\n    f[i] = i * f[i - 1] % M\nfor i in range(2, 1000001):\n    f[i] = f[i] * f[i - 1] % M\nfor _ in range(inp()):\n    n = inp()\n    print(f[n])", "from sys import *\ninput = stdin.readline\nl = [0] * (10 ** 6 + 1)\nl[1] = 1\np = 1\nm = 10 ** 9 + 7\nfor i in range(2, 10 ** 6 + 1):\n    l[i] = l[i - 1] * (p * i) % m % m\n    p *= i\n    p = p % m\nfor u in range(int(input())):\n    print(l[int(input())])", "from collections import Counter\nimport string\nimport math\nimport sys\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(number_of_variables):\n    if number_of_variables == 1:\n        return int(sys.stdin.readline())\n    if number_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\nmod = 1000000007\nfact = [1] * 1000001\nc = 1\nfor i in range(1, 1000001):\n    fact[i] = fact[i - 1] * c % mod\n    c += 1\nprod = [1] * 1000001\npro = 1\nfor i in range(1, 1000000 + 1):\n    pro = pro % mod * fact[i] % mod\n    prod[i] = pro\nfor _ in range(vary(1)):\n    n = vary(1)\n    print(prod[n] % mod)", "from sys import *\ninput = stdin.readline\nl = [0] * (10 ** 6 + 1)\nl[1] = 1\np = 1\nm = 10 ** 9 + 7\nfor i in range(2, 10 ** 6 + 1):\n    l[i] = l[i - 1] * (p * i) % m % m\n    p *= i\n    p = p % m\nfor u in range(int(input())):\n    print(l[int(input())])", "t = int(input())\nn = []\nfor i in range(t):\n    num = int(input())\n    n.append(num)\nfact = [1]\nfacti = [1]\nfor i in range(1, max(n) + 1):\n    fact.append(i * fact[i - 1] % 1000000007)\n    facti.append(facti[i - 1] * fact[i] % 1000000007)\nfor i in n:\n    print(facti[i])", "try:\n    t = int(input())\n    n = []\n    for i in range(t):\n        num = int(input())\n        n.append(num)\n    fact = [1]\n    facti = [1]\n    for i in range(1, max(n) + 1):\n        fact.append(i * fact[i - 1] % 1000000007)\n        facti.append(facti[i - 1] * fact[i] % 1000000007)\n    for i in n:\n        print(facti[i])\nexcept:\n    pass", "from math import factorial\nfrom functools import reduce\nlst = [1] * (10 ** 6 + 1)\nfor j in range(1, 10 ** 6 + 1):\n    lst[j] = lst[j - 1] * j % (10 ** 9 + 7)\nfor j in range(1, 10 ** 6 + 1):\n    lst[j] = lst[j - 1] * lst[j] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    n = int(input())\n    x = lst[n]\n    print(x % (10 ** 9 + 7))", "l = [0] * (10 ** 6 + 3)\nl[0] = 1\nfor i in range(1, 10 ** 6 + 1):\n    l[i] = l[i - 1] * i % (10 ** 9 + 7)\nfor j in range(1, 10 ** 6 + 1):\n    l[j] = l[j] * l[j - 1] % (10 ** 9 + 7)\nn = int(input())\nfor k in range(1, n + 1):\n    b = int(input())\n    print(l[b])", "m = 1000000007\nf = [1, 2, 6]\na = [1, 2, 12]\nfor i in range(3, 10 ** 6):\n    f.append(f[i - 1] * (i + 1) % m)\n    a.append(f[i] * a[i - 1] % m)\nfor _ in range(int(input())):\n    n = int(input())\n    print(a[n - 1])", "import sys\nip = sys.stdin\nmod = pow(10, 9) + 7\nMAXN = pow(10, 6)\nfn = [0] * (MAXN + 1)\nmul = [0] * (MAXN + 1)\nfn[1] = 1\nmul[1] = 1\nfor i in range(2, MAXN + 1):\n    mul[i] = mul[i - 1] * i % mod\n    fn[i] = fn[i - 1] * mul[i] % mod\nt = int(ip.readline())\nfor _ in range(t):\n    n = int(ip.readline())\n    print(fn[n])", "arr = [1] * (10 ** 6 + 1)\nfact = []\nfact.append(1)\nmod = 10 ** 9 + 7\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % mod)\nfor i in range(10 ** 6 + 1):\n    arr[i] = fact[i] * arr[i - 1] % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(arr[n] % mod)", "import collections\nfrom operator import itemgetter\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef ii():\n    return int(input())\n\ndef msi():\n    return input().split()\nmod = 1000000007\na = []\na.append(1)\n\ndef sol(n):\n    temp = 1\n    for i in range(1, n + 1):\n        a.append(temp % mod * i % mod % mod)\n        temp = a[i]\n        a[i] = a[i] * (a[i - 1] % mod) % mod\nt1 = ii()\nsol(1000000)\nwhile t1:\n    t1 -= 1\n    n = ii()\n    print(a[n])", "n = int(input())\nl = [1, 2, 12]\nA = 6\na = 4\nfor i in range(4, 1000001):\n    l.append(A % 1000000007 * a % 1000000007 * l[len(l) - 1] % 1000000007)\n    A = A * a % 1000000007\n    a += 1\nfor i in range(0, n):\n    o = int(input())\n    print(l[o - 1])", "m = 1000000007\n\ndef jk(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = jk(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "t = int(input())\nm = 10 ** 9 + 7\nimport math\narr = []\narr.append(0)\narr.append(1)\nx = 1\nfor i in range(2, 10 ** 6 + 1):\n    x = x * i % m\n    arr.append(arr[i - 1] * x % m)\nwhile t:\n    n = int(input())\n    print(arr[n])\n    t = t - 1", "t = int(input())\nN = 1000000\nl = [1]\na = 1\nfor i in range(1, N + 1):\n    l.append(l[i - 1] * i % 1000000007)\nf = [1]\nfor i in range(1, N + 1):\n    f.append(l[i] * f[i - 1] % 1000000007)\nfor ij in range(t):\n    n = int(input())\n    print(f[n])", "m = 10 ** 9 + 7\n\ndef do(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = do(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "m = 10 ** 9 + 7\n\ndef do(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = do(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "t = int(input())\nN = 10 ** 6\nMOD = 10 ** 9 + 7\nfact = {}\nfact[0] = 1\nfor i in range(1, N + 1):\n    fact[i] = fact[i - 1] * i % MOD\ncf = {}\ncf[0] = 1\nfor i in range(1, N + 1):\n    cf[i] = fact[i] * cf[i - 1]\n    cf[i] = cf[i] % MOD\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    print(cf[n])", "d = [1 for i in range(1000001)]\ns = 1\nfor i in range(2, 1000001):\n    s = s * i % 1000000007\n    d[i] = d[i - 1] * s % 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print(d[n])", "m = 1000000007\nl = [1]\nfor i in range(1, 1000001):\n    a = l[i - 1] * i\n    l.append(a % m)\nans = [1]\nfor i in range(1, 1000001):\n    b = ans[i - 1] * l[i]\n    ans.append(b % m)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(ans[n])", "t = int(input())\na = [0] * 1000001\na[1] = 1\nd = [0] * 1000001\nd[1] = 1\nfor i in range(2, 1000001):\n    a[i] = i * a[i - 1] % 1000000007\n    d[i] = d[i - 1] * a[i] % 1000000007\nwhile t > 0:\n    n = int(input())\n    print(d[n])\n    t -= 1", "arr = [1]\nmod = 1000000007\nfor i in range(1, 1000001):\n    arr.append(arr[-1] * i % mod)\nans = [1]\nfor i in range(1, 1000001):\n    ans.append(ans[-1] * arr[i] % mod)\nfor _ in range(int(input())):\n    n = int(input())\n    print(ans[n])", "arr = [1]\nfor j in range(1, 1000001):\n    arr.append(j * arr[j - 1] % 1000000007)\nans = [1]\nfor j in range(1, 1000001):\n    ans.append(arr[j] * ans[j - 1] % 1000000007)\nfor i in range(int(input())):\n    n = int(input())\n    print(ans[n])", "li = []\nli.append(0)\nx = 1\nfor i in range(1, 1000001):\n    if i == 1:\n        li.append(i)\n    else:\n        x = x * i\n        x = x % 1000000007\n        val = li[i - 1] * x % 1000000007\n        li.append(val)\nfor _ in range(int(input())):\n    n = int(input())\n    ans = li[n]\n    print(ans)", "fact = [0 for i in range(1000002)]\nfact[1] = 1\nfact[2] = 2\nmod = 1000000007\nfor i in range(3, 1000001):\n    fact[i] = i * fact[i - 1] % mod\ndp = [0 for i in range(1000002)]\ndp[1] = 1\nfor i in range(2, 1000001):\n    dp[i] = dp[i - 1] * fact[i] % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(dp[n])", "m = 10 ** 9 + 7\nd = {1: 1}\nfact = 1\nval = 1\nfor i in range(2, 10 ** 6 + 1):\n    fact = fact * i % m\n    val = val * fact % m\n    d[i] = val\nfor _ in range(int(input())):\n    n = int(input())\n    print(d[n])", "t = int(input())\nmod = 1000000007\nlimit = 1000001\nfact = [1]\nfor i in range(1, limit):\n    fact.append(i * fact[i - 1] % mod)\nfor i in range(1, limit):\n    fact[i] = fact[i] * fact[i - 1] % mod\nfor i in range(t):\n    n = int(input())\n    print(fact[n])", "(ans, res) = (1, 1)\ngod_list = []\nfor i in range(1, 10 ** 6 + 7):\n    ans = ans * i % (10 ** 9 + 7)\n    res = res * ans % (10 ** 9 + 7)\n    god_list.append(res)\nfor _ in range(int(input())):\n    print(god_list[int(input()) - 1])", "(ans, res) = (1, 1)\ngod_list = []\nfor i in range(1, 10 ** 6 + 7):\n    ans = ans * i % (10 ** 9 + 7)\n    res = res * ans % (10 ** 9 + 7)\n    god_list.append(res)\nfor _ in range(int(input())):\n    print(god_list[int(input()) - 1])", "m = 1000000007\n\ndef jk(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = jk(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "T = int(input())\nlis = [1]\nfor i in range(1, 1000001):\n    lis.append(i * lis[-1] % 1000000007)\nfor i in range(1, 1000001):\n    lis[i] = lis[i] * lis[i - 1] % 1000000007\nfor i in range(T):\n    N = int(input())\n    print(lis[N])", "q = 1000000007\n\ndef abc(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % q\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % q)\n    return arr\nt = abc(10 ** 6)\na = int(input())\nfor i in range(a):\n    n = int(input())\n    print(t[n - 1])", "MOD = 1000000007\n\ndef mathl(n):\n    mod_fact = [1]\n    fact = 1\n    nor_fact = []\n    for i in range(1, n + 1):\n        fact = fact * i % MOD\n        nor_fact.append(fact)\n    for i in range(1, len(nor_fact)):\n        mod_fact.append(mod_fact[-1] * nor_fact[i] % MOD)\n    return mod_fact\nres = mathl(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(res[n - 1])", "md = 1000000007\ns = 1\nfac = 1\nl = []\nfor i in range(1, 10 ** 6 + 1):\n    fac = fac * i % md\n    s = s * fac % md\n    l.append(s)\nt = int(input())\nfor p in range(t):\n    n = int(input())\n    print(l[n - 1])", "arr = []\nx = 1\ny = 1\nmod = 10 ** 9 + 7\nfor i in range(1, 10 ** 6 + 1):\n    x *= i\n    x = x % mod\n    y *= x\n    y = y % mod\n    arr.append(y)\nfor i in range(int(input())):\n    n = int(input())\n    print(arr[n - 1])", "mod = 10 ** 9 + 7\ne = 10 ** 6 + 1\nf = [0] * e\nf[0] = f[1] = 1\nfact = 1\nfor i in range(2, e):\n    f[i] = i * fact * f[i - 1] % mod\n    fact = fact * i % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(f[n])", "import math\ndic = dict()\ndic[1] = 1\ndp = dict()\ndp[1] = 1\nfor i in range(2, 1000000 + 1):\n    dic[i] = dic[i - 1] * i % 1000000007\n    dp[i] = dp[i - 1] * dic[i] % 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    ans = dp[n]\n    print(ans)", "li = [1]\ntotalpow = [1]\n\ndef func():\n    for i in range(1, 1000001):\n        li.append(i * li[i - 1] % 1000000007)\n        totalpow.append(totalpow[i - 1] * li[i] % 1000000007)\nfunc()\ntest = int(input())\nfor _ in range(0, test):\n    n = int(input())\n    print(totalpow[n] % 1000000007)", "mod = 1000000007\nfact = [0] * (10 ** 6 + 1)\ndp = [0] * (10 ** 6 + 1)\n(fact[1], fact[2]) = (1, 2)\n(dp[1], dp[2]) = (1, 2)\nfor i in range(3, 10 ** 6 + 1):\n    fact[i] = fact[i - 1] % mod * (i % mod) % mod\nfor i in range(3, 10 ** 6 + 1):\n    dp[i] = dp[i - 1] % mod * (fact[i] % mod) % mod\nfor _ in range(int(input())):\n    n = int(input())\n    print(dp[n])", "T = int(input())\nt = []\nfor _ in range(T):\n    N = int(input())\n    t.append(N)\nN = max(t) + 1\nl = [0 for i in range(N)]\np = 1\na = 1\nfor i in range(1, N):\n    a = a * i % 1000000007\n    p = p * a % 1000000007\n    l[i] = p\nfor i in t:\n    print(l[i])", "f = [1] * 1000001\nn = 1000000\nans = [1] * 1000001\nfor i in range(2, n + 1):\n    f[i] = i * f[i - 1] % 1000000007\nfor i in range(2, n + 1):\n    ans[i] = f[i] * ans[i - 1] % 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print(ans[n])", "import math\nmod = 1000000007\n\ndef mod_add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\n\ndef mod_multiply(a, b):\n    c = a * b\n    return c % mod\n\ndef factorial_mod(n):\n    Fact = [1]\n    for i in range(1, n + 1):\n        Fact.append(mod_multiply(Fact[i - 1], i))\n    return Fact\n\ndef ans(n):\n    Fact = factorial_mod(n)\n    Ans = [1]\n    for i in range(1, n + 1):\n        Ans.append(mod_multiply(Fact[i], Ans[i - 1]))\n    return Ans\nAns = ans(1000000)\nfor _ in range(int(input())):\n    i = int(input())\n    print(Ans[i])", "import math\nmod = 1000000007\n\ndef mod_add(a, b):\n    c = a + b\n    if c > mod:\n        c -= mod\n    return c\n\ndef mod_multiply(a, b):\n    c = a * b\n    return c % mod\n\ndef factorial_mod(n):\n    Fact = [1]\n    for i in range(1, n + 1):\n        Fact.append(mod_multiply(Fact[i - 1], i))\n    return Fact\n\ndef ans(n):\n    Fact = factorial_mod(n)\n    Ans = [1]\n    for i in range(1, n + 1):\n        Ans.append(mod_multiply(Fact[i], Ans[i - 1]))\n    return Ans\nAns = ans(1000000)\nfor _ in range(int(input())):\n    i = int(input())\n    print(Ans[i])", "import math\nmod = 1000000007\n\ndef mod_add(a, b):\n    c = a + b\n    if c > mod:\n        c -= mod\n    return c\n\ndef mod_multiply(a, b):\n    c = a * b\n    return c % mod\n\ndef factorial_mod(n):\n    Fact = [1]\n    for i in range(1, n + 1):\n        Fact.append(mod_multiply(Fact[i - 1], i))\n    return Fact\n\ndef ans(n):\n    Fact = factorial_mod(1000000)\n    Ans = [1]\n    for i in range(1, n + 1):\n        Ans.append(mod_multiply(Fact[i], Ans[i - 1]))\n    return Ans\nAns = ans(1000000)\nfor _ in range(int(input())):\n    i = int(input())\n    print(Ans[i])", "DA = [1]\nc = [1]\nmod = 1000000007\n\ndef cal():\n    for i in range(1, 1000001):\n        DA.append(i * DA[i - 1] % mod)\n        c.append(c[i - 1] * DA[i] % mod)\ncal()\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    print(c[N] % mod)\n    T -= 1", "li = [1]\ntotalpow = [1]\n\ndef func():\n    for i in range(1, 1000001):\n        li.append(i * li[i - 1] % 1000000007)\n        totalpow.append(totalpow[i - 1] * li[i] % 1000000007)\nfunc()\ntest = int(input())\nfor _ in range(0, test):\n    n = int(input())\n    print(totalpow[n] % 1000000007)", "arr = [0] * 1000009\nans = [0] * 1000009\narr[1] = 1\narr[2] = 2\nans[1] = 1\nans[2] = 2\ndi = 1000000000 + 7\nfor i in range(3, 1000001):\n    arr[i] = arr[i - 1] % di * (i % di) % di\nfor i in range(3, 1000001):\n    ans[i] = ans[i - 1] % di * (arr[i] % di) % di\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(ans[n] % di)", "self = 1\nprev = 1\nli = [0] * 1000000\nfor i in range(1, 1000001):\n    self = self * i % 1000000007 * prev % 1000000007\n    prev = prev * i % 1000000007\n    li[i - 1] = self\nfor case in range(int(input())):\n    n = int(input())\n    print(li[n - 1])", "import math\np = 1000000007\nl = []\naa = 1\nbb = 1\nfor i in range(1, 1000001):\n    aa = aa * i % p\n    bb = bb * aa % p\n    l.append(bb % p)\nfor _ in range(int(input())):\n    a = int(input())\n    print(l[a - 1] % p)", "try:\n    m = 10 ** 9 + 7\n\n    def jk(n):\n        count = 1\n        arr = []\n        ans = [1]\n        for i in range(1, n + 1):\n            count = count * i % m\n            arr.append(count)\n        for i in range(1, len(arr)):\n            ans.append(ans[-1] * arr[i] % m)\n        return ans\n    t = jk(10 ** 6)\n    for _ in range(int(input())):\n        num = int(input())\n        print(t[num - 1])\nexcept:\n    pass", "def al(n1):\n    dp = []\n    p = 1\n    dp.append(p)\n    a = []\n    a.append(dp[0])\n    for i in range(2, n1 + 1):\n        p = p * i % 1000000007\n        dp.append(p)\n        a.append(a[i - 2] * dp[i - 1] % 1000000007)\n    return a\na2 = al(10 ** 6)\nfor t in range(int(input())):\n    n = int(input())\n    print(a2[n - 1])", "p = 1\nd = {}\nfor i in range(1, 1000001):\n    p = p * i % 1000000007\n    d[i] = p\nk = 1\nans = {}\ns = 1\nfor i in d:\n    s = s * d[i] % 1000000007\n    ans[k] = s\n    k += 1\nfor _ in range(int(input())):\n    n = int(input())\n    print(ans[n] % 1000000007)", "def fun(n):\n    a = []\n    x = 1\n    a.append(x)\n    b = []\n    b.append(a[0])\n    for i in range(2, n + 1):\n        x = x * i % 1000000007\n        a.append(x)\n        b.append(b[i - 2] * a[i - 1] % 1000000007)\n    return b\nt = fun(10 ** 6)\nfor i in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "M = 1000000007\nt = int(input())\ndp = [1, 2]\ndp2 = [1, 2]\ny = 1\nsumm = 1\nfor i in range(2, 1000001):\n    z = dp[i - 1] * (i + 1) % M\n    dp.append(z)\n    y = z * dp2[i - 1] % M\n    dp2.append(y)\nwhile t:\n    t -= 1\n    n = int(input())\n    print(dp2[n - 1])", "m = 1000000007\n\ndef fast_modulo(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = fast_modulo(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "dit = {1: 1}\nf = 1\nrem = 1\nfor i in range(2, 10 ** 6 + 1):\n    f = f * i % 1000000007\n    rem = rem * f % 1000000007\n    dit.setdefault(i, rem)\nfor i in range(int(input())):\n    n = int(input())\n    print(dit[n])", "ls = [0]\nfac = 1\nans = 1\nbig = 1000000007\nfor i in range(1, 1000001):\n    fac = fac % big * (i % big) % big\n    ans = ans % big * (fac % big) % big\n    ls.append(ans % big)\nfor __ in range(int(input())):\n    n = int(input())\n    print(ls[n])", "t = int(input())\nfact = []\nnew_fact = []\nfact.append(1)\nfact.append(1)\nresult = 1\nfor i in range(2, 10 ** 6 + 1):\n    result = result * i % 1000000007\n    fact.append(result)\nans = []\nans.append(1)\nans.append(1)\nfor i in range(2, 10 ** 6 + 1):\n    ans.append(fact[i] * ans[i - 1] % 1000000007)\nfor i in range(t):\n    n = int(input())\n    print(ans[n])", "md = 1000000007\nar = [1]\nrr = [1]\nfor i in range(1, 1000001):\n    ar.append(ar[i - 1] % md * ((i + 1) % md) % md)\n    rr.append(rr[i - 1] % md * (ar[i] % md) % md)\nt = int(input())\nfor j in range(1, t + 1):\n    n = int(input())\n    print(rr[n - 1])", "m = 10 ** 9 + 7\n\ndef func():\n    fact = []\n    arr = []\n    fact.append(1)\n    arr.append(0)\n    arr.append(1)\n    for i in range(1, 10 ** 6 + 1):\n        fact.append(fact[i - 1] * i % m)\n    for i in range(2, 10 ** 6 + 1):\n        arr.append(arr[i - 1] * fact[i] % m)\n    return arr\narr = func()\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    print(arr[n])", "m = 1000000007\n\ndef Create(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nA = Create(1000000)\nfor _ in range(int(input())):\n    n = int(input())\n    print(A[n - 1])", "mod = 1000000007\nfact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact += [fact[-1] * i % mod]\nser = [1]\nfor i in range(1, 10 ** 6 + 1):\n    ser += [ser[-1] * fact[i] % mod]\nfor t in range(int(input())):\n    n = int(input())\n    print(ser[n])", "mod = 10 ** 9 + 7\ne = 10 ** 6 + 1\nf = [0] * e\nf[0] = f[1] = 1\nfact = 1\nfor i in range(2, e):\n    f[i] = i * fact * f[i - 1] % mod\n    fact = fact * i % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(f[n])", "try:\n    t = int(input())\n    n = []\n    for i in range(t):\n        num = int(input())\n        n.append(num)\n    fact = [1]\n    facti = [1]\n    for i in range(1, max(n) + 1):\n        fact.append(i * fact[i - 1] % 1000000007)\n        facti.append(facti[i - 1] * fact[i] % 1000000007)\n    for i in n:\n        print(facti[i])\nexcept:\n    pass", "m = 1000000007\n\ndef solve(n):\n    p = []\n    f = 1\n    a = [1]\n    for i in range(1, n + 1):\n        f = f * i % m\n        p.append(f)\n    for i in range(1, len(p)):\n        a.append(a[-1] * p[i] % m)\n    return a\nt = solve(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "import math as m\nmodulo = pow(10, 9) + 7\nfac = [0] * 10 ** 6\nfac[0] = 1\nfor i in range(1, 10 ** 6):\n    fac[i] = (i + 1) * fac[i - 1] % modulo\nfor i in range(1, 10 ** 6):\n    fac[i] = fac[i - 1] * fac[i] % modulo\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(fac[n - 1])", "mod = 1000000007\nfrom collections import defaultdict\nfact = defaultdict(int)\npfact = defaultdict(int)\nfact[0] = 1\npfact[0] = 1\nmaxn = 10 ** 6\nfor i in range(1, maxn + 1):\n    fact[i] = fact[i - 1] * i % mod\n    pfact[i] = fact[i] * pfact[i - 1] % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(pfact[n])", "a = [0]\np = 1\np1 = 1\nm = 1000000007\nfor i in range(1, 1000001):\n    p = p % m * (i % m) % m\n    p1 = p1 % m * (p % m) % m\n    a.append(p1 % m)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    print(a[n])", "mod = 1000000007\nfact = [0 for i in range(1000001)]\ndp = [0 for i in range(1000001)]\nfact[1] = 1\nfact[2] = 2\ndp[1] = 1\ndp[2] = 2\nfor i in range(3, 1000001):\n    fact[i] = fact[i - 1] * i % mod\nfor i in range(3, 1000001):\n    dp[i] = dp[i - 1] * fact[i] % mod\nfor _ in range(int(input())):\n    n = int(input())\n    print(dp[n])", "m = 10 ** 9 + 7\nar = []\nx = 1\nans = 1\nfor i in range(10 ** 6):\n    f = x % m * ((i + 1) % m) % m\n    ans = ans % m * (f % m) % m\n    ar.append(ans)\n    x = f\ntc = int(input())\nfor ii in range(tc):\n    n = int(input())\n    ans = ar[n - 1]\n    print(ans)", "m = 1000000007\n\ndef jk(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = jk(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "import math\nmod = 10 ** 9 + 7\n\ndef abc(n):\n    fact = []\n    cnt = 1\n    for i in range(1, n + 1):\n        cnt = cnt * i % mod\n        fact.append(cnt)\n    a = [1]\n    for i in range(1, n):\n        a.append(a[i - 1] * fact[i] % mod)\n    return a\na = abc(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(a[n - 1])", "lim = 1000007\nM = 1000000007\nfact = [1] * lim\nfact[1] = 1\nfor i in range(2, lim):\n    fact[i] = fact[i - 1] * i % M\ndp = [1] * lim\ndp[1] = 1\nfor i in range(2, lim):\n    dp[i] = dp[i - 1] * fact[i] % M\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(dp[n])", "p = 10 ** 9 + 7\nt = int(input())\nfact = [1]\nfor i in range(1, 1000001):\n    fact.append(i * fact[i - 1] % p)\nans = [1] * 1000000\nfor i in range(1, 1000000):\n    ans[i] = ans[i - 1] * fact[i + 1] % p\nfor i in range(t):\n    n = int(input())\n    print(ans[n - 1])", "m = 1000000007\n\ndef jk(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % m\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % m)\n    return arr\nt = jk(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "M = 1000000007\n\ndef function(n):\n    arr = [1]\n    cnt = 1\n    ans = []\n    for i in range(1, n + 1):\n        cnt = cnt * i % M\n        ans.append(cnt)\n    for i in range(1, len(ans)):\n        arr.append(arr[-1] * ans[i] % M)\n    return arr\nt = function(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    print(t[n - 1])", "x = 1\ny = 1\nresult = []\nmod = 1000000007\nfor i in range(1, 10 ** 6 + 1):\n    x *= i\n    x = x % mod\n    y *= x\n    y = y % mod\n    result.append(y)\nfor i in range(int(input())):\n    n = int(input())\n    print(result[n - 1])", "arr = [0] * 1000009\nans = [0] * 1000009\narr[1] = 1\narr[2] = 2\nans[1] = 1\nans[2] = 2\ndi = 1000000000 + 7\nfor i in range(3, 1000001):\n    arr[i] = arr[i - 1] % di * (i % di) % di\nfor i in range(3, 1000001):\n    ans[i] = ans[i - 1] % di * (arr[i] % di) % di\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(ans[n] % di)", "fact = [0, 1, 2]\ndp = [0, 1, 2]\nmod = 1000000007\nfor i in range(3, 1000001):\n    fact.append(fact[i - 1] % mod * (i % mod) % mod)\nfor i in range(3, 1000001):\n    dp.append(dp[i - 1] % mod * (fact[i] % mod) % mod)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(dp[n] % mod)", "fact = [0, 1, 2]\ndp = [0, 1, 2]\nmod = 1000000007\nfor i in range(3, 1000001):\n    fact.append(fact[i - 1] % mod * (i % mod) % mod)\nfor i in range(3, 1000001):\n    dp.append(dp[i - 1] % mod * (fact[i] % mod) % mod)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(dp[n] % mod)", "try:\n    mod = 10 ** 6 + 1\n    arr = [0]\n    arr.append(1)\n    arr.append(2)\n    count = 3\n    l = 2\n    m = 1000000007\n    for i in range(3, mod):\n        l = count * l % m\n        arr.append(arr[i - 1] * l % m)\n        count += 1\n        sub = arr[i]\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        print(arr[n])\nexcept:\n    pass", "t = int(input())\nN = 10 ** 6\nMOD = 10 ** 9 + 7\nfact = {}\nfact[0] = 1\nfor i in range(1, N + 1):\n    fact[i] = fact[i - 1] * i % MOD\ncf = {}\ncf[0] = 1\nfor i in range(1, N + 1):\n    cf[i] = fact[i] * cf[i - 1]\n    cf[i] = cf[i] % MOD\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    print(cf[n])", "t = int(input())\nl = [1]\nm = 1000000007\nn = 1000001\npro = 1\nprof = 1\nfor i in range(2, n):\n    pro = pro % m * (i % m) % m\n    prof = prof % m * (pro % m) % m\n    l.append(prof)\nfor _ in range(t):\n    a = int(input())\n    print(l[a - 1])", "m = 1000000007\nl = [1]\nz = 1\no = 1\nfor i in range(2, 1000001):\n    z = z * i % m\n    o = o * z % m\n    l.append(o)\nfor i in range(int(input())):\n    n = int(input())\n    print(l[n - 1])", "MODI = 1000000007\n\ndef mulmod(a, b, mod):\n    res = 0\n    a = a % mod\n    while b > 0:\n        if b % 2 == 1:\n            res = (res + a) % mod\n        a = a * 2 % mod\n        b //= 2\n    return res % mod\n\ndef ft(N):\n    if pro[N] != 0:\n        return pro[N]\n    product = 1\n    fact = 1\n    MOD = 1000000000.0 + 7\n    for i in range(1, N + 1):\n        fact = mulmod(fact, i, MOD)\n        product = mulmod(product, fact, MOD)\n        if not product:\n            return 0\n    pro[N] = int(product)\n    return int(product)\npro = [0 for i in range(1000003)]\nfa = [1 for i in range(1000003)]\npro[1] = 1\npro[2] = 2\npro[3] = 12\nfa[1] = 1\nfa[2] = 2\nfa[3] = 6\nfor i in range(4, 1000003):\n    fa[i] = fa[i - 1] * i % MODI\n    pro[i] = pro[i - 1] * fa[i] % MODI\nfor _ in range(int(input())):\n    n = int(input())\n    print(pro[n])", "t = int(input())\na = [-1] * 1000007\na[0] = 0\na[1] = 1\nl = 1\nfor i in range(2, 1000007):\n    l = l * i % 1000000007\n    a[i] = a[i - 1] * l % 1000000007\nfor _ in range(t):\n    n = int(input())\n    print(a[n] % 1000000007)", "res = [0 for i in range(10 ** 6 + 1)]\nM = 1000000007\nres[1] = 1\nres[0] = 1\nmulti = 1 * 2\nfor i in range(2, 10 ** 6 + 1):\n    res[i] = res[i - 1] * multi % M\n    multi *= i + 1\n    multi %= M\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    print(res[n])\n    t -= 1", "MOD = 1000000007\narr = []\nch = 1\nans = 1\nfor i in range(1, 1000001):\n    k = i * ch % MOD\n    ch = k\n    ans = ans * k % MOD\n    arr.append(ans)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    print(arr[n - 1])\n    t = t - 1", "MOD = 1000000007\narr = []\nch = 1\nans = 1\nfor i in range(1, 1000001):\n    k = i * ch % MOD\n    ch = k\n    ans = ans * k % MOD\n    arr.append(ans)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    print(arr[n - 1])\n    t = t - 1", "fact = [None] * 1000001\nans = [None] * 1000001\nfact[0] = 1\nfact[1] = 1\nans[0] = 1\nans[1] = 1\nfor i in range(2, 1000001):\n    fact[i] = fact[i - 1] * i % 1000000007\n    ans[i] = fact[i] * ans[i - 1] % 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print(ans[n])"]