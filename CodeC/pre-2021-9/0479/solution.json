["from math import gcd\nfor _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    sum1 = x * (x + 1) // 2\n    a = (sum1 + y) // 2\n    b = sum1 - a\n    if abs(a - b) == y:\n        if gcd(a, b) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import os, sys, io, math\nfrom array import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    p = (s + m) // 2\n    print('Yes' if n == 1 and m == 1 or (2 * p - s == m and gcd(p, s - p) == 1) else 'No')", "import os, sys, io, math\nfrom array import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    p = (s + m) // 2\n    print('Yes' if n == 1 and m == 1 or (2 * p - s == m and gcd(p, s - p) == 1) else 'No')", "import os, sys, io, math\nfrom array import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    p = (s + m) // 2\n    print('Yes' if n == 1 and m == 1 or (2 * p - s == m and gcd(p, s - p) == 1) else 'No')", "def gcd(X, Y):\n    while Y:\n        (X, Y) = (Y, X % Y)\n    return abs(X)\n\ndef isCoprime(X, Y):\n    if gcd(X, Y) == 1:\n        return True\n    return False\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    temp = N * (N + 1) // 2\n    if M >= temp:\n        print('No')\n    elif (temp - M) % 2 == 1:\n        print('No')\n    elif isCoprime((temp - M) // 2, (temp - M) // 2 + M):\n        print('Yes')\n    else:\n        print('No')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    total = n * (n + 1) // 2\n    ans = 'No'\n    if total > m:\n        remain = total - m\n        half = remain // 2\n        if remain & 1:\n            ans = 'No'\n        elif math.gcd(half + m, half) == 1:\n            ans = 'Yes'\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    total = n * (n + 1) // 2\n    ans = 'No'\n    if total > m:\n        remain = total - m\n        half = remain // 2\n        if remain & 1:\n            ans = 'No'\n        elif math.gcd(half + m, half) == 1:\n            ans = 'Yes'\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = n * (n + 1) // 2\n    a = total + m\n    if total <= m:\n        print('No')\n    elif a % 2 != 0:\n        print('No')\n    else:\n        a = a // 2\n        b = total - a\n        if math.gcd(a, b) == 1:\n            print('Yes')\n        else:\n            print('No')", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    total = n * (n + 1) // 2\n    ans = 'No'\n    if total > m:\n        remaining = total - m\n        half = remaining // 2\n        if not remaining & 1 and math.gcd(half + m, half) == 1:\n            ans = 'Yes'\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    total = n * (n + 1) // 2\n    ans = 'No'\n    if total <= m:\n        ans = 'No'\n    else:\n        remaining = total - m\n        half = remaining // 2\n        if remaining & 1:\n            ans = 'No'\n        elif math.gcd(half + m, half) == 1:\n            ans = 'Yes'\n    print(ans)", "import math\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = N * (N + 1) // 2\n    b = (a + M) // 2\n    c = a - b\n    if b - c == M:\n        if math.gcd(b, c) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = N * (N + 1) // 2\n    b = (a + M) // 2\n    c = a - b\n    if b - c == M:\n        if math.gcd(b, c) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    totalsum = n * (n + 1) // 2\n    p = (totalsum + m) // 2\n    q = totalsum - p\n    if abs(p - q) == m:\n        if math.gcd(int(p), int(q)) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\ntestCases = int(input())\nfor testCase in range(testCases):\n    (n, m) = map(int, input().split())\n    ts = n * (n + 1) // 2\n    s2 = (ts + m) // 2\n    s1 = ts - s2\n    if abs(s2 - s1) == m:\n        if math.gcd(s1, s2) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    x = (sm + m) // 2\n    y = sm - x\n    if x - y == m:\n        if math.gcd(x, y) == 1.0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "from math import gcd\nfor _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    tot = n * (n + 1) // 2\n    a = (tot + m) // 2\n    b = tot - a\n    if a - b == m:\n        if gcd(a, b) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nt = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    if s < m:\n        print('No')\n    else:\n        x = (s + m) // 2\n        y = s - x\n        if x + y == s and x - y == m:\n            ans = math.gcd(x, y)\n            if ans == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')", "import math\nt = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    if s < m:\n        print('No')\n    else:\n        x = (s + m) // 2\n        y = s - x\n        if x + y == s and x - y == m:\n            ans = math.gcd(x, y)\n            if ans == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor x1 in range(int(input())):\n    x = list(map(int, input().split()))\n    su = x[0] * (x[0] + 1) // 2\n    if (su - x[1]) % 2 == 1 or x[1] >= su:\n        print('No')\n        continue\n    d = (su - x[1]) // 2\n    a = su - d\n    val = gcd(a, d)\n    if val != 1:\n        print('No')\n        continue\n    print('Yes')", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sum = n * (n + 1) // 2\n    sum2 = (sum - m) // 2\n    if (sum + m) % 2 == 1 or sum2 < 0:\n        print('No')\n        continue\n    sum3 = (sum + m) // 2\n    num = math.gcd(sum3, sum2)\n    if num == 1:\n        print('Yes')\n    else:\n        print('No')", "from math import gcd\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sm = n * (n + 1) // 2\n    a = sm + m\n    if a & 1:\n        print('No')\n        continue\n    a //= 2\n    b = sm - a\n    if gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    v = n * (n + 1) // 2\n    if m > v:\n        print('No')\n        continue\n    if v & 1:\n        if m % 2 == 0:\n            print('No')\n            continue\n    if v % 2 == 0:\n        if m & 1:\n            print('No')\n            continue\n    ans1 = (v + m) // 2\n    if math.gcd(ans1, abs(v - ans1)) == 1:\n        print('Yes')\n    else:\n        print('No')", "from fractions import gcd\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    x = (m + s) // 2\n    y = s - x\n    if gcd(x, y) == 1 and abs(x - y) == m:\n        print('Yes')\n    else:\n        print('No')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = n * (n + 1) // 2\n    a = (res + m) // 2\n    b = res - a\n    if (m + res) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = n * (n + 1) // 2\n    a = (res + m) // 2\n    b = res - a\n    if (m + res) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')", "from fractions import gcd\nt = int(input(''))\nfor i in range(t):\n    str = input()\n    a = str.split(' ')\n    n = int(a[0])\n    m = int(a[1])\n    s = n * (n + 1) // 2\n    x = (s + m) // 2\n    y = x - m\n    z = gcd(int(x), int(y))\n    if s < m:\n        print('No')\n    elif x + y == s and x - y == m:\n        if z == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "from math import gcd as bltin_gcd\nt = int(input())\nwhile t:\n    try:\n        t = t - 1\n        str = input()\n        a = str.split(' ')\n        n = int(a[0])\n        m = int(a[1])\n        ans = n + 1\n        ans = ans * n\n        ans = ans // 2\n        s1 = (ans + m) // 2\n        s2 = s1 - m\n        if ans < m:\n            print('No')\n        elif s1 + s2 == ans and s1 - s2 == m:\n            if bltin_gcd(s1, s2) == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')\n    except EOFError:\n        break", "from math import gcd as bltin_gcd\nt = int(input())\nwhile t:\n    try:\n        t = t - 1\n        str = input()\n        a = str.split(' ')\n        n = int(a[0])\n        m = int(a[1])\n        ans = n + 1\n        ans = ans * n\n        ans = ans // 2\n        s1 = (ans + m) // 2\n        s2 = s1 - m\n        if ans < m:\n            print('No')\n        elif m == 0:\n            if n == 1:\n                print('Yes')\n            else:\n                print('No')\n        elif s1 + s2 == ans and s1 - s2 == m:\n            if bltin_gcd(s1, s2) == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')\n    except EOFError:\n        break", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef solve(n, m):\n    sumi = n * (n + 1) // 2\n    a = (m + sumi) // 2\n    b = sumi - a\n    if (m + sumi) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split(' '))\n    solve(n, m)", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef solve(n, m):\n    sumi = n * (n + 1) // 2\n    a = (m + sumi) // 2\n    b = sumi - a\n    if (m + sumi) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split(' '))\n    solve(n, m)", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    a = int(n * (n + 1) // 2)\n    s1 = int((a + m) // 2)\n    s2 = abs(m - s1)\n    p = int(math.gcd(s1, s2))\n    if (m + a) % 2 != 0:\n        print('No')\n    elif p == 1:\n        print('Yes')\n    else:\n        print('No')", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    a = int(n * (n + 1) // 2)\n    s1 = int((a + m) // 2)\n    s2 = abs(m - s1)\n    p = int(math.gcd(s1, s2))\n    if (m + a) % 2 != 0:\n        print('No')\n    elif p == 1:\n        print('Yes')\n    else:\n        print('No')", "def gcd(a, b):\n    if a == 0:\n        return b\n    else:\n        return gcd(b % a, a)\nfor _ in range(int(input())):\n    (n, m) = map(int, input('').split())\n    _sum = n * (n + 1) // 2\n    a = (m + _sum) // 2\n    b = _sum - a\n    if (m + _sum) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')", "def gcd(elem1, elem2):\n    while elem2:\n        (elem1, elem2) = (elem2, elem1 % elem2)\n    return elem1\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    summ = n * (n + 1) // 2\n    add = summ + m\n    if add % 2 == 0:\n        elem1 = add // 2\n        elem2 = summ - elem1\n        f = gcd(elem1, elem2)\n        if f == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = int(n * (n + 1)) // 2\n    p = k + m\n    if p % 2 != 0:\n        print('No')\n    else:\n        p = int(p // 2)\n        x = k - p\n        if int(math.gcd(p, x)) == 1:\n            print('Yes')\n        else:\n            print('No')", "from fractions import gcd\ntc = int(input())\nfor i in range(tc):\n    (summ, flag, arr) = (0, 0, [-1, -1])\n    (n, m) = map(int, input().split())\n    summ = n * (n + 1) // 2\n    if (summ + m) % 2 != 0:\n        print('No')\n    else:\n        (x, y) = ((summ + m) // 2, (summ - m) // 2)\n        if gcd(x, y) == 1:\n            print('Yes')\n        else:\n            print('No')", "from math import ceil\nfrom math import gcd\nt = int(input())\nwhile t > 0:\n    string = input().split()\n    n = int(string[0])\n    m = int(string[1])\n    summation = n * (n + 1) // 2\n    first = (summation + m) / 2\n    second = summation - first\n    if (summation + m) % 2 == 0 and gcd((summation + m) // 2, (summation + m) // 2 - m) == 1:\n        print('Yes')\n    else:\n        print('No')\n    t -= 1", "import math\n\ndef coprime2(a, b):\n    return math.gcd(a, b) == 1\nfor i in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    if m == 0:\n        print('No')\n    else:\n        su = n * (n + 1) // 2\n        if su < m or (su + m) % 2 != 0:\n            print('No')\n        else:\n            s1 = (su + m) // 2\n            s2 = su - s1\n            bVal = coprime2(s1, s2)\n            if bVal and math.fabs(s1 - s2) == m and (s1 + s2 == su):\n                print('Yes')\n            else:\n                print('No')", "import math\n\ndef coprime2(a, b):\n    return math.gcd(a, b) == 1\nfor i in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    if m == 0:\n        print('No')\n    else:\n        su = int(n * (n + 1) // 2)\n        if su < m or (su + m) % 2 != 0:\n            print('No')\n        else:\n            s1 = (su + m) // 2\n            s2 = su - s1\n            bVal = coprime2(s1, s2)\n            if bVal:\n                print('Yes')\n            else:\n                print('No')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef coprime2(a, b):\n    return gcd(a, b) == 1\nfor i in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    su = int(n * (n + 1) // 2)\n    if (su + m) % 2 != 0:\n        print('No')\n    else:\n        s1 = (su + m) // 2\n        s2 = su - s1\n        bVal = coprime2(s1, s2)\n        if bVal:\n            print('Yes')\n        else:\n            print('No')", "def GCD(x, y):\n    if x == 0:\n        return y\n    return GCD(y % x, x)\n\ndef findAns(summ, m):\n    a = (summ + m) // 2\n    b = summ - a\n    if (summ + m) % 2 != 0:\n        print('No')\n    elif GCD(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    summ = n * (n + 1) // 2\n    if summ <= m:\n        print('No')\n    else:\n        findAns(summ, m)", "from math import gcd\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = n * (n + 1) // 2\n    if (m + s) % 2 != 0:\n        print('No')\n    else:\n        N = (m + s) // 2\n        if gcd(N, N - m) == 1:\n            print('Yes')\n        else:\n            print('No')", "import math\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nfor _ in range(ii()):\n    (n, m) = mi()\n    x = n * (n + 1) // 2\n    y = (x + m) // 2\n    if (x + m) % 2 == 0 and math.gcd(y, y - m) == 1:\n        print('Yes')\n    else:\n        print('No')", "from fractions import gcd\ntc = int(input())\nfor i in range(tc):\n    (summ, flag, arr) = (0, 0, [-1, -1])\n    (n, m) = map(int, input().split())\n    summ = n * (n + 1) // 2\n    if (summ + m) % 2 != 0:\n        print('No')\n    else:\n        (x, y) = ((summ + m) // 2, (summ - m) // 2)\n        if gcd(x, y) == 1:\n            print('Yes')\n        else:\n            print('No')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef solve(n, m):\n    sumi = n * (n + 1) // 2\n    a = (m + sumi) // 2\n    b = sumi - a\n    if (m + sumi) % 2 != 0:\n        print('No')\n    elif gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split(' '))\n    solve(n, m)", "import math\nt = int(input())\nfor i in range(t):\n    t = 'Yes'\n    (a, b) = map(int, input().split())\n    c = a * (a + 1) // 2 - b\n    if c <= 0 or c % 2 != 0:\n        t = 'No'\n    else:\n        d = math.gcd(c // 2 + b, c // 2)\n        if d != 1:\n            t = 'No'\n    print(t)", "def hcfnaive(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcfnaive(b, a % b)\nT = int(input())\nfor i in range(T):\n    (n, m) = [int(x) for x in input().split()]\n    sum = n * (n + 1) // 2\n    a = (sum + m) // 2\n    b = (sum - m) // 2\n    if sum % 2 == 1:\n        if m % 2 == 1 and m > 0 and (m <= sum - 2):\n            if hcfnaive(a, b) == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')\n    elif sum % 2 == 0:\n        if m % 2 == 0 and m > 0 and (m <= sum - 2):\n            if hcfnaive(a, b) == 1:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')", "from math import gcd\n\ndef f(N, M):\n    S = N * (N + 1) >> 1\n    X = S + M >> 1\n    return (X, S - X)\n\ndef ans(N, M):\n    (x, y) = f(N, M)\n    if x > 0 and y > 0:\n        if abs(x - y) == M and gcd(x, y) == 1:\n            return 'Yes'\n    return 'No'\nT = int(input())\nfor _ in range(T):\n    print(ans(*map(int, input().split())))", "from math import gcd as bltin_gcd\nt = int(input())\nfor i in range(t):\n    (n, y) = (int(x) for x in input().split())\n    sum = n * (n + 1) // 2\n    if sum < y:\n        print('No')\n        continue\n    if sum == y:\n        print('No')\n        continue\n    else:\n        if (sum + y) % 2 != 0:\n            print('No')\n            continue\n        n1 = (sum + y) // 2\n        n2 = sum - n1\n        gcd = bltin_gcd(n1, n2)\n        if gcd == 1:\n            print('Yes')\n        else:\n            print('No')", "from math import gcd\nfor i in range(int(input())):\n    (N, M) = map(int, input().strip().split())\n    sumN = N * (N + 1) // 2\n    if sumN < M:\n        print('No')\n    elif (sumN - 2) % 2 == M % 2:\n        if gcd((sumN - M) // 2, (sumN + M) // 2) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nt = int(input())\nwhile t:\n    f = 0\n    (n, m) = map(int, input().split())\n    k = n * (n + 1) // 2\n    if (k - m) % 2 == 0:\n        if gcd((k - m) // 2, (k - m) // 2 + m) == 1:\n            f = 1\n    if f == 0:\n        print('No')\n    else:\n        print('Yes')\n    t = t - 1", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nt = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    ts = N * (N + 1) // 2\n    s1 = (ts + M) // 2\n    s2 = ts - s1\n    a = gcd(s1, s2)\n    m = max(s1, s2) - min(s1, s2)\n    if M > ts or m != M or a != 1:\n        print('No')\n    else:\n        print('Yes')", "t = int(input().strip())\n\ndef gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split(' ')]\n    s = n * (n + 1) // 2\n    if m >= s:\n        print('No')\n        continue\n    a = (m + s) // 2\n    b = (s - m) // 2\n    if a + b != s or a - b != m:\n        print('No')\n        continue\n    if gcd(a, b) == 1:\n        print('Yes')\n    else:\n        print('No')", "def gcd(a, b):\n    if not a:\n        return b\n    else:\n        return gcd(b % a, a)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    nSum = n * (n + 1) // 2\n    t = nSum - m\n    if t > 0 and t % 2 == 0:\n        s1 = s2 = t // 2\n        s1 += m\n        if gcd(s1, s2) == 1:\n            print('Yes')\n            continue\n    print('No')", "def gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nT = int(input())\nfor y in range(T):\n    (N, M) = map(int, input().split())\n    total_sum = N * (N + 1) // 2\n    sum1 = M + total_sum\n    if sum1 % 2 == 0:\n        sum1 //= 2\n        sum2 = total_sum - sum1\n        if gcd(sum1, sum2) == 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "from fractions import gcd\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = n * (n + 1) // 2\n    (ai, bi) = (m + p, p - m)\n    if 1 in (ai % 2, bi % 2):\n        print('No')\n    else:\n        a = ai // 2\n        b = bi // 2\n        if gcd(a, b) > 1:\n            print('No')\n        else:\n            print('Yes')", "from math import gcd\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    tot = n * (n + 1) // 2\n    f = True\n    if (tot + m) % 2 != 0 or (tot - m) % 2 != 0:\n        f = False\n    if f:\n        a = (tot + m) // 2\n        b = (tot - m) // 2\n        if b < 0:\n            f = False\n        elif gcd(a, b) != 1:\n            f = False\n    if f:\n        print('Yes')\n    else:\n        print('No')", "import sys\nimport math\nfrom fractions import gcd\nmod = 1000000007\n\ndef nospace(l):\n    ans = ''.join((str(i) for i in l))\n    return ans\nt = int(input())\nfor tt in range(t):\n    a = list(map(int, sys.stdin.readline().split(' ')))\n    n = a[0]\n    m = a[1]\n    if (n * (n + 1) // 2 + m) % 2:\n        print('No')\n        continue\n    s1 = (n * (n + 1) // 2 + m) // 2\n    s2 = n * (n + 1) // 2 - s1\n    if s2 == 0:\n        if s1 == 1:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    if s2 < 0:\n        print('No')\n        continue\n    if gcd(s1, s2) == 1:\n        print('Yes')\n    else:\n        print('No')", "from math import gcd\nt = int(input())\nwhile t:\n    t -= 1\n    (n, m) = list(map(int, input().split()))\n    n = n * (n + 1) // 2\n    if (n - m) % 2:\n        print('No')\n    else:\n        a = (n - m) // 2\n        if gcd(a, a + m) != 1:\n            print('No')\n        else:\n            print('Yes')"]