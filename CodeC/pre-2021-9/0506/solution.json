["from sys import stdin, stdout\nimport numpy as np\nm = 10 ** 9 + 7\nread = lambda : stdin.readline().strip()\n\ndef generate_schedule(n):\n    if n % 2 == 0:\n        return (pow(3, n, m) + 3) % m\n    else:\n        return (pow(3, n, m) - 3) % m\nt = int(read())\nfor _ in range(t):\n    n = int(read())\n    print(generate_schedule(n))", "from sys import stdin, stdout\nimport numpy as np\nm = 10 ** 9 + 7\nread = lambda : stdin.readline().strip()\n\ndef generate_schedule(n):\n    if n % 2 == 0:\n        return pow(3, n, m) + 3\n    else:\n        return pow(3, n, m) - 3\nt = int(read())\nfor _ in range(t):\n    n = int(read())\n    print(generate_schedule(n))", "from sys import stdin, stdout\nimport numpy as np\nm = 10 ** 9 + 7\nread = lambda : stdin.readline().strip()\n\ndef generate_schedule(n):\n    if n % 2 == 0:\n        return (pow(3, n, m) + 3) % m\n    else:\n        return (pow(3, n, m) - 3) % m\nt = int(read())\nfor _ in range(t):\n    n = int(read())\n    print(generate_schedule(n))", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    ans = pow(3, n, mod)\n    if n % 2 == 0:\n        print((ans + 3) % mod)\n    else:\n        print((ans - 3) % mod)", "mod = 1000000007\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    ans = pow(3, n, mod)\n    if n % 2 == 0:\n        ans = (ans + 3) % mod\n    else:\n        ans = (ans - 3) % mod\n    print(ans)", "mod = 1000000007\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    ans = pow(3, n, mod)\n    if n % 2 == 0:\n        ans = (ans + 3) % mod\n    else:\n        ans = (ans - 3) % mod\n    print(ans)", "mod = 1000000007\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    ans = pow(3, n, mod)\n    if n % 2 == 0:\n        ans = (ans + 3) % mod\n    else:\n        ans = (ans - 3) % mod\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    md = 10 ** 9 + 7\n    ans = pow(3, n, md)\n    if n % 2 == 0:\n        print((ans + 3) % md)\n    else:\n        print((ans - 3) % md)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = 10 ** 9 + 7\n    a = pow(3, n, x)\n    b = 3 * pow(-1, n) % x\n    print((a + b) % x)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    a = pow(3, n, mod)\n    b = 3 * pow(-1, n) % mod\n    print((a + b) % mod)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    a = pow(3, n, mod)\n    b = 3 * pow(-1, n) % mod\n    print((a + b) % mod)", "k = 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    print((pow(3, n, k) + (-1) ** n * 3 % k) % k)", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = (n - 1) // 2\n    ans = pow(3, n - 2 * x, e)\n    x = pow(9, x, e)\n    x = (x - 1) % e\n    ans = ans * x % e\n    if not n % 2:\n        ans = (ans + 12) % e\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    ans = pow(3, n, mod)\n    if n % 2 == 0:\n        print((ans + 3) % mod)\n    else:\n        print((ans - 3) % mod)", "k = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print((pow(3, n, k) + (-1) ** n * 3 % k) % k)", "k = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print((pow(3, n, k) + (-1) ** n * 3 % k) % k)", "for tc in range(int(input())):\n    n = int(input())\n    print((pow(3, n, 10 ** 9 + 7) + [3, -3][n & 1]) % (10 ** 9 + 7))", "N = 1000000007\n\ndef po(base, exponent, modulus):\n    result = 1\n    while exponent > 0:\n        if exponent % 2 == 1:\n            result = result * base % modulus\n        exponent //= 2\n        base = base * base % modulus\n    return result\nfor i in range(int(input())):\n    inpu = int(input())\n    rem = po(3, inpu, N)\n    if inpu % 2 != 0:\n        temp = rem - 3\n        if temp < 0:\n            print(N + temp)\n        else:\n            print(temp)\n    else:\n        print((rem + 3) % N)", "N = 1000000007\n\ndef po(base, exponent, modulus):\n    result = 1\n    while exponent > 0:\n        if exponent % 2 == 1:\n            result = result * base % modulus\n        exponent //= 2\n        base = base * base % modulus\n    return result\nfor i in range(int(input())):\n    inpu = int(input())\n    rem = po(3, inpu, N)\n    if inpu % 2 != 0:\n        temp = rem - 3\n        if temp < 0:\n            print(N + temp)\n        else:\n            print(temp)\n    else:\n        print((rem + 3) % N)", "N = 1000000007\n\ndef po(base, exponent, modulus):\n    result = 1\n    while exponent > 0:\n        if exponent % 2 == 1:\n            result = result * base % modulus\n        exponent //= 2\n        base = base * base % modulus\n    return result\nfor i in range(int(input())):\n    inpu = int(input())\n    rem = po(3, inpu, N)\n    if inpu % 2 != 0:\n        temp = rem - 3\n        if temp < 0:\n            print(N + temp)\n        else:\n            print(temp)\n    else:\n        print((rem + 3) % N)", "def main():\n    mod = 1000000007\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print((pow(3, n, mod) + 3) % mod)\n        else:\n            print((pow(3, n, mod) - 3) % mod)\nmain()", "mod = 1000000007\nT = int(input())\nfor T in range(T):\n    n = int(input())\n    print((pow(3, n, mod) + 3 * pow(-1, n, mod) + mod) % mod)"]