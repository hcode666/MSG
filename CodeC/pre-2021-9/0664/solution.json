["highs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\nmod = 1000000007\n\ndef solve():\n    (l, r) = map(str, input().split())\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        return (l + r) * (r - l + 1) * ll // 2 % mod\n    r1 = 10 ** ll - 1\n    r2 = 10 ** (rl - 1)\n    ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % mod\n    for i in range(ll + 1, rl):\n        a = 10 ** (i - 1)\n        b = 10 ** i - 1\n        ans += (a + b) * (b - a + 1) * i // 2 % mod\n    return ans % mod\nfor _ in range(int(input())):\n    print(solve())", "def bsum(x, y):\n    return y * (y + 1) // 2 - x * (x - 1) // 2\nimport math\nt = int(input())\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    ldig = int(math.log10(l))\n    rdig = int(math.log10(r))\n    if ldig == rdig:\n        total = bsum(l, r) * (ldig + 1)\n    else:\n        total = bsum(l, 10 ** (ldig + 1) - 1) * (ldig + 1) % (10 ** 9 + 7) + bsum(10 ** rdig, r) * (rdig + 1) % (10 ** 9 + 7)\n        for i in range(ldig + 1, rdig):\n            total += bsum(10 ** i, 10 ** (i + 1) - 1) * (i + 1)\n            total %= 10 ** 9 + 7\n    print(total % (10 ** 9 + 7))", "highs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\nmod = 1000000007\n\ndef solve():\n    (l, r) = map(str, input().split())\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        return (l + r) * (r - l + 1) * ll // 2 % mod\n    r1 = 10 ** ll - 1\n    r2 = 10 ** (rl - 1)\n    ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % mod\n    for i in range(ll + 1, rl):\n        a = 10 ** (i - 1)\n        b = 10 ** i - 1\n        ans += (a + b) * (b - a + 1) * i // 2 % mod\n    return ans % mod\nfor _ in range(int(input())):\n    print(solve())", "highs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\nmod = 1000000007\n\ndef solve():\n    (l, r) = map(str, input().split())\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        return (l + r) * (r - l + 1) * ll // 2 % mod\n    r1 = 10 ** ll - 1\n    r2 = 10 ** (rl - 1)\n    ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % mod\n    for i in range(ll + 1, rl):\n        a = 10 ** (i - 1)\n        b = 10 ** i - 1\n        ans += (a + b) * (b - a + 1) * i // 2 % mod\n    return ans % mod\nfor _ in range(int(input())):\n    print(solve())", "highs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\nmod = 1000000007\n\ndef solve():\n    (l, r) = map(str, input().split())\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        return (l + r) * (r - l + 1) * ll // 2 % mod\n    r1 = 10 ** ll - 1\n    r2 = 10 ** (rl - 1)\n    ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % mod\n    for i in range(ll + 1, rl):\n        a = 10 ** (i - 1)\n        b = 10 ** i - 1\n        ans += (a + b) * (b - a + 1) * i // 2 % mod\n    return ans % mod\nfor _ in range(int(input())):\n    print(solve())", "highs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\nmod = 1000000007\n\ndef solve():\n    (l, r) = input().split()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        return (l + r) * (r - l + 1) * ll // 2 % mod\n    r1 = 10 ** ll - 1\n    r2 = 10 ** (rl - 1)\n    ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % mod\n    for i in range(ll + 1, rl):\n        a = 10 ** (i - 1)\n        b = 10 ** i - 1\n        ans += (a + b) * (b - a + 1) * i // 2 % mod\n    return ans % mod\nfor _ in range(int(input())):\n    print(solve())", "a = int(input())\nfor i in range(a):\n    (L, R) = map(int, input().split())\n    m = len(str(L))\n    n = len(str(R))\n    if m == n:\n        x = (R - L + 1) * (L + R) // 2\n        y = x * n\n        print(y % (10 ** 9 + 7))\n    else:\n        x = 0\n        for j in range(m + 1, n):\n            x += 9 * 10 ** (j - 1) // 2 * (11 * 10 ** (j - 1) - 1) * j\n        p = int('9' * m)\n        x += (p - L + 1) * (L + p) // 2 * m\n        q = 10 ** (n - 1)\n        x += (R - q + 1) * (q + R) // 2 * n\n        print(x % (10 ** 9 + 7))", "a = int(input())\nfor i in range(a):\n    (L, R) = map(int, input().split())\n    m = len(str(L))\n    n = len(str(R))\n    if m == n:\n        x = (R - L + 1) * (L + R) // 2\n        y = x * n\n        print(y % (10 ** 9 + 7))\n    else:\n        x = 0\n        for j in range(m + 1, n):\n            x += 9 * 10 ** (j - 1) // 2 * (11 * 10 ** (j - 1) - 1) * j\n        p = int('9' * m)\n        x += (p - L + 1) * (L + p) // 2 * m\n        q = 10 ** (n - 1)\n        x += (R - q + 1) * (q + R) // 2 * n\n        print(x % (10 ** 9 + 7))", "a = int(input())\nfor i in range(a):\n    (L, R) = map(int, input().split())\n    m = len(str(L))\n    n = len(str(R))\n    if m == n:\n        x = (R - L + 1) * (L + R) // 2\n        y = x * n\n        print(y % (10 ** 9 + 7))\n    else:\n        x = 0\n        for j in range(m + 1, n):\n            x += 9 * 10 ** (j - 1) // 2 * (11 * 10 ** (j - 1) - 1) * j\n        p = int('9' * m)\n        x += (p - L + 1) * (L + p) // 2 * m\n        q = 10 ** (n - 1)\n        x += (R - q + 1) * (q + R) // 2 * n\n        print(x % (10 ** 9 + 7))", "a = int(input())\nfor i in range(a):\n    (L, R) = map(int, input().split())\n    m = len(str(L))\n    n = len(str(R))\n    if m == n:\n        x = (R - L + 1) * (L + R) // 2\n        y = x * n\n        print(y % (10 ** 9 + 7))\n    else:\n        x = 0\n        for j in range(m + 1, n):\n            x += 9 * 10 ** (j - 1) // 2 * (11 * 10 ** (j - 1) - 1) * j\n        p = int('9' * m)\n        x += (p - L + 1) * (L + p) // 2 * m\n        q = 10 ** (n - 1)\n        x += (R - q + 1) * (q + R) // 2 * n\n        print(x % (10 ** 9 + 7))", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    (ten, lcnt) = (1, 0)\n    lt = l\n    while lt > 0:\n        lcnt += 1\n        ten *= 10\n        lt //= 10\n    rt = r\n    rcnt = 0\n    while rt > 0:\n        rcnt += 1\n        rt //= 10\n    prev = l - 1\n    ans = 0\n    while lcnt < rcnt:\n        val = (ten - 1) * ten // 2\n        val -= prev * (prev + 1) // 2\n        val = val % mod * lcnt % mod\n        ans = (ans % mod + val % mod) % mod\n        lcnt += 1\n        prev = ten - 1\n        ten *= 10\n    val = r * (r + 1) // 2\n    val -= prev * (prev + 1) // 2\n    val = val % mod * rcnt % mod\n    ans = (ans % mod + val % mod) % mod\n    print(ans)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    (ten, lcnt) = (1, 0)\n    lt = l\n    while lt > 0:\n        lcnt += 1\n        ten *= 10\n        lt //= 10\n    rt = r\n    rcnt = 0\n    while rt > 0:\n        rcnt += 1\n        rt //= 10\n    prev = l - 1\n    ans = 0\n    while lcnt < rcnt:\n        val = (ten - 1) * ten // 2\n        val -= prev * (prev + 1) // 2\n        val = val % mod * lcnt % mod\n        ans = (ans % mod + val % mod) % mod\n        lcnt += 1\n        prev = ten - 1\n        ten *= 10\n    val = r * (r + 1) // 2\n    val -= prev * (prev + 1) // 2\n    val = val % mod * rcnt % mod\n    ans = (ans % mod + val % mod) % mod\n    print(ans)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    (ten, lcnt) = (1, 0)\n    lt = l\n    while lt > 0:\n        lcnt += 1\n        ten *= 10\n        lt //= 10\n    rt = r\n    rcnt = 0\n    while rt > 0:\n        rcnt += 1\n        rt //= 10\n    prev = l - 1\n    ans = 0\n    while lcnt < rcnt:\n        val = (ten - 1) * ten // 2\n        val -= prev * (prev + 1) // 2\n        val = val % mod * lcnt % mod\n        ans = (ans % mod + val % mod) % mod\n        lcnt += 1\n        prev = ten - 1\n        ten *= 10\n    val = r * (r + 1) // 2\n    val -= prev * (prev + 1) // 2\n    val = val % mod * rcnt % mod\n    ans = (ans % mod + val % mod) % mod\n    print(ans)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "def li():\n    return list(map(int, input().split()))\n    return a\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\nhighs = {i: 10 ** (i - 1) for i in range(12)}\nlows = {i: 10 ** i for i in range(12)}\ninf = 1000000007\nfor tastcas in range(int(input())):\n    (l, r) = si()\n    ll = len(l)\n    rl = len(r)\n    l = int(l)\n    r = int(r)\n    if ll == rl:\n        ans = (l + r) * (r - l + 1) * ll // 2\n    else:\n        r1 = 10 ** ll - 1\n        r2 = 10 ** (rl - 1)\n        ans = ((l + r1) * (r1 - l + 1) * ll // 2 + (r2 + r) * (r - r2 + 1) * rl // 2) % inf\n        for i in range(ll + 1, rl):\n            a = 10 ** (i - 1)\n            b = 10 ** i - 1\n            ans += (a + b) * (b - a + 1) * i // 2\n            ans %= inf\n    print(ans % inf)", "try:\n    t = int(input())\n    for i in range(t):\n        (l, r) = map(str, input().split())\n        k = len(l)\n        j = len(r)\n        sum = 0\n        if j > k:\n            for i in range(k, j):\n                s = 10 ** i - int(l)\n                sum = sum + (s * int(l) + (s - 1) * s // 2) * i\n                l = 10 ** i\n            a = ((int(r) - int(l) + 1) * l + (int(r) - int(l) + 1) * (int(r) - int(l)) // 2) * j\n            sum = sum + a\n            print(sum % (10 ** 9 + 7))\n        elif j == k:\n            sum = ((int(r) - int(l) + 1) * int(l) + (int(r) - int(l)) * (int(r) - int(l) + 1) // 2) * j\n            print(sum % (10 ** 9 + 7))\nexcept:\n    pass", "m = 10 ** 9 + 7\n\ndef get_sum(a, b, digits):\n    sum = (b + a) * (b - a + 1) // 2\n    return sum * digits\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    l_digits = len(str(l))\n    r_digits = len(str(r))\n    if l_digits == r_digits:\n        ans = get_sum(l, r, l_digits)\n    else:\n        ans = get_sum(l, 10 ** l_digits - 1, l_digits) + get_sum(10 ** (r_digits - 1), r, r_digits)\n        for i in range(l_digits + 1, r_digits):\n            ans += get_sum(10 ** (i - 1), 10 ** i - 1, i)\n    print(ans % m)", "t = int(input())\nmod = 1000000007\n\ndef get_sum(a, b, digits):\n    sum = (b + a) * (b - a + 1) // 2\n    return sum * digits\nfor _ in range(t):\n    (l, r) = [int(x) for x in input().split()]\n    l_digits = len(str(l))\n    r_digits = len(str(r))\n    ans = 0\n    if l_digits == r_digits:\n        ans = get_sum(l, r, l_digits)\n    else:\n        ans += get_sum(l, 10 ** l_digits - 1, l_digits)\n        ans += get_sum(10 ** (r_digits - 1), r, r_digits)\n        for i in range(l_digits + 1, r_digits):\n            ans += get_sum(10 ** (i - 1), 10 ** i - 1, i)\n    print(ans % mod)", "def len(n):\n    x = 0\n    while n > 0:\n        x += 1\n        n = n // 10\n    return x\ne = 10 ** 9 + 7\nt = int(input())\nf = [0]\na = 9\nb = 1\nfor i in range(10):\n    x = (2 * b + a - 1) % e\n    x = x * a % e\n    y = pow(2, e - 2, e)\n    x = x * y % e\n    x = x * (i + 1) % e\n    x = (x + f[-1]) % e\n    b *= 10\n    a *= 10\n    f.append(x)\n\ndef ans(n):\n    if n == 0:\n        return 0\n    x = len(n)\n    y = f[x - 1]\n    a = pow(10, x - 1, e)\n    b = (n + a) * (n - a + 1) % e\n    b = b * pow(2, e - 2, e) % e\n    b = b * x % e\n    return (b + y) % e\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    b = ans(b)\n    a = ans(a - 1)\n    print((b - a) % e)", "t = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split())\n    start = len(str(l))\n    end = len(str(r))\n    if end > start:\n        end_start = int(str('9' * start))\n        sum_start = (end_start + l) * start * (end_start - l + 1) // 2\n    else:\n        sum_start = (l + r) * start * (r - l + 1) // 2\n    sum = 0\n    for j in range(start + 1, end):\n        sum += (10 ** (j - 1) + int(str('9' * j))) * j * (int(str('9' * j)) - 10 ** (j - 1) + 1) // 2\n    if end > start:\n        end = len(str(r))\n        end__start = int(str(10 ** (end - 1)))\n        sum__start = (end__start + r) * end * (r - end__start + 1) // 2\n    else:\n        sum__start = 0\n    print((sum + sum__start + sum_start) % 1000000007)", "from math import log10, ceil, floor\nfrom random import randint\n\ndef amountOfDigits(n):\n    return floor(log10(n)) + 1\n\ndef Triangular(n):\n    return n * (n + 1) // 2\nMOD = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (L, R) = [int(x) for x in input().split()]\n    fullGroupValues = ['*'] + [(Triangular(10 ** i - 1) - Triangular(10 ** (i - 1) - 1)) * i for i in range(1, 9 + 1)]\n    L_length = amountOfDigits(L)\n    R_length = amountOfDigits(R)\n    totalValue = 0\n    if L_length == R_length:\n        totalValue += (Triangular(R) - Triangular(L - 1)) * L_length\n    else:\n        totalValue += (Triangular(10 ** L_length - 1) - Triangular(L - 1)) * L_length\n        totalValue += sum(fullGroupValues[L_length + 1:R_length - 1 + 1])\n        totalValue += (Triangular(R) - Triangular(10 ** (R_length - 1) - 1)) * R_length\n    print(totalValue % MOD)", "m = 1000000007\na = []\nb = []\na.append(1)\nb.append(9)\nfor i in range(1, 10):\n    a.append(a[i - 1] * 10)\n    b.append(10 ** (i + 1) - 1)\n\ndef getcount(val):\n    s = 0\n    while val != 0:\n        s += 1\n        val //= 10\n    return s\nfor t in range(int(input())):\n    temp = list(map(int, input().split()))\n    l = temp[0]\n    r = temp[1]\n    c1 = getcount(l)\n    c2 = getcount(r)\n    if c1 == c2:\n        n = r - l + 1\n        x = l * n % m\n        y = n * (n - 1) // 2 % m\n        z = (x + y) % m\n        s = z * c1 % m\n        print(s)\n        continue\n    ans = 0\n    n = b[c1 - 1] - l + 1\n    x = l * n % m\n    y = n * (n - 1) // 2 % m\n    z = (x + y) % m\n    ans += z * c1 % m\n    ans %= m\n    i = c1 + 1\n    while i < c2:\n        n = b[i - 1] - a[i - 1] + 1\n        x = a[i - 1] * n % m\n        y = n * (n - 1) // 2 % m\n        z = (x + y) % m\n        ans += z * i % m\n        ans %= m\n        i += 1\n    n = r - a[c2 - 1] + 1\n    x = a[c2 - 1] * n % m\n    y = n * (n - 1) // 2 % m\n    z = (x + y) % m\n    ans += z * c2 % m\n    ans %= m\n    print(ans)", "MOD = 10 ** 9 + 7\nt = int(input())\nfor index in range(t):\n    inp = input().split()\n    l = int(inp[0])\n    r = int(inp[1])\n    u = l\n    result = 0\n    while u <= r:\n        numOfDigits = len(str(u))\n        v = min(10 ** numOfDigits - 1, r)\n        result += numOfDigits * (u + v) * (v - u + 1) // 2\n        result %= MOD\n        u = v + 1\n    print(result)", "mod = 1000000007\n\ndef getAns(R):\n    if R < 10:\n        return R * (R + 1) // 2\n    ans = 45\n    p = 100\n    c = 2\n    while R >= p - 1:\n        A = p // 10\n        B = p - 1\n        curAns = B * (B + 1) // 2 % mod\n        curAns -= A * (A - 1) // 2 % mod\n        curAns = (curAns + mod) % mod\n        ans = (ans + c * curAns) % mod\n        c += 1\n        p *= 10\n    p //= 10\n    curAns = R * (R + 1) // 2 % mod\n    curAns -= p * (p - 1) // 2 % mod\n    ans = (ans + curAns * c) % mod\n    return ans\nfor tc in range(int(input())):\n    (L, R) = map(int, input().strip().split())\n    print((getAns(R) - getAns(L - 1) + mod) % mod)", "def sumf(a):\n    s = a * (a + 1) // 2\n    return s\nt = list()\nfor i in range(10):\n    t.append(10 ** i)\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    l1 = len(s1[0])\n    l2 = len(s1[1])\n    s = 0\n    if l1 == l2:\n        s = (sumf(b) - sumf(a - 1)) % m * l1\n    else:\n        x = (sumf(t[l1] - 1) - sumf(a - 1)) % m * l1 % m\n        y = (sumf(b) - sumf(t[l2 - 1] - 1)) % m * l2 % m\n        s = x + y\n        for i in range(l1 + 1, l2):\n            s += (sumf(t[i] - 1) - sumf(t[i - 1] - 1)) * i\n    print(s % m)\n    tc -= 1", "def sumn(a):\n    s = a * (a + 1) // 2\n    return s\nt = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    l1 = len(s1[0])\n    l2 = len(s1[1])\n    sum = 0\n    if l1 == l2:\n        sum = (sumn(b) - sumn(a - 1)) * l1\n    else:\n        x = (sumn(t[l1] - 1) - sumn(a - 1)) * l1\n        y = (sumn(b) - sumn(t[l2 - 1] - 1)) * l2\n        sum = x + y\n        for i in range(l1 + 1, l2):\n            sum += (sumn(t[i] - 1) - sumn(t[i - 1] - 1)) * i\n    sum = sum % m % m\n    print(int(sum))\n    tc -= 1", "def sumn(a):\n    s = a * (a + 1) // 2\n    return s\nt = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    l1 = len(s1[0])\n    l2 = len(s1[1])\n    sum = 0\n    if l1 == l2:\n        sum = (sumn(b) - sumn(a - 1)) * l1\n    else:\n        x = (sumn(t[l1] - 1) - sumn(a - 1)) * l1\n        y = (sumn(b) - sumn(t[l2 - 1] - 1)) * l2\n        sum = x + y\n        for i in range(l1 + 1, l2):\n            sum += (sumn(t[i] - 1) - sumn(t[i - 1] - 1)) * i\n    sum = sum % m\n    print(int(sum))\n    tc -= 1", "def sumn(a):\n    s = a * (a + 1) // 2\n    return s\nt = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    l1 = len(s1[0])\n    l2 = len(s1[1])\n    sum = 0\n    if l1 == l2:\n        sum = (sumn(b) - sumn(a - 1)) * l1\n    else:\n        x = (sumn(t[l1] - 1) - sumn(a - 1)) * l1\n        y = (sumn(b) - sumn(t[l2 - 1] - 1)) * l2\n        sum = x + y\n        for i in range(l1 + 1, l2):\n            sum += (sumn(t[i] - 1) - sumn(t[i - 1] - 1)) * i\n    sum = sum % m % m\n    print(int(sum))\n    tc -= 1", "def sumn(a):\n    s = a * (a + 1) // 2\n    return s\nt = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    l1 = len(s1[0])\n    l2 = len(s1[1])\n    sum = 0\n    if l1 == l2:\n        sum = (sumn(b) - sumn(a - 1)) * l1\n    else:\n        x = (sumn(t[l1] - 1) - sumn(a - 1)) * l1\n        y = (sumn(b) - sumn(t[l2 - 1] - 1)) * l2\n        sum = x + y\n        for i in range(l1 + 1, l2):\n            sum += (sumn(t[i] - 1) - sumn(t[i - 1] - 1)) * i\n    sum = sum % m % m\n    print(int(sum))\n    tc -= 1", "def sumn(a1, b1):\n    b = max(a1, b1)\n    a = min(a1, b1)\n    s = (a + b) * (b - a + 1) // 2\n    return s\nm = 1000000007\ntc = eval(input())\nwhile tc > 0:\n    s1 = input().split(' ')\n    a = int(s1[0])\n    b = int(s1[1])\n    sum = 0\n    f = a\n    while f <= b:\n        ln = len(str(f))\n        s = min(10 ** ln - 1, b)\n        sum += sumn(s, f) % m * ln % m\n        f = s + 1\n    sum = sum % m % m\n    print(int(sum))\n    tc -= 1", "def nod(n):\n    digs = 0\n    while n > 0:\n        digs += 1\n        n //= 10\n    return digs\nt = int(input())\nmbase = 1000000007\nfor it in range(t):\n    (L, R) = [int(word) for word in input().split()]\n    l = nod(L)\n    r = nod(R)\n    s = 0\n    if l == r:\n        s = l * (R * (R + 1) - L * (L - 1)) // 2\n        s %= mbase\n    else:\n        tenl = 10 ** l\n        s += l * (tenl * (tenl - 1) - L * (L - 1)) // 2\n        s %= mbase\n        tenrm1 = 10 ** (r - 1)\n        s += r * (R * (R + 1) - tenrm1 * (tenrm1 - 1)) // 2\n        s %= mbase\n        for i in range(l + 1, r):\n            teni = 10 ** (i - 1)\n            s += 9 * i * teni * (11 * teni - 1) // 2\n            s %= mbase\n    print(s)", "def main():\n    test_case = int(input().strip())\n    while test_case > 0:\n        (left, right) = map(int, input().strip().split())\n        mod_no = 10 ** 9 + 7\n        p = 1\n        ans = 0\n        for i in range(1, 10):\n            q = p * 10 - 1\n            x = max(p, left)\n            y = min(q, right)\n            if x <= y:\n                x %= mod_no\n                y %= mod_no\n                r = (y * (y + 1) // 2 - x * (x - 1) // 2) % mod_no\n                r = r * i % mod_no\n                ans = (ans + r) % mod_no\n            p *= 10\n        if ans < 0:\n            ans += mod_no\n        print(ans)\n        test_case -= 1\nmain()", "import sys\nimport math\nfrom time import time\nfrom itertools import permutations, combinations\nimport collections\nimport functools\nfrom fractions import gcd, Fraction\nimport string\nimport operator\nimport bisect\n\nclass timed(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __call__(self, *args):\n        t1 = time()\n        ret = self.func(*args)\n        dif_time = time() - t1\n        print('%s: returned %s in %f seconds' % (self.func.__name__, ret, dif_time))\n        return ret\n\ndef comp(f1, f2, *args):\n    t1 = time()\n    r1 = f1(*args) if f1 is not None else None\n    t2 = time()\n    r2 = f2(*args) if f2 is not None else None\n    t3 = time()\n    res = '%5s: %s in %f\\n%5s: %s in %f' % (f1.__name__ if f1 is not None else None, r1, t2 - t1, f2.__name__ if f2 is not None else None, r2, t3 - t2)\n    if r1 != r2:\n        dr = '!! DIFFERENT RESULTS !!'\n        res = dr + '\\n' + res + '\\n' + dr\n    print(res)\n    return r1 if r1 == r2 else None\nMODULO = 1000000007\n\ndef alg(L, R):\n    res = 0\n    for n in range(L, R + 1):\n        res += len(str(n)) * n\n        res %= MODULO\n    return res\n\ndef alg2(L, R):\n    res = 0\n    subL = L\n\n    def sub_alg(left, right, nb_dig):\n        sum_ = (right - left + 1) * (right + left) // 2\n        return sum_ * nb_dig % MODULO\n    while True:\n        digL = len(str(subL))\n        digR = len(str(R))\n        if digL == digR:\n            res += sub_alg(subL, R, digL)\n            break\n        subR = int('9' * digL)\n        res += sub_alg(subL, subR, digL)\n        subL = subR + 1\n    return res % MODULO\n\ndef main():\n    data = sys.stdin\n    nb = int(data.readline())\n    for icase in range(nb):\n        (L, R) = list(map(int, data.readline().split()))\n        res = alg2(L, R)\n        print(res)\nmain()", "import sys\n\ndef SUM(L, R):\n    return (L + R) * (R + 1 - L) // 2\nT = int(sys.stdin.readline())\nAns = ''\nMOD = 1000000007\nfor t in range(T):\n    (L, R) = map(int, sys.stdin.readline().split())\n    NL = len(str(L))\n    NR = len(str(R))\n    if NL == NR:\n        Ans += str(SUM(L, R) * NL % MOD) + '\\n'\n    else:\n        ans = 0\n        ans += SUM(L, 10 ** NL - 1) * NL % MOD\n        ans += SUM(10 ** (NR - 1), R) * NR % MOD\n        for i in range(NL + 1, NR):\n            ans += SUM(10 ** (i - 1), 10 ** i - 1) * i % MOD\n        ans %= MOD\n        Ans += str(ans) + '\\n'\nsys.stdout.write(Ans)"]