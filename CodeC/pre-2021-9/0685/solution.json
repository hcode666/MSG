["from collections import deque\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    queue = deque()\n    maxsick = 0\n    n = int(input())\n    sickness = list(map(int, input().split()))\n    A = [[] for _ in range(1000)]\n    for i in range(n):\n        A[1000 - sickness[i]] += [i]\n    ans = [0] * n\n    t = 1\n    for i in range(len(A)):\n        for j in A[i]:\n            ans[j] = t\n            t += 1\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    patients = []\n    for i in range(n):\n        patients.append((a[i], n - i))\n    patients.sort(reverse=True)\n    wait = [0 for i in range(n)]\n    for j in range(n):\n        p = patients[j]\n        wait[n - p[1]] = j + 1\n    print(*wait)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    patients = []\n    for i in range(n):\n        patients.append((a[i], n - i))\n    patients.sort(reverse=True)\n    wait = [0 for i in range(n)]\n    for j in range(n):\n        p = patients[j]\n        wait[n - p[1]] = j + 1\n    print(*wait)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    d = dict()\n    arr = ar.copy()\n    arr.sort(reverse=True)\n    l = []\n    for i in range(n):\n        l.append([arr[i], i + 1])\n    for i in l:\n        if i[0] in d:\n            d[i[0]].append(i[1])\n        else:\n            d[i[0]] = [i[1]]\n    for i in ar:\n        print(d[i].pop(0), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    d = dict()\n    arr = ar.copy()\n    arr.sort(reverse=True)\n    l = []\n    for i in range(n):\n        l.append([arr[i], i + 1])\n    for i in l:\n        if i[0] in d:\n            d[i[0]].append(i[1])\n        else:\n            d[i[0]] = [i[1]]\n    for i in ar:\n        print(d[i].pop(0), end=' ')\n    print()", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    ans = [0] * n\n    l = []\n    for j in range(n):\n        l.append([-a[j], j])\n    l.sort()\n    curr = 1\n    for j in l:\n        ans[j[1]] = curr\n        curr += 1\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    l = []\n    for j in range(n):\n        l.append([-a[j], j])\n    l.sort()\n    cur = 1\n    for j in l:\n        ans[j[1]] = cur\n        cur += 1\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    l = [[] for i in range(1001)]\n    for (j, v) in enumerate(a):\n        l[v].append(j)\n    w = 1\n    ans = [0] * n\n    for k in range(1000, 0, -1):\n        for z in l[k]:\n            ans[z] = w\n            w += 1\n    for x in ans:\n        print(x, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = map(int, input().split())\n    illness = [[] for i in range(1001)]\n    for (i, val) in enumerate(A):\n        illness[val].append(i)\n    waiting_time = 1\n    ans = [0] * N\n    for i in range(1000, 0, -1):\n        for patient in illness[i]:\n            ans[patient] = waiting_time\n            waiting_time += 1\n    for i in ans:\n        print(i, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = map(int, input().split())\n    illness = [[] for i in range(1001)]\n    for (i, val) in enumerate(A):\n        illness[val].append(i)\n    waiting_time = 1\n    ans = [0] * N\n    for i in range(1000, 0, -1):\n        for patient in illness[i]:\n            ans[patient] = waiting_time\n            waiting_time += 1\n    for i in ans:\n        print(i, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = map(int, input().split())\n    illness = [[] for i in range(1002)]\n    for (i, val) in enumerate(A):\n        illness[val].append(i)\n    waiting_time = 1\n    ans = [0] * N\n    for i in range(1000, 0, -1):\n        for patient in illness[i]:\n            ans[patient] = waiting_time\n            waiting_time += 1\n    for i in ans:\n        print(i, end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    patient = [int(i) for i in input().split()]\n    p = []\n    for i in range(n):\n        p.append([i, patient[i]])\n    p1 = sorted(p, key=lambda x: x[1], reverse=True)\n    ill = []\n    for i in range(n):\n        ill.append([p1[i][0], p1[i][1], i + 1])\n    new = sorted(ill, key=lambda x: x[0])\n    for i in new:\n        print(i[2], end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    patient = [int(i) for i in input().split()]\n    p = []\n    for i in range(n):\n        p.append([i, patient[i]])\n    p1 = sorted(p, key=lambda x: x[1], reverse=True)\n    ill = []\n    for i in range(n):\n        ill.append([p1[i][0], p1[i][1], i + 1])\n    new = sorted(ill, key=lambda x: x[0])\n    for i in new:\n        print(i[2], end=' ')\n    print()", "from collections import defaultdict\n\ndef main():\n    try:\n        numtest = int(input())\n        for test in range(numtest):\n            N = int(input())\n            inputValue = list(map(int, input().split()))\n            sol = resolve(inputValue)\n            print(*sol)\n    except EOFError:\n        return\n\ndef resolve(sequence: list):\n    n = len(sequence)\n    sol: list = [0] * n\n    dic: dict[int, list] = defaultdict(list)\n    for i in range(n):\n        dic[sequence[i]].append(i)\n    sequence.sort()\n    for elem in sequence:\n        sol[dic[elem].pop()] = n\n        n -= 1\n    return sol\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    c = 0\n    temp = []\n    for i in lis:\n        temp.append([i, c])\n        c += 1\n    temp.sort(key=lambda x: x[0], reverse=True)\n    res = [0] * n\n    k = 1\n    for z in temp:\n        res[z[1]] = k\n        k += 1\n    for obj in res:\n        print(obj, end=' ')\n    print()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = defaultdict(list)\n    for (i, e) in enumerate(a):\n        h[e].append(i)\n    t = 1\n    for e in sorted(h.keys(), reverse=True):\n        for v in h[e]:\n            a[v] = t\n            t += 1\n    for i in a:\n        print(i, end=' ')\n    print()", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    dic = defaultdict(list)\n    for i in range(n):\n        dic[arr[i]].append(i)\n    arr.sort()\n    res = [0] * n\n    for i in arr:\n        res[dic[i].pop()] = n\n        n -= 1\n    print(*res)", "import numpy as np\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    l = np.array(list(map(int, input().split())))\n    nu = list(range(0, n))\n    nu.sort(key=lambda x: l[x], reverse=True)\n    nu = np.array(nu)\n    ans = np.copy(l)\n    for _ in range(n):\n        ans[nu[_]] = _ + 1\n    for _ in ans:\n        print(_, end=' ')\n    print()", "import numpy as np\nT = int(input())\nfor ___ in range(T):\n    n = int(input())\n    l = np.array(list(map(int, input().split())))\n    nu = list(range(0, n))\n    nu.sort(key=lambda x: l[x], reverse=True)\n    nu = np.array(nu)\n    ans = np.copy(l)\n    for _ in range(n):\n        ans[nu[_]] = _ + 1\n    for _ in ans:\n        print(_, end=' ')\n    print()", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    l = sorted(A, reverse=True)\n    h = {}\n    for i in range(len(l)):\n        if not l[i] in h:\n            h[l[i]] = i + 1\n    for i in A:\n        print(h[i], end=' ')\n        h[i] = h[i] + 1\n    print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    time = len(l)\n    sl = sorted(l)\n    for i in sl:\n        d[i] = time\n        time -= 1\n    for i in l:\n        print(d[i], end=' ')\n        d[i] += 1\n    print()", "for oo in range(int(input())):\n    x = int(input())\n    line = [int(i) for i in input().split()]\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(x):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(x):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = []\n    for i in l:\n        r.append(i)\n    d = {}\n    for i in l:\n        d[i] = 0\n    l.sort()\n    k = n\n    for i in l:\n        if d[i] == 0:\n            d[i] = k\n        k -= 1\n    r.reverse()\n    ans = []\n    for i in r:\n        ans.append(d[i])\n        d[i] -= 1\n    ans.reverse()\n    print(*ans)\n    t -= 1", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    time = len(l)\n    sl = sorted(l)\n    for i in sl:\n        d[i] = time\n        time -= 1\n    for i in l:\n        print(d[i], end=' ')\n        d[i] += 1\n    print()", "tests = int(input())\nwhile tests:\n    N = int(input())\n    arr = input().split(' ')\n    dic = {}\n    for i in arr:\n        try:\n            dic[int(i)] += 1\n        except:\n            dic[int(i)] = 1\n    wait = 1\n    for i in sorted(dic.keys(), reverse=True):\n        temp = dic[i]\n        dic[i] = wait\n        wait += temp\n    for i in arr:\n        print(dic[int(i)], end=' ')\n        dic[int(i)] += 1\n    else:\n        print('')\n    tests -= 1", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = defaultdict(list)\n    pat = sorted(a, reverse=True)\n    for i in range(n):\n        dic[pat[i]].append(i + 1)\n    res = []\n    for i in range(n):\n        res.append(dic[a[i]][0])\n        dic[a[i]].pop(0)\n    print(*res)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = defaultdict(list)\n    pat = sorted(a, reverse=True)\n    for i in range(n):\n        dic[pat[i]].append(i + 1)\n    res = []\n    for i in range(n):\n        res.append(dic[a[i]][0])\n        dic[a[i]].pop(0)\n    print(*res)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = {}\n    for i in range(n):\n        if a[i] not in h:\n            h[a[i]] = [i]\n        else:\n            h[a[i]].append(i)\n    a.sort(reverse=True)\n    s = 0\n    ans = [-1] * n\n    v = set()\n    for i in a:\n        if i in v:\n            continue\n        v.add(i)\n        for j in h[i]:\n            s += 1\n            ans[j] = s\n    print(*ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = {}\n    for i in range(n):\n        if a[i] not in h:\n            h[a[i]] = [i]\n        else:\n            h[a[i]].append(i)\n    a.sort(reverse=True)\n    s = 0\n    ans = [-1] * n\n    v = set()\n    for i in a:\n        if i in v:\n            continue\n        v.add(i)\n        for j in h[i]:\n            s += 1\n            ans[j] = s\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = l.copy()\n    l.sort(reverse=True)\n    d = {}\n    c = 0\n    for i in range(n):\n        c += 1\n        if l[i] in d:\n            d[l[i]] += [c]\n        else:\n            d[l[i]] = [c]\n    for i in range(n):\n        print(d[k[i]][0], end=' ')\n        d[k[i]].pop(0)\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = [0] * n\n    dic = {}\n    for i in range(n):\n        if arr[i] not in dic:\n            dic[arr[i]] = [i]\n        else:\n            dic[arr[i]].append(i)\n    crr = sorted(dic)\n    crr.reverse()\n    count = 1\n    for i in crr:\n        for j in dic[i]:\n            brr[j] = count\n            count += 1\n    for k in range(n):\n        print(brr[k], end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a1 = input().split()\n    a = {}\n    for i in range(0, n):\n        a[i] = int(a1[i])\n    s = dict(sorted(a.items(), key=lambda x: x[1], reverse=True))\n    b = [0] * n\n    k = 1\n    for i in list(s.keys()):\n        b[i] = k\n        k = k + 1\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(enumerate(map(int, input().split())))\n    x = sorted(l, key=lambda x: x[1], reverse=True)\n    ans = [0 for _ in range(n)]\n    for i in range(n):\n        ans[x[i][0]] = i + 1\n    print(*ans)", "try:\n    t = int(input())\n    for x in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        brr = [0] * n\n        dic = {}\n        for i in range(n):\n            if arr[i] not in dic:\n                dic[arr[i]] = [i]\n            else:\n                dic[arr[i]].append(i)\n        crr = sorted(dic)\n        crr.reverse()\n        count = 1\n        for i in crr:\n            for j in dic[i]:\n                brr[j] = count\n                count += 1\n        for k in range(n):\n            print(brr[k], end=' ')\n        print()\nexcept:\n    pass", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = []\n    res = []\n    for i in range(n):\n        res.append(0)\n    for i in range(1, n + 1):\n        x.append(i)\n    y = zip(x, l)\n    y = list(sorted(y, reverse=True, key=lambda y: y[1]))\n    p = []\n    for i in y:\n        p.append(list(i))\n    c = 1\n    for i in range(n):\n        z = p[i]\n        res[z[0] - 1] = c\n        c += 1\n    print(*res)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = []\n    c = 0\n    for j in l:\n        k.append((j, c))\n        c -= 1\n    k.sort(reverse=True)\n    ans = [0] * n\n    p = 1\n    for j in range(n):\n        ans[-k[j][1]] = p\n        p += 1\n    print(*ans)\n    t = t - 1", "import sys\n\ndef s_func(k):\n    return k[0]\nT = int(sys.stdin.readline().rstrip())\nfor _ in range(T):\n    N = int(sys.stdin.readline().rstrip())\n    arr = sys.stdin.readline().rstrip().split()\n    arr_ind = [(int(arr[i]), i) for i in range(N)]\n    arr_ind.sort(reverse=True, key=s_func)\n    for i in range(N):\n        arr[arr_ind[i][1]] = str(i + 1)\n    print(' '.join(arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = {}\n    pos = {}\n    b = list(a)\n    b.sort(reverse=True)\n    for i in range(0, n):\n        pos[b[i]] = i + 1\n        if b[i] not in count.keys():\n            count[b[i]] = 1\n        else:\n            count[b[i]] += 1\n    for i in range(n):\n        if count[a[i]] != 0:\n            print(pos[a[i]] - count[a[i]] + 1, end=' ')\n            count[a[i]] -= 1\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = {}\n    m = sorted(a, reverse=True)\n    c = 0\n    for i in m:\n        if i in dic:\n            dic[i].append(c + 1)\n            c += 1\n        else:\n            dic[i] = []\n            dic[i].append(c + 1)\n            c += 1\n    for i in a:\n        s = dic[i].pop(0)\n        print(s, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    k = [0] * n\n    r = sorted(list(set(a)), reverse=True)\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = [i]\n        else:\n            d[a[i]].append(i)\n    cnt = 1\n    for i in r:\n        for j in d[i]:\n            k[j] = cnt\n            cnt += 1\n    print(' '.join(map(str, k)))", "import sys\nimport math\ntry:\n    t = int(input())\n    for x in range(t):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        dic = {}\n        for i in range(len(arr)):\n            if arr[i] in dic:\n                dic[arr[i]] += [i]\n            else:\n                dic[arr[i]] = [i]\n        wait = 1\n        for k in sorted(dic.keys(), reverse=True):\n            for i in dic[k]:\n                arr[i] = wait\n                wait += 1\n        print(*arr)\nexcept:\n    pass", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    l = sorted(A, reverse=True)\n    h = {}\n    for i in range(len(l)):\n        if not l[i] in h:\n            h[l[i]] = i + 1\n    for i in A:\n        print(h[i], end=' ')\n        h[i] = h[i] + 1\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    brr = [0] * n\n    dic = {}\n    for i in range(n):\n        if ls[i] not in dic:\n            dic[ls[i]] = [i]\n        else:\n            dic[ls[i]].append(i)\n    arr = sorted(dic)\n    arr.reverse()\n    count = 1\n    for i in arr:\n        for j in dic[i]:\n            brr[j] = count\n            count += 1\n    for k in range(n):\n        print(brr[k], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = list(enumerate(l))\n    l = sorted(l, key=lambda x: x[1], reverse=True)\n    l2 = [0] * len(l)\n    rank = 1\n    for i in l:\n        l2[i[0]] = rank\n        rank += 1\n    print(*l2)", "t = int(input())\nwhile t:\n    n = int(input())\n    pat = list(map(int, input().split()))\n    posArray = {}\n    for i in range(len(pat)):\n        posArray[pat[i]] = []\n    for i in range(len(pat)):\n        posArray[pat[i]].append(i)\n    pat.sort(reverse=True)\n    res = [0] * n\n    timer = 1\n    for i in range(n):\n        res[posArray[pat[i]][0]] = timer\n        del posArray[pat[i]][0]\n        timer += 1\n    for i in range(len(res)):\n        print(res[i], end=' ')\n    print(' ')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    line = list(map(int, input().split()))\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(n):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(n):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    n = inp()\n    l = li()\n    x = list(set(l))\n    x.sort(reverse=True)\n    p = Counter(l)\n    d = {}\n    d[x[0]] = 1\n    for i in range(1, len(x)):\n        d[x[i]] = p[x[i - 1]] + 1\n        p[x[i]] += p[x[i - 1]]\n    for i in l:\n        prl(d[i])\n        d[i] += 1\n    print()\nfor _ in range(inp()):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nmod = 10 ** 9 + 7\nMod = 998244353\nINF = float('inf')\nfor _ in range(int(input())):\n    (n,) = inp()\n    a = inp()\n    arr = []\n    for i in range(n):\n        arr.append([a[i], i])\n    arr.sort(key=lambda x: (-x[0], x[1]))\n    res = [0] * n\n    time = 1\n    for (val, ind) in arr:\n        res[ind] = time\n        time += 1\n    print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = enumerate(list(map(int, input().split())))\n    b = sorted([(-x, i) for (i, x) in a])\n    c = [None] * n\n    for i in range(n):\n        c[b[i][1]] = i + 1\n    print(' '.join(map(str, c)))", "def main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        n = int(input())\n        out = [0] * n\n        l = list(map(int, input().split()))\n        l1 = list(enumerate(l))\n        l2 = sorted(l1, key=lambda a: a[1], reverse=True)\n        for i in range(n):\n            out[l2[i][0]] = i + 1\n        for j in out:\n            print(j, end=' ')\n        print()\nmain()", "for i in range(int(input())):\n    p = int(input())\n    a = list(map(int, input().strip().split()))\n    b = a.copy()\n    a.sort(reverse=True)\n    d = {}\n    for i in range(1000):\n        d[i + 1] = []\n    for i in range(len(a)):\n        d[a[i]].append(i + 1)\n    for i in b:\n        print(d[i].pop(0), end=' ')\n    print()", "for i in range(int(input())):\n    p = int(input())\n    a = list(map(int, input().strip().split()))[:p]\n    b = a.copy()\n    a.sort(reverse=True)\n    d = {}\n    for i in range(1000):\n        d[i + 1] = []\n    for i in range(len(a)):\n        d[a[i]].append(i + 1)\n    for i in b:\n        print(d[i].pop(0), end=' ')\n    print()", "import sys\nfrom collections import *\nimport math\nimport bisect\n\ndef input():\n    return sys.stdin.readline()\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = defaultdict(list)\n    for i in range(n):\n        dic[a[i]].append(i)\n    cnt = 1\n    ind = [0 for _ in range(n)]\n    ll = sorted(list(dic.keys()), reverse=True)\n    for i in ll:\n        for j in dic[i]:\n            ind[j] = cnt\n            cnt += 1\n    print(*ind)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    reqli = sorted(li, reverse=True)\n    c = 1\n    freq = {}\n    for i in reqli:\n        if i in freq:\n            freq[i].append(c)\n        else:\n            freq[i] = [c]\n        c = c + 1\n    ans = []\n    for i in li:\n        ans.append(freq[i][0])\n        freq[i].remove(freq[i][0])\n    for i in ans[:len(ans) - 1]:\n        print(i, end=' ')\n    print(ans[-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    reqli = sorted(li, reverse=True)\n    c = 1\n    freq = {}\n    for i in reqli:\n        if i in freq:\n            freq[i].append(c)\n        else:\n            freq[i] = [c]\n        c = c + 1\n    ans = []\n    for i in li:\n        ans.append(freq[i][0])\n        freq[i].remove(freq[i][0])\n    for i in ans[:len(ans) - 1]:\n        print(i, end=' ')\n    print(ans[-1])", "t = int(input())\nresults = []\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [[x, a[x]] for x in range(n)]\n    b.sort(key=lambda x: x[1], reverse=True)\n    T = [None] * n\n    for i in range(n):\n        T[b[i][0]] = i + 1\n    results.append([n, T])\nfor i in range(t):\n    for j in range(results[i][0]):\n        print(results[i][1][j], end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    N = max(ai)\n    a = [0] * 1002\n    b = [0] * 1002\n    for i in ai:\n        a[i] += 1\n    for j in range(N, -1, -1):\n        b[j] = a[j] + b[j + 1]\n    for i in ai:\n        print(b[i] - a[i] + 1, end=' ')\n        a[i] -= 1\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    N = max(ai)\n    a = [0] * 1005\n    b = [0] * 1005\n    for i in ai:\n        a[i] += 1\n    for j in range(N, -1, -1):\n        b[j] = a[j] + b[j + 1]\n    for i in ai:\n        print(b[i] - a[i] + 1, end=' ')\n        a[i] -= 1\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    size = len(a)\n    d = {}\n    t = 1\n    for i in sorted(a, reverse=True):\n        if i in d:\n            d[i].append(t)\n        else:\n            d[i] = [t]\n        t += 1\n    for i in a:\n        print(d[i].pop(0), end=' ')\n    print()", "T = int(input())\nwhile T > 0:\n    T = T - 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tempArr = []\n    for i in range(n):\n        tempArr.append([arr[i], i])\n    tempArr.sort(key=lambda x: x[1])\n    tempArr.sort(key=lambda x: x[0], reverse=True)\n    k = 1\n    ans = [0] * n\n    for i in tempArr:\n        ans[i[1]] = k\n        k += 1\n    ansStr = ''\n    for i in ans:\n        ansStr += str(i) + ' '\n    print(ansStr)", "for t in range(int(input())):\n    N = int(input())\n    ills = list(map(int, input().split()))\n    mp = {}\n    c = 1\n    pills = sorted(ills, reverse=True)\n    for i in range(len(pills)):\n        if pills[i] not in mp.keys():\n            mp[pills[i]] = c\n        c += 1\n    ans = []\n    for i in ills:\n        print(mp[i], end=' ')\n        mp[i] += 1\n    print()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = sorted(arr)\n    brr.reverse()\n    md = dict()\n    for i in range(n):\n        if brr[i] not in md:\n            md[brr[i]] = 999999\n        md[brr[i]] = min(md[brr[i]], i)\n    k = Counter(arr)\n    p = 1\n    for i in range(n):\n        print(md[arr[i]] + 1, end=' ')\n        md[arr[i]] += 1\n    print()", "import copy\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = []\n    i = input()\n    i = i.split()\n    for j in i:\n        arr.append(int(j))\n    d = {}\n    _arr = copy.deepcopy(arr)\n    arr.sort(reverse=True)\n    for i in range(n):\n        if arr[i] in d:\n            d[arr[i]].append(i)\n        else:\n            d[arr[i]] = [i]\n    ans = []\n    for i in range(n):\n        ans.append(d[_arr[i]][0] + 1)\n        d[_arr[i]].pop(0)\n    for i in range(n):\n        ans[i] = str(ans[i])\n    s = ' '.join(ans)\n    print(s)", "import operator\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = [i for i in range(1, n + 1)]\n    d = s = dict(zip(t, l))\n    d = dict(sorted(d.items(), key=operator.itemgetter(1), reverse=True))\n    res = [0] * n\n    z = 0\n    for i in d.keys():\n        res[i - 1] = t[z]\n        z += 1\n    print(*res)", "from collections import *\nfor u in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(list)\n    k = sorted(l, reverse=True)\n    for i in range(n):\n        d[k[i]].append(i + 1)\n    ka = []\n    for i in range(n):\n        ka.append(d[l[i]][0])\n        d[l[i]].pop(0)\n    print(*ka)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    d = dict()\n    arr = ar.copy()\n    arr.sort(reverse=True)\n    l = []\n    for i in range(n):\n        l.append([arr[i], i + 1])\n    for i in l:\n        if i[0] in d:\n            d[i[0]].append(i[1])\n        else:\n            d[i[0]] = [i[1]]\n    for i in ar:\n        print(d[i].pop(0), end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    CountArr = 1001 * [0]\n    ValueArr = 1001 * [0]\n    m = 0\n    for j in range(n):\n        CountArr[a[j]] += 1\n        if a[j] > m:\n            m = a[j]\n    aa = 0\n    for k in range(m, 0, -1):\n        if CountArr[k] != 0:\n            ValueArr[k] = aa + CountArr[k]\n            aa += CountArr[k]\n    for l in range(n):\n        v = a[l]\n        if CountArr[v] == 1:\n            print(ValueArr[v], end=' ')\n        else:\n            print(ValueArr[v] - CountArr[v] + 1, end=' ')\n            CountArr[v] -= 1\n    print()", "for i in range(int(input())):\n    x = int(input())\n    line = [int(i) for i in input().split()]\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(len(line_copy)):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(len(line_copy)):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "for i in range(int(input())):\n    x = int(input())\n    line = [int(i) for i in input().split()]\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(x):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(x):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "for i in range(int(input())):\n    x = int(input())\n    line = [int(i) for i in input().split()]\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(x):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(x):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "for i in range(int(input())):\n    x = int(input())\n    line = [int(i) for i in input().split()]\n    line_copy = sorted(line, reverse=True)\n    data = {}\n    for i in range(len(line_copy)):\n        if line_copy[i] not in data:\n            data[line_copy[i]] = i + 1\n    for i in range(x):\n        time = data[line[i]]\n        data[line[i]] += 1\n        line[i] = time\n    print(*line, sep=' ')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rev = sorted(a, reverse=True)\n    d = {}\n    s = set()\n    hours = 0\n    for i in rev:\n        hours += 1\n        if i not in d:\n            d[i] = hours\n    for i in range(n):\n        if a[i] not in s:\n            s.add(a[i])\n            a[i] = d[a[i]]\n        else:\n            d[a[i]] += 1\n            a[i] = d[a[i]]\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = (arr[i], i)\n    arr.sort()\n    new_arr = list()\n    start = 0\n    end = 1\n    while end <= n - 1:\n        while end <= n - 1 and arr[start][0] == arr[end][0]:\n            end += 1\n        new_arr = arr[start:end] + new_arr\n        start = end\n    result = [0] * n\n    for i in range(n):\n        result[new_arr[i][1]] = i + 1\n    for i in result:\n        print(i, end=' ')\n    print()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    lv = []\n    for i in range(n):\n        lv.append([a[i], i])\n    lv = sorted(lv, key=lambda x: [-x[0], x[1]])\n    ans = 1\n    for i in lv:\n        a[i[1]] = ans\n        ans += 1\n    return a\nfor _ in range(int(input())):\n    print(' '.join(map(str, solve())))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    hash = {}\n    copy = [i for i in lis]\n    copy.sort()\n    copy.reverse()\n    ctr = 1\n    for i in copy:\n        if i not in hash:\n            hash[i] = [ctr]\n        else:\n            hash[i].append(ctr)\n        ctr += 1\n    ans = []\n    for i in lis:\n        ans.append(hash[i][0])\n        hash[i].pop(0)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    hash = {}\n    copy = [i for i in lis]\n    copy.sort()\n    copy.reverse()\n    ctr = 1\n    for i in copy:\n        if i not in hash:\n            hash[i] = [ctr]\n        else:\n            hash[i].append(ctr)\n        ctr += 1\n    ans = []\n    for i in lis:\n        ans.append(hash[i][0])\n        hash[i].pop(0)\n    print(*ans, sep=' ')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    Alist = list(map(int, input().split()))\n    A = [[Alist[i], i] for i in range(N)]\n    B = sorted(A, key=lambda x: (-x[0], x[1]))\n    wait = 1\n    for i in range(N):\n        Alist[B[i][1]] = wait\n        wait += 1\n    print(*Alist)", "n = int(input())\nfor i in range(n):\n    N = int(input())\n    l = [int(i) for i in input().split()]\n    N = max(l)\n    a = [0] * (N + 1)\n    o = [0] * (N + 2)\n    for i in l:\n        a[i] += 1\n    for i in range(N, -1, -1):\n        o[i] = a[i] + o[i + 1]\n    for i in l:\n        print(o[i] - a[i] + 1, end=' ')\n        a[i] -= 1\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    patients = list(map(int, input().split()))\n    dict = {}\n    patient = sorted(patients, reverse=True)\n    count = 0\n    for i in patient:\n        if i in dict:\n            dict[i].append(count + 1)\n            count = count + 1\n        else:\n            dict[i] = []\n            dict[i].append(count + 1)\n            count = count + 1\n    for i in patients:\n        s = dict[i].pop(0)\n        print(s, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    l = sorted(a, reverse=True)\n    s = set(a)\n    dic = {}\n    for i in range(n):\n        if l[i] not in dic.keys():\n            dic[l[i]] = i + 1\n    j = 0\n    for i in range(n):\n        if a[i] in s:\n            print(dic[a[i]], end='')\n            s.remove(a[i])\n        else:\n            print(dic[a[i]] + 1, end='')\n            dic[a[i]] = dic[a[i]] + 1\n        if i < n - 1:\n            print(' ', end='')\n    print()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = [[a[i] * -1, i] for i in range(n)]\n    arr.sort()\n    res = [0] * n\n    for i in range(n):\n        res[arr[i][1]] = i + 1\n    for i in res:\n        print(i, end=' ')\n    print()", "tcase = int(input())\nwhile tcase > 0:\n    n = int(input())\n    levels = list(map(int, input().split()))\n    count = [0] * max(levels)\n    for i in range(n):\n        count[levels[i] - 1] += 1\n    sorted_l = sorted(levels)\n    sumi = 0\n    for i in range(len(count) - 1, -1, -1):\n        temp = count[i]\n        if count[i] != 0:\n            count[i] = sumi + 1\n        else:\n            count[i] = sumi\n        sumi += temp\n    for i in range(n):\n        print(count[levels[i] - 1], end=' ')\n        count[levels[i] - 1] += 1\n    print()\n    tcase -= 1", "def arrIn():\n    return list(map(int, input().split()))\n\ndef mapIn():\n    return map(int, input().split())\nfor ii in range(int(input())):\n    n = int(input())\n    a = arrIn()\n    d = {}\n    arr = a[:]\n    x = [0] * (max(a) + 2)\n    for i in range(n):\n        x[a[i]] += 1\n        d[a[i]] = []\n    c = 1\n    for i in range(max(a) + 1, -1, -1):\n        for j in range(x[i]):\n            d[i].append(c)\n            c += 1\n    for i in d:\n        d[i] = d[i][::-1]\n    for i in range(n):\n        z = d[a[i]].pop()\n        print(z, end=' ')\n    print()", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = [0] * n\n    dic = {}\n    for i in range(n):\n        if arr[i] not in dic:\n            dic[arr[i]] = [i]\n        else:\n            dic[arr[i]].append(i)\n    crr = sorted(dic)\n    crr.reverse()\n    count = 1\n    for i in crr:\n        for j in dic[i]:\n            brr[j] = count\n            count += 1\n    for k in range(n):\n        print(brr[k], end=' ')\n    print()", "try:\n    t = int(input())\n    from itertools import groupby\n    for i in range(0, t):\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        b = a.copy()\n        b.sort(reverse=True)\n        l = {}\n        c = 1\n        for i in range(0, len(b)):\n            if b[i] not in l:\n                l[b[i]] = c\n            c += 1\n        kl = []\n        for i in a:\n            kl.append(l[i])\n            l[i] += 1\n        print(*kl, sep=' ')\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    d1 = {}\n    temp = sorted(l)\n    temp.reverse()\n    for j in range(0, len(temp)):\n        d1.setdefault(temp[j], []).append(j + 1)\n    ans = []\n    for j in l:\n        f = d1[j]\n        ans.append(str(f[0]))\n        if len(f) > 1:\n            d1[j] = f[1:]\n    print(' '.join(ans))\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    patients = list(map(int, input().split()))\n    dict = {}\n    patient = sorted(patients, reverse=True)\n    count = 0\n    for i in patient:\n        if i in dict:\n            dict[i].append(count + 1)\n            count = count + 1\n        else:\n            dict[i] = []\n            dict[i].append(count + 1)\n            count = count + 1\n    for i in patients:\n        s = dict[i].pop(0)\n        print(s, end=' ')\n    print()", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr2 = sorted(arr)\n        arr2.reverse()\n        d = {}\n        for i in range(len(arr2)):\n            if arr2[i] in d:\n                d[arr2[i]].append(i + 1)\n            else:\n                d[arr2[i]] = [i + 1]\n        l = []\n        for i in arr:\n            if len(d[i]) == 1:\n                l.append(d[i][0])\n            else:\n                l.append(d[i][0])\n                d[i] = [] + d[i][1:]\n        for i in range(len(l)):\n            if i != len(l) - 1:\n                print(l[i], end=' ')\n            else:\n                print(l[i])\nexcept:\n    pass", "T = int(input())\nwhile T:\n    N = int(input())\n    A = list(map(int, input().split()))\n    v = dict()\n    res = []\n    for i in range(N):\n        res.append(0)\n        if A[i] in v:\n            v[A[i]].append(i)\n        else:\n            v[A[i]] = [i]\n    A.sort()\n    A.reverse()\n    index = 1\n    temp = 100000007\n    for x in A:\n        if temp != x:\n            temp = x\n            for j in v[x]:\n                res[j] = index\n                index += 1\n        else:\n            continue\n    for i in res:\n        print(i, sep=' ', end=' ')\n    print('\\n')\n    T = T - 1", "import operator\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ill = [int(i) for i in input().split(' ')]\n    pno = [int(i) for i in range(1, n + 1)]\n    mydict = dict(zip(pno, ill))\n    sorted_tuples = sorted(mydict.items(), key=operator.itemgetter(1), reverse=True)\n    sorted_dict = {k: v for (k, v) in sorted_tuples}\n    tim = [1]\n    for j in range(1, n + 1):\n        tim.append(tim[j - 1] + 1)\n    res = [0 for klj in range(n)]\n    ll = 0\n    for kl in sorted_dict.keys():\n        res[kl - 1] = tim[ll]\n        ll = ll + 1\n    print(*res)", "tcase = int(input())\nwhile tcase > 0:\n    n = int(input())\n    levels = list(map(int, input().split()))\n    count = [0] * max(levels)\n    for i in range(n):\n        count[levels[i] - 1] += 1\n    sorted_l = sorted(levels)\n    sumi = 0\n    for i in range(len(count) - 1, -1, -1):\n        temp = count[i]\n        if count[i] != 0:\n            count[i] = sumi + 1\n        else:\n            count[i] = sumi\n        sumi += temp\n    for i in range(n):\n        print(count[levels[i] - 1], end=' ')\n        count[levels[i] - 1] += 1\n    print()\n    tcase -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    b = sorted(b)\n    res = ''\n    c = 1\n    d = dict()\n    for (i, v) in enumerate(a):\n        if v not in d:\n            d[v] = [i]\n        else:\n            d[v].append(i)\n    for _ in range(len(b)):\n        x = b.pop()\n        for i in d[x]:\n            a[i] = str(c)\n            c += 1\n    for i in a:\n        res += i + ' '\n    print(res)", "try:\n    t = int(input())\n    for x in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        brr = [0] * n\n        dic = {}\n        for i in range(n):\n            if arr[i] not in dic:\n                dic[arr[i]] = [i]\n            else:\n                dic[arr[i]].append(i)\n        crr = sorted(dic)\n        crr.reverse()\n        count = 1\n        for i in crr:\n            for j in dic[i]:\n                brr[j] = count\n                count += 1\n        for k in range(n):\n            print(brr[k], end=' ')\n        print()\nexcept:\n    pass", "n = int(input())\nfor i in range(n):\n    p = int(input())\n    l = [int(i) for i in input().split()]\n    a = [0] * 1005\n    o = [0] * 1005\n    for i in l:\n        a[i] += 1\n    for i in range(1000, -1, -1):\n        o[i] = a[i] + o[i + 1]\n    for i in l:\n        print(o[i] - a[i] + 1, end=' ')\n        a[i] -= 1\n    print()", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    time = 1\n    ps = []\n    for i in range(max(l) + 1):\n        ps.append([])\n    c = Counter(l)\n    m = set(l)\n    m = list(m)\n    m.sort()\n    m.reverse()\n    for j in range(len(m)):\n        for r in range(c[m[j]]):\n            ps[m[j]].append(time)\n            time += 1\n    for j in range(n):\n        if len(ps[l[j]]) > 0:\n            l[j] = ps[l[j]].pop(0)\n    for j in range(n):\n        print(l[j], end=' ')\n    print()"]