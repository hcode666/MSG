["for _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    s = []\n    xorval = 0\n    for i in arr:\n        xorval ^= i\n        s.append(xorval)\n    count = [0 for i in range(32)]\n    ans = sum(s)\n    for i in range(32):\n        if s[0] & 1 << i:\n            count[i] += 1\n    for j in range(1, len(s)):\n        for i in range(32):\n            if s[j] & 1 << i:\n                ans += (j - count[i]) * 1 << i\n            else:\n                ans += count[i] * (1 << i)\n        for i in range(32):\n            if s[j] & 1 << i:\n                count[i] += 1\n    print(ans)", "def solver():\n    T = int(input())\n    for _ in range(T):\n        ans = 0\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        for i in range(1, len(arr)):\n            arr[i] = arr[i] ^ arr[i - 1]\n        for i in range(32, -1, -1):\n            t = 1 << i\n            cnt = 0\n            for e in arr:\n                if e & t != 0:\n                    cnt += 1\n            ans += cnt * (n - cnt + 1) * t\n        print(ans)\nsolver()", "import sys\n\ndef bin_one(num):\n    s = bin(num)[2:]\n    return set([len(s) - i - 1 for i in range(len(s)) if s[i] == '1'])\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    A = [int(i) for i in sys.stdin.readline().rstrip().split()]\n    max_bin_len = len(bin(max(A))[2:])\n    C = [0] * max_bin_len\n    S = 0\n    total_sum = 0\n    for i in range(0, n):\n        S ^= A[i]\n        index_ones = bin_one(S)\n        for j in range(len(C)):\n            if j in index_ones:\n                total_sum += (i + 1 - C[j]) * pow(2, j)\n                C[j] += 1\n            else:\n                total_sum += C[j] * pow(2, j)\n    print(total_sum)", "import sys\n\ndef bin_one(num):\n    s = bin(num)[2:]\n    return set([len(s) - i - 1 for i in range(len(s)) if s[i] == '1'])\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    A = [int(i) for i in sys.stdin.readline().rstrip().split()]\n    max_bin_len = len(bin(max(A))[2:])\n    C = [0] * max_bin_len\n    S = 0\n    total_sum = 0\n    for i in range(0, n):\n        S ^= A[i]\n        index_ones = bin_one(S)\n        for j in range(len(C)):\n            if j in index_ones:\n                total_sum += (i + 1 - C[j]) * pow(2, j)\n                C[j] += 1\n            else:\n                total_sum += C[j] * pow(2, j)\n    print(total_sum)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    s = s.split()\n    li = []\n    for i in s:\n        li += [int(i)]\n    res = 0\n    for i in range(0, 31):\n        s = 0\n        ones = 0\n        e = 0\n        o = 0\n        zero = 0\n        for j in li:\n            if 1 << i & j == 0:\n                if ones % 2 == 0:\n                    s += e\n                else:\n                    s += o\n                zero += 1\n            else:\n                ones += 1\n                if ones % 2 == 0:\n                    e += zero + 1\n                    s += e - 1\n                else:\n                    o += zero + 1\n                    s += o - 1\n                zero = 0\n        res += 2 ** i * s\n    res += sum(li)\n    print(res)", "import sys\nif len(sys.argv) > 1:\n    with open(sys.argv[1]) as f:\n        data = f.read().split()\nelse:\n    data = sys.stdin.read().split()\ndata.reverse()\n\ndef read():\n    return int(data.pop())\n\ndef readStr():\n    return data.pop()\nT = read()\nres = []\nfor test in range(T):\n    n = read()\n    A = [read() for i in range(n)]\n    ans = 0\n    for b in range(30):\n        cnt = 0\n        V = []\n        sum = [0, 0]\n        for a in A:\n            if a & 1 << b:\n                V.append(cnt + 1)\n                sum[len(V) % 2] += cnt + 1\n                cnt = 0\n            else:\n                cnt += 1\n        V.append(cnt + 1)\n        sum[len(V) % 2] += cnt + 1\n        cnt = 0\n        for i in range(len(V)):\n            s = V[i]\n            cnt += s * sum[i % 2]\n            sum[(i + 1) % 2] -= s\n        ans += cnt * (1 << b)\n    res.append(str(ans))\nprint('\\n'.join(res))", "import sys\ndata = sys.stdin.read().split()\ndata.reverse()\n\ndef read():\n    return int(data.pop())\n\ndef readStr():\n    return data.pop()\nT = read()\nres = []\nfor test in range(T):\n    n = read()\n    A = [read() for i in range(n)]\n    ans = 0\n    for b in range(30):\n        cnt = 0\n        V = []\n        sum = [0, 0]\n        for a in A:\n            if a & 1 << b:\n                V.append(cnt + 1)\n                sum[len(V) % 2] += cnt + 1\n                cnt = 0\n            else:\n                cnt += 1\n        V.append(cnt + 1)\n        sum[len(V) % 2] += cnt + 1\n        cnt = 0\n        for i in range(len(V)):\n            s = V[i]\n            cnt += s * sum[i % 2]\n            sum[(i + 1) % 2] -= s\n        ans += cnt * (1 << b)\n    res.append(str(ans))\nprint('\\n'.join(res))"]