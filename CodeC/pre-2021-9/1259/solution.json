["def answer():\n    if y == x:\n        return 0\n    (p1, p2) = (-1, -1)\n    for i in range(30, -1, -1):\n        if p2 == -1 and x >> i & 1 != y >> i & 1:\n            p2 = i\n        if p1 == -1 and n >> i & 1:\n            p1 = i\n    ans = n + 1\n    if p1 >= p2:\n        istheir = False\n        for i in range(p1, -1, -1):\n            if not istheir and i < p2:\n                break\n            if n >> i & 1:\n                if i > p2:\n                    ans -= 1 << i - 1\n                elif i < p2:\n                    ans -= 1 << i\n                else:\n                    istheir = True\n                    ans -= 1\n    return ans if y > x else n + 1 - ans\nfor T in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(answer())", "def answer():\n    if y == x:\n        return 0\n    (p1, p2) = (-1, -1)\n    for i in range(30, -1, -1):\n        if p2 == -1 and x >> i & 1 != y >> i & 1:\n            p2 = i\n        if p1 == -1 and n >> i & 1:\n            p1 = i\n    ans = n + 1\n    if p1 >= p2:\n        istheir = False\n        for i in range(p1, -1, -1):\n            if not istheir and i < p2:\n                break\n            if n >> i & 1:\n                if i > p2:\n                    ans -= 1 << i - 1\n                elif i < p2:\n                    ans -= 1 << i\n                else:\n                    istheir = True\n                    ans -= 1\n    return ans if y > x else n + 1 - ans\nfor T in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(answer())", "def pow2(x):\n    p = 0\n    while x:\n        x //= 2\n        p += 1\n    return p - 1\n\ndef answer():\n    if y == x:\n        return 0\n    p2 = 0\n    p1 = pow2(n)\n    while (x < y) == (x ^ 1 << p2 < y ^ 1 << p2) and p2 <= p1:\n        p2 += 1\n    ans = n + 1\n    if p1 >= p2:\n        istheir = False\n        for i in range(p1, -1, -1):\n            if not istheir and i < p2:\n                break\n            if n >> i & 1:\n                if i > p2:\n                    ans -= 1 << i - 1\n                elif i < p2:\n                    ans -= 1 << i\n                else:\n                    istheir = True\n                    ans -= 1\n    return ans if y > x else n + 1 - ans\nfor T in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(answer())", "def pow2(x):\n    p = 0\n    while x:\n        x //= 2\n        p += 1\n    return p - 1\n\ndef answer():\n    if y == x:\n        return 0\n    p2 = 0\n    p1 = pow2(n)\n    while (x < y) == (x ^ 1 << p2 < y ^ 1 << p2) and p2 <= p1:\n        p2 += 1\n    ans = n + 1\n    if p1 >= p2:\n        istheir = False\n        for i in range(p1, -1, -1):\n            if not istheir and i < p2:\n                break\n            if n >> i & 1:\n                if i > p2:\n                    ans -= 1 << i - 1\n                elif i < p2:\n                    ans -= 1 << i\n                else:\n                    istheir = True\n                    ans -= 1\n    return ans if y > x else n + 1 - ans\nfor T in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(answer())", "def pow2(x):\n    p = 0\n    while x:\n        x //= 2\n        p += 1\n    return p - 1\n\ndef answer():\n    if y == x:\n        return 0\n    p2 = 0\n    p1 = pow2(n)\n    while (x < y) == (x ^ 1 << p2 < y ^ 1 << p2) and p2 <= p1:\n        p2 += 1\n    ans = n + 1\n    if p1 >= p2:\n        istheir = False\n        for i in range(p1, -1, -1):\n            if not istheir and i < p2:\n                break\n            if n >> i & 1:\n                if i > p2:\n                    ans -= 1 << i - 1\n                elif i < p2:\n                    ans -= 1 << i\n                else:\n                    istheir = True\n                    ans -= 1\n    return ans if y > x else n + 1 - ans\nfor T in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(answer())", "def solve(x, y, n):\n    z = x ^ 0 < y ^ 0\n    pos_z = 1\n    while z == (x ^ pos_z < y ^ pos_z) and pos_z < n + 1:\n        pos_z *= 2\n    ans = (n + 1) // (pos_z * 2) * pos_z\n    ans += min(pos_z, n + 1 - ans * 2)\n    return ans if z else n + 1 - ans\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(solve(x, y, n))", "tc = int(input())\nfor j in range(tc):\n    ip = list(map(int, input().rstrip().split()))\n    x = ip[0]\n    y = ip[1]\n    n = ip[2]\n    cnt = 0\n    if x == y:\n        print('0')\n        continue\n    ln = bin(x).replace('0b', '')\n    rn = bin(y).replace('0b', '')\n    ll = len(ln)\n    rl = len(rn)\n    if ll == len(rn):\n        for i in range(ll):\n            if ln[i] != rn[i]:\n                ln = ln[i:]\n                rn = rn[i:]\n                break\n    if ln[0] == '0':\n        ln = ln[1:]\n        ll -= 1\n    if rn[0] == '0':\n        rn = rn[1:]\n        rl -= 1\n    ll = len(ln)\n    rl = len(rn)\n    if ll > rl:\n        lb = ll\n    else:\n        lb = rl\n    pl = 2 ** lb\n    hpl = pl // 2\n    amn = (n + 1) // pl * hpl\n    rm = (n + 1) % pl\n    if rm * 2 <= pl:\n        amn += rm\n    else:\n        amn += hpl\n    aln = n + 1 - amn\n    if x < y:\n        print(amn)\n    else:\n        print(aln)", "tc = int(input())\nfor j in range(tc):\n    ip = list(map(int, input().rstrip().split()))\n    x = ip[0]\n    y = ip[1]\n    n = ip[2]\n    cnt = 0\n    if x == y:\n        print('0')\n        continue\n    ln = bin(x).replace('0b', '')\n    rn = bin(y).replace('0b', '')\n    ll = len(ln)\n    rl = len(rn)\n    if ll == len(rn):\n        for i in range(ll):\n            if ln[i] != rn[i]:\n                ln = ln[i:]\n                rn = rn[i:]\n                break\n    if ln[0] == '0':\n        ln = ln[1:]\n        ll -= 1\n    if rn[0] == '0':\n        rn = rn[1:]\n        rl -= 1\n    ll = len(ln)\n    rl = len(rn)\n    if ll > rl:\n        lb = ll\n    else:\n        lb = rl\n    pl = 2 ** lb\n    hpl = pl // 2\n    amn = (n + 1) // pl * hpl\n    rm = (n + 1) % pl\n    if rm * 2 <= pl:\n        amn += rm\n    else:\n        amn += hpl\n    aln = n + 1 - amn\n    if x < y:\n        print(amn)\n    else:\n        print(aln)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = [int(i) for i in input().split()]\n    bx = list(bin(x))\n    by = list(bin(y))\n    bx.remove(bx[0])\n    bx.remove(bx[0])\n    by.remove(by[0])\n    by.remove(by[0])\n    lx = len(bx)\n    ly = len(by)\n    index = 0\n    flag = 2\n    k = -1\n    if lx != ly:\n        index = max(lx, ly)\n        if (n + 1) % 2 ** index >= 2 ** (index - 1):\n            k = 2 ** (index - 1)\n        else:\n            k = (n + 1) % 2 ** index\n        if lx < ly:\n            print(int((n + 1) / 2 ** index) * 2 ** (index - 1) + k)\n        else:\n            print(n + 1 - (int((n + 1) / 2 ** index) * 2 ** (index - 1) + k))\n    else:\n        for j in range(lx):\n            if bx[j] != by[j]:\n                index = lx - j\n                if bx[j] == '0':\n                    flag = 0\n                else:\n                    flag = 1\n                break\n        if (n + 1) % 2 ** index >= 2 ** (index - 1):\n            k = 2 ** (index - 1)\n        else:\n            k = (n + 1) % 2 ** index\n        if flag == 2:\n            print(0)\n        elif flag == 1:\n            print(n + 1 - (int((n + 1) / 2 ** index) * 2 ** (index - 1) + k))\n        else:\n            print(int((n + 1) / 2 ** index) * 2 ** (index - 1) + k)", "for _ in range(int(input())):\n    [x, y, n] = list(map(int, input().split()))\n    if x == y:\n        print(0)\n    else:\n        sn = bin(n)[2:]\n        ln = len(sn)\n        sx = bin(x)[2:]\n        lx = len(sx)\n        sy = bin(y)[2:]\n        ly = len(sy)\n        l = max(ln, lx, ly)\n        sn = '0' * (l - ln) + sn\n        sx = '0' * (l - lx) + sx\n        sy = '0' * (l - ly) + sy\n        for i in range(l):\n            if sx[i] != sy[i]:\n                break\n        if i == 0:\n            t1 = 1\n        else:\n            t1 = int(sn[:i], 2) + 1\n        rstval = 2 ** (l - i - 1)\n        if sx[i] == '0' and sn[i] == '1':\n            print(t1 * rstval)\n        elif sx[i] == '1' and sn[i] == '1':\n            if i == l - 1:\n                t2 = 1\n            else:\n                t2 = int(sn[i + 1:], 2) + 1\n            print(t2 + (t1 - 1) * rstval)\n        elif sx[i] == '1' and sn[i] == '0':\n            t2 = rstval\n            print((t1 - 1) * t2)\n        else:\n            if i == l - 1:\n                t2 = 1\n            else:\n                t2 = int(sn[i + 1:], 2) + 1\n            print(t2 + (t1 - 1) * rstval)", "from random import randint\nf = input\n\ndef din(st):\n    return bin(st)[2:].zfill(10)\n\ndef func(x, y, n):\n    z0 = x ^ 0 < y ^ 0\n    unmatch = 1\n    while z0 == (x ^ unmatch < y ^ unmatch) and unmatch < n + 1:\n        unmatch *= 2\n    ans = (n + 1) // (unmatch * 2) * unmatch\n    ans += min(unmatch, n + 1 - ans * 2)\n    return ans if z0 else n + 1 - ans\nfor _ in range(int(f())):\n    (x, y, n) = map(int, f().split())\n    print(func(x, y, n))", "for t in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    count = 0\n    flag = 0\n    for i in range(29, -1, -1):\n        if flag == 0:\n            if x & 1 << i != y & 1 << i:\n                for k in range(29, -1, -1):\n                    if n & 1 << k:\n                        if k > i:\n                            count += 1 << k - 1\n                        elif k == i:\n                            if x & 1 << i == 0:\n                                count += 1 << k\n                        elif x & 1 << i == n & 1 << i:\n                            count += 1 << k\n                flag = 1\n    print(count)", "def optimized(x, y, n):\n    if x == y:\n        return 0\n    p = (x ^ y).bit_length()\n    diff = pow(2, p)\n    n = n + 1\n    ans = n // diff * (diff // 2)\n    if x < y:\n        return ans + (n % diff if n % diff < diff // 2 else diff // 2)\n    else:\n        return ans + (n % diff - diff // 2 if n % diff > diff // 2 else 0)\nfor test in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(optimized(x, y, n))", "try:\n    for _ in range(int(input())):\n        (X, Y, N) = map(int, input().split())\n        if X == Y:\n            print(0)\n        else:\n            l = len(bin(X ^ Y)) - 3\n            tmp = (N + 1) // pow(2, l)\n            if X < Y:\n                if tmp % 2 == 0:\n                    res = tmp // 2 * pow(2, l) + (N + 1) % pow(2, l)\n                else:\n                    res = (tmp // 2 + tmp % 2) * pow(2, l)\n            elif tmp % 2 == 0:\n                res = tmp // 2 * pow(2, l)\n            else:\n                res = tmp // 2 * pow(2, l) + (N + 1) % pow(2, l)\n            print(res)\nexcept:\n    pass", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    ans = 0\n    are_same = True\n    for j in range(29, -1, -1):\n        if are_same:\n            if x & 1 << j != y & 1 << j:\n                for k in range(29, -1, -1):\n                    if j > k:\n                        if n & 1 << k:\n                            if n & 1 << j == x & 1 << j:\n                                ans += 1 << k\n                    elif j == k:\n                        if n & 1 << k:\n                            if x & 1 << j == 0:\n                                ans += 1 << k\n                    elif n & 1 << k:\n                        ans += 1 << k - 1\n        if x & 1 << j != y & 1 << j:\n            are_same = False\n    print(ans)", "from random import randint\nf = input\n\ndef din(st):\n    return bin(st)[2:].zfill(10)\n\ndef func(x, y, n):\n    z0 = x ^ 0 < y ^ 0\n    unmatch = 1\n    while z0 == (x ^ unmatch < y ^ unmatch) and unmatch < n + 1:\n        unmatch *= 2\n    ans = (n + 1) // (unmatch * 2) * unmatch\n    ans += min(unmatch, n + 1 - ans * 2)\n    return ans if z0 else n + 1 - ans\nfor _ in range(int(f())):\n    (x, y, n) = map(int, f().split())\n    print(func(x, y, n))", "import sys\nimport math\nfrom collections import defaultdict, Counter\ninput = sys.stdin.readline\n\ndef print(x):\n    sys.stdout.write(str(x) + '\\n')\nt = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    if x == y:\n        print(0)\n        continue\n    elif n == 0:\n        if x < y:\n            print(1)\n        else:\n            print(0)\n        continue\n    l = int(math.log2(n))\n    b = int(math.log2(x ^ y))\n    if b > l:\n        if x > y:\n            print(0)\n        else:\n            print(n + 1)\n        continue\n    ans = 0\n    for j in range(l, b, -1):\n        if n & 1 << j:\n            ans += pow(2, j - 1)\n    if x > y:\n        if n & 1 << b:\n            for j in range(b - 1, -1, -1):\n                if n & 1 << j:\n                    ans += pow(2, j)\n            ans += 1\n    elif n & 1 << b:\n        ans += pow(2, b)\n    else:\n        for j in range(b - 1, -1, -1):\n            if n & 1 << j:\n                ans += pow(2, j)\n        ans += 1\n    print(ans)", "def solve(x, y, n):\n    z = x ^ 0 < y ^ 0\n    pos_z = 1\n    while z == (x ^ pos_z < y ^ pos_z) and pos_z < n + 1:\n        pos_z *= 2\n    ans = (n + 1) // (pos_z * 2) * pos_z\n    ans += min(pos_z, n + 1 - ans * 2)\n    return ans if z else n + 1 - ans\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(solve(x, y, n))", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    a = bin(x)[2:]\n    a = '0' * (30 - len(a)) + a\n    b = bin(y)[2:]\n    b = '0' * (30 - len(b)) + b\n    p = bin(n)[2:]\n    p = '0' * (30 - len(p)) + p\n    j = 0\n    while j < 30:\n        if a[j] != b[j]:\n            break\n        j += 1\n    else:\n        print(0)\n        continue\n    j = 29 - j\n    res = 0\n    curr = 2 ** 30\n    for k in range(29, -1, -1):\n        curr //= 2\n        if p[29 - k] == '0':\n            continue\n        if k > j:\n            res += curr // 2\n        elif k == j:\n            if a[29 - j] == '0':\n                res += curr\n        elif p[29 - j] == a[29 - j]:\n            res += curr\n    print(res)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    ans = 0\n    for i in range(29, -1, -1):\n        if x & 1 << i != y & 1 << i:\n            for k in range(29, -1, -1):\n                if n & 1 << k > 0:\n                    if k > i:\n                        ans += 1 << k - 1\n                    elif k == i:\n                        if x & 1 << i == 0:\n                            ans += 1 << k\n                    elif n & 1 << i == x & 1 << i:\n                        ans += 1 << k\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    ans = 0\n    same = True\n    for j in range(29, -1, -1):\n        if same:\n            if x & 1 << j != y & 1 << j:\n                for k in range(29, -1, -1):\n                    if k < j:\n                        if n & 1 << k:\n                            if n & 1 << j == x & 1 << j:\n                                ans += 1 << k\n                    elif k == j:\n                        if n & 1 << k:\n                            if x & 1 << j == 0:\n                                ans += 1 << k\n                    elif n & 1 << k:\n                        ans += 1 << k - 1\n        if x & 1 << j != y & 1 << j:\n            same = False\n    print(ans)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    z = x ^ 0 < y ^ 0\n    q = 1\n    while z == (x ^ q < y ^ q) and q < n + 1:\n        q *= 2\n    ans = (n + 1) // (q * 2) * q\n    ans += min(q, n + 1 - ans * 2)\n    print(ans if z else n + 1 - ans)", "try:\n    import math\n    import bisect\n    read = lambda : list(map(int, input().strip().split()))\n    rs = lambda : int(input().strip())\n    t = rs()\n    ans = []\n\n    def find(x, y, n):\n        d = x ^ y\n        if d == 0:\n            return 0\n        msb = None\n        for i in range(30, -1, -1):\n            if d >> i > 0:\n                msb = i\n                break\n        t = n + 1\n        num = t >> msb + 1\n        num = num << msb\n        num += max(0, t % (1 << msb + 1) - (1 << msb))\n        if y & 1 << msb:\n            return t - num\n        return num\n    for _ in range(t):\n        (xc, yc, nc) = read()\n        ans.append(find(xc, yc, nc))\n    print('\\n'.join([str(x) for x in ans]))\nexcept:\n    pass", "t = int(input())\nfor gg in range(t):\n    l = list(map(int, input().strip().split()))\n    x = l[0]\n    y = l[1]\n    n = l[2] + 1\n    z1 = bin(x)\n    z1 = z1[2:]\n    c1 = z1.zfill(30)\n    z2 = bin(y)\n    z2 = z2[2:]\n    c2 = z2.zfill(30)\n    if x == y:\n        print(0)\n    elif x < y:\n        for i in range(30):\n            if c1[i] != c2[i]:\n                siz = 30 - i\n                break\n        size = 2 ** (siz - 1)\n        t = n // size\n        imp = n % size\n        if t % 2 == 0:\n            print(size * (t // 2) + imp)\n        else:\n            print(size * (t // 2 + 1))\n    else:\n        for i in range(30):\n            if c1[i] != c2[i]:\n                siz = 30 - i\n                break\n        size = 2 ** (siz - 1)\n        t = n // size\n        imp = n % size\n        if t % 2 == 0:\n            print(size * (t // 2))\n        else:\n            print(size * (t // 2) + imp)", "def actual_string(x, y):\n    if len(x) != len(y):\n        return (x, y)\n    elif x == y:\n        return (x, y)\n    else:\n        while len(x) == len(y) and len(x) != 1:\n            if x[0] == y[0]:\n                x = x[1:]\n                y = y[1:]\n            elif x[0] == '0':\n                x = x[1:]\n            else:\n                y = y[1:]\n        return (x, y)\nfor _ in range(int(input())):\n    (x, y, n) = input().split()\n    (x, y, n) = (int(x), int(y), int(n))\n    (x, y) = (bin(x), bin(y))\n    x = x[2:]\n    y = y[2:]\n    (x, y) = actual_string(x, y)\n    x = int(x)\n    y = int(y)\n    x = str(x)\n    y = str(y)\n    len_of_x = len(x)\n    len_of_y = len(y)\n    x = int(x, 2)\n    y = int(y, 2)\n    summ = 0\n    count_storer = 0\n    complete = 0\n    if x == y:\n        summ = 0\n    elif n == 0:\n        if x < y:\n            summ = 1\n        else:\n            summ = 0\n    elif len_of_x < len_of_y or (x == 0 and y == 1):\n        count_storer += 2 ** (len_of_y - 1) - 1\n        if n >= count_storer:\n            summ += 2 ** (len_of_y - 1)\n        else:\n            summ += n + 1\n            complete = 1\n        count_storer = 2 ** len_of_y - 1\n        if complete == 0 and n <= count_storer:\n            complete = 1\n        if complete == 0:\n            n -= count_storer\n            divisor = n // 2 ** (len_of_y - 1)\n            reminder = n % 2 ** (len_of_y - 1)\n            if divisor % 2 == 0:\n                summ += divisor // 2 * 2 ** (len_of_y - 1) + reminder\n            else:\n                summ += (divisor // 2 + 1) * 2 ** (len_of_y - 1)\n    else:\n        count_storer += 2 ** (len_of_x - 1) - 1\n        if n <= count_storer:\n            summ = 0\n            complete = 1\n        count_storer = 2 ** len_of_x - 1\n        if complete == 0 and n <= count_storer:\n            summ += n - 2 ** (len_of_x - 1) + 1\n            complete = 1\n        elif complete == 0:\n            summ += 2 ** (len_of_x - 1)\n        if complete == 0:\n            n -= count_storer\n            divisor = n // 2 ** (len_of_x - 1)\n            reminder = n % 2 ** (len_of_x - 1)\n            if divisor % 2 == 0:\n                summ += divisor // 2 * 2 ** (len_of_x - 1)\n            else:\n                summ += divisor // 2 * 2 ** (len_of_x - 1) + reminder\n    print(summ)", "t = int(input())\nfor gg in range(t):\n    l = list(map(int, input().strip().split()))\n    x = l[0]\n    y = l[1]\n    n = l[2] + 1\n    z1 = bin(x)\n    z1 = z1[2:]\n    c1 = z1.zfill(30)\n    z2 = bin(y)\n    z2 = z2[2:]\n    c2 = z2.zfill(30)\n    if x == y:\n        print(0)\n    elif x < y:\n        for i in range(30):\n            if c1[i] != c2[i]:\n                siz = 30 - i\n                break\n        size = 2 ** (siz - 1)\n        t = n // size\n        imp = n % size\n        if t % 2 == 0:\n            print(size * (t // 2) + imp)\n        else:\n            print(size * (t // 2 + 1))\n    else:\n        for i in range(30):\n            if c1[i] != c2[i]:\n                siz = 30 - i\n                break\n        size = 2 ** (siz - 1)\n        t = n // size\n        imp = n % size\n        if t % 2 == 0:\n            print(size * (t // 2))\n        else:\n            print(size * (t // 2) + imp)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    iteration = True\n    ans = 0\n    for j in range(29, -1, -1):\n        if iteration:\n            if x & 1 << j != y & 1 << j:\n                for k in range(29, -1, -1):\n                    if j > k:\n                        if n & 1 << k:\n                            if n & 1 << j == x & 1 << j:\n                                ans += 1 << k\n                    elif j == k:\n                        if n & 1 << k:\n                            if x & 1 << j == 0:\n                                ans += 1 << k\n                    elif n & 1 << k:\n                        ans += 1 << k - 1\n        if x & 1 << j != y & 1 << j:\n            iteration = False\n    print(ans)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    n += 1\n    iteration = True\n    ans = 0\n    for j in range(29, -1, -1):\n        if iteration:\n            if x & 1 << j != y & 1 << j:\n                for k in range(29, -1, -1):\n                    if j > k:\n                        if n & 1 << k:\n                            if n & 1 << j == x & 1 << j:\n                                ans += 1 << k\n                    elif j == k:\n                        if n & 1 << k:\n                            if x & 1 << j == 0:\n                                ans += 1 << k\n                    elif n & 1 << k:\n                        ans += 1 << k - 1\n        if x & 1 << j != y & 1 << j:\n            iteration = False\n    print(ans)", "def solve(x, y, n):\n    z = x ^ 0 < y ^ 0\n    pos_z = 1\n    while z == (x ^ pos_z < y ^ pos_z) and pos_z < n + 1:\n        pos_z *= 2\n    ans = (n + 1) // (pos_z * 2) * pos_z\n    ans += min(pos_z, n + 1 - ans * 2)\n    return ans if z else n + 1 - ans\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(solve(x, y, n))", "t = int(input())\n\ndef rounded(x):\n    if x % 2 == 1:\n        return x // 2 + 1\n    else:\n        return x // 2\nfor i in range(t):\n    (x, y, z) = input().split()\n    (x, y, z) = (int(x), int(y), int(z))\n    count = 0\n    inverted = False\n    if x == y:\n        print(0)\n        continue\n    if x > y:\n        inverted = True\n        (x, y) = (y, x)\n    left = 0\n    right = 1\n    while x ^ right < y ^ right:\n        right *= 2\n    while left <= right:\n        mid = left + (right - left) // 2\n        if x ^ mid > y ^ mid:\n            count = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n    maxi = count\n    jodi = (z + 1) // maxi\n    bacha = (z + 1) % maxi\n    bachahamara = (z + 1 - bacha) // maxi % 2 == 0\n    count = rounded(jodi) * maxi\n    if bachahamara:\n        count += bacha\n    if inverted:\n        print(z + 1 - count)\n    else:\n        print(count)", "from random import randint\nf = input\n\ndef din(st):\n    return bin(st)[2:].zfill(10)\n\ndef func(x, y, n):\n    z0 = x ^ 0 < y ^ 0\n    unmatch = 1\n    while z0 == (x ^ unmatch < y ^ unmatch) and unmatch < n + 1:\n        unmatch *= 2\n    ans = (n + 1) // (unmatch * 2) * unmatch\n    ans += min(unmatch, n + 1 - ans * 2)\n    return ans if z0 else n + 1 - ans\nfor _ in range(int(f())):\n    (x, y, n) = map(int, f().split())\n    print(func(x, y, n))", "def setBitNumber(n):\n    if n == 0:\n        return -1\n    msb = 0\n    n = int(n / 2)\n    while n > 0:\n        n = int(n / 2)\n        msb += 1\n    return msb\n\ndef f(l, u, b):\n    if u < 2 ** b:\n        return 0\n    mx = setBitNumber(u)\n    ans = 0\n    if b == mx:\n        s = '0' + bin(u)[3:]\n        return 1 + int(s, 2)\n    ans += 2 ** (mx - 1)\n    u -= 2 ** mx\n    ans += f(l, u, b)\n    return ans\nt = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    x = bin(x)[2:]\n    y = bin(y)[2:]\n    while len(x) < len(y):\n        x = '0' + x\n    while len(y) < len(x):\n        y = '0' + y\n    c = -1\n    for i in range(len(x)):\n        if x[i] != y[i]:\n            c = i\n            tg = x[i]\n            break\n    if c == -1:\n        print(0)\n        continue\n    c = len(x) - c - 1\n    if tg == '1':\n        print(f(0, n, c))\n    else:\n        print(n - f(0, n, c) + 1)", "from math import log as l\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    if n < 64:\n        c = 0\n        for z in range(n + 1):\n            if x ^ z < y ^ z:\n                c += 1\n        print(c)\n    else:\n        ab = x ^ y\n        if x == y:\n            print(0)\n        elif x > y:\n            r = 2 ** int(l(ab, 2))\n            c = 0\n            st = r\n            if st > n:\n                print(0)\n            elif n >= st and n <= 2 * r - 1:\n                print(n - st + 1)\n            else:\n                while True:\n                    c += r\n                    st += 2 * r\n                    check = st + r - 1\n                    if n >= st and n <= check:\n                        c += n - st + 1\n                        break\n                    if st > n:\n                        break\n                print(c)\n        else:\n            r = 2 ** int(l(ab, 2))\n            c = 0\n            st = 0\n            if n >= st and n <= r:\n                print(n + 1)\n            else:\n                while True:\n                    c += r\n                    st += 2 * r\n                    check = st + r - 1\n                    if n >= st and n <= check:\n                        c += n - st + 1\n                        break\n                    if st > n:\n                        break\n                print(c)", "import math\nimport bisect\nread = lambda : list(map(int, input().strip().split()))\nrs = lambda : int(input().strip())\nt = rs()\nans = []\n\ndef find(x, y, n):\n    d = x ^ y\n    if d == 0:\n        return 0\n    msb = None\n    for i in range(30, -1, -1):\n        if d >> i > 0:\n            msb = i\n            break\n    t = n + 1\n    num = t >> msb + 1\n    num = num << msb\n    num += max(0, t % (1 << msb + 1) - (1 << msb))\n    if y & 1 << msb:\n        return t - num\n    return num\nfor _ in range(t):\n    (xc, yc, nc) = read()\n    ans.append(find(xc, yc, nc))\nprint('\\n'.join([str(x) for x in ans]))", "import math\nN = int(input())\ncases = []\nfor _ in range(int(N)):\n    cases.append(list(map(lambda x: int(x), input().split(' '))))\nfor c in cases:\n    (x, y, n) = c\n    x = '{0:b}'.format(x)\n    y = '{0:b}'.format(y)\n    if len(x) > len(y):\n        p = len(x) - 1\n        f = True\n    elif len(y) > len(x):\n        p = len(y) - 1\n        f = False\n    else:\n        for l in range(len(x)):\n            if x[l] == '1' and y[l] == '0':\n                p = len(x) - 1 - l\n                f = True\n                break\n            elif y[l] == '1' and x[l] == '0':\n                p = len(x) - 1 - l\n                f = False\n                break\n        else:\n            print(0)\n            continue\n    n += 1\n    t = n // 2 ** (p + 1) * 2 ** p + min(2 ** p, n % 2 ** (p + 1))\n    if not f:\n        print(t)\n    else:\n        print(n - t)", "from math import ceil\n\ndef leftset(n):\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    n = n + 1\n    return n >> 1\ntest = int(input())\nfor ____ in range(test):\n    (x, y, n) = list(map(int, input().split()))\n    if y < x:\n        mask = leftset(x ^ y)\n        remainder = (n + 1) % mask\n        quo = (n + 1) // mask\n        ans = mask * (quo // 2) + quo % 2 * remainder\n        print(ans)\n    elif x < y:\n        mask = leftset(x ^ y)\n        remainder = (n + 1) % mask\n        quo = (n + 1) // mask\n        ans = mask * ceil(quo / 2) + (quo + 1) % 2 * remainder\n        print(ans)\n    else:\n        print(0)"]