["import collections\n\ndef shortestSubarray(A, K):\n    N = len(A)\n    P = [0]\n    for x in A:\n        P.append(P[-1] + x)\n    ans = N + 1\n    monoq = collections.deque()\n    for (y, Py) in enumerate(P):\n        if not monoq:\n            if Py >= K:\n                return 1\n        while monoq and Py <= P[monoq[-1]]:\n            monoq.pop()\n        while monoq and Py - P[monoq[0]] >= K:\n            ans = min(ans, y - monoq.popleft())\n        monoq.append(y)\n    return ans if ans < N + 1 else -1\nfor t in range(int(input())):\n    (N, D) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    print(shortestSubarray(A, D))", "import collections\n\ndef shortestSubarray(A, K):\n    N = len(A)\n    P = [0]\n    for x in A:\n        P.append(P[-1] + x)\n    ans = N + 1\n    monoq = collections.deque()\n    for (y, Py) in enumerate(P):\n        if not monoq:\n            if Py >= K:\n                return 1\n        while monoq and Py <= P[monoq[-1]]:\n            monoq.pop()\n        while monoq and Py - P[monoq[0]] >= K:\n            ans = min(ans, y - monoq.popleft())\n        monoq.append(y)\n    return ans if ans < N + 1 else -1\nfor t in range(int(input())):\n    (N, D) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    print(shortestSubarray(A, D))", "import collections\n\ndef shortestSubarray(A, K):\n    N = len(A)\n    P = [0]\n    for x in A:\n        P.append(P[-1] + x)\n    ans = N + 1\n    monoq = collections.deque()\n    for (y, Py) in enumerate(P):\n        if not monoq:\n            if Py >= K:\n                return 1\n        while monoq and Py <= P[monoq[-1]]:\n            monoq.pop()\n        while monoq and Py - P[monoq[0]] >= K:\n            ans = min(ans, y - monoq.popleft())\n        monoq.append(y)\n    return ans if ans < N + 1 else -1\nfor t in range(int(input())):\n    (N, D) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    print(shortestSubarray(A, D))", "for _ in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    prefix = [(0, -1)]\n    tot = 0\n    ans = n + 1\n    for i in range(n):\n        tot += arr[i]\n        while prefix and prefix[-1][0] >= tot:\n            prefix.pop()\n        (lo, hi) = (0, len(prefix))\n        diff = tot - d\n        while lo < hi:\n            mid = lo + hi >> 1\n            if prefix[mid][0] > diff:\n                hi = mid\n            else:\n                lo = mid + 1\n        if lo == len(prefix):\n            lo -= 1\n        if prefix and prefix[lo][0] > diff:\n            lo -= 1\n        if prefix and lo >= 0:\n            ans = min(ans, i - prefix[lo][1])\n        prefix.append((tot, i))\n    if ans == n + 1:\n        ans = -1\n    print(ans)", "T = int(input())\nfor test in range(T):\n    (n, d) = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    if d <= 0:\n        if max(A) >= d:\n            print(1)\n        else:\n            print(-1)\n        continue\n    tot = 0\n    hist = [(0, 0)]\n    best = float('inf')\n    ind = -1\n    for i in range(n):\n        while hist and tot <= hist[-1][0]:\n            hist.pop()\n            if ind == len(hist):\n                ind -= 1\n        hist.append((tot, i))\n        tot += A[i]\n        while ind < len(hist) - 1 and hist[ind + 1][0] <= tot - d:\n            ind += 1\n        if ind > -1 and best > i - hist[ind][1] + 1:\n            best = i - hist[ind][-1] + 1\n    if best < float('inf'):\n        print(best)\n    else:\n        print(-1)", "T = int(input())\nfor test in range(T):\n    (n, d) = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    if d <= 0:\n        if max(A) >= d:\n            print(1)\n        else:\n            print(-1)\n        continue\n    tot = 0\n    hist = [(0, 0)]\n    best = float('inf')\n    ind = -1\n    for i in range(n):\n        while hist and tot <= hist[-1][0]:\n            hist.pop()\n            if ind == len(hist):\n                ind -= 1\n        hist.append((tot, i))\n        tot += A[i]\n        while ind < len(hist) - 1 and hist[ind + 1][0] <= tot - d:\n            ind += 1\n        if ind > -1 and best > i - hist[ind][1] + 1:\n            best = i - hist[ind][-1] + 1\n    if best < float('inf'):\n        print(best)\n    else:\n        print(-1)", "T = int(input())\nfor test in range(T):\n    (n, d) = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    if d <= 0:\n        if max(A) >= d:\n            print(1)\n        else:\n            print(-1)\n        continue\n    tot = 0\n    hist = [(0, 0)]\n    best = float('inf')\n    ind = -1\n    for i in range(n):\n        while hist and tot <= hist[-1][0]:\n            hist.pop()\n            if ind > len(hist):\n                ind -= 1\n        hist.append((tot, i))\n        tot += A[i]\n        while ind < len(hist) - 1 and hist[ind + 1][0] <= tot - d:\n            ind += 1\n        while ind > -1 and hist[ind][0] > tot - d:\n            ind -= 1\n        if ind > -1 and best > i - hist[ind][1] + 1:\n            best = i - hist[ind][-1] + 1\n    if best < float('inf'):\n        print(best)\n    else:\n        print(-1)", "T = int(input())\nfor test in range(T):\n    (n, d) = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    if d <= 0:\n        if max(A) >= d:\n            print(1)\n        else:\n            print(-1)\n        continue\n    if A[0] >= d:\n        print(1)\n        continue\n    tot = A[0]\n    hist = [(0, 0), (A[0], 1)]\n    best = float('inf')\n    ind = -1\n    for i in range(1, n):\n        while hist and tot <= hist[-1][0]:\n            hist.pop()\n        hist.append((tot, i))\n        tot += A[i]\n        if ind > len(hist):\n            ind = len(hist) - 2\n        thresh = tot - d\n        while ind < len(hist) - 1 and hist[ind + 1][0] <= thresh:\n            ind += 1\n        while ind > -1 and hist[ind][0] > thresh:\n            ind -= 1\n        if ind > -1 and best > i - hist[ind][-1] + 1:\n            best = i - hist[ind][-1] + 1\n    if best < float('inf'):\n        print(best)\n    else:\n        print(-1)", "from collections import deque\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pref = [0]\n    for i in range(1, n + 1):\n        pref.append(a[i - 1] + pref[i - 1])\n    ff = 0\n    ss = 1\n    ans = -1\n    nex_smal = deque([])\n    while ss <= n and ff <= n:\n        if pref[ss] > pref[ff]:\n            if pref[ss] - pref[ff] >= d:\n                if ans == -1:\n                    ans = ss - ff\n                else:\n                    ans = min(ans, ss - ff)\n                if len(nex_smal) == 0:\n                    ff += 1\n                else:\n                    ff = nex_smal[0]\n                    nex_smal.popleft()\n                continue\n        else:\n            ff = ss\n            if a[ff - 1] >= d:\n                ans = 1\n        if len(nex_smal) == 0:\n            nex_smal.append(ss)\n        else:\n            while pref[nex_smal[-1]] > pref[ss]:\n                nex_smal.pop()\n                if len(nex_smal) == 0:\n                    break\n            nex_smal.append(ss)\n        ss += 1\n    print(ans)", "from collections import deque\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pref = [0]\n    for i in range(1, n + 1):\n        pref.append(a[i - 1] + pref[i - 1])\n    ff = 0\n    ss = 1\n    ans = -1\n    nex_smal = deque([])\n    while ss <= n and ff <= n:\n        if pref[ss] > pref[ff]:\n            if pref[ss] - pref[ff] >= d:\n                if ans == -1:\n                    ans = ss - ff\n                else:\n                    ans = min(ans, ss - ff)\n                if len(nex_smal) == 0:\n                    ff += 1\n                else:\n                    ff = nex_smal[0]\n                    nex_smal.popleft()\n                continue\n        else:\n            ff = ss\n            if a[ff - 1] >= d:\n                ans = 1\n        if len(nex_smal) == 0:\n            nex_smal.append(ss)\n        else:\n            while pref[nex_smal[-1]] > pref[ss]:\n                nex_smal.pop()\n                if len(nex_smal) == 0:\n                    break\n            nex_smal.append(ss)\n        ss += 1\n    print(ans)", "T = int(input())\nfor test in range(T):\n    (n, d) = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    if d <= 0:\n        if max(A) >= d:\n            print(1)\n        else:\n            print(-1)\n        continue\n    if A[0] >= d:\n        print(1)\n        continue\n    tot = A[0]\n    hist = [(0, 0), (A[0], 1)]\n    best = float('inf')\n    ind = -1\n    for i in range(1, n):\n        while hist and tot <= hist[-1][0]:\n            hist.pop()\n        hist.append((tot, i))\n        tot += A[i]\n        if ind > len(hist):\n            ind = len(hist) - 2\n        thresh = tot - d\n        while ind < len(hist) - 1 and hist[ind + 1][0] <= thresh:\n            ind += 1\n        while ind > -1 and hist[ind][0] > thresh:\n            ind -= 1\n        if ind > -1 and best > i - hist[ind][-1] + 1:\n            best = i - hist[ind][-1] + 1\n    if best < float('inf'):\n        print(best)\n    else:\n        print(-1)"]