["from time import time\nfrom bisect import bisect_left as bl, bisect_right as br\n(n, m) = map(int, input().split())\nc = []\n(x, y) = ([], [])\nfor i in range(n):\n    loc = list(map(int, input().split()))\n    x.append(loc[0])\n    y.append(loc[1])\nx.sort()\ny.sort()\n(sx, sy) = ([], [])\n(sx1, sy1) = (0, 0)\nfor i in range(n):\n    sx1 += x[i]\n    sy1 += y[i]\n    sx.append(sx1)\n    sy.append(sy1)\n(lx, ly) = (0, 0)\ns = list(input())\nd = {}\nfor s1 in s:\n    dist = 0\n    move = {'R': (lx + 1, ly), 'L': (lx - 1, ly), 'U': (lx, ly + 1), 'D': (lx, ly - 1)}\n    (lx, ly) = move[s1]\n    try:\n        dist = d[str([lx, ly])]\n    except:\n        (ix, iy) = (bl(x, lx), bl(y, ly))\n        xs1 = sx[ix - 1] if ix - 1 >= 0 else 0\n        ys1 = sy[iy - 1] if iy - 1 >= 0 else 0\n        (xs2, ys2) = (sx[-1] - xs1, sy[-1] - ys1)\n        dist = ix * lx - xs1 + (xs2 - (n - ix) * lx) + (iy * ly - ys1) + (ys2 - (n - iy) * ly)\n        d[str([lx, ly])] = dist\n    print(dist)", "from time import time\nfrom bisect import bisect_left as bl, bisect_right as br\n(n, m) = map(int, input().split())\nc = []\n(x, y) = ([], [])\nfor i in range(n):\n    loc = list(map(int, input().split()))\n    x.append(loc[0])\n    y.append(loc[1])\nx.sort()\ny.sort()\n(sx, sy) = ([], [])\n(sx1, sy1) = (0, 0)\nfor i in range(n):\n    sx1 += x[i]\n    sy1 += y[i]\n    sx.append(sx1)\n    sy.append(sy1)\n(lx, ly) = (0, 0)\ns = list(input())\nd = {}\nfor s1 in s:\n    dist = 0\n    move = {'R': (lx + 1, ly), 'L': (lx - 1, ly), 'U': (lx, ly + 1), 'D': (lx, ly - 1)}\n    (lx, ly) = move[s1]\n    try:\n        dist = d[str([lx, ly])]\n    except:\n        (ix, iy) = (bl(x, lx), bl(y, ly))\n        xs1 = sx[ix - 1] if ix - 1 >= 0 else 0\n        ys1 = sy[iy - 1] if iy - 1 >= 0 else 0\n        (xs2, ys2) = (sx[-1] - xs1, sy[-1] - ys1)\n        dist = ix * lx - xs1 + (xs2 - (n - ix) * lx) + (iy * ly - ys1) + (ys2 - (n - iy) * ly)\n        d[str([lx, ly])] = dist\n    print(dist)"]