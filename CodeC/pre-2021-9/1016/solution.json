["for _ in range(int(input())):\n    (p, m, k) = map(int, input().split())\n    arr_k = list(map(int, input().split()))[:k]\n    total_l = p * m * (p + 1) * (m + 1) // 4\n    total = 0\n    for i in range(k):\n        a = arr_k[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        total += x * y * (p - x + 1) * (m - y + 1)\n    res = total / total_l\n    print(f'{res:.10f}')", "for _ in range(int(input())):\n    (p, m, k) = map(int, input().split())\n    arr_k = list(map(int, input().split()))[:k]\n    total_l = p * m * (p + 1) * (m + 1) // 4\n    total = 0\n    for i in range(k):\n        a = arr_k[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        total += x * y * (p - x + 1) * (m - y + 1)\n    res = total / total_l\n    print(f'{res:.10f}')", "for _ in range(int(input())):\n    (p, m, k) = map(int, input().split())\n    arr_k = list(map(int, input().split()))[:k]\n    total_l = p * m * (p + 1) * (m + 1) // 4\n    total = 0\n    for i in range(k):\n        a = arr_k[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        total += x * y * (p - x + 1) * (m - y + 1)\n    res = total / total_l\n    print(f'{res:.10f}')", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    (l, ans) = (list(map(int, input().split())), 0)\n    for i in l:\n        r = i // m + 1\n        c = i % m\n        if c == 0:\n            c = m\n            r -= 1\n        ans += r * (n + 1 - r) * c * (m + 1 - c)\n    ans /= (n + 1) * (m + 1) * n * m // 4\n    print(ans)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    (l, ans) = (list(map(int, input().split())), 0)\n    for i in l:\n        r = i // m + 1\n        c = i % m\n        if c == 0:\n            c = m\n            r -= 1\n        ans += r * (n + 1 - r) * c * (m + 1 - c)\n    ans /= (n + 1) * (m + 1) * n * m // 4\n    print(ans)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    (l, ans) = (list(map(int, input().split())), 0)\n    for i in l:\n        r = i // m + 1\n        c = i % m\n        if c == 0:\n            c = m\n            r -= 1\n        ans += r * (n + 1 - r) * c * (m + 1 - c)\n    ans /= (n + 1) * (m + 1) * n * m // 4\n    print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr_k = list(map(int, input().split()))[:k]\n    total_p = n * m * (n + 1) * (m + 1) // 4\n    total = 0\n    for i in range(k):\n        a = arr_k[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        total += x * y * (n - x + 1) * (m - y + 1)\n    res = total / total_p\n    print(f'{res:.10f}')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr_k = list(map(int, input().split()))[:k]\n    total_p = n * m * (n + 1) * (m + 1) // 4\n    total = 0\n    for i in range(k):\n        a = arr_k[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        total += x * y * (n - x + 1) * (m - y + 1)\n    res = total / total_p\n    print(f'{res:.10f}')", "for i in range(int(input())):\n    (n, m, k) = [int(i) for i in input().split()]\n    ans = 0\n    l = [int(i) for i in input().split()]\n    for i in l:\n        r = i // m + 1\n        c = i % m\n        if c == 0:\n            c = m\n            r -= 1\n        ans += r * (n + 1 - r) * c * (m + 1 - c)\n    ans /= (n + 1) * (m + 1) * n * m // 4\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    tot = 0\n    l = list(map(int, input().split()))\n    for i in range(0, k):\n        a = l[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        tot = tot + x * y * (n - x + 1) * (m - y + 1)\n    print('{0:.10f}'.format(tot / (m * (m + 1) * n * (n + 1) // 4)))\n    t = t - 1", "import math\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    total = 0\n    for v in a:\n        if v % m == 0:\n            y = m\n        else:\n            y = v % m\n        x = math.ceil(v / m)\n        total += x * (n + 1 - x) * y * (m + 1 - y)\n    ans = total / (n * (n + 1) * m * (m + 1) // 4)\n    print('%.11f' % ans)", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    tot = 0\n    l = list(map(int, input().split()))\n    for i in range(0, k):\n        a = l[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        tot = tot + x * y * (n - x + 1) * (m - y + 1)\n    print('{0:.10f}'.format(tot / (m * (m + 1) * n * (n + 1) // 4)))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    tot = 0\n    l = list(map(int, input().split()))\n    for i in range(0, k):\n        a = l[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        tot = tot + x * y * (n - x + 1) * (m - y + 1)\n    print('{0:.10f}'.format(tot / (m * (m + 1) * n * (n + 1) // 4)))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    tot = 0\n    l = list(map(int, input().split()))\n    for i in range(0, k):\n        a = l[i]\n        x = (a - 1) // m + 1\n        y = (a - 1) % m + 1\n        tot = tot + x * y * (n - x + 1) * (m - y + 1)\n    print('{0:.10f}'.format(tot / (m * (m + 1) * n * (n + 1) // 4)))\n    t = t - 1", "import sys\n\ndef readInt():\n    return int(input())\n\ndef readList():\n    return list(map(int, input().strip().split(' ')))\n\ndef readStr():\n    return input().strip()\n\ndef makeMatrix(a, b, value):\n    z = [value] * a\n    for i in range(a):\n        z[i] = [value] * b\n    return z\ntc = readInt()\nwhile tc:\n    tc -= 1\n    (y, x, k) = readList()\n    total = (x + 1) * x * (y + 1) * y // 4\n    s = 0\n    a = readList()\n    for c in a:\n        c -= 1\n        xc = c % x\n        yc = c // x\n        s += (xc + 1) * (yc + 1) * (x - xc) * (y - yc)\n    print('%.12f' % (s / total))", "t = int(input())\nwhile t is not 0:\n    (n, m, k) = map(int, input().split())\n    prob = 0.0\n    p = list(map(int, input().split()))\n    kp = n * (n + 1) * m * (m + 1) / 4.0\n    for i in range(0, k):\n        if p[i] % m != 0:\n            c = p[i] % m\n            r = p[i] // m + 1\n        if p[i] % m == 0:\n            c = m\n            r = p[i] // m\n        prob = prob + c * r * (n - r + 1) * (m - c + 1)\n    prob = prob / kp\n    print(prob)\n    t = t - 1", "t = int(input())\nwhile t is not 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    prob = 0.0\n    p = list(map(int, input().split()))\n    kp = n * (n + 1) * m * (m + 1) / 4.0\n    for i in range(0, k):\n        if p[i] % m != 0:\n            c = p[i] % m\n            r = p[i] // m + 1\n        if p[i] % m == 0:\n            c = m\n            r = p[i] // m\n        prob = prob + c * r * (n - r + 1) * (m - c + 1)\n    prob = prob / kp\n    print(prob)", "t = int(input())\nwhile t is not 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    prob = 0.0\n    p = list(map(int, input().split()))\n    kp = n * (n + 1) * m * (m + 1) / 4.0\n    for i in range(0, k):\n        if p[i] % m != 0:\n            c = p[i] % m\n            r = p[i] // m + 1\n        if p[i] % m == 0:\n            c = m\n            r = p[i] // m\n        prob = prob + c * r * (n - r + 1) * (m - c + 1)\n    prob = prob / kp\n    print(prob)", "T = int(input())\nwhile T > 0:\n    (N, M, K) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    denom = (N + 1) * N * (M + 1) * M / 4\n    sum = 0\n    for i in range(K):\n        r = (arr[i] - 1) // M + 1\n        c = (arr[i] - 1) % M + 1\n        b_count = (M + 1) * M * (N - r + 1) * (N - r) / 4\n        r_count = (M - c + 1) * (M - c) * (N + 1) * N / 4\n        b_right = (M - c + 1) * (M - c) * (N - r + 1) * (N - r) / 4\n        t_count = (M + 1) * M * r * (r - 1) / 4\n        t_right = (M - c + 1) * (M - c) * r * (r - 1) / 4\n        l_count = c * (c - 1) * (N + 1) * N / 4\n        t_left = c * (c - 1) * r * (r - 1) / 4\n        b_left = c * (c - 1) * (N - r + 1) * (N - r) / 4\n        inv = b_count + r_count - b_right + t_count - t_right + l_count - t_left - b_left\n        actual = denom - inv\n        sum += actual\n    print(sum / denom)\n    T -= 1", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, m, k) = [int(x) for x in input().split()]\n    count = 0\n    tot = (n + 1) * n * (m + 1) * m / 4\n    i = 0\n    a = [int(x) for x in input().split()]\n    while i < k:\n        if a[i] % m == 0:\n            r = int(a[i] / m) - 1\n            c = m - 1\n        else:\n            r = int(a[i] / m)\n            c = a[i] % m - 1\n        count = count + (r + 1) * (n - r) * (c + 1) * (m - c)\n        i = i + 1\n    result = float(count) / float(tot)\n    print(result)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    v = 0\n    for x in map(int, input().split()):\n        (i, j) = divmod(x - 1, m)\n        v += (i + 1) * (j + 1) * (n - i) * (m - j)\n    print(4 * v / (n * (n + 1) * m * (m + 1)))", "T = int(input())\nfor i in range(0, T):\n    (N, M, K) = map(int, input().split())\n    Ar = N * (N + 1) / 2\n    Ark = M * (M + 1) / 2\n    Val = 0\n    Sa = Ar * Ark\n    aaa = []\n    aaa = list(map(int, input().split()))\n    for j in range(0, K):\n        aa = int(aaa[j])\n        X = aa % M\n        Y = int(aa / M)\n        if aa % M == 0:\n            X = 1\n        else:\n            Y = Y + 1\n        X2 = M + 1 - X\n        Y2 = N + 1 - Y\n        Zita = X2 * X * Y2 * Y\n        Val = Val + Zita\n    Xa = Val / Sa\n    print(Xa)", "from math import ceil\n\ndef convert(x, n, m):\n    return (ceil(x / m), x % m if x % m != 0 else m)\n\ndef calculate_rectangles(x, y):\n    if x <= 0 or y <= 0:\n        return 0\n    return x * y * (x + 1) * (y + 1) // 4\n\ndef count_rectangles(x, y, m, n, total_rectangles):\n    return total_rectangles - (calculate_rectangles(x - 1, m) + calculate_rectangles(m - y, n) + calculate_rectangles(m, n - x) + calculate_rectangles(y - 1, n) - calculate_rectangles(x - 1, m - y) - calculate_rectangles(x - 1, y - 1) - calculate_rectangles(n - x, m - y) - calculate_rectangles(n - x, y - 1))\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    temp_arr = list(map(int, input().split()))\n    arr = [convert(x, n, m) for x in temp_arr]\n    total_rectangles = calculate_rectangles(n, m)\n    usable_rectangles = 0\n    for i in range(k):\n        usable_rectangles += count_rectangles(arr[i][1], arr[i][0], n, m, total_rectangles)\n    print(usable_rectangles / total_rectangles)", "t = int(input())\nwhile t > 0:\n    (n, m, k) = [int(x) for x in input().split()]\n    total = (n + 1) * n * (m + 1) * m / 4\n    ans = 0\n    tmp = [int(x) for x in input().split()]\n    for i in range(k):\n        ni = int(tmp[i] / m)\n        mj = int(tmp[i] % m)\n        if mj == 0:\n            mj = m\n        else:\n            ni = ni + 1\n        ans = ans + ni * (n - ni + 1) * mj * (m - mj + 1)\n    print(ans / total)\n    t = t - 1", "t = int(input())\nfor i in range(0, t):\n    a = input().split()\n    N = int(a[0])\n    M = int(a[1])\n    K = int(a[2])\n    total = int(N * (N + 1) * M * (M + 1) / 4)\n    A = input().split()\n    ans = 0\n    for j in range(0, K):\n        c = int(A[j]) - 1\n        left = c % M + 1\n        right = M + 1 - left\n        up = int(c / M) + 1\n        down = N + 1 - up\n        down /= total\n        ans += left * right * up * down\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, M, K) = [int(s) for s in input().split()]\n    s = 0\n    eff = N * (N + 1) * M * (M + 1) / 4\n    hh = [int(s) for s in input().split()]\n    for h in hh:\n        h -= 1\n        (i, j) = (h // M, h % M)\n        s += (M - j) * (N - i) * (i + 1) * (j + 1)\n    print(s / eff)", "def rect(x, y):\n    return x * (x + 1) * y * (y + 1) // 4\nT = int(input())\nwhile T != 0:\n    T -= 1\n    (N, M, K) = (int(n) for n in input().split(' '))\n    a = [int(n) - 1 for n in input().split(' ')]\n    r = 0\n    for n in a:\n        i = n // M + 1\n        j = n % M + 1\n        r += rect(N, M) - rect(i - 1, M) - rect(N, M - j) - rect(N - i, M) - rect(N, j - 1) + rect(i - 1, j - 1) + rect(i - 1, M - j) + rect(N - i, M - j) + rect(N - i, j - 1)\n    print('%.8f' % (r / rect(N, M)))", "t = int(input())\nfor z in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    total = n * (n + 1) / 2 * m * (m + 1) / 2\n    for x in l:\n        x -= 1\n        row = x // m\n        col = x % m\n        ans += (n - row) * (m - col) * (row + 1) * (col + 1) / total\n    print(ans)", "t = int(input())\nwhile t:\n    num = input().split()\n    n = int(num[0])\n    m = int(num[1])\n    k = int(num[2])\n    inp = input().split()\n    ans = 0\n    i = 0\n    while k:\n        z = int(inp[i])\n        z = z - 1\n        qwe = z // m\n        qwe = qwe + 1\n        asd = z % m\n        asd = asd + 1\n        ans += 4.0 * (qwe * (n - qwe + 1)) * (asd * (m - asd + 1)) / (n * (n + 1) * (m * (m + 1)))\n        k = k - 1\n        i = i + 1\n    print('{0:.25f}'.format(ans))\n    t = t - 1", "def f(N, M, x, y):\n    return (N + 1 - x) * (M + 1 - y) * x * y\n\ndef tot(N, M):\n    return M * N * (M + 1) * (N + 1) // 4\nfor T in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    H = map(int, input().split())\n    n = 0\n    for h in H:\n        (x, y) = (1 + (h - 1) // M, 1 + (h - 1) % M)\n        n = n + f(N, M, x, y)\n    print(n / tot(N, M))", "t = int(input())\nfor curent_test in range(t):\n    nmk = input().split(' ')\n    n = int(nmk[0])\n    m = int(nmk[1])\n    k = int(nmk[2])\n    all_count = (n * (n - 1) // 2 + n) * (m * (m - 1) // 2 + m)\n    sum = 0\n    a = input().split(' ')\n    for i in range(k):\n        val = int(a[i])\n        x = (val + m - 1) // m\n        y = val % m\n        if y == 0:\n            y = m\n        sum += x * y * ((m - y + 1) * (n - x + 1))\n    print(sum / all_count)", "import random\nimport sys\nimport os\nt = int(input())\nwhile t > 0:\n    read = lambda : map(int, input().split())\n    (n, m, k) = read()\n    ind = list(map(int, input().split()))\n    ans = 0\n    for d in range(0, k):\n        ind[d] = ind[d] - 1\n        i = ind[d] // m\n        j = ind[d] % m\n        ans = ans + (n - i) * (m - j) * (i + 1) * (j + 1)\n    print('%.10f' % (4 * ans / (n * m * (n + 1) * (m + 1))))\n    t = t - 1", "t = int(input())\n\ndef calc(n, m):\n    return int((n * (n - 1) / 2 + n) * (m * (m - 1) / 2 + m))\nfor r in range(0, t):\n    st = input()\n    inp = st.split()\n    n = int(inp[0])\n    m = int(inp[1])\n    k = int(inp[2])\n    num = 0\n    den = calc(n, m)\n    st = input()\n    inp = st.split()\n    for i in range(0, k):\n        x = int(inp[i])\n        p = int((x - 1) / m)\n        p = p + 1\n        q = (x - 1) % m\n        q = q + 1\n        val = p * (n - p + 1) * q * (m - q + 1)\n        num = num + val\n    print(num / den)", "import math\nfrom decimal import *\nt = int(input())\nwhile t:\n    k = 0\n    t = t - 1\n    (n, m, l) = map(int, input().split())\n    b = list(map(float, input().split()))\n    for i in range(0, l):\n        r = b[i] % m\n        if b[i] % m == 0:\n            s = b[i] / m\n            r = m\n        else:\n            s = int(b[i] / m) + 1\n        k = k + r * (m - r + 1) * (s * (n - s + 1))\n    print(format(Decimal(k) / Decimal(m * (m + 1) / 2 * (n * (n + 1) / 2)), '.6f'))", "tc = int(input())\nwhile tc > 0:\n    (n, m, k) = map(int, input().split())\n    hearts = map(int, input().split())\n    res = 0\n    for i in hearts:\n        y = 1 + (i - 1) % m\n        x = 1 + (i - 1) // m\n        res += x * y * (n - x + 1) * (m - y + 1)\n    res *= 4.0\n    res /= m * n * (m + 1) * (n + 1)\n    print(res)\n    tc -= 1", "def get(x, y):\n    if x <= 0 or y <= 0:\n        return 0\n    return x * (x + 1) * y * (y + 1) // 4\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    L = list(map(int, input().split()))\n    for v in L:\n        v -= 1\n        x = v // m + 1\n        y = v % m + 1\n        tmp = get(x - 1, m) + get(n - x, m) + get(n, y - 1) + get(n, m - y)\n        tmp -= get(x - 1, y - 1) + get(x - 1, m - y) + get(n - x, y - 1) + get(n - x, m - y)\n        ans += (get(n, m) - tmp) * 1.0 / get(n, m)\n    print('%.13f' % ans)", "def count(h, w):\n    return h * w * (h + 1) * (w + 1) / 4\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    ks = map(int, input().split())\n    cnt_all = count(n, m)\n    sum = 0\n    for a in ks:\n        (x, y) = ((a - 1) // m, (a - 1) % m)\n        cur = cnt_all\n        cur -= count(x, m) + count(n - 1 - x, m) + count(n, y) + count(n, m - 1 - y)\n        cur += count(x, y) + count(n - 1 - x, y) + count(x, m - 1 - y) + count(n - 1 - x, m - 1 - y)\n        sum += cur\n    print(sum / cnt_all)", "test = int(input())\nfor i in range(test):\n    testInput = input()\n    (n, m, k) = (int(x) for x in testInput.split())\n    ans = 0\n    val = 0\n    div = 0\n    row = 0\n    col = 0\n    xxx = 0\n    y = 0\n    rohit = 1\n    testInput = input()\n    array = [int(x) for x in testInput.split()]\n    for heart in array:\n        row = int((heart - 1) / m + 1)\n        col = int((heart - 1) % m + 1)\n        val = val + 4 * row * col * (n + 1 - row) * (m + 1 - col)\n    div = m * n * (m + 1) * (n + 1)\n    ans = val / div\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    inp = [int(x) for x in input().split()]\n    n = inp[0]\n    m = inp[1]\n    k = inp[2]\n    num = 0\n    inp = [int(x) for x in input().split()]\n    for h in inp:\n        h -= 1\n        i = h // m\n        j = h % m\n        num += (i + 1) * (j + 1) * (n - i) * (m - j)\n    den = n * m * (n + 1) * (m + 1) // 4\n    print(num / den)", "z = input()\nz = int(z)\nfor i in range(z):\n    ipt = input()\n    (n, m, k) = (int(x) for x in ipt.split())\n    tot = 0\n    add = 0\n    ipt = input()\n    ark = [int(x) for x in ipt.split()]\n    for qr in ark:\n        i = (qr - 1) // m + 1\n        j = (qr - 1) % m + 1\n        add = 4 * (i * (n + 1 - i) / (n * (n + 1))) * (j * (m + 1 - j) / (m * (m + 1)))\n        tot += add\n    print(tot)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    su = 0\n    sol = 0\n    c = map(int, input().split())\n    for a in c:\n        p = int((a - 1) / m + 1)\n        q = (a - 1) % m + 1\n        sol = 4 * (p * (n + 1 - p) / (m * (m + 1))) * (q * (m + 1 - q) / (n * (n + 1)))\n        su += sol\n    print('%.8f' % su)", "def get_xy(k, m):\n    x = (k - 1) // m + 1\n    y = k % m\n    if y == 0:\n        y = m\n    return (x, y)\n\ndef nc2(n):\n    return n * (n - 1) // 2\nt = int(input())\nfor test in range(t):\n    (n, m, k) = map(int, input().split())\n    hearts = list(map(int, input().split()))\n    ans = 0\n    for i in hearts:\n        (x, y) = get_xy(i, m)\n        term = x * y * (n - x + 1) * (m - y + 1)\n        ans = ans + term\n    total_rec = nc2(n + 1) * nc2(m + 1)\n    ans = ans / total_rec\n    print('%.20f' % ans)", "import math\nt = int(input())\nwhile t > 0:\n    s = input().split()\n    n = int(s[0])\n    m = int(s[1])\n    k = int(s[2])\n    l = [int(x) for x in input().split()]\n    sum = 0.0\n    a = n * (n + 1) / 2\n    b = m * (m + 1) / 2\n    ab = a * b\n    for x in range(k):\n        row = float(math.ceil(float(l[x]) / float(m)))\n        col = float(l[x] % m)\n        if col == 0:\n            col = m\n        sum += row * (n - row + 1) * col * (m - col + 1)\n    ans = sum / ab\n    print(ans)\n    t -= 1"]