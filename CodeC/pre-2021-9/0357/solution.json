["for i in range(int(input())):\n    num = int(input())\n    k1 = input()\n    k = k1.split()\n    attack = list(map(int, k))\n    k2 = input()\n    k = k2.split()\n    defense = list(map(int, k))\n    emp = []\n    req = len(defense)\n    for j in range(req):\n        if defense[j] > attack[(j + 1) % req] + attack[(j - 1) % req]:\n            emp.append(defense[j])\n    if len(emp) == 0:\n        print(-1)\n    else:\n        print(max(emp))", "for _ in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    attack.insert(n, attack[0])\n    attack.insert(0, attack[n - 1])\n    defence = list(map(int, input().split()))\n    defence.insert(n, defence[0])\n    defence.insert(0, defence[n - 1])\n    a = []\n    for i in range(1, n + 1):\n        if defence[i] > attack[i - 1] + attack[i + 1]:\n            a.append(defence[i])\n    if a == []:\n        print(-1)\n    else:\n        print(max(a))", "for i in range(int(input())):\n    num = int(input())\n    k1 = input()\n    k = k1.split()\n    attack = list(map(int, k))\n    k2 = input()\n    k = k2.split()\n    defense = list(map(int, k))\n    emp = []\n    req = len(defense)\n    for j in range(req):\n        if defense[j] > attack[(j + 1) % req] + attack[(j - 1) % req]:\n            emp.append(defense[j])\n    if len(emp) == 0:\n        print(-1)\n    else:\n        print(max(emp))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    l = [-1 for i in range(n)]\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[i + 1] + a[n - 1]:\n                l[i] = d[i]\n            else:\n                l[i] = -1\n        if i == n - 1:\n            if d[i] > a[n - 2] + a[0]:\n                l[i] = d[i]\n            else:\n                l[i] = -1\n        elif d[i] > a[i + 1] + a[i - 1]:\n            l[i] = d[i]\n        else:\n            l[i] = -1\n    if max(l) == -1:\n        print(-1)\n    else:\n        print(max(l))\n    t -= 1", "t = int(input())\nfor ohefhs in range(t):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defense = list(map(int, input().split()))\n    sur = [-1] * n\n    xn = defense[n - 1] - (attack[n - 2] + attack[0])\n    if xn > 0:\n        sur[n - 1] = defense[n - 1]\n    for i in range(n - 1):\n        x = defense[i] - (attack[i - 1] + attack[i + 1])\n        if x > 0:\n            sur[i] = defense[i]\n    ans = max(sur)\n    print(ans)", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    a = deque([int(x) for x in input().split()])\n    b = deque([int(i) for i in input().split()])\n    a.appendleft(a[-1])\n    b.appendleft(b[-1])\n    a.append(a[1])\n    b.append(b[1])\n    d = -1\n    for i in range(1, n + 1):\n        if b[i] > a[i - 1] + a[i + 1] and b[i] > d:\n            d = b[i]\n    print(d)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans = -1\n    for i in range(1, n - 1):\n        if d[i] > a[i - 1] + a[i + 1]:\n            ans = max(ans, d[i])\n    if d[0] > a[1] + a[-1]:\n        ans = max(ans, d[0])\n    if d[n - 1] > a[n - 2] + a[0]:\n        ans = max(ans, d[n - 1])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    atk = [int(a) for a in input().split()]\n    defense = [int(a) for a in input().split()]\n    nums = list()\n    for j in range(2, n):\n        ko = atk[j - 2] + atk[j]\n        if ko < defense[j - 1]:\n            nums.append(defense[j - 1])\n    if atk[-2] + atk[0] < defense[-1]:\n        nums.append(defense[-1])\n    if atk[-1] + atk[1] < defense[0]:\n        nums.append(defense[0])\n    if len(nums) == 0:\n        print(-1)\n    else:\n        nums.sort()\n        print(nums[-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    s = -1\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[1] + a[-1]:\n                if d[i] > s:\n                    s = d[i]\n        elif i == n - 1:\n            if d[i] > a[0] + a[-2]:\n                if d[i] > s:\n                    s = d[i]\n        elif d[i] > a[i - 1] + a[i + 1]:\n            if d[i] > s:\n                s = d[i]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defence = list(map(int, input().split()))\n    ans = -1\n    for i in range(n):\n        if defence[i] > attack[(i - 1) % n] + attack[(i + 1) % n]:\n            ans = max(ans, defence[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    att = [int(i) for i in input().split()]\n    den = [int(i) for i in input().split()]\n    li = []\n    for i in range(n):\n        if i == n - 1:\n            if den[i] > att[0] + att[i - 1]:\n                li.append(den[i])\n            break\n        if den[i] > att[i + 1] + att[i - 1]:\n            li.append(den[i])\n    if len(li) == 0:\n        print(-1)\n    else:\n        print(max(li))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    best = -1\n    for i in range(n):\n        if i == n - 1:\n            if d[-1] > a[-2] + a[0] and best < d[-1]:\n                best = d[-1]\n        elif d[i] > a[i - 1] + a[i + 1] and best < d[i]:\n            best = d[i]\n    print(best)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    attack = [int(x) for x in input().split()]\n    defence = [int(x) for x in input().split()]\n    best = -1\n    for j in range(n):\n        if j == n - 1:\n            if defence[j] > attack[j - 1] + attack[0] and best < defence[j]:\n                best = defence[j]\n        elif defence[j] > attack[j - 1] + attack[j + 1] and best < defence[j]:\n            best = defence[j]\n    print(best)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    t = []\n    for i in range(n - 2):\n        t.append(a[i] + a[i + 2])\n    t.append(a[-2] + a[0])\n    t.append(a[-1] + a[1])\n    p = d.pop(0)\n    d.append(p)\n    found = -1\n    for j in range(n):\n        if d[j] > t[j]:\n            if d[j] > found:\n                found = d[j]\n    print(found)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split(' ')\n    d = input().split(' ')\n    d1 = []\n    l = []\n    for j in range(n):\n        (a[j], d[j]) = (int(a[j]), int(d[j]))\n    if d[0] <= a[1] + a[n - 1]:\n        l.append(0)\n    for j in range(1, n - 1):\n        if d[j] <= a[j - 1] + a[j + 1]:\n            l.append(j)\n    if d[n - 1] <= a[0] + a[n - 2]:\n        l.append(n - 1)\n    if len(l) == n:\n        print(-1)\n    else:\n        for j in range(n):\n            if j not in l:\n                d1.append(d[j])\n        print(max(d1))", "def survive_or_not(n, a, d):\n    max_defense = 0\n    for i in range(n):\n        left = (i - 1 + n) % n\n        right = (i + 1) % n\n        if a[left] + a[right] < d[i]:\n            max_defense = max(max_defense, d[i])\n    return max_defense if max_defense > 0 else -1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    print(survive_or_not(n, a, d))", "def survive_or_not(n, a, d):\n    max_defense = 0\n    for i in range(n):\n        left = (i - 1 + n) % n\n        right = (i + 1) % n\n        if a[left] + a[right] < d[i]:\n            max_defense = max(max_defense, d[i])\n    return max_defense if max_defense > 0 else -1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    print(survive_or_not(n, a, d))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    f = [-1]\n    if m[0] > l[1] + l[n - 1]:\n        f.append(m[0])\n    if m[n - 1] > l[0] + l[n - 2]:\n        f.append(m[n - 1])\n    for i in range(1, n - 1):\n        if m[i] > l[i - 1] + l[i + 1]:\n            f.append(m[i])\n    print(max(f))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    f = [-1]\n    if d[0] > a[1] + a[n - 1]:\n        f.append(d[0])\n    if d[n - 1] > a[0] + a[n - 2]:\n        f.append(d[n - 1])\n    for i in range(1, n - 1):\n        if d[i] > a[i - 1] + a[i + 1]:\n            f.append(d[i])\n    print(max(f))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = []\n    for j in range(n):\n        if j == 0:\n            if d[j] > a[-1] + a[1]:\n                m.append(d[j])\n        elif j == n - 1:\n            if d[j] > a[0] + a[n - 2]:\n                m.append(d[j])\n        elif d[j] > a[j - 1] + a[j + 1]:\n            m.append(d[j])\n    if len(m) == 0:\n        print(-1)\n    else:\n        print(max(m))", "for t in range(int(input())):\n    input()\n    ai = [int(i) for i in input().split()]\n    di = [int(i) for i in input().split()]\n    mac = []\n    if ai[1] + ai[-1] < di[0]:\n        mac.append(di[0])\n    for i in range(1, len(ai) - 1):\n        if di[i] > ai[i - 1] + ai[i + 1]:\n            mac.append(di[i])\n    if ai[-2] + ai[0] < di[-1]:\n        mac.append(di[-1])\n    print(-1 if len(mac) == 0 else max(mac))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = []\n    for i in range(1, n - 1):\n        if d[i] > a[i + 1] + a[i - 1]:\n            b.append(d[i])\n    if d[0] > a[1] + a[n - 1]:\n        b.append(d[0])\n    if d[n - 1] > a[0] + a[n - 2]:\n        b.append(d[n - 1])\n    if len(b) == 0:\n        print(-1)\n    else:\n        print(max(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = []\n    for i in range(1, n - 1):\n        if d[i] > a[i + 1] + a[i - 1]:\n            b.append(d[i])\n    if d[0] > a[1] + a[n - 1]:\n        b.append(d[0])\n    if d[n - 1] > a[0] + a[n - 2]:\n        b.append(d[n - 1])\n    if len(b) == 0:\n        print(-1)\n    else:\n        print(max(b))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans = 0\n    if d[0] > a[1] + a[n - 1]:\n        ans = d[0]\n    for i in range(1, n - 1):\n        if d[i] > a[i + 1] + a[i - 1]:\n            if d[i] > ans:\n                ans = d[i]\n    if d[n - 1] > a[n - 2] + a[0]:\n        if d[n - 1] > ans:\n            ans = d[n - 1]\n    if ans != 0:\n        print(ans)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defence = list(map(int, input().split()))\n    bdf = -1\n    for i in range(n):\n        if i == n - 1:\n            if defence[i] > attack[i - 1] + attack[0] and defence[i] > bdf:\n                bdf = defence[i]\n        elif defence[i] > attack[i + 1] + attack[i - 1] and defence[i] > bdf:\n            bdf = defence[i]\n    print(bdf)", "for i in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defence = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        if i == n - 1:\n            if defence[i] > attack[i - 1] + attack[0]:\n                arr.append(defence[i])\n        elif defence[i] > attack[i + 1] + attack[i - 1]:\n            arr.append(defence[i])\n    if len(arr) == 0:\n        print(-1)\n    else:\n        print(max(arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    defence = list()\n    for j in range(0, n):\n        if j == 0:\n            first = a[-1]\n            second = a[j + 1]\n        elif j == n - 1:\n            second = a[0]\n            first = a[j - 1]\n        else:\n            second = a[j + 1]\n            first = a[j - 1]\n        if d[j] - first - second > 0:\n            defence.append(d[j])\n    if len(defence) == 0:\n        print('-1')\n    else:\n        print(max(defence))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans = [-1]\n    if d[0] > a[1] + a[n - 1]:\n        ans.append(d[0])\n    if d[n - 1] > a[0] + a[n - 2]:\n        ans.append(d[n - 1])\n    for i in range(1, n - 1):\n        if d[i] > a[i - 1] + a[i + 1]:\n            ans.append(d[i])\n    print(max(ans))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = -1\n    for i in range(n - 1):\n        c = a[i - 1] + a[i + 1]\n        if c < d[i] > m:\n            m = d[i]\n    c = a[n - 2] + a[0]\n    if c < d[n - 1] > m:\n        m = d[n - 1]\n    print(m)", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = -1\n    for i in range(n - 1):\n        c = a[i - 1] + a[i + 1]\n        if c < d[i] > m:\n            m = d[i]\n    c = a[n - 2] + a[0]\n    if c < d[n - 1] > m:\n        m = d[n - 1]\n    print(m)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    unique = []\n    if A[-1] + A[1] < D[0]:\n        unique.append(D[0])\n    if A[-2] + A[0] < D[-1]:\n        unique.append(D[-1])\n    i = 0\n    while i < N - 1:\n        if A[i - 1] + A[i + 1] < D[i]:\n            unique.append(D[i])\n        i = i + 1\n    if len(unique) == 0:\n        print(-1)\n    else:\n        print(max(unique))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = list(map(int, input().split(' ')))\n    c = -1\n    for i in range(0, n):\n        if i == 0:\n            if d[i] > a[n - 1] + a[1]:\n                c = max(c, d[i])\n        elif i == n - 1:\n            if d[i] > a[i - 1] + a[0]:\n                c = max(c, d[i])\n        elif d[i] > a[i - 1] + a[i + 1]:\n            c = max(c, d[i])\n    print(c)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    maxi = 0\n    for i in range(N):\n        if i == N - 1:\n            if D[i] - (A[i - 1] + A[0]) > 0:\n                maxi = max(maxi, D[i])\n            else:\n                continue\n        elif D[i] - (A[i - 1] + A[i + 1]) > 0:\n            maxi = max(maxi, D[i])\n        else:\n            continue\n    if maxi == 0:\n        print('-1')\n    else:\n        print(maxi)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = -1\n    for i in range(n):\n        if i != n - 1:\n            if d[i] > a[i - 1] + a[i + 1] and d[i] > m:\n                m = d[i]\n        elif d[i] > a[i - 1] + a[0] and d[i] > m:\n            m = d[i]\n    print(m)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = -1\n    for i in range(n):\n        if i != n - 1:\n            if d[i] > a[i - 1] + a[i + 1] and d[i] > m:\n                m = d[i]\n        elif d[i] > a[i - 1] + a[0] and d[i] > m:\n            m = d[i]\n    print(m)", "T = int(input())\nfor X in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    for k in range(N):\n        if D[k - 1] > A[k - 2] + A[k]:\n            D[k - 1] = D[k - 1]\n        else:\n            D[k - 1] = 0\n    if max(D) == 0:\n        print(-1)\n    else:\n        print(max(D))", "T = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans = -1\n    if a[-1] + a[1] < d[0]:\n        ans = d[0]\n    if a[-2] + a[0] < d[-1] and d[-1] > ans:\n        ans = d[-1]\n    for i in range(1, n - 1):\n        if a[i - 1] + a[i + 1] < d[i]:\n            if d[i] > ans:\n                ans = d[i]\n    print(ans)", "for _ in range(int(input())):\n    f = []\n    m = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    for i in range(1, n - 1):\n        if a[i - 1] + a[i + 1] < d[i]:\n            f.append(d[i])\n    if a[1] + a[n - 1] < d[0]:\n        f.append(d[0])\n    if a[0] + a[n - 2] < d[n - 1]:\n        f.append(d[n - 1])\n    if len(f) == 0:\n        print(-1)\n    else:\n        print(max(f))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = -1\n    for j in range(n):\n        if j == 0:\n            if a[-1] + a[j + 1] < b[j]:\n                m = b[j]\n        elif j == n - 1:\n            if a[j - 1] + a[0] < b[j]:\n                if b[j] > m:\n                    m = b[j]\n        elif a[j - 1] + a[j + 1] < b[j]:\n            if b[j] > m:\n                m = b[j]\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    attec = list(map(int, input().split()))\n    protec = list(map(int, input().split()))\n    shield = -1\n    for j in range(n):\n        if j == 0:\n            netAttack = attec[1] + attec[n - 1]\n        elif j == n - 1:\n            netAttack = attec[0] + attec[n - 2]\n        else:\n            netAttack = attec[j - 1] + attec[j + 1]\n        if protec[j] > netAttack:\n            if shield < protec[j]:\n                shield = protec[j]\n    print(shield)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    s = -1\n    for i in range(n):\n        if d[i] > a[(i + 1) % n] + a[(i - 1) % n]:\n            if d[i] > s:\n                s = d[i]\n    print(s)\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    ans = -1\n    while max(d) != 0:\n        i = d.index(max(d))\n        if i == n - 1:\n            if a[i - 1] + a[0] < max(d):\n                ans = max(d)\n                break\n            else:\n                d[i] = 0\n        elif a[i - 1] + a[i + 1] < max(d):\n            ans = max(d)\n            break\n        else:\n            d[i] = 0\n    print(ans)", "times = int(input())\nfor t in range(times):\n    n = int(input())\n    att = list(map(int, input().split()))\n    den = list(map(int, input().split()))\n    lis = []\n    for i in range(n):\n        if att[(i - 1) % n] + att[(i + 1) % n] >= den[i]:\n            continue\n        else:\n            lis.append(den[i])\n    if len(lis) == 0:\n        print(-1)\n    else:\n        print(max(lis))", "for i in range(0, int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defense = list(map(int, input().split()))\n    w = []\n    for j in range(0, len(defense)):\n        if j == 0 and defense[j] > attack[n - 1] + attack[1]:\n            w.append(defense[j])\n        elif j == n - 1 and defense[j] > attack[n - 2] + attack[0]:\n            w.append(defense[j])\n        elif (j != 0 and j != n - 1) and defense[j] > attack[j + 1] + attack[j - 1]:\n            w.append(defense[j])\n    if len(w) == 0:\n        print(-1)\n    else:\n        print(max(w))", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    N = get_int()\n    A = get_mint()\n    D = get_mint()\n    A = [A[-1]] + A + [A[0]]\n    D = [D[-1]] + D + [D[0]]\n    max_def = -1\n    for i in range(1, len(A) - 1):\n        if D[i] > A[i + 1] + A[i - 1] and max_def < D[i]:\n            max_def = D[i]\n    print(max_def)", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    N = get_int()\n    A = get_mint()\n    D = get_mint()\n    A = [A[-1]] + A + [A[0]]\n    D = [D[-1]] + D + [D[0]]\n    alive = []\n    max_def = -1\n    for i in range(1, len(A) - 1):\n        if D[i] > A[i + 1] + A[i - 1]:\n            max_def = max(max_def, D[i])\n    print(max_def)", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    N = get_int()\n    A = get_mint()\n    D = get_mint()\n    A = [A[-1]] + A + [A[0]]\n    D = [D[-1]] + D + [D[0]]\n    alive = []\n    for i in range(1, len(A) - 1):\n        if D[i] > A[i + 1] + A[i - 1]:\n            alive.append(i)\n    if len(alive) == 0:\n        print(-1)\n    elif len(alive) == 1:\n        print(D[alive[0]])\n    else:\n        print(max([D[soldier] for soldier in alive]))", "t = int(input())\nl = []\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    l.clear()\n    for i in range(n):\n        if i == 0:\n            if a[n - 1] + a[1] < d[i]:\n                l.append(d[i])\n        elif i == n - 1:\n            if a[n - 2] + a[0] < d[i]:\n                l.append(d[i])\n        elif a[i - 1] + a[i + 1] < d[i]:\n            l.append(d[i])\n    if len(l) == 0:\n        print(-1)\n    else:\n        print(max(l))", "for n in range(int(input())):\n    useless = input()\n    attackl = list(map(int, input().split()))\n    defensel = list(map(int, input().split()))\n    final = -1\n    for i in range(1, len(attackl) - 1):\n        if defensel[i] > attackl[i - 1] + attackl[i + 1] and defensel[i] > final:\n            final = defensel[i]\n    if defensel[0] > attackl[1] + attackl[-1] and defensel[0] > final:\n        final = defensel[0]\n    if defensel[-1] > attackl[-2] + attackl[0] and defensel[-1] > final:\n        final = defensel[-1]\n    print(final)", "for i in range(int(input())):\n    N = int(input())\n    Attack = list(map(int, input().split()))\n    Defence = list(map(int, input().split()))\n    max = -1\n    for i in range(N - 1):\n        if Attack[i - 1] + Attack[i + 1] < Defence[i]:\n            if Defence[i] > max:\n                max = Defence[i]\n    if Attack[-2] + Attack[0] < Defence[-1] and Defence[-1] > max:\n        max = Defence[-1]\n    if max == -1:\n        print('-1')\n    else:\n        print(max)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    left = 0\n    right = 0\n    b = 0\n    for i in range(n):\n        if i == 0:\n            left = a[n - 1]\n        else:\n            left = a[i - 1]\n        if i == n - 1:\n            right = a[0]\n        else:\n            right = a[i + 1]\n        if d[i] > left + right and d[i] > b:\n            b = d[i]\n    if b > 0:\n        print(b)\n    else:\n        print(-1)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    r = 0\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[-1] + a[1] and r < d[i]:\n                r = d[i]\n        elif i == n - 1:\n            if d[i] > a[i - 1] + a[0] and r < d[i]:\n                r = d[i]\n        elif d[i] > a[i - 1] + a[i + 1] and r < d[i]:\n            r = d[i]\n    if r == 0:\n        print(-1)\n    else:\n        print(r)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    r = 0\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[-1] + a[1] and r < d[i]:\n                r = d[i]\n        elif i == n - 1:\n            if d[i] > a[i - 1] + a[0] and r < d[i]:\n                r = d[i]\n        elif d[i] > a[i - 1] + a[i + 1] and r < d[i]:\n            r = d[i]\n    if r == 0:\n        print(-1)\n    else:\n        print(r)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    r = 0\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[-1] + a[1] and r < d[i]:\n                r = d[i]\n        elif i == n - 1:\n            if d[i] > a[i - 1] + a[0] and r < d[i]:\n                r = d[i]\n        elif d[i] > a[i - 1] + a[i + 1] and r < d[i]:\n            r = d[i]\n    if r == 0:\n        print(-1)\n    else:\n        print(r)", "def solution():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = list(map(int, input().split(' ')))\n    srt = sorted(range(n), key=d.__getitem__, reverse=1)\n    ans = -1\n    for e in srt:\n        defnc = d[e]\n        l = a[n - 1] if e == 0 else a[e - 1]\n        r = a[0] if e == n - 1 else a[e + 1]\n        if defnc > l + r:\n            ans = defnc\n            break\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solution()", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    bd = 0\n    for i in range(N):\n        if i == 0:\n            if d[i] > a[N - 1] + a[1] and d[i] > bd:\n                bd = d[i]\n        elif i == N - 1:\n            if d[i] > a[N - 2] + a[0] and d[i] > bd:\n                bd = d[i]\n        elif d[i] > a[i + 1] + a[i - 1] and d[i] > bd:\n            bd = d[i]\n    if bd == 0:\n        print('-1')\n    else:\n        print(bd)", "for _ in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().split()))\n    defence = list(map(int, input().split()))\n    survivorsdef = [-1]\n    if attack[1] < defence[0] and attack[n - 1] < defence[0] and (attack[1] + attack[n - 1] < defence[0]):\n        survivorsdef.append(defence[0])\n    if attack[n - 2] < defence[n - 1] and attack[0] < defence[n - 1] and (attack[0] + attack[n - 2] < defence[n - 1]):\n        survivorsdef.append(defence[n - 1])\n    for i in range(1, n - 1):\n        if attack[i - 1] < defence[i] and attack[i + 1] < defence[i] and (attack[i - 1] + attack[i + 1] < defence[i]):\n            survivorsdef.append(defence[i])\n    print(max(survivorsdef))", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    while True:\n        m = d.index(max(d))\n        if not d[m]:\n            print(-1)\n            break\n        elif d[m] > a[m - 1] + a[(m + 1) % N]:\n            print(d[m])\n            break\n        else:\n            d[m] = 0", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = d.copy()\n    b.sort()\n    b = b[::-1]\n    c = 'NO'\n    while len(b) != 0 and c == 'NO':\n        e = d.index(b[0])\n        if e == 0:\n            if a[e + 1] + a[len(a) - 1] < b[0]:\n                c = 'YES'\n            else:\n                d[e] = 0\n                b.remove(b[0])\n        elif e == len(d) - 1:\n            if a[e - 1] + a[0] < b[0]:\n                c = 'YES'\n            else:\n                d[e] = 0\n                b.remove(b[0])\n        elif a[e - 1] + a[e + 1] < b[0]:\n            c = 'YES'\n        else:\n            d[e] = 0\n            b.remove(b[0])\n    if len(b) != 0:\n        print(b[0])\n    else:\n        print(-1)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = d.copy()\n    b.sort()\n    b = b[::-1]\n    c = 'NO'\n    while len(b) != 0 and c == 'NO':\n        e = d.index(b[0])\n        if e == 0:\n            if a[e + 1] + a[len(a) - 1] < b[0]:\n                c = 'YES'\n            else:\n                d[e] = 0\n                b.remove(b[0])\n        elif e == len(d) - 1:\n            if a[e - 1] + a[0] < b[0]:\n                c = 'YES'\n            else:\n                d[e] = 0\n                b.remove(b[0])\n        elif a[e - 1] + a[e + 1] < b[0]:\n            c = 'YES'\n        else:\n            d[e] = 0\n            b.remove(b[0])\n    if len(b) != 0:\n        print(b[0])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    x = -1\n    maxi = -1\n    for i in range(n):\n        if i == 0:\n            tmp = [i + 1, n - 1]\n        elif i == n - 1:\n            tmp = [i - 1, 0]\n        else:\n            tmp = [i - 1, i + 1]\n        if d[i] > a[tmp[0]] + a[tmp[1]]:\n            maxi = max(maxi, d[i])\n    print(maxi)", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    a = input().split()\n    d = input().split()\n    arr = []\n    drr = []\n    for x in a:\n        arr.append(int(x))\n    for y in d:\n        drr.append(int(y))\n    alive = []\n    for z in range(0, int(n)):\n        if z == 0:\n            if arr[int(n) - 1] + arr[z + 1] < drr[z]:\n                alive.append(drr[z])\n        elif z < int(n) - 1:\n            if arr[z - 1] + arr[z + 1] < drr[z]:\n                alive.append(drr[z])\n        elif arr[z - 1] + arr[0] < drr[z]:\n            alive.append(drr[z])\n    if len(alive) > 0:\n        print(max(alive))\n    else:\n        print(-1)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    max_shield = -1\n    for i in range(n):\n        if a[i] + a[(i + 2) % n] < b[(i + 1) % n] and b[(i + 1) % n] > max_shield:\n            max_shield = b[(i + 1) % n]\n    print(max_shield)", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    list1 = []\n    for i in range(len(d)):\n        if a[i - 1] + a[(i + 1) % len(a)] < d[i]:\n            list1.append(d[i])\n    if len(list1) == 0:\n        print(-1)\n    else:\n        print(max(list1))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))[:n]\n    d = list(map(int, input().split(' ')))[:n]\n    arr = [0] * n\n    for i in range(n):\n        if i == 0 and d[i] > a[1] + a[n - 1]:\n            arr[i] = d[i]\n        elif i == n - 1 and d[i] > a[0] + a[n - 2]:\n            arr[i] = d[i]\n        elif i != 0 and i != n - 1:\n            if d[i] > a[i - 1] + a[i + 1]:\n                arr[i] = d[i]\n    if max(arr) == 0:\n        print(-1)\n    else:\n        print(max(arr))", "for T in range(int(input())):\n    lent = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    m = 0\n    for i in range(lent - 1):\n        if d[i] > a[i - 1] + a[i + 1]:\n            if d[i] > m:\n                m = d[i]\n    if d[lent - 1] > a[lent - 2] + a[0]:\n        if d[lent - 1] > m:\n            m = d[lent - 1]\n    if m != 0:\n        print(m)\n    else:\n        print(-1)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    a = [a[-1]] + a + [a[0]]\n    alive = []\n    for i in range(n):\n        if d[i] > a[i] + a[i + 2]:\n            alive.append(d[i])\n    if len(alive) == 0:\n        print(-1)\n    else:\n        print(max(alive))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    a = [a[-1]] + a + [a[0]]\n    alive = []\n    for i in range(n):\n        if d[i] > a[i] + a[i + 2]:\n            alive.append(d[i])\n    if len(alive) == 0:\n        print(-1)\n    else:\n        print(max(alive))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    max = 0\n    f = 0\n    for i in range(0, n):\n        if i == 0:\n            sum = l[n - 1] + l[1]\n        elif i == n - 1:\n            sum = l[0] + l[i - 1]\n        else:\n            sum = l[i - 1] + l[i + 1]\n        if sum < m[i] and max < m[i]:\n            max = m[i]\n            f = 1\n    if f == 1:\n        print(max)\n    else:\n        print(-1)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    att_arr = list(map(int, input().split()))\n    def_arr = list(map(int, input().split()))\n    ans = -1\n    for j in range(length):\n        before = j - 1\n        after = j + 1\n        if after == length:\n            after = 0\n        if def_arr[j] > att_arr[before] + att_arr[after] and def_arr[j] > ans:\n            ans = def_arr[j]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = len(b)\n    for x in range(c):\n        if x == c - 1:\n            d = 0\n        else:\n            d = x + 1\n        if b[x] <= a[x - 1] + a[d]:\n            b[x] = 0\n    print(-1 if all((v == 0 for v in b)) else max(b))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    x = -1\n    for i in range(n - 1):\n        if l2[i] > l1[i - 1] + l1[i + 1] and l2[i] > x:\n            x = l2[i]\n    if l2[n - 1] > l1[n - 2] + l1[0] and l2[n - 1] > x:\n        x = l2[n - 1]\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    x = -1\n    for i in range(0, n - 1):\n        if l2[i] > l1[i - 1] + l1[i + 1] and l2[i] > x:\n            x = l2[i]\n    if l2[n - 1] > l1[n - 2] + l1[0] and l2[n - 1] > x:\n        x = l2[n - 1]\n    print(x)", "for _ in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))[:x]\n    b = list(map(int, input().split()))[:x]\n    l = []\n    if a[x - 1] + a[1] < b[0]:\n        l.append(b[0])\n    if a[x - 2] + a[0] < b[x - 1]:\n        l.append(b[x - 1])\n    for i in range(1, x - 1):\n        if a[i - 1] + a[i + 1] < b[i]:\n            l.append(b[i])\n    if len(l) == 0:\n        print(-1)\n    else:\n        print(max(l))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        if i == n - 1:\n            if d[i] > a[i - 1] + a[0]:\n                ans.append(d[i])\n            break\n        if d[i] > a[i - 1] + a[i + 1]:\n            ans.append(d[i])\n    if len(ans) > 0:\n        print(max(ans))\n    else:\n        print(-1)", "T = int(input())\nfor index in range(T):\n    N = int(input())\n    dataA = list(map(int, input().split()))\n    dataD = list(map(int, input().split()))\n    ls_D = []\n    for i in range(1, N - 1):\n        if dataA[i - 1] + dataA[i + 1] < dataD[i]:\n            ls_D.append(dataD[i])\n    if dataA[N - 1] + dataA[1] < dataD[0]:\n        ls_D.append(dataD[0])\n    if dataA[N - 2] + dataA[0] < dataD[N - 1]:\n        ls_D.append(dataD[N - 1])\n    if len(ls_D) > 0:\n        print(max(ls_D))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(x) for x in input().split()]\n    val = -1\n    for i in range(n):\n        if i == 0:\n            if b[i] <= a[i + 1] or b[i] <= a[-1] or b[i] <= a[i + 1] + a[-1]:\n                continue\n            else:\n                val = max(val, b[i])\n        elif i == n - 1:\n            if b[i] <= a[0] or b[i] <= a[i - 1] or b[i] <= a[0] + a[i - 1]:\n                continue\n            else:\n                val = max(val, b[i])\n        elif b[i] <= a[i + 1] or b[i] <= a[i - 1] or b[i] <= a[i + 1] + a[i - 1]:\n            continue\n        else:\n            val = max(val, b[i])\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    r = []\n    a = list((int(i) for i in input().split()))\n    s = list((int(i) for i in input().split()))\n    for j in range(n - 1):\n        if s[j] > a[j - 1] + a[j + 1]:\n            r.append(s[j])\n    if s[n - 1] > a[n - 2] + a[0]:\n        r.append(s[n - 1])\n    if len(r) != 0:\n        print(max(r))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    sur = []\n    lat = a[0]\n    lat2 = a[-2]\n    if lat + lat2 < d[-1]:\n        sur.append(d[-1])\n    for i in range(-1, len(a) - 2):\n        de = d[i + 1]\n        at = a[i]\n        at2 = a[i + 2]\n        if at + at2 < de:\n            sur.append(de)\n    if sur:\n        print(max(sur))\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    sur = []\n    lat = a[0]\n    lat2 = a[-2]\n    if lat + lat2 < d[-1]:\n        sur.append(d[-1])\n    for i in range(-1, len(a) - 2):\n        de = d[i + 1]\n        at = a[i]\n        at2 = a[i + 2]\n        if at + at2 < de:\n            sur.append(de)\n    if sur:\n        print(max(sur))\n    else:\n        print('-1')", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    att_arr = list(map(int, input().split()))\n    def_arr = list(map(int, input().split()))\n    ans = -1\n    for j in range(length):\n        before = j - 1\n        after = j + 1\n        if after == length:\n            after = 0\n        if def_arr[j] > att_arr[before] + att_arr[after] and def_arr[j] > ans:\n            ans = def_arr[j]\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    att_arr = list(map(int, input().split()))\n    def_arr = list(map(int, input().split()))\n    ans = -1\n    for j in range(length):\n        before = j - 1\n        after = j + 1\n        if after == length:\n            after = 0\n        if def_arr[j] > att_arr[before] + att_arr[after] and def_arr[j] > ans:\n            ans = def_arr[j]\n    print(ans)", "def take_second(elem):\n    return elem[2]\n\ndef getAdjacentSoldierData(identity):\n    leftData = []\n    rightData = []\n    if identity == 0:\n        leftData = soldiers[-1]\n        rightData = soldiers[1]\n    elif identity == soldierCount - 1:\n        leftData = soldiers[-2]\n        rightData = soldiers[0]\n    else:\n        leftData = soldiers[identity - 1]\n        rightData = soldiers[identity + 1]\n    return [leftData, rightData]\nfor i in range(int(input())):\n    soldierCount = int(input())\n    soldier = []\n    soldiers = []\n    winningSoldierDef = []\n    atk = [int(x) for x in input().split()]\n    defense = [int(x) for x in input().split()]\n    for i in range(soldierCount):\n        soldiers.append([i, atk[i], defense[i]])\n    soldiersSorted = sorted(soldiers, key=take_second)\n    for i in soldiersSorted:\n        currSoldier = i\n        left = getAdjacentSoldierData(i[0])[0]\n        right = getAdjacentSoldierData(i[0])[1]\n        if currSoldier[2] > left[1] + right[1]:\n            winningSoldierDef.append(currSoldier[2])\n    if winningSoldierDef != []:\n        print(max(winningSoldierDef))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    res = []\n    atk = [int(i) for i in input().split()]\n    shld = [int(i) for i in input().split()]\n    for k in range(n - 1):\n        if shld[k] > atk[k - 1] + atk[k + 1]:\n            res.append(shld[k])\n    if shld[n - 1] > atk[n - 2] + atk[0]:\n        res.append(shld[n - 1])\n    if len(res) != 0:\n        print(max(res))\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    res = []\n    atk = [int(i) for i in input().split()]\n    shld = [int(i) for i in input().split()]\n    for k in range(n - 1):\n        if shld[k] > atk[k - 1] + atk[k + 1]:\n            res.append(shld[k])\n    if shld[n - 1] > atk[n - 2] + atk[0]:\n        res.append(shld[n - 1])\n    if len(res) != 0:\n        print(max(res))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = list(map(int, input().split(' ')))\n    s = -1\n    c = 0\n    while c < n:\n        if c == n - 1:\n            if d[c] > a[c - 1] + a[0] and s < d[c]:\n                s = d[c]\n        elif d[c] > a[c - 1] + a[c + 1] and s < d[c]:\n            s = d[c]\n        c += 1\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    alive = 0\n    ans = []\n    for i in range(n):\n        if i == 0:\n            if a[i + 1] + a[n - i - 1] < d[i]:\n                alive += 1\n                ans.append(d[i])\n        elif i == n - 1:\n            if a[i - 1] + a[0] < d[i]:\n                alive += 1\n                ans.append(d[i])\n        elif a[i + 1] + a[i - 1] < d[i]:\n            alive += 1\n            ans.append(d[i])\n    if alive > 0:\n        print(max(ans))\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    de = []\n    for i in range(len(a)):\n        if i == 0:\n            if b[0] > a[-1] + a[1]:\n                de.append(b[i])\n        elif i == len(a) - 1:\n            if b[-1] > a[-2] + a[0]:\n                de.append(b[i])\n        elif b[i] > a[i - 1] + a[i + 1]:\n            de.append(b[i])\n    if len(de) == 0:\n        print(-1)\n    else:\n        print(max(de))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    c = []\n    if a[-1] + a[1] < d[0]:\n        c.append(d[0])\n    if a[0] + a[-2] < d[-1]:\n        c.append(d[-1])\n    for j in range(1, n - 1):\n        if a[j - 1] + a[j + 1] < d[j]:\n            c.append(d[j])\n    if len(c) != 0:\n        print(max(c))\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    attack = list(map(int, input().strip().split()))\n    defense = list(map(int, input().strip().split()))\n    defval = list()\n    for i in range(n):\n        if i < n - 1 and attack[i - 1] + attack[i + 1] < defense[i]:\n            defval.append(defense[i])\n        elif i == n - 1 and attack[0] + attack[n - 2] < defense[n - 1]:\n            defval.append(defense[n - 1])\n    if defval != []:\n        print(max(defval))\n    else:\n        print(-1)", "T = int(input())\nb = []\nc = 0\nfor i in range(T):\n    n = int(input())\n    a = [int(j) for j in str(input()).split(' ')]\n    d = [int(j) for j in str(input()).split(' ')]\n    j = 0\n    m = -1\n    x = 0\n    while j < n:\n        if j == 0:\n            if (d[j] > a[n - 1] and d[j] > a[j + 1]) and d[j] > a[n - 1] + a[j + 1]:\n                if d[j] > m:\n                    m = d[j]\n                    x = j\n        elif j == n - 1:\n            if (d[j] > a[j - 1] and d[j] > a[0]) and d[j] > a[j - 1] + a[0]:\n                if d[j] > m:\n                    m = d[j]\n                    x = j\n        elif (d[j] > a[j - 1] and d[j] > a[j + 1]) and d[j] > a[j - 1] + a[j + 1]:\n            if d[j] > m:\n                m = d[j]\n                x = j\n        j = j + 1\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    l = []\n    for j in range(1, n - 1):\n        if d[j] > a[j - 1] + a[j + 1]:\n            l.append(d[j])\n    if d[n - 1] > a[n - 2] + a[0]:\n        l.append(d[n - 1])\n    if d[0] > a[1] + a[n - 1]:\n        l.append(d[0])\n    if len(l) < 1:\n        print(-1)\n    else:\n        print(max(l))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    s = -1\n    for i in range(n):\n        if i == 0:\n            if d[i] > a[1] + a[-1]:\n                if d[i] > s:\n                    s = d[i]\n        elif i == n - 1:\n            if d[i] > a[0] + a[-2]:\n                if d[i] > s:\n                    s = d[i]\n        elif d[i] > a[i - 1] + a[i + 1]:\n            if d[i] > s:\n                s = d[i]\n    print(s)", "n = int(input())\nfor i in range(n):\n    N = int(input())\n    attack = list(map(int, input().split(' ')))\n    defense = list(map(int, input().split(' ')))\n    i = 0\n    survivors = []\n    while i < N:\n        if i == 0:\n            if attack[N - 1] + attack[1] < defense[0]:\n                survivors += [defense[0]]\n            i += 1\n        elif i == N - 1:\n            if attack[0] + attack[N - 2] < defense[N - 1]:\n                survivors += [defense[N - 1]]\n            i += 1\n        else:\n            if attack[i - 1] + attack[i + 1] < defense[i]:\n                survivors += [defense[i]]\n            i += 1\n    if survivors == []:\n        print(-1)\n    else:\n        print(max(survivors))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    a.insert(0, a[n - 1])\n    d.insert(0, d[n - 1])\n    a.insert(n + 1, a[1])\n    d.insert(n + 1, d[1])\n    ans = -1\n    for j in range(1, n + 1):\n        if d[j] > a[j - 1] + a[j + 1]:\n            if d[j] > ans:\n                ans = d[j]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = [int(x) for x in input().split()]\n    l2 = [int(y) for y in input().split()]\n    k = -1\n    for i in range(n):\n        if i == 0:\n            if l2[i] > l1[1] + l1[-1]:\n                if l2[i] > k:\n                    k = l2[i]\n        elif i == n - 1:\n            if l2[i] > l1[0] + l1[n - 2]:\n                if l2[i] > k:\n                    k = l2[i]\n        elif l2[i] > l1[i + 1] + l1[i - 1]:\n            if l2[i] > k:\n                k = l2[i]\n    print(k)", "n = int(input())\nfor i in range(0, n):\n    k = int(input())\n    a = input().split()\n    d = input().split()\n    att = []\n    defe = []\n    r = []\n    for i in a:\n        att.append(int(i))\n    for i in d:\n        defe.append(int(i))\n    for i in range(0, k):\n        if i == 0:\n            if defe[0] > att[k - 1] + att[1]:\n                r.append(defe[0])\n        elif i == k - 1:\n            if defe[k - 1] > att[0] + att[k - 2]:\n                r.append(defe[k - 1])\n        elif defe[i] > att[i - 1] + att[i + 1]:\n            r.append(defe[i])\n    if len(r) >= 1:\n        print(max(r))\n    else:\n        print('-1')", "n = int(input())\nfor i in range(0, n):\n    k = int(input())\n    a = input().split()\n    d = input().split()\n    att = []\n    defe = []\n    r = []\n    for i in a:\n        att.append(int(i))\n    for i in d:\n        defe.append(int(i))\n    for i in range(0, k):\n        if i == 0:\n            if defe[0] > att[k - 1] + att[1]:\n                r.append(defe[0])\n        elif i == k - 1:\n            if defe[k - 1] > att[0] + att[k - 2]:\n                r.append(defe[k - 1])\n        elif defe[i] > att[i - 1] + att[i + 1]:\n            r.append(defe[i])\n    if len(r) >= 1:\n        print(max(r))\n    else:\n        print('-1')"]