["import math\n\ndef Divisiors(n):\n    ans = 0\n    v = int(math.sqrt(n))\n    for i in range(1, v + 1):\n        k = n // i\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if k != i:\n                if '4' in str(k) or '7' in str(k):\n                    ans += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(Divisiors(n))", "import math\n\ndef Divisiors(n):\n    ans = 0\n    v = int(math.sqrt(n))\n    for i in range(1, v + 1):\n        k = n // i\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if k != i:\n                if '4' in str(k) or '7' in str(k):\n                    ans += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(Divisiors(n))", "import math\n\ndef Divisiors(n):\n    ans = 0\n    v = int(math.sqrt(n))\n    for i in range(1, v + 1):\n        k = n // i\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if k != i:\n                if '4' in str(k) or '7' in str(k):\n                    ans += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(Divisiors(n))", "import math\n\ndef Divisiors(n):\n    ans = 0\n    v = int(math.sqrt(n))\n    for i in range(1, v + 1):\n        k = n // i\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if k != i:\n                if '4' in str(k) or '7' in str(k):\n                    ans += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(Divisiors(n))", "import math\n\ndef Divisiors(n):\n    ans = 0\n    v = int(math.sqrt(n))\n    for i in range(1, v + 1):\n        k = n // i\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if k != i:\n                if '4' in str(k) or '7' in str(k):\n                    ans += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(Divisiors(n))", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    ans = 0\n    for j in range(1, math.ceil(num ** 0.5) + 1):\n        if num % j == 0:\n            string = str(j)\n            if '4' in string or '7' in string:\n                ans += 1\n            other = num // j\n            if other != j:\n                string = str(other)\n                if '4' in string or '7' in string:\n                    ans += 1\n    print(ans)", "import math\n\ndef solve(n):\n    s = '7'\n    f = '4'\n    res = 0\n    for i in range(1, math.ceil(n ** 0.5) + 1):\n        if n % i == 0:\n            if s in str(i) or f in str(i):\n                res += 1\n            y = n // i\n            if i != y:\n                if s in str(y) or f in str(y):\n                    res += 1\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    ans = 0\n    for j in range(1, math.ceil(num ** 0.5) + 1):\n        if num % j == 0:\n            string = str(j)\n            if '4' in string or '7' in string:\n                ans += 1\n            other = num // j\n            if other != j:\n                string = str(other)\n                if '4' in string or '7' in string:\n                    ans += 1\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    ans = 0\n    for j in range(1, math.ceil(num ** 0.5) + 1):\n        if num % j == 0:\n            string = str(j)\n            if '4' in string or '7' in string:\n                ans += 1\n            other = num // j\n            if other != j:\n                string = str(other)\n                if '4' in string or '7' in string:\n                    ans += 1\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    ans = 0\n    for j in range(1, math.ceil(num ** 0.5) + 1):\n        if num % j == 0:\n            string = str(j)\n            if '4' in string or '7' in string:\n                ans += 1\n            other = num // j\n            if other != j:\n                string = str(other)\n                if '4' in string or '7' in string:\n                    ans += 1\n    print(ans)", "from math import *\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                b = str(i)\n                if '4' in b or '7' in b:\n                    count += 1\n            else:\n                c = str(n // i)\n                if '4' in c or '7' in c:\n                    count += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    count += 1\n    print(count)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    count = 0\n    j = 1\n    while j * j <= n:\n        if n % j == 0:\n            if '4' in str(j) or '7' in str(j):\n                count += 1\n            if ('4' in str(n // j) or '7' in str(n // j)) and n != j * j:\n                count += 1\n        j += 1\n    print(count)", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    count = 0\n    n = int(input())\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if '7' in str(i) or '4' in str(i):\n                count += 1\n            if ('7' in str(n // i) or '4' in str(n // i)) and i != n // i:\n                count += 1\n    print(count)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    count = 0\n    j = 1\n    while j * j <= n:\n        if n % j == 0:\n            if '4' in str(j) or '7' in str(j):\n                count += 1\n            if ('4' in str(n // j) or '7' in str(n // j)) and n != j * j:\n                count += 1\n        j += 1\n    print(count)", "from math import *\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                b = str(i)\n                if '4' in b or '7' in b:\n                    count += 1\n            else:\n                c = str(n // i)\n                if '4' in c or '7' in c:\n                    count += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    count += 1\n    print(count)", "from math import *\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                b = str(i)\n                if '4' in b or '7' in b:\n                    count += 1\n            else:\n                c = str(n // i)\n                if '4' in c or '7' in c:\n                    count += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, int(n ** 0.5) + 1):\n        if n % j == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(j)\n            s2 += str(n // j)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    ans = set(l)\n    print(len(ans))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    l = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(i)\n            s2 += str(n // i)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    op = set(l)\n    print(len(op))", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(i)\n            s2 += str(n // i)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    op = set(l)\n    print(len(op))", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            s1 = ''\n            s2 = ''\n            s1 += str(i)\n            s2 += str(n // i)\n            if s1.find('4') != -1 or s1.find('7') != -1:\n                l.append(s1)\n            if s2.find('4') != -1 or s2.find('7') != -1:\n                l.append(s2)\n    op = set(l)\n    print(len(op))", "from functools import reduce\n\ndef factors(n):\n    return list(set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0))))\nfor _ in range(int(input())):\n    print(len([i for i in [str(i) for i in factors(int(input()))] if '4' in i or '7' in i]))", "from functools import reduce\n\ndef factors(n):\n    return list(set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0))))\nfor _ in range(int(input())):\n    n = int(input())\n    a = factors(n)\n    d = [str(i) for i in a]\n    f = []\n    for i in d:\n        if '4' in i or '7' in i:\n            f.append(i)\n    print(len(f))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            str1 = ''\n            str2 = ''\n            str1 += str(i)\n            str2 += str(n // i)\n            if str1.find('4') != -1 or str1.find('7') != -1:\n                list1.append(str1)\n            if str2.find('4') != -1 or str2.find('7') != -1:\n                list1.append(str2)\n    set1 = set(list1)\n    print(len(set1))", "for u in range(int(input())):\n    n = int(input())\n    c = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            x = i\n            y = n // i\n            if x == y:\n                if '4' in str(x) or '7' in str(x):\n                    c += 1\n            else:\n                if '4' in str(x) or '7' in str(x):\n                    c += 1\n                if '4' in str(y) or '7' in str(y):\n                    c += 1\n    print(c)", "from sys import stdin\n\ndef sin():\n    return stdin.readline()\nfor _ in range(int(input())):\n    n = int(sin())\n    c = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            a = str(i)\n            b = str(n // i)\n            if a == b:\n                if '4' in a or '7' in a:\n                    c += 1\n            else:\n                if '4' in a or '7' in a:\n                    c += 1\n                if '4' in b or '7' in b:\n                    c += 1\n    print(c)", "def over_div(x):\n    c = 0\n    for i in range(1, int(x ** 0.5) + 1):\n        if x % i == 0:\n            t_1 = x / i\n            if t_1 != i:\n                if overlucky(t_1) == True:\n                    c += 1\n            if overlucky(i) == True:\n                c += 1\n    return c\n\ndef overlucky(a):\n    a = str(a)\n    if a.count('4') >= 1 or a.count('7') >= 1:\n        return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    print(over_div(n))", "from math import *\nfor j in range(int(input())):\n    c = 0\n    n = int(input())\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                a = str(i)\n                if '4' in a or '7' in a:\n                    c += 1\n            else:\n                b = str(n // i)\n                if '4' in b or '7' in b:\n                    c += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    c += 1\n    print(c)", "from math import *\nfor j in range(int(input())):\n    c = 0\n    n = int(input())\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                a = str(i)\n                if '4' in a or '7' in a:\n                    c += 1\n            else:\n                b = str(n // i)\n                if '4' in b or '7' in b:\n                    c += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    c += 1\n    print(c)", "t = int(input())\nimport math\nwhile t > 0:\n    n = int(input())\n    c = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            s = str(i)\n            for j in s:\n                if j == '7' or j == '4':\n                    c += 1\n                    break\n            if n // i != i:\n                x = str(n // i)\n                for j in x:\n                    if j == '7' or j == '4':\n                        c += 1\n                        break\n    print(c)\n    t -= 1", "from math import *\nfor j in range(int(input())):\n    c = 0\n    n = int(input())\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                a = str(i)\n                if '4' in a or '7' in a:\n                    c += 1\n            else:\n                b = str(n // i)\n                if '4' in b or '7' in b:\n                    c += 1\n                d = str(i)\n                if '4' in d or '7' in d:\n                    c += 1\n    print(c)", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    print(count(n))", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\nT = int(input())\nfor j in range(T):\n    N = int(input())\n    print(count(N))", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\nT = int(input())\nfor j in range(T):\n    N = int(input())\n    print(count(N))", "def is_overlucky(num):\n    num = str(num)\n    for i in num:\n        if i in ['4', '7']:\n            return True\n    return False\ntestcase = int(input())\nfor z in range(testcase):\n    num = int(input())\n    count = 0\n    for i in range(1, int(num ** 0.5) + 1):\n        if num % i == 0:\n            if is_overlucky(i):\n                count = count + 1\n            complement = num / i\n            if complement != i:\n                if is_overlucky(complement):\n                    count = count + 1\n    print(count)", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\nT = int(input())\nfor j in range(T):\n    N = int(input())\n    print(count(N))", "import math\n\ndef check(x):\n    while x:\n        if x % 10 == 4 or x % 10 == 7:\n            return True\n        x = x // 10\n    return False\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    count = 0\n    a = int(math.sqrt(n))\n    for i in range(1, a + 1):\n        if n % i == 0:\n            if check(i) == True:\n                count += 1\n            if check(n / i) == True:\n                count += 1\n    if a * a == n and check(a) == True:\n        count -= 1\n    print(count)", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    N = int(input())\n    print(count(N))", "from math import sqrt\n\ndef div(n):\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            j = n / i\n            if '4' in str(i) or '7' in str(i):\n                count += 1\n            if '4' in str(j) or '7' in str(j):\n                count += 1 - (j == i)\n    return count\nt = int(input())\nwhile t:\n    n = int(input())\n    print(div(n))\n    t -= 1", "from math import sqrt\n\ndef div(n):\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            j = n / i\n            if '4' in str(i) or '7' in str(i):\n                count += 1\n            if '4' in str(j) or '7' in str(j):\n                count += 1 - (j == i)\n    return count\nt = int(input())\nwhile t:\n    n = int(input())\n    print(div(n))\n    t -= 1", "from math import sqrt\n\ndef count(N):\n    count = 0\n    for i in range(1, int(sqrt(N)) + 1):\n        if N % i == 0:\n            a = N // i\n            if a == i:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n            else:\n                if '4' in str(a) or '7' in str(a):\n                    count += 1\n                if '4' in str(i) or '7' in str(i):\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    N = int(input())\n    print(count(N))", "from math import sqrt\n\nclass Solution(object):\n\n    def __init__(self):\n        for _ in range(int(input())):\n            n = int(input())\n            ans = 0\n            for i in range(1, int(sqrt(n)) + 1):\n                if n % i == 0:\n                    if Solution.is_lucky_number(i):\n                        ans += 1\n                    y = n // i\n                    if y != i and Solution.is_lucky_number(y):\n                        ans += 1\n                pass\n            print(ans)\n    pass\n\n    @classmethod\n    def is_lucky_number(cls, i):\n        s = str(i)\n        c = s.find('4')\n        if c < 0:\n            c = s.find('7')\n        if c < 0:\n            return False\n        else:\n            return True\n        pass\n\ndef main():\n    Solution()\n    pass\nmain()", "def isOverlucky(n):\n    for c in str(n):\n        if c == '4' or c == '7':\n            return True\n    return False\n\ndef gindy(n):\n    div = set()\n    L = int(n ** 0.5) + 2\n    for i in range(1, L):\n        if n % i == 0:\n            if isOverlucky(i):\n                div.add(i)\n            if isOverlucky(n // i):\n                div.add(n // i)\n    return len(div)\nTC = int(input())\nfor _ in range(TC):\n    n = int(input())\n    print(gindy(n))", "def divisors(n):\n    r = []\n    a = int(n ** 0.5 + 1)\n    for i in range(1, a):\n        if n % i == 0:\n            r.append(i)\n            if n // i != i:\n                r.append(n // i)\n    return r\n\ndef lucky(n):\n    for i in n:\n        if i != '4' or i != '7':\n            return False\n    return True\n\ndef overlucky(n):\n    s = ''\n    for i in n:\n        if i == '4' or i == '7':\n            s += i\n    if s == '':\n        return False\n    else:\n        return True\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    count = 0\n    for i in divisors(N):\n        if lucky(str(i)):\n            count += 1\n        elif overlucky(str(i)):\n            count += 1\n    print(count)", "from math import sqrt\nfor i in range(int(input())):\n    n = int(input())\n    p = []\n    for i in range(1, int(sqrt(n) + 1)):\n        if n % i == 0:\n            p.append(str(i))\n            if n / i != i:\n                p.append(str(n // i))\n    c = 0\n    for i in p:\n        if '4' in i or '7' in i:\n            c += 1\n    print(c)", "def abc(n):\n    flag = False\n    while n > 0:\n        x = n % 10\n        if x == 4 or x == 7:\n            return True\n        n = n // 10\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(1, int(pow(n, 0.5)) + 1):\n        if n % i == 0:\n            ans += abc(i)\n            if i != n // i:\n                ans += abc(n // i)\n    print(ans)", "import math\n\ndef getdiv(N, dv):\n    for i in range(1, int(math.sqrt(N)) + 1):\n        if N % i == 0:\n            dv.append(i)\n            if int(N / i) != i:\n                dv.append(int(N / i))\n\ndef checkoverlucky(num):\n    seven = 0\n    four = 0\n    other = 0\n    num = str(num)\n    for i in num:\n        if i == '4':\n            four = 1\n        elif i == '7':\n            seven = 1\n        else:\n            other = 1\n    if four == 1 or seven == 1:\n        return 1\n    else:\n        return 0\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    dv = []\n    getdiv(N, dv)\n    c = 0\n    for num in dv:\n        if checkoverlucky(num) == 1:\n            c += 1\n    print(c)", "def check(x):\n    a = 0\n    while x:\n        if x % 10 == 4 or x % 10 == 7:\n            a += 1\n            break\n        x = x // 10\n    if a > 0:\n        return 1\n    else:\n        return 0\nfor i in range(int(input())):\n    n = int(input())\n    count = check(n)\n    s = int(n ** (1 / 2))\n    for j in range(2, s + 1):\n        if n % j == 0:\n            count += check(j)\n            count += check(n / j)\n    if n / s == s:\n        count -= check(s)\n    print(count)", "def check(x):\n    a = 0\n    while x:\n        if x % 10 == 4 or x % 10 == 7:\n            a += 1\n            break\n        x = x // 10\n    if a > 0:\n        return 1\n    else:\n        return 0\nfor i in range(int(input())):\n    n = int(input())\n    count = 0\n    for j in range(1, int(n ** (1 / 2)) + 1):\n        if n % j == 0:\n            count += check(j)\n            if j != n / j:\n                count += check(n / j)\n    print(count)", "from math import sqrt\n\ndef find_all_factors(n):\n    count = 0\n    for i in range(1, int(sqrt(n) + 1)):\n        if n % i == 0:\n            a = str(n // i)\n            b = str(i)\n            if a != b:\n                if '4' in a or '7' in a:\n                    count += 1\n                if '4' in b or '7' in b:\n                    count += 1\n            elif '4' in a or '7' in a:\n                count += 1\n    return count\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    factors = find_all_factors(n)\n    print(factors)", "from math import sqrt\nvalue = []\nfor _ in range(int(input())):\n    n = int(input())\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            res = n // i\n            if res != i:\n                if '7' in str(res) or '4' in str(res):\n                    count += 1\n            if '7' in str(i) or '4' in str(i):\n                count += 1\n    value.append(count)\nfor i in range(len(value)):\n    print(value[i])", "from math import *\nt = int(input())\nfor k in range(t):\n    count = 0\n    i = int(input())\n    p = []\n    for j in range(1, int(sqrt(i) + 1)):\n        if i % j == 0:\n            p.append(str(j))\n            if i / j != j:\n                p.append(str(i // j))\n    for i in p:\n        if '4' in i or '7' in i:\n            count += 1\n    print(count)", "from math import sqrt\n\ndef fact(n):\n    count = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            c = str(n // i)\n            k = str(i)\n            if k != c:\n                if '4' in k or '7' in k:\n                    count += 1\n                if '4' in c or '7' in c:\n                    count += 1\n            elif '4' in k or '7' in k:\n                count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = fact(n)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    coun = 0\n    for j in range(1, int(k ** 0.5) + 1):\n        if k % j == 0:\n            l = j\n            while l != 0:\n                x = l % 10\n                if x == 4 or x == 7:\n                    coun = coun + 1\n                    break\n                l = l // 10\n            l = j\n            x = k // l\n            if x != l:\n                z = x\n                while z != 0:\n                    d = z % 10\n                    if d == 4 or d == 7:\n                        coun = coun + 1\n                        break\n                    z = z // 10\n    print(coun)", "def contains47(s):\n    return '4' in s or '7' in s\nfor _ in range(int(input())):\n    n = int(input())\n    i = 1\n    ans = 0\n    while i * i <= n:\n        if n % i == 0:\n            if contains47(str(i)):\n                ans += 1\n            if i * i != n and contains47(str(n // i)):\n                ans += 1\n        i += 1\n    print(ans)", "from math import sqrt as S\n\ndef cont(n):\n    cnt = 0\n    if '4' in str(n) or '7' in str(n):\n        cnt += 1\n    for i in range(2, int(S(n)) + 1):\n        if n % i == 0:\n            if i != n // i:\n                if '4' in str(i) or '7' in str(i):\n                    cnt += 1\n                other = n // i\n                if '4' in str(other) or '7' in str(other):\n                    cnt += 1\n            elif '4' in str(i) or '7' in str(i):\n                cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    print(cont(n))", "import math\ntest_cases = int(input())\nfor _ in range(test_cases):\n    n = int(input())\n    count = 0\n    for j in range(1, int(math.sqrt(n)) + 1):\n        if n % j == 0:\n            if '4' in str(j) or '7' in str(j):\n                count = count + 1\n            if j != n / j:\n                if '4' in str(n / j) or '7' in str(n / j):\n                    count = count + 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                ans += 1\n            if i != n / i:\n                if '4' in str(n / i) or '7' in str(n / i):\n                    ans += 1\n    print(ans)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    max = int(n ** (1 / 2))\n    count = 0\n    for i in range(1, max + 1):\n        if n % i == 0:\n            if '4' in str(i):\n                count += 1\n            elif '7' in str(i):\n                count += 1\n            if i != n / i:\n                if '4' in str(n / i):\n                    count += 1\n                elif '7' in str(n / i):\n                    count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            a = str(i)\n            b = str(n // i)\n            if '4' in a or '7' in a:\n                count += 1\n            if i * i != n:\n                if '4' in b or '7' in b:\n                    count += 1\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    n2 = int(n ** 0.5)\n    ct = 0\n    for num in range(1, n2 + 1):\n        if n % num == 0 and ('4' in str(num) or '7' in str(num)):\n            ct += 1\n        if n % num == 0:\n            tmp = str(n // num)\n            if ('4' in tmp or '7' in tmp) and tmp != str(num):\n                ct += 1\n    print(ct)", "import math\n\ndef find(s):\n    return '7' in s or '4' in s\nfor _ in range(int(input())):\n    n = int(input())\n    count = 0\n    p = int(math.sqrt(n))\n    for i in range(1, p + 1):\n        if n % i == 0:\n            c = n // i\n            if c != i:\n                if find(str(c)):\n                    count += 1\n            if find(str(i)):\n                count += 1\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                count += 1\n            if ('4' in str(n // i) or '7' in str(n // i)) and i * i != n:\n                count += 1\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if '4' in str(i) or '7' in str(i):\n                count += 1\n            if ('4' in str(n // i) or '7' in str(n // i)) and i * i != n:\n                count += 1\n    print(count)", "import math\nn = int(input())\nfor i in range(n):\n    inp = int(input())\n    count = 0\n    for j in range(1, math.floor(inp ** 0.5) + 1):\n        if inp % j == 0:\n            for a in str(inp // j):\n                if a == '4' or a == '7':\n                    count += 1\n                    break\n            if inp != j * j:\n                for a in str(j):\n                    if a == '4' or a == '7':\n                        count += 1\n                        break\n    print(count)", "def fun(a):\n    arr = []\n    for i in range(1, int(a ** (1 / 2)) + 1):\n        if a % i == 0:\n            arr.append(str(i))\n            arr.append(str(int(a / i)))\n    return arr\nt = int(input())\nfor isd in range(t):\n    n = int(input())\n    a = fun(n)\n    k = 0\n    for i in set(a):\n        if '4' in i or '7' in i:\n            k += 1\n    print(k)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    count = 0\n    for j in range(1, int(pow(n, 1 / 2)) + 1):\n        if n % j == 0:\n            if '4' in str(j):\n                count += 1\n            elif '7' in str(j):\n                count += 1\n            f = n / j\n            if j != pow(n, 1 / 2):\n                if '4' in str(f):\n                    count += 1\n                elif '7' in str(f):\n                    count += 1\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    i = 1\n    while i <= n ** 0.5:\n        if n % i == 0:\n            div1 = i\n            div2 = n // i\n            x = list(str(div1))\n            y = list(str(div2))\n            if '4' in x or '7' in x:\n                ans += 1\n            if y != x and ('4' in y or '7' in y):\n                ans += 1\n        i += 1\n    print(ans)", "from functools import reduce\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\ndef isOverLucky(n):\n    s = str(n)\n    for a in s:\n        if a == '4' or a == '7':\n            return True\n    return False\n\ndef run():\n    nb = int(input())\n    nbDiv = 0\n    for x in factors(nb):\n        if isOverLucky(x):\n            nbDiv += 1\n    print(nbDiv)\nfor _ in range(int(input())):\n    run()", "from functools import reduce\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\ndef overlucky(tab):\n    s = 0\n    for i in tab:\n        if '4' in str(i) or '7' in str(i):\n            s += 1\n    return s\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    tab = factors(n)\n    print(overlucky(tab))", "import math\n\ndef Check(n):\n    while n != 0:\n        if n % 10 == 7 or n % 10 == 4:\n            return True\n        n //= 10\n    return False\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if Check(i):\n                count += 1\n            if Check(n // i):\n                count += 1\n    print(count)", "from sys import stdin, stdout\n\ndef sin():\n    return stdin.readline().rstrip()\n\ndef listInput():\n    return list(map(int, sin().split()))\n\ndef printBS(li):\n    if not li:\n        return\n    for i in range(len(li) - 1):\n        stdout.write('%d ' % li[i])\n    stdout.write('%d\\n' % li[-1])\nt = int(sin())\nfor _ in range(t):\n    n = int(sin())\n    lim = int(n ** 0.5)\n    ans = 1 if str(n).find('4') != -1 or str(n).find('7') != -1 else 0\n    for i in range(2, lim + 1):\n        if n % i == 0:\n            if str(i).find('4') != -1 or str(i).find('7') != -1:\n                ans += 1\n            j = n // i\n            if j != i and (str(j).find('4') != -1 or str(j).find('7') != -1):\n                ans += 1\n    print(ans)", "import math\n\ndef isvalid(x):\n    if '4' in set(str(x)) or '7' in set(str(x)):\n        return 1\n    return 0\nT = int(input())\nfor t in range(T):\n    x = int(input())\n    res = 0\n    for i in range(1, int(math.sqrt(x)) + 1):\n        if x % i == 0 and isvalid(i):\n            res += 1\n        if x % i == 0 and isvalid(x // i) and (i * i != x):\n            res += 1\n    print(res)", "from math import *\n\ndef check(n):\n    s = str(n)\n    if '4' in s or '7' in s:\n        return 1\n    return 0\nt = int(input())\nfor ele in range(t):\n    n = int(input())\n    j = int(sqrt(n))\n    sum = 0\n    for i in range(1, j + 1):\n        if n % i == 0:\n            sum += check(i)\n            sum += check(n // i)\n    if j * j == n and check(j):\n        sum = sum - 1\n    print(sum)", "def count_overlucky_numbers(n):\n    num_overlucky_numbers = 0\n    if contains_4_or_7(n):\n        num_overlucky_numbers += 1\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            if contains_4_or_7(i):\n                num_overlucky_numbers += 1\n            if contains_4_or_7(n / i):\n                num_overlucky_numbers += 1\n        i += 1\n    return num_overlucky_numbers\n\ndef contains_4_or_7(n):\n    while n != 0:\n        if n % 10 == 4 or n % 10 == 7:\n            return True\n        n //= 10\n    return False\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    print(count_overlucky_numbers(n))", "from math import sqrt\n\ndef vlucky(n):\n    if n == 0:\n        return False\n    if n % 10 == 4 or n % 10 == 7:\n        return True\n    return vlucky(int(n / 10))\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 1\n    temp = []\n    while i <= int(sqrt(n)):\n        if n % i == 0:\n            temp.append(i)\n            temp.append(int(n / i))\n        i += 1\n    l = len(temp)\n    i = 0\n    ans = 0\n    while i < l:\n        if vlucky(temp[i]):\n            ans += 1\n        i += 1\n    print(ans)\n    t -= 1", "def lucky_dividers(n):\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        (a, b) = (i, n // i)\n        for val in [a, b]:\n            if n % val == 0 and len(set(str(val)) & set('47')) > 0:\n                count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(lucky_dividers(n))", "import math\n\ndef is_overlucky(value):\n    value = str(value)\n    if '4' in value or '7' in value:\n        return True\n    return False\nt = int(input())\nfor z in range(t):\n    num = int(input())\n    count = 0\n    for i in range(1, int(math.sqrt(num)) + 2):\n        if num % i:\n            continue\n        if is_overlucky(i):\n            count += 1\n        if is_overlucky(num / i):\n            count += 1\n    print(count)", "def main():\n    import math\n    for T in range(int(input())):\n        N = int(input())\n        ans = 0\n        for i in range(1, int(math.sqrt(N)) + 2):\n            if N % i == 0:\n                temp = str(i)\n                temp2 = str(N // i)\n                if '4' in temp or '7' in temp:\n                    ans += 1\n                if '4' in temp2 or '7' in temp2:\n                    ans += 1\n        print(ans)\nmain()", "import sys\nimport math\nfrom time import time\nfrom itertools import permutations, combinations\nimport collections\nimport functools\nfrom fractions import gcd, Fraction\nimport string\nimport operator\nimport bisect\n\nclass timed(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __call__(self, *args):\n        t1 = time()\n        ret = self.func(*args)\n        dif_time = time() - t1\n        print('%s: returned %s in %f seconds' % (self.func.__name__, ret, dif_time))\n        return ret\n\ndef comp(f1, f2, *args):\n    t1 = time()\n    r1 = f1(*args) if f1 is not None else None\n    t2 = time()\n    r2 = f2(*args) if f2 is not None else None\n    t3 = time()\n    res = '%5s: %s in %f\\n%5s: %s in %f' % (f1.__name__ if f1 is not None else None, r1, t2 - t1, f2.__name__ if f2 is not None else None, r2, t3 - t2)\n    if r1 != r2:\n        dr = '!! DIFFERENT RESULTS !!'\n        res = dr + '\\n' + res + '\\n' + dr\n    print(res)\n\ndef factors(n):\n    gaps = [1, 2, 2, 4, 2, 4, 2, 4, 6, 2, 6]\n    (length, cycle) = (11, 3)\n    (f, fs, next) = (2, [], 0)\n    while f * f <= n:\n        while n % f == 0:\n            fs.append(f)\n            n //= f\n        f += gaps[next]\n        next += 1\n        if next == length:\n            next = cycle\n    if n > 1:\n        fs.append(n)\n    return fs\n\ndef divisors(n):\n    facts = factors(n)\n    factors_tuples = [(d, facts.count(d)) for d in set(facts)]\n    nfactors = len(factors_tuples)\n    if nfactors == 0:\n        return\n    f = [0] * nfactors\n    while True:\n        reduced = 1\n        for v in [factors_tuples[x][0] ** f[x] for x in range(nfactors)]:\n            reduced *= v\n        yield reduced\n        i = 0\n        while True:\n            f[i] += 1\n            if f[i] <= factors_tuples[i][1]:\n                break\n            f[i] = 0\n            i += 1\n            if i >= nfactors:\n                return\n\ndef alg(n):\n    res = 0\n    for d in divisors(n):\n        if any((a in str(d) for a in ['4', '7'])):\n            res += 1\n    return res\n\ndef main():\n    data = sys.stdin\n    nb = int(data.readline())\n    for icase in range(nb):\n        i = int(data.readline().strip())\n        res = alg(i)\n        print(res)\nmain()", "def chk_overlucky(N):\n    k = list(N)\n    if '4' in k or '7' in k:\n        return True\n    else:\n        return False\n\ndef find_d(n):\n    count = 0\n    root = int(n ** 0.5) + 1\n    if n == 0:\n        return 0\n    for i in range(2, root):\n        if n % i == 0:\n            if chk_overlucky(str(i)):\n                count = count + 1\n            if chk_overlucky(str(int(n / i))):\n                count = count + 1\n    if chk_overlucky(str(n)):\n        count = count + 1\n    return count\nt = int(input())\nfor i in range(t):\n    N = input()\n    print(find_d(int(N)))", "def chk_overlucky(N):\n    k = list(N)\n    if '4' in k or '7' in k:\n        return True\n    else:\n        return False\n\ndef find_d(n):\n    count = 0\n    root = int(n ** 0.5) + 1\n    if n == 0:\n        return 0\n    for i in range(2, root):\n        if n % i == 0 and chk_overlucky(str(i)):\n            count = count + 1\n        if n % i == 0 and chk_overlucky(str(int(n / i))):\n            count = count + 1\n    if chk_overlucky(str(n)):\n        count = count + 1\n    return count\nt = int(input())\nfor i in range(t):\n    N = input()\n    print(find_d(int(N)))", "import sys\nf = sys.stdin\nN = int(f.readline())\nwhile N:\n    n = int(f.readline())\n    count = 0\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            if '7' in str(i) or '4' in str(i):\n                count += 1\n            if '7' in str(n / i) or '4' in str(n / i):\n                count += 1\n        i += 1\n    print(count)\n    N -= 1", "import sys, math\n\ndef main():\n    cases = int(sys.stdin.readline())\n    for case in range(cases):\n        myCount = 0\n        number = int(sys.stdin.readline())\n        for c in str(number):\n            if c == '4' or c == '7':\n                myCount += 1\n                break\n        rt = int(math.sqrt(number))\n        for i in range(2, rt + 1):\n            if number % i == 0:\n                for c in str(i):\n                    if c == '4' or c == '7':\n                        myCount += 1\n                        break\n                for c in str(number / i):\n                    if c == '4' or c == '7':\n                        myCount += 1\n                        break\n        print(myCount)\nmain()", "def Countlist(a):\n    count = 0\n    for i in range(1, int(a ** 0.5) + 1):\n        if a % i == 0:\n            if '4' in list(str(i)) or '7' in list(str(i)):\n                count = count + 1\n            if '4' in list(str(a / i)) or '7' in list(str(a / i)):\n                count = count + 1\n        if i == a / i:\n            if '4' in list(str(i)) or '7' in list(str(i)):\n                count = count - 1\n    return count\nN = int(input().strip())\nfor i in range(N):\n    a = int(input().strip())\n    print(Countlist(a))"]