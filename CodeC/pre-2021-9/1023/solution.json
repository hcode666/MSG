["t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    count1 = 0\n    count2 = 0\n    a = [0] * n\n    b = [0] * n\n    c = input()\n    for j in range(len(c)):\n        if c[j] == 'R' and count2 % 2 == 0 or (c[j] == 'G' and count2 % 2 == 1):\n            count1 += 1\n            a[j] = 1\n            b[min(j + k - 1, n - 1)] += 1\n        count2 += a[j] - b[j]\n    print(count1)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    c = 0\n    v = 0\n    for j in range(n):\n        if p[j] == 'R' and v % 2 == 0 or (p[j] == 'G' and v % 2 == 1):\n            c += 1\n            x[j] = 1\n            y[min(j + k - 1, n - 1)] += 1\n        v += x[j] - y[j]\n    print(c)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    p = input()\n    x = [0] * n\n    y = [0] * n\n    count = v = 0\n    for i in range(n):\n        if p[i] == 'R' and v % 2 == 0 or (p[i] == 'G' and v % 2 == 1):\n            count += 1\n            x[i] = 1\n            y[min(i + k - 1, n - 1)] += 1\n        v = v + x[i] - y[i]\n    print(count)", "def repaint():\n    (n, k) = map(int, input().split())\n    s = str(input())\n    ans = 0\n    prefix = [0] * (n + 1)\n    for i in range(n):\n        j = i - 1 if i - 1 >= 0 else 0\n        prefix[i] += prefix[j]\n        if s[i] == 'R' and prefix[i] % 2 == 0:\n            ans += 1\n            prefix[i] += 1\n            right = i + k if i + k <= n else n\n            prefix[right] -= 1\n        elif s[i] == 'G' and prefix[i] % 2:\n            ans += 1\n            prefix[i] += 1\n            right = i + k if i + k <= n else n\n            prefix[right] -= 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    repaint()", "def repaintFence():\n    (n, k) = map(int, input().split())\n    s = str(input())\n    prefix = [0] * (n + 1)\n    ans = 0\n    for i in range(n):\n        j = i - 1 if i - 1 >= 0 else 0\n        prefix[i] += prefix[j]\n        if s[i] == 'R' and prefix[i] % 2 == 0:\n            ans += 1\n            prefix[i] += 1\n            right = i + k if i + k <= n else n\n            prefix[right] -= 1\n        elif s[i] == 'G' and prefix[i] % 2:\n            ans += 1\n            prefix[i] += 1\n            right = i + k if i + k <= n else n\n            prefix[right] -= 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    repaintFence()", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    s = input()\n    ls = [0] * n\n    le = [0] * n\n    count = cf = 0\n    for i in range(n):\n        if s[i] == 'R' and cf % 2 == 0 or (s[i] == 'G' and cf % 2 == 1):\n            count += 1\n            ls[i] = 1\n            le[min(i + k - 1, n - 1)] += 1\n        cf += ls[i] - le[i]\n    print(count)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    s = input()\n    ls = [0] * n\n    le = [0] * n\n    count = cf = 0\n    for i in range(n):\n        if s[i] == 'R' and cf % 2 == 0 or (s[i] == 'G' and cf % 2 == 1):\n            count += 1\n            ls[i] = 1\n            le[min(i + k - 1, n - 1)] += 1\n        cf += ls[i] - le[i]\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (ls, le) = ([0] * n, [0] * n)\n    count = cf = 0\n    for i in range(n):\n        if s[i] == 'R' and cf % 2 == 0 or (s[i] == 'G' and cf % 2 == 1):\n            ls[i] = 1\n            le[min(i + k - 1, n - 1)] += 1\n            count += 1\n        cf += ls[i] - le[i]\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (ls, le) = ([0] * n, [0] * n)\n    count = cf = 0\n    for i in range(n):\n        if s[i] == 'R' and cf % 2 == 0 or (s[i] == 'G' and cf % 2 == 1):\n            ls[i] = 1\n            le[min(i + k - 1, n - 1)] += 1\n            count += 1\n        cf += ls[i] - le[i]\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    memory = [0 for i in range(n + 2)]\n    (count, check) = (0, 0)\n    for i in range(n):\n        check += memory[i]\n        if not check % 2 and string[i] == 'G' or (check % 2 and string[i] == 'R'):\n            continue\n        check += 1\n        count += 1\n        memory[min(n, i + k)] += 1\n    print(count)", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ls = [0] * n\n    le = [0] * n\n    cf = 0\n    count = 0\n    for x in range(n):\n        if s[x] == 'R' and cf % 2 == 0 or (s[x] == 'G' and cf % 2 == 1):\n            ls[x] = 1\n            le[min(x + k - 1, n - 1)] += 1\n            count += 1\n        cf += ls[x] - le[x]\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    memory = [0 for i in range(n + 1)]\n    (count, check) = (0, 0)\n    for i in range(n):\n        check += memory[i]\n        if not check % 2 and string[i] == 'G' or (check % 2 and string[i] == 'R'):\n            continue\n        check += 1\n        count += 1\n        memory[min(n, i + k)] += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    memory = [0 for i in range(n + 2)]\n    (count, check) = (0, 0)\n    for i in range(n):\n        check += memory[i]\n        if not check % 2 and string[i] == 'G' or (check % 2 and string[i] == 'R'):\n            continue\n        check += 1\n        count += 1\n        memory[min(n, i + k)] += 1\n    print(count)", "T = int(input())\nfor i in range(0, T):\n    (N, K) = map(int, input().split())\n    c = input()\n    bit = [0] * (2 * 100005)\n    dp = [0] * (2 * 100005)\n    for j in range(0, len(c)):\n        if c[j] == 'R':\n            bit[j] = bit[j] + 1\n    temp = 0\n    ans = 0\n    for j in range(0, N):\n        temp = temp + dp[j]\n        if (temp + bit[j]) % 2 == 1:\n            ans = ans + 1\n            temp = temp + 1\n            dp[j + K] = dp[j + K] - 1\n    print(ans)"]