["for _ in range(int(input())):\n    (n, k, l) = tuple(map(int, input().split()))\n    v = n - k - l\n    if v < 0:\n        k += v\n        l += v\n        v = 0\n    print(k * l + k * v + l * v + v * (v - 1) // 2)", "case = int(input())\nfor _ in range(case):\n    (n, k, l) = map(int, input().split(' '))\n    source = 0\n    central = 0\n    sink = 0\n    if k + l <= n:\n        total = n\n        source = k\n        central = n - (k + l)\n        sink = l\n        res = source * (total - source) + central * sink + central * (central - 1) // 2\n        print(res)\n    else:\n        diff = k + l - n\n        source = k - diff if k - diff > 0 else 0\n        sink = l - diff if l - diff > 0 else 0\n        res = source * sink\n        print(res)", "t = int(input())\nfor i in range(0, t):\n    (n, k, l) = map(int, input().split())\n    if k + l == n:\n        print(k * l)\n    elif k + l > n:\n        print((n - k) * (n - l))\n    else:\n        z = n - k - l\n        print(k * (n - k) + z * l + z * (z - 1) // 2)", "t = int(input())\nfor i in range(0, t):\n    (n, k, l) = map(int, input().split())\n    if k + l == n:\n        print(k * l)\n    elif k + l > n:\n        print((n - k) * (n - l))\n    else:\n        z = n - k - l\n        print(k * (n - k) + z * l + z * (z - 1) // 2)", "import math\nfor _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l >= n:\n        print((n - k) * (n - l))\n    else:\n        total = 0\n        rem = n - k - l\n        total += rem * (k + l) + rem * (rem - 1) // 2 + k * l\n        print(total)", "import math\nfor _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l >= n:\n        print((n - k) * (n - l))\n    else:\n        total = 0\n        rem = n - k - l\n        total += rem * (k + l) + rem * (rem - 1) // 2 + k * l\n        print(total)", "num_tests = int(input())\nfor t in range(num_tests):\n    lst = [int(x) for x in input().split(' ')]\n    (nodes, sources, sinks) = lst\n    source_sinks = max(0, sources + sinks - nodes)\n    sources -= source_sinks\n    sinks -= source_sinks\n    reg = max(nodes - sources - sinks - source_sinks, 0)\n    ans = reg * (reg - 1) // 2\n    ans += sources * reg\n    ans += sinks * reg\n    ans += sources * sinks\n    print(ans)", "num_tests = int(input())\nfor t in range(num_tests):\n    lst = [int(x) for x in input().split(' ')]\n    (nodes, sources, sinks) = lst\n    source_sinks = max(0, sources + sinks - nodes)\n    sources -= source_sinks\n    sinks -= source_sinks\n    reg = max(nodes - sources - sinks - source_sinks, 0)\n    ans = reg * (reg - 1) // 2\n    ans += sources * reg\n    ans += sinks * reg\n    ans += sources * sinks\n    print(ans)", "goals = int(input())\nfor distractions in range(goals):\n    (aim, wife, life) = map(int, input().split())\n    death = 0\n    if wife + life <= aim:\n        final = aim - (wife + life)\n        death += wife * (final + life)\n        death += final * life\n        death += final * (final - 1) // 2\n    else:\n        final = wife + life - aim\n        wife -= final\n        life -= final\n        final = 0\n        death += wife * (final + life)\n        death += final * life\n        death += final * (final + 1) // 2\n    print(death)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    result = 0\n    if k + l >= n:\n        dif = abs(n - k - l)\n        k = k - dif\n        l = l - dif\n        print(k * l)\n    else:\n        m = n - k - l\n        msm = m * (m - 1) // 2\n        print(k * m + k * l + m * l + msm)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    result = 0\n    if k + l >= n:\n        print((n - k) * (n - l))\n    else:\n        m = n - k - l\n        msm = m * (m - 1) // 2\n        print(k * m + k * l + m * l + msm)", "T = int(input())\nfor i in range(T):\n    N = list(map(int, input().split()))\n    Source = N[1]\n    Sink = N[2]\n    Middle = 0\n    if N[0] > N[1] + N[2]:\n        Middle = N[0] - N[1] - N[2]\n    Node_Sink_Source = 0\n    if Middle == 0:\n        Node_Sink_Source = abs(N[0] - N[1] - N[2])\n    Tot = 0\n    if Node_Sink_Source != 0:\n        Tot = (N[0] - N[1]) * (N[0] - N[2])\n        print(Tot)\n    else:\n        Tot = N[1] * N[2] + N[1] * Middle + Middle * N[2] + Middle * (Middle - 1) // 2\n        print(Tot)", "num_tests = int(input())\nfor t in range(num_tests):\n    lst = [int(x) for x in input().split(' ')]\n    (nodes, sources, sinks) = lst\n    source_sinks = max(0, sources + sinks - nodes)\n    sources -= source_sinks\n    sinks -= source_sinks\n    reg = max(nodes - sources - sinks - source_sinks, 0)\n    ans = reg * (reg - 1) // 2\n    ans += sources * reg\n    ans += sinks * reg\n    ans += sources * sinks\n    print(ans)", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a + b >= n:\n        print((n - b) * (n - a))\n    else:\n        x = n - a - b\n        s = x * (x - 1) // 2\n        print(s + x * a + x * b + a * b)", "tst = int(input())\nfor t in range(tst):\n    (k, l, m) = map(int, input().split(' '))\n    x = k - (l + m)\n    if x < 0:\n        l += x\n        m += x\n    ans = m * l\n    if x > 0:\n        ans = ans + x * (l + m) + x * (x - 1) // 2\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, l, k) = map(int, input().split())\n    rem = n - (l + k)\n    if rem < 0:\n        l = l + rem\n        k = k + rem\n        rem = 0\n    s = 0\n    s = l * (k + rem)\n    s += rem * k\n    s += rem * (rem - 1) // 2\n    print(s)\n    t -= 1", "import sys\nfor _ in range(int(input())):\n    (n, k, l) = [int(i) for i in input().split()]\n    rep = max(0, k + l - n)\n    (n, k, l) = (n - rep, k - rep, l - rep)\n    res = (n - k - l) * (n - k - l - 1) // 2 + k * (n - k - l) + (n - k - l) * l + k * l\n    sys.stdout.write(str(res) + '\\n')\n    pass", "tst = int(input())\nfor t in range(tst):\n    (k, l, m) = map(int, input().split(' '))\n    x = k - (l + m)\n    if x < 0:\n        l += x\n        m += x\n    ans = m * l\n    if x > 0:\n        ans = ans + x * (l + m) + x * (x - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l > n:\n        common = k + l - n\n        n -= common\n        k -= common\n        l -= common\n    print(k * (n - k) + (n - k - l) * (n - k - l - 1) // 2 + (n - k - l) * l)", "def fact(n):\n    if n == 1 or n == 0:\n        return 1\n    s = 1\n    for i in range(1, n + 1):\n        s *= i\n    return s\nfor _ in range(int(input())):\n    (n, s, e) = [int(i) for i in input().split()]\n    totalS = s\n    totalE = e\n    ee = n - e + 1\n    if s >= ee:\n        ss = s\n        s = ee - 1\n        e = n - ss\n    remaining = totalE + totalS\n    remaining = n - min(remaining, n)\n    total = s * e + (e + s) * remaining\n    if remaining > 1:\n        total += remaining * (remaining - 1) // 2\n    print(total)", "def src_and_snk(n, k, l):\n    if k + l > n:\n        both = k + l - n\n        srcs = k - both\n        snks = l - both\n        return srcs * snks\n    else:\n        neither = n - (k + l)\n        return k * l + (k + l) * neither + (neither - 1) * neither // 2\ntests = int(input())\nfor test in range(tests):\n    [n, k, l] = [int(i) for i in input().split(' ')]\n    output = src_and_snk(n, k, l)\n    print(output)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    x = k + l\n    p = n - x\n    if p < 0:\n        l = l + p\n        k = k + p\n        print(k * l)\n    elif p > 0:\n        xk = l + p\n        print(k * xk + p * l + p * (p - 1) // 2)\n    else:\n        print(k * l)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    x = k + l\n    p = n - x\n    if p < 0:\n        l = l + p\n        k = k + p\n        print(k * l)\n    elif p > 0:\n        xk = l + p\n        print(k * xk + p * l + p * (p - 1) // 2)\n    else:\n        print(k * l)", "for i in range(int(input())):\n    (N, K, L) = map(int, input().split())\n    N = N - L - K\n    if N < 0:\n        N = abs(N)\n        L = L - N\n        K = K - N\n        N = 0\n    print(K * (L + N) + N * L + N * (N - 1) // 2)", "for _ in range(int(input())):\n    (N, K, L) = map(int, input().split())\n    N -= K + L\n    ans = 0\n    if N < 0:\n        N = abs(N)\n        L = L - N\n        K = K - N\n        N = 0\n    ans = K * (L + N) + N * L + N * (N - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (t, source, sink) = map(int, input().split())\n    l = t - (source + sink)\n    other = 0\n    if l < 0:\n        source += l\n        sink += l\n    else:\n        other = l\n    count = source * other + source * sink + other * sink + other * (other - 1) // 2\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k, l) = input().split()\n    n = int(n)\n    k = int(k)\n    l = int(l)\n    if k + l <= n:\n        z = n - (l + k)\n        print(k * l + k * z + l * z + z * (z - 1) // 2)\n    else:\n        print((n - k) * (n - l))", "for t in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if l + k <= n:\n        c = n - (l + k)\n        print(k * l + k * c + c * l + c * (c - 1) // 2)\n    else:\n        x = k - (l + k - n)\n        y = l - (l + k - n)\n        print(x * y)", "for i in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    n = n - l - k\n    if n < 0:\n        n = abs(n)\n        l = l - n\n        k = k - n\n        n = 0\n    print(k * (n + l) + n * l + n * (n - 1) // 2)", "t = int(input())\nfor i in range(t):\n    (n, k, l) = map(int, input().split())\n    if k + l > n:\n        x = k + l - n\n        ans = (k - x) * (l - x)\n    else:\n        x = n - (l + k)\n        ans = k * l + k * x + l * x + x * (x - 1) // 2\n    print(ans)", "t = int(input())\nfor inp in range(t):\n    (n, k, l) = [int(i) for i in input().split()]\n    if n - (k + l) == 0:\n        max_edges = k * l\n    elif n - (k + l) > 0:\n        v = n - (k + l)\n        max_edges = k * l + k * v + v * l + v * (v - 1) // 2\n    else:\n        w = k + l - n\n        k -= w\n        l -= w\n        max_edges = k * l\n    print(max_edges)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    m = n - k - l\n    if m < 0:\n        m = abs(m)\n        k -= m\n        l -= m\n        print(l * k)\n    else:\n        print(m * (m - 1) // 2 + m * l + k * (m + l))", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = map(int, input().split())\n    if k + l >= n:\n        nn = k + l - n\n        print(max((k - nn) * (l - nn), 0))\n    else:\n        ans = k * l + (n - k - l) * (k + l)\n        print(ans + (n - k - l - 1) * (n - k - l) // 2)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    x = n - k - l\n    if x > 0:\n        print(x * (x - 1) // 2 + k * l + x * (k + l))\n    else:\n        x = -1 * x\n        k -= x\n        l -= x\n        print(k * l)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    x = n - (l + k)\n    if x < 0:\n        l += x\n        k += x\n    ans = l * k\n    if x > 0:\n        ans = ans + x * (l + k) + x * (x - 1) // 2\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, K, L) = inlt()\n    if N >= K + L:\n        (st, en) = (L - 1, N - K - 1)\n        an = K * (N - K) + en * (en + 1) // 2 - st * (st + 1) // 2\n    else:\n        an = (N - L) * (N - K)\n    ans.append(an)\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, K, L) = inlt()\n    if N >= K + L:\n        an = K * (N - K)\n        (st, en) = (L - 1, N - K - 1)\n        if N > L + K:\n            an += en * (en + 1) // 2 - st * (st + 1) // 2\n    else:\n        kk = N - L\n        ll = N - K\n        an = kk * ll\n    ans.append(an)\noutplt(ans)", "tst = int(input())\nfor t in range(tst):\n    (k, l, m) = map(int, input().split(' '))\n    x = k - (l + m)\n    if x < 0:\n        l += x\n        m += x\n    ans = m * l\n    if x > 0:\n        ans = ans + x * (l + m) + x * (x - 1) // 2\n    print(ans)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, k, l) = map(int, input().split())\n    m = n - (k + l)\n    if m < 0:\n        k += m\n        l += m\n        n += m\n    mid = n - (k + l)\n    print(k * l + (k + l) * mid + mid * (mid - 1) // 2)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    (s, mid) = (0, 0)\n    if n < k + l:\n        s = k + l - n\n        n = n - s\n        k = k - s\n        l = l - s\n    mid = n - (k + l)\n    print(k * l + (k + l) * mid + mid * (mid - 1) // 2)", "T = int(input())\nfor _ in range(T):\n    (N, source, sink) = map(int, input().split())\n    if source + sink > N:\n        R = source + sink - N\n        (N, source, sink) = (N - R, source - R, sink - R)\n    mid = N - (source + sink)\n    print(source * sink + (source + sink) * mid + mid * (mid - 1) // 2)", "testcase = int(input())\nfor _ in range(testcase):\n    (n, k, l) = map(int, input().split())\n    d = n - (k + l)\n    if d > 0:\n        print(l * k + d * k + d * l + (d * d - d) // 2)\n    else:\n        print((l + d) * (k + d))", "testcase = int(input())\nfor _ in range(testcase):\n    (n, k, l) = map(int, input().split())\n    d = n - (k + l)\n    if d > 0:\n        print(l * k + d * k + d * l + (d * d - d) // 2)\n    else:\n        print((l + d) * (k + d))", "t = int(input())\nfor i in range(t):\n    (n, k, l) = map(int, input().split())\n    if k + l <= n:\n        source = k\n        sink = l\n        both = n - (k + l)\n    else:\n        y = k + l - n\n        k -= y\n        l -= y\n        n -= y\n        source = k\n        sink = l\n        both = 0\n    print(source * (n - source) + sink * (n - sink) - source * sink + both * (both - 1) // 2)", "for t in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l <= n:\n        source = k\n        sink = l\n        both = n - (k + l)\n    else:\n        y = k + l - n\n        k -= y\n        l -= y\n        n -= y\n        source = k\n        sink = l\n        both = 0\n    print(source * (n - source) + sink * (n - sink) - source * sink + both * (both - 1) // 2)", "for t in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l <= n:\n        source = k\n        sink = l\n        both = n - (k + l)\n    else:\n        y = k + l - n\n        k -= y\n        l -= y\n        n -= y\n        source = k\n        sink = l\n        both = 0\n    print(source * (n - source) + sink * (n - sink) - source * sink + both * (both - 1) // 2)", "for i in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    n1 = n - (k + l)\n    if n1 < 0:\n        n1 *= -1\n        n -= n1\n        k -= n1\n        l -= n1\n        p = n * (n - 1) // 2\n        p -= k * (k - 1) // 2 + l * (l - 1) // 2\n        print(p)\n    else:\n        p = n * (n - 1) // 2\n        p -= k * (k - 1) // 2 + l * (l - 1) // 2\n        print(p)", "from decimal import Decimal\nfor _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    res = k + l - n\n    if res >= 0:\n        k -= res\n        l -= res\n        print(k * l)\n    else:\n        gap = Decimal(n - k - l)\n        ad = gap * (gap - 1) / 2\n        ans = k * l + gap * (k + l) + ad\n        print(ans)", "for i in range(int(input())):\n    (ve, so, si) = map(int, input().split())\n    if so + si > ve:\n        y = so + si - ve\n        ve = ve - y\n        so = so - y\n        si = si - y\n    ans = so * (ve - so) + (ve - so - si) * si + (ve - si - so) * (ve - si - so - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    rem = n - k - l\n    if k + l > n:\n        temp = k + l - n\n        k -= temp\n        l -= temp\n        rem = 0\n    a = k * (l + rem) + rem * l\n    a += rem * (rem - 1) // 2\n    print(a)", "for i in range(int(input())):\n    (ve, so, si) = map(int, input().split())\n    if so + si > ve:\n        y = so + si - ve\n        ve = ve - y\n        so = so - y\n        si = si - y\n    ans = so * (ve - so) + (ve - so - si) * si + (ve - si - so) * (ve - si - so - 1) // 2\n    print(ans)", "def soln(n, sc, si):\n    if n < sc + si:\n        temp = sc + si - n\n        sc -= temp\n        si -= temp\n        return sc * si\n    extra = n - (sc + si)\n    res = sc * (extra + si) + extra * si + extra * (extra - 1) // 2\n    return res\nfor _ in range(int(input())):\n    (n, sc, si) = map(int, input().split())\n    print(soln(n, sc, si))", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l > n:\n        common = k + l - n\n        n -= common\n        k -= common\n        l -= common\n    print(k * (n - k) + (n - k - l) * (n - k - l - 1) // 2 + (n - k - l) * l)", "def solve(a, b, c):\n    t = b * (a - b) + c * (a - c) - b * c\n    return t\nfor _ in range(int(input())):\n    (n, k, l) = map(int, input().split(' '))\n    if n - (k + l) > 0:\n        z = n - k - l\n        a = solve(n, k, l)\n        a += z * (z - 1) // 2\n        print(a)\n    else:\n        y = abs(n - k - l)\n        a = solve(n - y, k - y, l - y)\n        print(a)", "def solve(n, k, l):\n    s = k * (n - k) + l * (n - l) - k * l\n    return s\nfor _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if n - (k + l) > 0:\n        z = n - k - l\n        a = solve(n, k, l)\n        a += z * (z - 1) // 2\n        print(a)\n    else:\n        y = abs(n - k - l)\n        a = solve(n - y, k - y, l - y)\n        print(a)", "for n in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l == n:\n        ans = k * l\n    elif k + l > n:\n        x = k + l - n\n        ans = (k - x) * (l - x)\n    else:\n        ans = k * (n - k) + (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2\n    print(ans)", "for n in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l == n:\n        ans = k * l\n    elif k + l > n:\n        x = k + l - n\n        ans = (k - x) * (l - x)\n    else:\n        ans = k * (n - k) + (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2\n    print(ans)", "import decimal\nt = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = decimal.Decimal(n - k - l)\n        add = gap * (gap - 1) / 2\n        res = k * l + gap * (k + l) + add\n        print(res)", "import decimal\nt = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add = int(gap * (gap - 1) // 2)\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add = int(gap * (gap - 1) // 2)\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = map(int, input().split())\n    flag = 1\n    if k + l > n:\n        flag = 0\n        r = k + l - n\n        k -= r\n        l -= r\n        n -= r\n    ans = k * (n - k)\n    if flag == 1:\n        ans += (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = map(int, input().split())\n    flag = 1\n    if k + l > n:\n        flag = 0\n        r = k + l - n\n        k -= r\n        l -= r\n        n -= r\n    ans = k * (n - k)\n    if flag == 1:\n        ans += (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k, l) = map(int, input().split())\n    flag = 1\n    if k + l > n:\n        flag = 0\n        r = k + l - n\n        k -= r\n        l -= r\n        n -= r\n    ans = k * (n - k)\n    if flag == 1:\n        ans += (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    n = n - (l + k)\n    if n < 0:\n        n = abs(n)\n        l = l - n\n        k = k - n\n        n = 0\n    ans = k * (n + l) + n * l + n * (n - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, k, l) = map(int, input().split())\n    if k + l > n:\n        common = k + l - n\n        n -= common\n        k -= common\n        l -= common\n    print(k * (n - k) + (n - k - l) * l + (n - k - l) * (n - k - l - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, k, l) = map(int, input().split(' '))\n    z = n - (k + l)\n    if z < 0:\n        k += z\n        l += z\n    ans = l * k\n    if z > 0:\n        ans = ans + z * (k + l) + z * (z - 1) // 2\n    print(ans)", "def solve(n, sources, sinks):\n    if sources + sinks <= n:\n        extra = n - (sources + sinks)\n        total = sources * (sinks + extra)\n        if extra > 0:\n            total += extra * sinks\n            total += (extra - 1) * extra // 2\n        return total\n    shared = sources + sinks - n\n    sources -= shared\n    sinks -= shared\n    return sources * sinks\nfor _ in range(int(input())):\n    (n, sources, sinks) = list(map(int, input().split()))\n    print(solve(n, sources, sinks))", "T = int(input())\nfor t in range(T):\n    (n, k, l) = map(int, input().split(' '))\n    z = n - (k + l)\n    if z < 0:\n        k += z\n        l += z\n    ans = l * k\n    if z > 0:\n        ans = ans + z * (k + l) + z * (z - 1) // 2\n    print(ans)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7 + 4 * 10 ** 6 + 2 * 10 ** 5 + 2 * 10 ** 4:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7 + 4 * 10 ** 6 + 2 * 10 ** 5:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7 + 4 * 10 ** 6:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7 + 1 * 10 ** 6:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7 + 2 * 10 ** 6:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 3 * 10 ** 7:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8 + 1 * 10 ** 7:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 1 * 10 ** 8:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 8:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 8:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 99999999 + 1:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 99999999 + 1:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nwhile t != 0:\n    (n, k, l) = map(int, input().split())\n    z = k + l - n\n    if z < 0:\n        p = (n * (n - 1) - k * (k - 1) - l * (l - 1)) // 2\n        print(p)\n    else:\n        n = n - z\n        k = k - z\n        l = l - z\n        q = (n * (n - 1) - k * (k - 1) - l * (l - 1)) // 2\n        print(q)\n    t = t - 1", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 99999999:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 9 * 10 ** 7:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 10 * 10 ** 6 + 9 * 10 ** 5 + 9 * 10 ** 4 + 9 * 10 ** 3 + 99999:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 9 * 10 ** 6 + 9 * 10 ** 5 + 9 * 10 ** 4 + 9 * 10 ** 3 + 99999:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 9 * 10 ** 6 + 9 * 10 ** 5 + 9 * 10 ** 4 + 9 * 10 ** 3:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 9 * 10 ** 6 + 9 * 10 ** 5:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 9 * 10 ** 6:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10 ** 7 + 5 * 10 ** 6:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 100000000:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10000000:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 10000:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if add != add2 and gap < 100:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if gap < 87:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if gap < 85:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if gap < 80:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "for _ in range(int(input())):\n    (n, so, si) = map(int, input().split())\n    a = so + si\n    s = 0\n    if so > n or si > n:\n        print(0)\n    elif a > n:\n        a = a - n\n        so -= a\n        si -= a\n    elif a < n:\n        k = n - a\n        s = so * k + k * si + k * (k - 1) // 2\n    print(so * si + s)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if gap < 50:\n            sdfg\n        print(k * l + gap * (k + l) + add)", "t = int(input())\nfor tr in range(t):\n    (n, k, l) = list(map(int, input().split()))\n    both = k + l - n\n    if k == 1 and l == 1:\n        print(n * (n - 1) // 2)\n    elif both >= 0:\n        k -= both\n        l -= both\n        print(k * l)\n    else:\n        gap = n - k - l\n        add2 = int(gap * (gap - 1) / 2)\n        add = int(gap * (gap - 1) // 2)\n        if gap < 10:\n            sdfg\n        print(k * l + gap * (k + l) + add)"]