["def soln(n, a):\n    a.sort(reverse=True)\n    maxm = 0\n    c = 1\n    nv = s = 0\n    for i in arr:\n        s += i\n        if s * c > maxm:\n            maxm = s * c\n            c += 1\n        else:\n            nv += i\n    return maxm + nv\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(soln(n, arr))", "def soln(n, a):\n    a.sort(reverse=True)\n    maxm = 0\n    c = 1\n    nv = s = 0\n    for i in arr:\n        s += i\n        if s * c > maxm:\n            maxm = s * c\n            c += 1\n        else:\n            nv += i\n    return maxm + nv\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(soln(n, arr))", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(list(map(int, input().split())))\n    s = 0\n    m = 0\n    j = 0\n    z = 1\n    for i in range(N - 1, -1, -1):\n        s += A[i]\n        if z * s > m:\n            m = z * s\n            z += 1\n        else:\n            j += A[i]\n    print(m + j)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()), reverse=True)\n    ans = s = c = 0\n    for j in range(n):\n        s += a[j]\n        if s * (j + 1) > ans:\n            ans = s * (j + 1)\n            c = j + 1\n        else:\n            break\n    print(ans + sum(a[c:]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()), reverse=True)\n    ans = s = c = 0\n    for j in range(n):\n        s += a[j]\n        if s * (j + 1) > ans:\n            ans = s * (j + 1)\n            c = j + 1\n        else:\n            break\n    print(ans + sum(a[c:]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()), reverse=True)\n    ans = s = c = 0\n    for j in range(n):\n        s += a[j]\n        if s * (j + 1) > ans:\n            ans = s * (j + 1)\n            c = j + 1\n        else:\n            break\n    print(ans + sum(a[c:]))", "def li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    a.sort(reverse=1)\n    i = s = ans = f = 0\n    while i < n:\n        s += a[i]\n        ans1 = s * (i + 1)\n        if ans1 > ans:\n            ans = ans1\n        else:\n            f = 1\n            break\n        i += 1\n    if f == 1:\n        print(ans + sum(a[i:]))\n    else:\n        print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    sums = 0\n    ans = 0\n    flag = 0\n    for i in range(len(a)):\n        sums += a[i]\n        ans1 = sums * (i + 1)\n        if ans1 > ans:\n            ans = ans1\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print(ans + sum(a[i:]))\n    else:\n        print(ans)\n    t -= 1", "def inl():\n    return list(map(int, input().split()))\n\ndef solve():\n    (pos_sum, neg_sum) = (0, 0)\n    (pos_count, neg_count) = (0, 0)\n    for ele in lst:\n        if ele >= 0:\n            pos_sum += ele\n            pos_count += 1\n        else:\n            neg_sum += ele\n            neg_count += 1\n    if neg_count == 0:\n        print(pos_sum * pos_count)\n    elif pos_count == 0:\n        print(neg_sum)\n    elif pos_sum == 0:\n        print(neg_sum)\n    else:\n        s = 0\n        not_include_sum = neg_sum\n        to_be_include = 0\n        not_include = 0\n        ans = not_include_sum + (pos_sum + s) * (to_be_include + pos_count)\n        for i in range(neg_count - 1, -1, -1):\n            ele = lst[i]\n            if ele < 0:\n                if abs(s) < pos_sum:\n                    s += ele\n                    to_be_include += 1\n                    not_include_sum -= ele\n            ans = max(ans, not_include_sum + (pos_sum + s) * (to_be_include + pos_count))\n        print(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = inl()\n    lst.sort()\n    solve()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    Happiness = list(map(int, input().split()))\n    Happiness.sort()\n    Happiness.reverse()\n    sum1 = 0\n    ans = 0\n    found = False\n    for i in range(n):\n        sum1 += Happiness[i]\n        ans1 = sum1 * (i + 1)\n        if ans1 > ans:\n            ans = ans1\n        else:\n            found = True\n            break\n    if found:\n        print(ans + sum(Happiness[i:]))\n    else:\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    Happiness = list(map(int, input().split()))\n    Happiness.sort()\n    Happiness.reverse()\n    sum1 = 0\n    ans = 0\n    found = False\n    for i in range(n):\n        sum1 += Happiness[i]\n        ans1 = sum1 * (i + 1)\n        if ans1 > ans:\n            ans = ans1\n        else:\n            found = True\n            break\n    if found:\n        print(ans + sum(Happiness[i:]))\n    else:\n        print(ans)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)) + '\\n')\n\ndef main():\n    for _ in tr():\n        n = nl()\n        a = ln()\n        positives = []\n        negatives = []\n        for i in a:\n            if i < 0:\n                negatives.append(i)\n            else:\n                positives.append(i)\n        negatives.sort(reverse=True)\n        pos_len = len(positives)\n        pos_sum = sum(positives)\n        neg_len = len(negatives)\n        neg_sum = sum(negatives)\n        result = pos_sum * pos_len + neg_sum\n        for i in negatives:\n            pos_len += 1\n            pos_sum += i\n            neg_sum -= i\n            new_sum = pos_sum * pos_len + neg_sum\n            if new_sum < result:\n                break\n            else:\n                result = new_sum\n        print(result)\nmain()", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    neg = []\n    pos = []\n    for elem in lst:\n        if elem >= 0:\n            pos.append(elem)\n        else:\n            neg.append(elem)\n    pos_sum = sum(pos)\n    pos_len = len(pos)\n    neg_sum = sum(neg)\n    i = 0\n    ans = pos_sum * pos_len + neg_sum\n    neg.sort(reverse=True)\n    for a in neg:\n        pos_len += 1\n        pos_sum += a\n        neg_sum -= a\n        hap = pos_sum * pos_len + neg_sum\n        if hap < ans:\n            break\n        else:\n            ans = hap\n    print(ans)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    pos = []\n    neg = []\n    for i in a:\n        if i >= 0:\n            pos.append(i)\n        else:\n            neg.append(i)\n    l = len(pos)\n    x = sum(pos)\n    y = sum(neg)\n    ans = l * x + y\n    neg = sorted(neg, reverse=True)\n    for i in neg:\n        l += 1\n        x += i\n        y -= i\n        ans = max(ans, l * x + y)\n    print(ans)", "def max_happiness(arr):\n    pos = []\n    neg = []\n    for y in arr:\n        if y > 0:\n            pos.append(y)\n        else:\n            neg.append(y)\n    if len(pos) == len(arr):\n        return sum(pos) * len(pos)\n    elif len(neg) == len(arr):\n        return sum(neg)\n    else:\n        arr.sort()\n        arr.reverse()\n        i = 0\n        s = arr[i]\n        current = arr[i]\n        j = 1\n        while j < len(arr):\n            current += arr[j]\n            happiness = current * (j - i + 1)\n            if happiness >= s:\n                s = happiness\n                j += 1\n            else:\n                return s + sum(arr[j:len(arr)])\n        return s\ntest_cases = int(input())\nwhile test_cases != 0:\n    data = input()\n    data2 = list(map(int, input().split()))\n    print(max_happiness(data2))\n    test_cases -= 1", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)[::-1]\n    left = 0\n    summ = sum(A)\n    right = summ\n    ans = -float('inf')\n    for i in range(n):\n        left += A[i]\n        right -= A[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)[::-1]\n    left = 0\n    summ = sum(A)\n    right = summ\n    ans = -float('inf')\n    for i in range(n):\n        left += A[i]\n        right -= A[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)[::-1]\n    left = 0\n    summ = sum(A)\n    right = summ\n    ans = -float('inf')\n    for i in range(n):\n        left += A[i]\n        right -= A[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)[::-1]\n    left = 0\n    summ = sum(A)\n    right = summ\n    ans = -float('inf')\n    for i in range(n):\n        left += A[i]\n        right -= A[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)[::-1]\n    left = 0\n    summ = sum(A)\n    right = summ\n    ans = -float('inf')\n    for i in range(n):\n        left += A[i]\n        right -= A[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "def solve(arr: 'list[int]') -> 'int':\n    pos = 0\n    pos_size = 0\n    neg = 0\n    neg_li = []\n    for ele in arr:\n        if ele >= 0:\n            pos += ele\n            pos_size += 1\n        else:\n            neg_li.append(ele)\n            neg += ele\n    if pos == 0:\n        return sum(neg_li)\n    elif neg == 0:\n        ans = pos * pos_size\n        return ans\n    neg_li.sort(reverse=True)\n    (mx, k, it) = (0, 0, 0)\n    for neg_el in neg_li:\n        it += neg_el\n        k += 1\n        val = (pos + it) * (pos_size + k) + (neg - it)\n        if val > mx:\n            mx = val\n    return max(pos * pos_size + it, mx)\nfor _ in range(int(input())):\n    a = int(input())\n    x = [int(i) for i in input().strip().split()]\n    print(solve(x))", "def solve(arr: 'list[int]') -> 'int':\n    pos = 0\n    pos_size = 0\n    neg = 0\n    neg_li = []\n    for ele in arr:\n        if ele >= 0:\n            pos += ele\n            pos_size += 1\n        else:\n            neg_li.append(ele)\n            neg += ele\n    if pos == 0:\n        return sum(neg_li)\n    elif neg == 0:\n        ans = pos * pos_size\n        return ans\n    neg_li.sort(reverse=True)\n    (mx, k, it) = (0, 0, 0)\n    for neg_el in neg_li:\n        it += neg_el\n        k += 1\n        val = (pos + it) * (pos_size + k) + (neg - it)\n        if val > mx:\n            mx = val\n    return max(pos * pos_size + it, mx)\nfor _ in range(int(input())):\n    a = int(input())\n    x = [int(i) for i in input().strip().split()]\n    print(solve(x))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    posSum = 0\n    negSum = 0\n    no = 0\n    neg = []\n    for x in a:\n        if x <= 0:\n            negSum += x\n            neg.append(x)\n        else:\n            posSum += x\n            no += 1\n    ans = posSum * no + negSum\n    neg = sorted(neg, reverse=True)\n    for x in neg:\n        no += 1\n        posSum += x\n        negSum -= x\n        curr = posSum * no + negSum\n        if curr >= 0:\n            ans = max(ans, curr)\n        else:\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))[::-1]\n    ans = -float('inf')\n    total = sum(arr)\n    left = 0\n    right = total\n    for i in range(n):\n        left += arr[i]\n        right -= arr[i]\n        ans = max(ans, (i + 1) * left + right)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    pos = []\n    neg = []\n    for i in arr:\n        if i < 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    length = len(pos)\n    max_sum = sum(pos) * length + sum(neg)\n    if len(neg) > 0:\n        pos_sum = sum(pos)\n        neg_sum = sum(neg)\n        neg = sorted(neg, reverse=True)\n        curr_sum = 0\n        for i in range(len(neg)):\n            if curr_sum >= 0:\n                length += 1\n                pos_sum = pos_sum + neg[i]\n                neg_sum = neg_sum - neg[i]\n                curr_sum = pos_sum * length + neg_sum\n                max_sum = max(curr_sum, max_sum)\n    print(max_sum)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(map(int, input().split()), reverse=True)\n    negative_arr = tuple((i for i in arr if i < 0))\n    positive_arr = tuple((i for i in arr if i >= 0))\n    temp_len = len(positive_arr)\n    positive_sum = sum(positive_arr)\n    ans = positive_sum * temp_len\n    if not negative_arr:\n        print(ans)\n    elif not positive_arr:\n        print(sum(negative_arr))\n    else:\n        neg = 0\n        for i in negative_arr:\n            temp_ans = (positive_sum + i) * (temp_len + 1)\n            if temp_ans >= ans:\n                ans = temp_ans\n                positive_sum += i\n                temp_len += 1\n            else:\n                neg += i\n        print(ans + neg)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(map(int, input().split()))\n    negative_arr = sorted((i for i in arr if i < 0), reverse=True)\n    positive_arr = tuple((i for i in arr if i >= 0))\n    temp_len = len(positive_arr)\n    positive_sum = sum(positive_arr)\n    ans = positive_sum * temp_len\n    if not negative_arr:\n        print(ans)\n    elif not positive_arr:\n        print(sum(negative_arr))\n    else:\n        neg = 0\n        for i in negative_arr:\n            temp_ans = (positive_sum + i) * (temp_len + 1)\n            if temp_ans >= ans:\n                ans = temp_ans\n                positive_sum += i\n                temp_len += 1\n            else:\n                neg += i\n        print(ans + neg)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    pos_sum = 0\n    pos_cnt = 0\n    neg_sum = 0\n    neg_li = []\n    for i in l:\n        if i >= 0:\n            pos_sum += i\n            pos_cnt += 1\n        else:\n            neg_sum += i\n            neg_li.append(i)\n    if len(neg_li) == n or sum((i > 0 for i in l)) == 0:\n        print(neg_sum)\n    elif pos_cnt == 0:\n        print(neg_sum)\n    elif pos_cnt == n:\n        print(pos_sum * n)\n    else:\n        neg_li.sort(reverse=True)\n        mx = 0\n        extra = 0\n        extra_sum = 0\n        for neg_el in neg_li:\n            extra_sum += neg_el\n            extra += 1\n            curr = (pos_sum + extra_sum) * (pos_cnt + extra) + neg_sum - extra_sum\n            if curr > mx:\n                mx = curr\n        print(max(mx, pos_cnt * pos_cnt + neg_sum))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pos = 0\n    pos_size = 0\n    neg = 0\n    neg_li = []\n    for it in arr:\n        if it >= 0:\n            pos += it\n            pos_size += 1\n        else:\n            neg_li.append(it)\n            neg += it\n    if pos == 0:\n        print(sum(neg_li))\n    elif len(neg_li) == 0:\n        ans = pos * pos_size\n        print(ans)\n    else:\n        neg_li.sort(reverse=True)\n        (mx, k, it) = (0, 0, 0)\n        for neg_el in neg_li:\n            it += neg_el\n            k += 1\n            val = (pos + it) * (pos_size + k) + (neg - it)\n            if val > mx:\n                mx = val\n        print(max(pos * pos_size + it, mx))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    possum = 0\n    negsum = 0\n    pos = []\n    neg = []\n    for j in range(len(a)):\n        if a[j] >= 0:\n            pos.append(a[j])\n            possum += a[j]\n        else:\n            neg.append(a[j])\n            negsum += a[j]\n    ans = len(pos) * possum + negsum\n    neg.sort(reverse=True)\n    poslen = len(pos)\n    for i in range(len(neg)):\n        possum += neg[i]\n        negsum -= neg[i]\n        newans = possum * (poslen + 1 + i) + negsum\n        if newans > ans:\n            ans = newans\n        else:\n            break\n    print(ans)", "t = int(input())\nwhile t > 0:\n    l = []\n    n = int(input())\n    l = input().split()\n    c = 0\n    sump = sumn = 0\n    for i in range(n):\n        l[i] = int(l[i])\n    l.sort()\n    s = sum(l)\n    i = 0\n    max = s * n\n    v = []\n    s1 = 0\n    while i < n:\n        s -= l[i]\n        s1 += l[i]\n        pdt = s * (n - i - 1) + s1\n        if pdt > max:\n            max = pdt\n        else:\n            break\n        i += 1\n    print(max)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    total = 0\n    pos = []\n    neg = []\n    for i in a:\n        if i >= 0:\n            pos.append(i)\n        else:\n            neg.append(i)\n    neg.sort(reverse=True)\n    s = sum(pos)\n    l = len(pos)\n    for i in neg:\n        if s + i * (l + 1) >= 0:\n            s += i\n            l += 1\n        else:\n            total += i\n    total += s * l\n    print(total)", "T = int(input())\nfor testCase in range(T):\n    N = int(input())\n    A = input().split()\n    sumNegatives = 0\n    sumPositives = 0\n    countPositives = 0\n    listNegatives = []\n    for i in range(N):\n        A[i] = int(A[i])\n        if A[i] >= 0:\n            sumPositives += A[i]\n            countPositives += 1\n        else:\n            sumNegatives += A[i]\n            listNegatives.append(A[i])\n    listNegatives.sort(reverse=True)\n    ans = sumPositives * countPositives + sumNegatives\n    posNegatives = 0\n    for i in range(N - countPositives):\n        sumPositives += listNegatives[i]\n        countPositives += 1\n        sumNegatives -= listNegatives[i]\n        newAns = sumPositives * countPositives + sumNegatives\n        if newAns < ans:\n            break\n        else:\n            ans = newAns\n    print(ans)", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    happiness = list(map(int, input().strip().split(' ')))\n    happiness.sort(reverse=True)\n    totalpos = 0\n    poslen = 0\n    negative_list = []\n    i = 0\n    while i < n and happiness[i] >= 0:\n        totalpos += happiness[i]\n        poslen += 1\n        i += 1\n    if i < n:\n        while i < n:\n            if (totalpos + happiness[i]) * (poslen + 1) > totalpos * poslen:\n                totalpos += happiness[i]\n                poslen += 1\n            else:\n                negative_list.append(happiness[i])\n            i += 1\n    print(totalpos * poslen + sum(negative_list))", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())), reverse=True)\n    (negatives, positives) = (s[:], s[:])\n    negatives = list((x for x in s if x < 0))\n    positives = list((x for x in s if x >= 0))\n    nlen = len(negatives)\n    plen = len(positives)\n    finalSum = sum(positives)\n    tn = []\n    for item in negatives:\n        if (finalSum + item) * (plen + 1) > plen * finalSum:\n            finalSum += item\n            plen += 1\n        else:\n            tn.append(item)\n    print(sum(tn) + finalSum * plen)", "test = int(input())\nSUM = [0]\nfor i in range(1, 100000 + 1):\n    SUM.append(0)\nwhile test != 0:\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    for i in range(1, n + 1):\n        SUM[i] = ar[i - 1] + SUM[i - 1]\n    ans = SUM[n] * n\n    for i in range(1, n + 1):\n        if ans < SUM[i] + (n - i) * (SUM[n] - SUM[i]):\n            ans = SUM[i] + (n - i) * (SUM[n] - SUM[i])\n    print(ans)\n    test -= 1", "for z in range(int(input())):\n    N = int(input())\n    inputs = list(map(int, input().split()))\n    inputs.sort(reverse=True)\n    positive = list(filter(lambda x: x >= 0, inputs))\n    negative = list(filter(lambda x: x < 0, inputs))\n    final_negative_list = []\n    total = sum(positive)\n    counts = len(positive)\n    for item in negative:\n        if (total + item) * (counts + 1) > total * counts:\n            total += item\n            counts += 1\n        else:\n            final_negative_list.append(item)\n    print(total * counts + sum(final_negative_list))", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    seq = list(map(int, input().split()))\n    seq.sort(reverse=True)\n    lensubset = 0\n    total = 0\n    negtotal = 0\n    posum = 0\n    for j in range(l):\n        if seq[j] >= 0:\n            posum += seq[j]\n            lensubset += 1\n        elif posum >= (j + 2) * abs(seq[j]):\n            posum += seq[j]\n            lensubset += 1\n        else:\n            negtotal = sum(seq[j:])\n            break\n    total = posum * lensubset + negtotal\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (n, sum1, sum2, cnt) = (int(input()), 0, 0, 0)\n    arr = [int(i) for i in input().split()]\n    arr.sort(reverse=True)\n    for i in arr:\n        if sum1 * cnt + i <= (sum1 + i) * (cnt + 1):\n            (sum1, cnt) = (sum1 + i, cnt + 1)\n        else:\n            sum2 += i\n    print(sum2 + sum1 * cnt)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num.sort()\n    ans = 0\n    s = sum(num)\n    for i in range(n):\n        if num[i] + (n - 1 - i) * (s - num[i]) > s * (n - i):\n            ans += num[i]\n            s -= num[i]\n        else:\n            ans += s * (n - i)\n            break\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = s = c = 0\n    for ai in reversed(a):\n        if (s + ai) * (c + 1) > s * c:\n            s += ai\n            c += 1\n        else:\n            x += ai\n    print(s * c + x)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sumx = 0\n    count = 0\n    sumd = 0\n    l.sort(reverse=True)\n    for i in l:\n        if (sumx + i) * (count + 1) + sumd >= sumx * count + (sumd + i):\n            sumx += i\n            count += 1\n        else:\n            sumd += i\n    print(sumx * count + sumd)", "times = int(input().strip(' '))\nwhile times > 0:\n    n = int(input().strip(' '))\n    A = list(map(int, input().strip(' ').split(' ')))\n    A.sort()\n    B = []\n    summ = 0\n    length = 0\n    for i in A:\n        if i < 0:\n            B.append(i)\n        else:\n            summ += i\n            length += 1\n    product = summ * length\n    sub = 0\n    B.sort(reverse=True)\n    for i in B:\n        if product <= (summ + i) * (length + 1):\n            summ += i\n            length += 1\n            product = summ * length\n        else:\n            sub += i\n    product += sub\n    print(int(product))\n    times -= 1", "times = int(input().strip(' '))\nwhile times > 0:\n    n = int(input().strip(' '))\n    A = list(map(int, input().strip(' ').split(' ')))\n    A.sort()\n    B = []\n    summ = 0\n    length = 0\n    for i in A:\n        if i < 0:\n            B.append(i)\n        else:\n            summ += i\n            length += 1\n    product = summ * length\n    sub = 0\n    B.sort(reverse=True)\n    for i in B:\n        if product <= (summ + i) * (length + 1):\n            summ += i\n            length += 1\n            product = summ * length\n        else:\n            sub += i\n    product += sub\n    print(int(product))\n    times -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    hpns = [int(x) for x in input().split()]\n    sumt = sum(hpns)\n    po_sum = 0\n    count = 0\n    neg_sum = 0\n    neg_count = 0\n    neg_list = []\n    for num in hpns:\n        if num >= 0:\n            po_sum += num\n            count += 1\n        else:\n            neg_sum += num\n            neg_list.append(num)\n    neg_list.sort(reverse=True)\n    ans = neg_sum + count * po_sum\n    for i in neg_list:\n        neg_count += 1\n        if (po_sum + i) * (count + neg_count) + (neg_sum - i) > ans:\n            ans = (po_sum + i) * (count + neg_count) + (neg_sum - i)\n            po_sum += i\n            neg_sum -= i\n        else:\n            break\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    seq = list(map(int, input().split()))\n    seq.sort(reverse=True)\n    counter = 0\n    negsum = 0\n    posum = 0\n    for j in seq:\n        if j >= 0:\n            posum += j\n            counter += 1\n        elif posum >= (counter + 1) * abs(j):\n            posum += j\n            counter += 1\n        else:\n            negsum += j\n    print(posum * counter + negsum)", "t = int(input())\nfor _ in range(t):\n    summ = 0\n    count = 0\n    sneg = 0\n    ncount = 0\n    x = int(input())\n    f = list(map(int, input().split()))\n    for d in f:\n        z = d\n        if z >= 0:\n            summ += z\n            count += 1\n        else:\n            sneg += z\n            ncount += 1\n    f = sorted(f)\n    f = f[::-1]\n    p = count\n    for y in range(p, x):\n        if (summ + f[y]) * (count + 1) >= summ * count:\n            count += 1\n            summ += f[y]\n            sneg -= f[y]\n        else:\n            break\n    print(count * summ + sneg)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    A = input().split()\n    A = list(map(int, A))\n    A.sort(reverse=True)\n    counti = 0\n    s = 0\n    H = 0\n    for i in A:\n        if (s + i) * (counti + 1) >= s * counti + i:\n            s += i\n            counti += 1\n            H = s * counti\n        else:\n            H += i\n    print(H)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    p = 0\n    l = 0\n    res = 0\n    ng = []\n    for j in range(len(a)):\n        if a[j] < 0:\n            ng.append(a[j])\n        else:\n            p += a[j]\n            l += 1\n    ng.sort()\n    for k in ng[::-1]:\n        if (p + k) * (l + 1) >= p * l:\n            p += k\n            l += 1\n        else:\n            res += k\n    print(res + p * l)", "T = int(input())\nwhile T > 0:\n    dishes = int(input())\n    numbers = list(map(int, input().split()))\n    happiness = 0\n    count = 0\n    total = 0\n    steps = 0\n    numbers.sort(reverse=True)\n    for i in numbers:\n        if i >= 0:\n            count = count + i\n            total = total + 1\n        elif count + (total + 1) * i > 0:\n            count = count + i\n            total = total + 1\n        else:\n            steps = steps + i\n    happiness = steps + count * total\n    print(happiness)\n    T = T - 1", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    c = 0\n    total = 0\n    subtotal = 0\n    a.sort(reverse=True)\n    for i in a:\n        if i < 0:\n            if subtotal * c > (subtotal + i) * (c + 1):\n                total += subtotal * c + i\n                subtotal = 0\n                c = 0\n            else:\n                subtotal += i\n                c += 1\n        else:\n            subtotal += i\n            c += 1\n    total += subtotal * c\n    print(total)", "for _ in range(int(input())):\n    input()\n    num = sorted(list(map(int, input().split())))\n    s = n = 0\n    while num:\n        if s + n * num[-1] >= 0:\n            n += 1\n            s += num.pop()\n        else:\n            break\n    print(s * n + sum(num))", "t = int(input())\nwhile t:\n    n = int(input())\n    li = [int(i) for i in input().strip().split()]\n    (res, s, m) = (0, 0, 0)\n    neg = []\n    for i in li:\n        if i < 0:\n            neg += [i]\n        else:\n            s += i\n            m += 1\n    neg.sort()\n    for i in neg[::-1]:\n        if (s + i) * (m + 1) >= s * m + i:\n            s += i\n            m += 1\n        else:\n            res += i\n    res += s * m\n    print(res)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    pos = []\n    neg = []\n    arr = []\n    l = input()\n    for j in l.split():\n        if int(j) < 0:\n            neg.append(int(j))\n        else:\n            pos.append(int(j))\n        arr.append(int(j))\n    neg.sort(reverse=True)\n    a = sum(pos)\n    m = len(pos)\n    s = a * m\n    r = 0\n    for q in range(len(neg)):\n        if (a + neg[q]) * (m + 1) >= s:\n            s = (a + neg[q]) * (m + 1)\n            a = a + neg[q]\n            m = m + 1\n        else:\n            r = r + neg[q]\n    s = s + r\n    print(s)", "t = int(input().strip())\nfor a0 in range(t):\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split(' ')))\n    arr.sort()\n    ans = sum(arr) * n\n    sumArray = [0] * (n + 1)\n    for i in range(n):\n        s = ans - sumArray[i]\n        s = s // n\n        s -= arr[i]\n        s = s * (n - 1 if n > 2 else 1)\n        s += arr[i] + sumArray[i]\n        sumArray[i + 1] = arr[i] + sumArray[i]\n        if s > ans:\n            ans = s\n            n -= 1\n    print(ans)", "t = int(input().strip())\n\ndef partition(a, p):\n    j = -1\n    (a[p], a[-1]) = (a[-1], a[p])\n    pivot = a[-1]\n    for i in range(len(a) - 1):\n        if a[i] < pivot or (a[i] == pivot and pivot < 0):\n            j += 1\n            (a[i], a[j]) = (a[j], a[i])\n    (a[j + 1], a[-1]) = (a[-1], a[j + 1])\n    return j + 1\n\ndef closeToZero(a):\n    ctz = 0\n    if a[ctz] == 0:\n        return ctz\n    for i in range(1, len(a)):\n        if a[i] == 0:\n            ctz = i\n            break\n        if abs(a[i]) < abs(a[ctz]):\n            ctz = i\n    return ctz\nwhile t:\n    n = int(input().strip())\n    a = [int(x) for x in input().split()]\n    s = 0\n    part = closeToZero(a)\n    part = partition(a, part)\n    neg = -1\n    if a[part] >= 0 and part > 0:\n        neg = part - 1\n    elif a[part] < 0:\n        neg = part\n    if neg != -1:\n        a[0:neg + 1] = sorted(a[0:neg + 1])\n    flag = False\n    for i in a:\n        if i > 0:\n            flag = True\n            break\n    if flag == False:\n        s = sum(a[:neg + 1])\n    else:\n        ss = sum(a[neg + 1:])\n        ll = len(a[neg + 1:])\n        dd = sum(a[0:neg + 1])\n        best = ll * ss + dd\n        while neg >= 0:\n            ll += 1\n            ss += a[neg]\n            dd -= a[neg]\n            b = ll * ss + dd\n            if b > best:\n                best = b\n            neg -= 1\n        s = best\n    print(s)\n    t -= 1", "for _ in range(int(input())):\n    input()\n    a = sorted((int(x) for x in input().split()))\n    n = s = 0\n    while a:\n        if s + n * a[-1] >= 0:\n            n += 1\n            x = a.pop()\n            s += x\n        else:\n            break\n    print(s * n + sum(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().strip().split())))\n    pos = 0\n    while pos < n and a[pos] < 0:\n        pos += 1\n    if pos == n:\n        print(sum(a))\n        continue\n    suma = sum(a[pos:])\n    lena = len(a[pos:])\n    sumb = sum(a[:pos])\n    prev = suma * lena + sumb\n    if pos > 0:\n        pos -= 1\n        sumb -= a[pos]\n        lena += 1\n        suma += a[pos]\n        next = suma * lena + sumb\n    else:\n        next = prev\n    while pos > 0 and next > prev:\n        prev = next\n        pos -= 1\n        sumb -= a[pos]\n        lena += 1\n        suma += a[pos]\n        next = suma * lena + sumb\n    print(prev)", "t = int(input())\nfor e in range(t):\n    (a, ng, ps, c) = ([], 0, 0, 0)\n    (x, y) = ([], [])\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in a:\n        if i >= 0:\n            ps += i\n            c += 1\n            x.append(i)\n        else:\n            y.append(i)\n            ng += i\n    ans = ps * c + ng\n    if ps == 0:\n        print(ans)\n        continue\n    sumy = 0\n    y.sort(reverse=True)\n    for i in y:\n        c += 1\n        ps += i\n        ng -= i\n        ans = max(ans, ps * c + ng)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    t -= 1\n    list1 = list(map(int, input().split()))\n    c = 0\n    neglist = []\n    maxi = -1\n    sum1 = 0\n    for x in list1:\n        if x >= 0:\n            sum1 += x\n            c += 1\n            maxi = max(maxi, sum1 * c)\n        else:\n            neglist.append(x)\n    ans = maxi\n    if maxi < 0:\n        maxi = 0\n    neglist.sort()\n    neglist.reverse()\n    for x in neglist:\n        sum1 += x\n        tot = sum1 * (c + 1)\n        if maxi < max(tot, maxi):\n            c += 1\n            maxi = max(tot, maxi)\n        else:\n            maxi += x\n    print(maxi)", "from itertools import repeat\nfor _ in repeat(None, int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    count = 0\n    positive = 0\n    negative = 0\n    for i in a:\n        if i >= 0:\n            count += 1\n            positive += i\n        elif (count + 1) * (positive + i) > count * positive + i:\n            count += 1\n            positive += i\n        else:\n            negative += i\n    print(count * positive + negative)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    sump = 0\n    sumn = 0\n    dell = 0\n    cntn = 0\n    cntp = 0\n    neg = -1\n    for j in range(n):\n        if arr[j] >= 0:\n            sump += arr[j]\n            cntp += 1\n        else:\n            sumn = sumn + arr[j]\n            if neg == -1:\n                neg = j\n    cntn = n - cntp\n    mulp = cntp * sump\n    muln = sumn\n    maxmul = mulp\n    ans = 0\n    if neg != -1:\n        for j in range(neg, n):\n            if mulp < (cntp + 1) * (sump + arr[j]):\n                sump += arr[j]\n                cntp += 1\n                sumn -= arr[j]\n                mulp = cntp * sump\n            else:\n                ans = mulp + sumn\n    else:\n        ans = cntp * sump\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    result = 0\n    if a[0] <= 0:\n        result = sum(a)\n    else:\n        current_max = 0\n        _sum = 0\n        i = 0\n        for x in a:\n            i += 1\n            _sum += x\n            if current_max > _sum * i:\n                result = current_max + sum(a[i - 1:])\n                break\n            current_max = _sum * i\n        else:\n            result = current_max\n    print(result)", "T = eval(input())\nfor i in range(T):\n    X = eval(input())\n    c = 0\n    sum1 = 0\n    A = list(map(eval, input().split()))\n    A.sort()\n    j = X - 1\n    while j >= 0:\n        if (sum1 + A[j]) * (c + 1) >= sum1 * c:\n            sum1 = sum1 + A[j]\n            j = j - 1\n            c = c + 1\n        else:\n            break\n    sum1 = sum1 * c\n    while j >= 0:\n        sum1 = sum1 + A[j]\n        j = j - 1\n    print(sum1)", "t = int(input())\nwhile t > 0:\n    t1 = int(input())\n    numbers = list(map(int, input().split()))\n    sum = 0\n    plusnum = 0\n    tot = 0\n    nsum = 0\n    numbers.sort(reverse=True)\n    for n in numbers:\n        if n >= 0:\n            plusnum = plusnum + n\n            tot = tot + 1\n        elif plusnum + (tot + 1) * n > 0:\n            plusnum = plusnum + n\n            tot = tot + 1\n        else:\n            nsum = nsum + n\n    sum = nsum + plusnum * tot\n    print(sum)\n    t = t - 1", "T = int(input())\nfor case in range(T):\n    N = int(input())\n    A = [int(ai) for ai in input().split()]\n    npos = 0\n    pos = 0\n    nA = []\n    for ai in A:\n        if ai >= 0:\n            pos = pos + ai\n            npos += 1\n        else:\n            nA.append(-ai)\n    nA.sort()\n    if npos == 0:\n        hap = -sum(nA)\n    else:\n        i = 0\n        while i < len(nA):\n            if nA[i] < pos / npos:\n                pos = pos - nA[i]\n                npos += 1\n                i += 1\n            else:\n                break\n        hap = pos * npos - sum(nA[i:])\n    print(hap)", "import math\n\ndef findjustsmall(val, arr):\n    low = 0\n    high = len(arr)\n    mid = 0\n    while low <= high:\n        mid = int((high + low) / 2)\n        if arr[mid] < val:\n            if low == high - 1:\n                return mid\n            low = mid\n        else:\n            if low == high - 1:\n                break\n            high = mid\n    return -1\n\ndef findjustgreat(val, arr):\n    low = 0\n    high = len(arr) - 1\n    mid = 0\n    while low <= high:\n        mid = int((high + low) / 2)\n        if arr[mid] >= val:\n            if low == high:\n                return mid\n            high = mid\n        elif low == high - 1:\n            low = high\n        elif low == high:\n            break\n        else:\n            low = mid\n    return -1\nt = int(input())\nfor T in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    neglast = findjustsmall(0, a)\n    posfirst = findjustgreat(0, a)\n    tpos = 0\n    tneg = 0\n    for x in a:\n        if x >= 0:\n            tpos += x\n        else:\n            tneg += x\n    if posfirst == len(a) - 1:\n        print(tneg)\n    else:\n        cursum = tpos\n        curn = n - posfirst\n        j = neglast\n        x = a[j]\n        while cursum > abs(curn * x) and j >= 0:\n            cursum += x\n            tneg = tneg - x\n            curn += 1\n            j = j - 1\n            if j >= 0:\n                x = a[j]\n        ans = cursum * curn + tneg\n        print(ans)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    arr = []\n    neg = []\n    pos = []\n    ans = 0\n    copy = 0\n    arr = [int(x) for x in input().split(' ')]\n    for i in range(n):\n        if arr[i] < 0:\n            neg.append(arr[i])\n        else:\n            pos.append(arr[i])\n    copy = ans = sum(pos)\n    n_terms = len(pos)\n    ans *= n_terms\n    neg.sort(reverse=True)\n    if n_terms == 0:\n        ans = sum(neg)\n    else:\n        for i in range(len(neg)):\n            if (copy + neg[i]) * (n_terms + 1) >= ans:\n                n_terms = n_terms + 1\n                copy = copy + neg[i]\n                ans = copy * n_terms\n            else:\n                break\n        for j in range(i, len(neg)):\n            ans += neg[j]\n    print(ans)", "for _ in range(int(input())):\n    size = int(input())\n    dishes = sorted(list(map(int, input().split())))[::-1]\n    (positivessum, negativessum) = (0, 0)\n    (positives, negatives) = (list(), list())\n    for i in range(size):\n        if dishes[i] >= 0:\n            positives.append(dishes[i])\n            positivessum += dishes[i]\n        else:\n            negatives.append(dishes[i])\n            negativessum += dishes[i]\n    (lenp, lenn) = (len(positives), len(negatives))\n    index = 0\n    posans = lenp * positivessum\n    negans = negativessum\n    count = lenp\n    flag = 0\n    for i in range(lenn):\n        subans = (negatives[i] + positivessum) * (count + 1)\n        if subans > posans:\n            posans = subans\n            positivessum += negatives[i]\n            count += 1\n            index = i\n        elif count == lenp:\n            flag = 1\n            break\n        else:\n            break\n    if flag == 0:\n        print(posans + sum(negatives[index + 1:]))\n    else:\n        print(posans + negativessum)", "varTest = int(input('\\n'))\nfor j in range(0, varTest):\n    arraylength = int(input('\\n'))\n    array = list(map(int, input().split()))\n    array.sort(key=None, reverse=False)\n    length = int(len(array))\n    sum = int(0)\n    startingindex = int(-1)\n    for i in range(0, length, 1):\n        if int(array[i]) >= 0:\n            if startingindex == int(-1):\n                startingindex = int(i)\n            sum = sum + int(array[i])\n    answer = int(0)\n    if startingindex != int(-1):\n        leng = int(length - startingindex)\n        answer = int(sum * leng)\n    sum2 = answer\n    if startingindex != int(0):\n        if startingindex == -1:\n            for i in range(0, arraylength):\n                answer = answer + int(array[i])\n        else:\n            j = startingindex\n            for i in range(1, startingindex + 1, 1):\n                if sum2 >= answer:\n                    answer = sum2\n                    sum = sum + array[startingindex - i]\n                    sum2 = sum\n                    sum2 = sum2 * (length - startingindex + i)\n                    j = startingindex - i\n            for i in range(0, j + 1):\n                answer = answer + int(array[i])\n    print(answer, end='\\n')", "n = int(input().strip())\nfor a0 in range(n):\n    num = int(input().strip())\n    a = [int(a_temp) for a_temp in input().strip().split(' ')]\n    a = sorted(a)\n    a = a[::-1]\n    sec = []\n    s = 0\n    c = 0\n    sep = 0\n    for x in a:\n        if x >= 0:\n            s = s + x\n            c = c + 1\n        else:\n            sec.append(x)\n    for y in sec:\n        if (s + y) * (c + 1) >= s * c:\n            s = s + y\n            c = c + 1\n        else:\n            sep = sep + y\n    print(s * c + sep)", "t = int(input())\nfor y in range(t):\n    n = int(input())\n    k = list(input().split())\n    k = [int(X) for X in k]\n    k.sort()\n    r = 0\n    s = 0\n    for i in range(n):\n        if k[i] < 0:\n            e = i\n            s = s + k[i]\n        else:\n            r = r + k[i]\n    if r == 0:\n        print(s)\n    elif s == 0:\n        print(r * n)\n    else:\n        re = r * (n - 1 - e) + s\n        k.reverse()\n        d = r\n        h = n - e\n        for j in range(n - 1 - e, n):\n            d = d + k[j]\n            s = s + -1 * k[j]\n            g = d * h + s\n            h = h + 1\n            if re < g:\n                re = g\n        print(re)", "import itertools\nT = int(input())\nfor case in range(T):\n    n = int(input())\n    xs = list(map(int, input().split()))\n    xs.sort()\n    sl = list(itertools.accumulate(xs))\n    ans = sum(xs) * len(xs)\n    s = sum(xs)\n    for (i, x) in enumerate(xs):\n        ans = max(ans, sl[i] + (s - sl[i]) * (n - i - 1))\n    print(ans)", "tc = int(input())\nwhile tc:\n    n = int(input())\n    no = list(map(int, input().split()))\n    neg = []\n    pos = []\n    ncnt = 0\n    pcnt = 0\n    psum = 0\n    nsum = 0\n    for x in range(n):\n        temp = no[x]\n        if temp < 0:\n            neg.append(temp)\n            ncnt = ncnt + 1\n            nsum = nsum + temp\n        else:\n            pos.append(temp)\n            pcnt = pcnt + 1\n            psum = psum + temp\n    neg = sorted(neg, reverse=True)\n    ans = nsum + psum * pcnt\n    for x in range(ncnt):\n        nsum = nsum - neg[x]\n        ncnt = ncnt - 1\n        pcnt = pcnt + 1\n        psum = psum + neg[x]\n        tans = nsum + psum * pcnt\n        if tans > ans:\n            ans = tans\n        else:\n            break\n    print(ans)\n    tc = tc - 1", "def binary_search(arr, start, end, key):\n    if start > end:\n        return -1\n    mid = (start + end) // 2\n    if arr[mid] == key:\n        return mid\n    if arr[mid] > key:\n        return binary_search(arr, start, mid - 1, key)\n    else:\n        return binary_search(arr, mid + 1, end, key)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input()\n    arr = arr.split()\n    minpos = 10 ** 9\n    for i in range(len(arr)):\n        arr[i] = int(arr[i])\n        if arr[i] > 0 and minpos > arr[i]:\n            minpos = arr[i]\n    arr = sorted(arr)\n    index = binary_search(arr, 0, n - 1, minpos)\n    start = 0\n    if index == -1:\n        start = n - 1\n    else:\n        start = index - 1\n    sumpos = 0\n    for i in range(start + 1, n):\n        sumpos += arr[i]\n    npos = n - 1 - start\n    tmp = start\n    sumneg = 0\n    nneg = 0\n    cumarr = [arr[0]]\n    for j in range(1, tmp + 1):\n        cumarr.append(cumarr[j - 1] + arr[j])\n    maxhappiness = 0\n    if tmp >= 0:\n        maxhappiness = npos * sumpos + cumarr[tmp]\n    else:\n        maxhappiness = npos * sumpos\n    for j in range(tmp, -1, -1):\n        sumneg = 0\n        restsum = 0\n        if j == 0:\n            sumneg = cumarr[start]\n            restsum = 0\n        else:\n            sumneg = cumarr[start] - cumarr[j - 1]\n            restsum = cumarr[j - 1]\n        nneg = start - j + 1\n        if (npos + nneg) * (sumpos + sumneg) + restsum > maxhappiness:\n            maxhappiness = (npos + nneg) * (sumpos + sumneg) + restsum\n    print(maxhappiness)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    ans = 0\n    curr_sum = 0\n    for i in range(n):\n        curr_sum += a[i]\n        if curr_sum * (i + 1) > ans:\n            ans = curr_sum * (i + 1)\n        else:\n            ans += a[i]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    l = []\n    n = int(input())\n    l = input().split()\n    c = 0\n    sump = sumn = 0\n    for i in range(n):\n        l[i] = int(l[i])\n    l.sort()\n    s = sum(l)\n    i = 0\n    max = s * n\n    v = []\n    s1 = 0\n    while i < n:\n        s -= l[i]\n        s1 += l[i]\n        pdt = s * (n - i - 1) + s1\n        if pdt > max:\n            max = pdt\n        else:\n            break\n        i += 1\n    print(max)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = input().split(' ')\n    A = [int(a) for a in A]\n    A.sort()\n    i = 0\n    flag = False\n    while i < n:\n        if A[i] < 0:\n            i += 1\n        else:\n            flag = True\n            break\n    neg = A[:i][::-1]\n    pos = A[i:][::-1]\n    comb = []\n    out = []\n    minLen = min(len(pos), len(neg))\n    currSum = sum(pos)\n    for i in range(len(neg)):\n        withNeg = (currSum + neg[i]) * (len(pos) + 1)\n        if withNeg > currSum * len(pos):\n            pos.append(neg[i])\n            currSum += neg[i]\n        else:\n            out.append(neg[i])\n    res = sum(pos) * len(pos) + sum(out)\n    print(str(res))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    A.sort(reverse=True)\n    sumA = [0]\n    revSumA = [0]\n    index = 0\n    for j in A:\n        sumA.append(j + sumA[index])\n        index += 1\n    index = 0\n    for j in range(n - 1, -1, -1):\n        revSumA.append(A[j] + revSumA[index])\n        index += 1\n    ans = sum(A)\n    for i in range(2, n + 1):\n        tmp = sumA[i] * i + revSumA[n - i]\n        if tmp > ans:\n            ans = tmp\n        else:\n            break\n    print(ans)", "import sys\n\ndef set_input():\n    t = int(input())\n    inp = []\n    sum = []\n    for i in range(t):\n        n = int(input())\n        inp = list(map(int, input().split()))\n        sum.append(solve(n, inp))\n    for i in sum:\n        print(i)\n\ndef solve(n, inp):\n    neg_sum = 0\n    pos_sum = 0\n    neg = []\n    pos = []\n    for i in inp:\n        if i < 0:\n            neg.append(i)\n        elif i >= 0:\n            pos.append(i)\n    len_pos = len(pos)\n    pos_sum = sum(pos)\n    neg_sum = sum(neg)\n    sorted1 = sorted(neg, reverse=True)\n    old_sum = len_pos * pos_sum + neg_sum\n    count = 0\n    sum1 = 0\n    if inp.count(0) + len(neg) == len(inp) or len(neg) == len(inp):\n        return neg_sum\n    elif len_pos == len(inp):\n        return len_pos * pos_sum\n    else:\n        for i in sorted1:\n            count += 1\n            new_sum = sum1\n            sum1 = (len_pos + count) * (pos_sum + i) + (neg_sum - i)\n            if sum1 > new_sum:\n                neg_sum = neg_sum - i\n                pos_sum = pos_sum + i\n            else:\n                break\n        return max(len_pos * pos_sum + neg_sum, new_sum)\nset_input()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().rstrip().split(' ')))\n    array.sort()\n    cum_sum = [array[0]]\n    for j in range(1, n):\n        cum_sum.append(cum_sum[j - 1] + array[j])\n    total_sum = cum_sum[n - 1]\n    prev_sum = total_sum * n\n    printed = False\n    for j in range(n):\n        new_sum = (total_sum - cum_sum[j]) * (n - (j + 1)) + cum_sum[j]\n        if new_sum < prev_sum:\n            print(prev_sum)\n            printed = True\n            break\n        else:\n            prev_sum = new_sum\n    if not printed:\n        print(new_sum)", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    ans = 0\n    s = 0\n    count = 0\n    l.sort(reverse=True)\n    temp = 0\n    for i in range(0, len(l)):\n        if (s + l[i]) * (count + 1) >= temp:\n            count += 1\n            s += l[i]\n            temp = s * count\n        else:\n            ans += l[i]\n    print(s * count + ans)\n    t -= 1", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    a = [int(x) for x in a]\n    count_negative = sum((x < 0 for x in a))\n    count_only_neg = sum((x <= 0 for x in a))\n    if count_only_neg == n:\n        print(sum(a))\n    elif count_negative == 0:\n        print(n * sum(a))\n    elif count_negative == n:\n        print(sum(a))\n    else:\n        count_positive = n - count_negative\n        positive_list = [i for i in a if i > 0]\n        negative_list = [i for i in a if i < 0]\n        sum_positive = sum(positive_list)\n        sum_negative = sum(negative_list)\n        first_sum = sum_negative + sum_positive * count_positive\n        second_sum = n * sum(a)\n        negative_list.sort(reverse=True)\n        counts = 0\n        new_sum = 0\n        pre_sum = sum_positive\n        pre_neg = sum_negative\n        for i in negative_list:\n            counts = counts + 1\n            old_sum = new_sum\n            new_sum = (pre_sum + i) * (count_positive + counts) + (pre_neg - i)\n            pre_sum = pre_sum + i\n            pre_neg = pre_neg - i\n            if old_sum > new_sum:\n                break\n        print(max(first_sum, second_sum, old_sum))", "for t in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    x.sort(reverse=True)\n    s = x[0]\n    mul = 1\n    res = 0\n    for i in range(1, len(x)):\n        prev = s * mul\n        s += x[i]\n        mul += 1\n        if s * mul < prev and s * mul < prev + x[i]:\n            res += prev\n            s = x[i]\n            mul = 1\n    res += s * mul\n    print(res)", "for ti in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    m.sort(reverse=True)\n    r = 0\n    s = m[0]\n    c = 1\n    for i in range(1, n):\n        if (s + m[i]) * (c + 1) >= s * c + m[i]:\n            s = s + m[i]\n            c = c + 1\n        else:\n            r = r + s * c\n            s = m[i]\n            c = 1\n    r = r + s * c\n    print(r)", "from sys import setrecursionlimit, exit, stdin\nfrom math import ceil, floor, acos, pi, factorial\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom collections import Counter\nimport itertools\nsetrecursionlimit(10 ** 7)\nRI = lambda x=' ': list(map(int, input().split(x)))\nRS = lambda x=' ': input().rstrip().split(x)\ndX = [-1, 1, 0, 0, -1, 1, -1, 1]\ndY = [0, 0, -1, 1, 1, -1, -1, 1]\nmod = int(1000000000.0 + 7)\neps = 1e-06\nMAX = 10 ** 5 + 10\nT = RI()[0]\nfor _ in range(T):\n    N = RI()[0]\n    A = RI()\n    ans = 0\n    (i, s, c) = (0, 0, 0)\n    A.sort(reverse=True)\n    while i < N and (s + A[i]) * (c + 1) > s * c:\n        s += A[i]\n        c += 1\n        i += 1\n    ans = s * c\n    while i < N:\n        ans += A[i]\n        i += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    count = 0\n    negatives = []\n    for x in arr:\n        if x >= 0:\n            count += 1\n            ans += x\n        else:\n            negatives.append(x)\n    if len(negatives) == 0:\n        print(ans * count)\n        continue\n    negatives.sort()\n    temp = sum(negatives)\n    res = ans * count + temp\n    z = ans\n    for j in range(len(negatives) - 1, 0, -1):\n        z += negatives[j]\n        count += 1\n        temp -= negatives[j]\n        res = max(res, z * count + temp)\n    print(res)", "for i in range(int(input())):\n    amd = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    mke = len(array) - 1\n    for k in range(len(array)):\n        if array[k] >= 0:\n            mke = k\n            break\n    total = sum(array) * len(array)\n    sum1 = sum(array)\n    r = len(array)\n    rmd = 0\n    for j in range(mke):\n        sum1 = sum1 - array[j]\n        r -= 1\n        rmd += array[j]\n        newsum = sum1 * r + rmd\n        if total > newsum:\n            break\n        else:\n            total = newsum\n    print(total)", "__author__ = ['vjn4006(Vaibhav Nagda)']\n\ndef main():\n    t = int(input().strip())\n    for _ in range(t):\n        n = int(input().strip())\n        s = sorted(list(map(int, input().strip().split(' '))))\n        grt_cnt = 0\n        grt_sum = 0\n        happiness = 0\n        smaller = []\n        for i in s:\n            if i >= 0:\n                grt_cnt += 1\n                grt_sum += i\n            else:\n                smaller.append(i)\n        happiness = grt_sum * grt_cnt\n        smaller = sorted(smaller)\n        smaller = list(reversed(smaller))\n        start = 0\n        grt_cnt += 1\n        for i in range(len(smaller)):\n            if grt_cnt * (grt_sum + smaller[i]) >= happiness:\n                grt_sum += smaller[i]\n                happiness = grt_sum * grt_cnt\n                grt_cnt += 1\n            else:\n                start = i\n                break\n        for i in range(start, len(smaller)):\n            happiness += smaller[i]\n        print(happiness)\n    return\nmain()", "for _ in range(int(input())):\n    input()\n    happiness_array = list(map(int, input().split()))\n    displeasurables = sorted(filter(lambda x: x < 0, happiness_array), reverse=True)\n    pleasurables = [x for x in happiness_array if x >= 0]\n    sum_displeasure = sum(displeasurables)\n    sum_pleasure = sum(pleasurables)\n    len_pleasure = len(pleasurables)\n    max_pleasure = sum_pleasure * len_pleasure + sum_displeasure\n    for item in displeasurables:\n        len_pleasure += 1\n        sum_pleasure += item\n        sum_displeasure -= item\n        temp = sum_pleasure * len_pleasure + sum_displeasure\n        if temp > max_pleasure:\n            max_pleasure = temp\n        else:\n            break\n    print(max_pleasure)", "for _ in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    c = [i for i in a if i >= 0]\n    d = [i for i in a if i < 0]\n    s = sum(c)\n    l = len(c)\n    ans = s * l + sum(d)\n    for i in reversed(sorted(d)):\n        if i * l + s > 0:\n            ans += i * l + s\n            s += i\n            l += 1\n    print(ans)", "numTests = int(input())\nfor test in range(numTests):\n    numDishes = int(input())\n    happy = map(int, input().split())\n    sumPos = 0\n    countPos = 0\n    negNums = []\n    for h in happy:\n        if h > -1:\n            sumPos += h\n            countPos += 1\n        else:\n            negNums.append(-h)\n    negNums.sort()\n    done = negNums == []\n    while not done:\n        done = negNums[0] * (countPos + 1) > sumPos\n        if not done:\n            sumPos -= negNums.pop(0)\n            countPos += 1\n            done = negNums == []\n    print(int(sumPos * countPos - sum(negNums)))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input().split(' ')\n    for i in range(N):\n        A[i] = int(A[i])\n    A.sort()\n    result1 = 0\n    result2 = 0\n    pos = N - 1\n    for i in range(N):\n        if A[i] >= 0:\n            pos = i - 1\n            break\n    result1 = sum(A[:pos + 1])\n    factor2 = N - pos - 1\n    sum2 = sum(A[pos + 1:])\n    result2 = factor2 * sum2\n    result = result1 + result2\n    if sum2 - abs(A[pos]) <= abs(A[pos]) * (N - pos - 1):\n        print(result)\n        continue\n    else:\n        while sum2 - abs(A[pos]) > abs(A[pos]) * (N - pos - 1):\n            sum2 -= abs(A[pos])\n            pos -= 1\n        result1 = sum(A[:pos + 1])\n        result2 = (N - pos - 1) * sum2\n    result = result1 + result2\n    print(result)", "count = int(input())\nfor step in range(count):\n    size = int(input())\n    dishes = [int(x) for x in input().split()]\n    dishes.sort(reverse=True)\n    happiness = 0\n    counter = 0\n    negative = 0\n    top = 0\n    for mrinal in dishes:\n        if top <= (happiness + mrinal) * (counter + 1):\n            top = (happiness + mrinal) * (counter + 1)\n            happiness += mrinal\n            counter += 1\n        else:\n            negative += mrinal\n    happiness *= counter\n    happiness += negative\n    print(happiness)", "import array\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split(' ')]\n    l.sort()\n    if l[0] >= 0:\n        print(sum(l) * len(l))\n    elif l[len(l) - 1] <= 0:\n        print(sum(l))\n    else:\n        l_1 = l\n        l_2 = l\n        l11 = filter(lambda x: x >= 0, l_1)\n        l2 = filter(lambda x: x < 0, l_2)\n        l2 = list(tuple(l2))\n        l11 = list(tuple(l11))\n        l2.sort()\n        sum1 = sum(l11)\n        l1 = len(l11)\n        sum2 = sum1 * l1\n        prev = sum2\n        k = 1\n        length = len(l2) - 1\n        while length >= 0:\n            sum1 = sum1 + l2[length]\n            l22 = l1 + k\n            sum2 = sum1 * l22\n            if prev >= sum2:\n                sum2 = prev\n                break\n            prev = sum2\n            k += 1\n            length -= 1\n        print(sum2 + sum(l2[0:length + 1]))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    a.extend(map(int, input().split()))\n    a.sort(reverse=True)\n    c = 0\n    s = a[0]\n    while (s + a[c + 1]) * (c + 2) >= s * (c + 1):\n        s += a[c + 1]\n        c += 1\n        if c >= n - 1:\n            break\n    s *= c + 1\n    for i in range(c + 1, n):\n        s += a[i]\n    print(s)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    count = 0\n    res = 0\n    exclude = 0\n    for number in sorted(map(int, input().split()))[::-1]:\n        including_cur = (res + number) * (count + 1)\n        excluding_cur = res * count + number\n        if including_cur >= excluding_cur:\n            res += number\n            count += 1\n        else:\n            exclude += number\n    print(res * count + exclude)", "cases = int(input())\nfor case_i in range(cases):\n    n = int(input())\n    arr = [int(k) for k in input().split(' ')]\n    arr.sort(reverse=True)\n    pos_sum = 0\n    pos_total = 0\n    total_sum = 0\n    i = 0\n    while i < n and (arr[i] >= 0 or (pos_sum + arr[i]) * (pos_total + 1) >= pos_sum * i):\n        pos_sum += arr[i]\n        pos_total += 1\n        i += 1\n    print(pos_sum * pos_total + sum(arr[i:]))", "T = int(input())\ni = 0\nwhile i < T:\n    N = int(input())\n    negs = []\n    sump = 0\n    ns = input().split()\n    for e in ns:\n        e = int(e)\n        if e < 0:\n            negs.append(e)\n        else:\n            sump += e\n    negs.sort(reverse=True)\n    nump = N - len(negs)\n    j = 0\n    for e in negs:\n        contn = -(nump + 1) * e\n        diff = sump\n        if contn <= sump:\n            sump += e\n            nump += 1\n            j += 1\n        else:\n            break\n    sump = sump * nump\n    negs = negs[j:]\n    for e in negs:\n        sump += e\n    print(sump)\n    i += 1"]