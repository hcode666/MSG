["for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    st = bin(a)[2:]\n    s = 0\n    m = 1\n    ans = 0\n    for i in range(len(st) - 1, -1, -1):\n        if st[i] == '1':\n            ans += m * min(m - s, b - a + 1)\n            ans %= 1000000007\n            s += m\n        m *= 2\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    st = bin(a)[2:]\n    s = 0\n    m = 1\n    ans = 0\n    for i in range(len(st) - 1, -1, -1):\n        if st[i] == '1':\n            ans += m * min(m - s, b - a + 1)\n            ans %= 1000000007\n            s += m\n        m *= 2\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    st = bin(a)[2:]\n    s = 0\n    m = 1\n    ans = 0\n    for i in range(len(st) - 1, -1, -1):\n        if st[i] == '1':\n            ans += m * min(m - s, b - a + 1)\n            ans %= 1000000007\n            s += m\n        m *= 2\n    print(ans)", "MOD = int(10 ** 9) + 7\nfor _ in range(int(input())):\n    (L, R) = map(int, input().split())\n    ans = 0\n    for i in range(0, 61):\n        pw = 1 << i\n        if L & pw == 0:\n            continue\n        diff = pw - 1 - (L & pw - 1) + 1\n        ans += min(diff, R - L + 1) % MOD * (pw % MOD) % MOD\n        ans %= MOD\n    ans %= MOD\n    print(ans)", "MOD = int(10 ** 9) + 7\n\ndef solve(L, R):\n    ans = 0\n    for i in range(0, 61):\n        pw = 1 << i\n        if L & pw == 0:\n            continue\n        diff = pw - 1 - (L & pw - 1) + 1\n        ans += min(diff, R - L + 1) % MOD * (pw % MOD) % MOD\n        ans %= MOD\n    ans %= MOD\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (L, R) = map(int, input().split())\n    solve(L, R)", "MOD = int(10 ** 9) + 7\n\ndef solve(L, R):\n    ans = 0\n    for i in range(0, 61):\n        pw = 1 << i\n        if L & pw == 0:\n            continue\n        diff = pw - 1 - (L & pw - 1) + 1\n        ans += min(diff, R - L + 1) % MOD * (pw % MOD) % MOD\n        ans %= MOD\n    ans %= MOD\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (L, R) = map(int, input().split())\n    solve(L, R)", "l = []\nfor i in range(62):\n    l.append(2 ** i)\nT = int(input())\nflag = 0\nfor t in range(T):\n    (L, R) = [int(i) for i in input().split()]\n    bL = bin(L)\n    lL = len(bL) - 2\n    index = 1\n    ans = 0\n    temp = 0\n    while index <= lL:\n        temp = L % l[index]\n        if temp >= l[index - 1]:\n            if l[index] - temp <= R - L + 1:\n                ans = (ans + l[index - 1] * (l[index] - temp)) % 1000000007\n            else:\n                ans = (ans + l[index - 1] * (R - L + 1)) % 1000000007\n        index += 1\n    print(ans)", "mod = int(1000000000.0) + 7\nt = int(input())\nwhile t:\n    t -= 1\n    (l, r) = map(int, input().split())\n    binl = bin(l)[:1:-1]\n    (f, cnt, ans) = (1, 0, 0)\n    for i in binl:\n        if i == '1':\n            ans = (ans + f * min(f - cnt, r - l + 1)) % mod\n            cnt += f\n        f *= 2\n    print(ans)", "MOD = 1000000007\na = int(input())\nfor i in range(a):\n    (x, y) = map(int, input().split())\n    start = x\n    end = y\n    ans = x\n    prev = x\n    z = x\n    j = -1\n    while start != 0:\n        j += 1\n        if z & 1 != 0:\n            add = 1 << j\n            next = start + add\n            if next > end:\n                ans = ans + (end - prev) * start\n                break\n            ans = ans + ((next - prev - 1) * start + (start - add))\n            ans %= MOD\n            start -= add\n            if next == end:\n                break\n            prev = next\n        z = z >> 1\n    print(ans % MOD)", "MOD = 1000000007\na = int(input())\nfor i in range(a):\n    (x, y) = map(int, input().split())\n    start = x\n    end = y\n    ans = x\n    prev = x\n    z = x\n    j = -1\n    while start != 0:\n        j += 1\n        if z & 1 != 0:\n            add = pow(2, j)\n            next = start + add\n            if next > end:\n                ans = ans + (end - prev) * start\n                break\n            ans = ans + ((next - prev - 1) * start + (start - add))\n            ans %= MOD\n            start -= add\n            if next == end:\n                break\n            prev = next\n        z = z >> 1\n    print(ans % MOD)", "MOD = 1000000007\na = int(input())\nfor i in range(a):\n    (x, y) = map(int, input().split())\n    start = x\n    end = y\n    ans = x\n    prev = x\n    z = x\n    j = -1\n    while start != 0:\n        j += 1\n        if z & 1 != 0:\n            add = pow(2, j)\n            next = start + add\n            if next > end:\n                ans = (ans + (end - prev) % MOD * start % MOD % MOD) % MOD\n                break\n            ans = (ans + ((next - prev - 1) % MOD * start % MOD % MOD + (start - add) % MOD) % MOD) % MOD\n            ans %= MOD\n            start -= add\n            if next == end:\n                break\n            prev = next\n        z = z >> 1\n    print(ans % MOD)", "t = int(input())\nwhile t:\n    t -= 1\n    (l, r) = [int(i) for i in input().split()]\n    bl = bin(l)[2:]\n    bl = bl[::-1]\n    sub = 0\n    val = 1\n    ans = 0\n    mod = 10 ** 9 + 7\n    for i in range(len(bl)):\n        if bl[i] == '1':\n            ans += val * min(val - sub, r - l + 1) % mod\n            sub += val\n        val *= 2\n    print(ans % mod)", "m = [1]\nmod = 10 ** 9 + 7\nfor i in range(60):\n    a = m[-1]\n    a *= 2\n    a %= mod\n    m.append(a)\nfor i in range(int(input())):\n    (L, R) = map(int, input().split())\n    tmp = 0\n    l = bin(L)[2:]\n    r = bin(R)[2:]\n    a = 1\n    ans = L % mod\n    for i in range(1, len(l) + 1):\n        if l[-i] == '0':\n            if tmp + 2 ** (i - 1) <= R - L:\n                ans += m[i - 1] * (L - a + 1) % mod\n                tmp += 2 ** (i - 1)\n                ans %= mod\n            else:\n                ans += (R - L - tmp) * (L - a + 1) % mod\n                ans %= mod\n                break\n        else:\n            a += m[i - 1]\n    print(ans)", "mod = 10 ** 9 + 7\nt = int(input())\nwhile t > 0:\n    (l, r) = map(int, input().split())\n    ans = 0\n    for i in range(63):\n        if l & 1 << i:\n            x = (1 << i) - (l & (1 << i) - 1)\n            x = min(x, r - l + 1)\n            ans += x * (1 << i)\n    print(ans % mod)\n    t = t - 1", "from sys import stdin, stdout\nmod = 1000 * 1000 * 1000 + 7\nfor i in range(int(stdin.readline())):\n    (l, r) = map(int, stdin.readline().split())\n    act = 0\n    req = 0\n    ans = 0\n    for i in range(60):\n        val = min(r - l + 1, req - act + 1)\n        val %= mod\n        if l & 1 << i:\n            ans += val * ((1 << i) % mod) % mod\n            ans %= mod\n            act += 1 << i\n        req += 1 << i\n    print(ans)", "from sys import stdin\nmod = 1000 * 1000 * 1000 + 7\nfor i in range(int(stdin.readline())):\n    (l, r) = map(int, stdin.readline().split())\n    act = 0\n    req = 0\n    ans = 0\n    for i in range(60):\n        val = min(r - l + 1, req - act + 1)\n        val %= mod\n        if l & 1 << i:\n            ans += val * ((1 << i) % mod) % mod\n            ans %= mod\n            act += 1 << i\n        req += 1 << i\n    print(ans)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    max_no_elm = r - l + 1\n    (ans, multi, l_p, r_p) = (0, 1, l, 0)\n    while l_p != 0:\n        curr_bit = l_p & 1\n        if curr_bit == 1:\n            no_elm = multi - r_p\n            ans = (ans + multi * min(no_elm, max_no_elm)) % MOD\n        (l_p, r_p) = (l_p >> 1, r_p + multi * curr_bit)\n        multi = multi << 1\n    print(ans)", "MVAL = 1000000007\n\ndef rangeand(low, hi):\n    odf = hi - low + 1\n    ra = 0\n    p2 = 1\n    lmd = 0\n    while low & p2 == 0:\n        p2 *= 2\n    pmdf = p2\n    if pmdf >= odf:\n        return odf * low % MVAL\n    while p2 <= low:\n        if low & p2:\n            lmd += p2\n            ra += pmdf * p2 % MVAL\n        else:\n            pmdf += p2\n            if pmdf >= odf:\n                ra += odf * (low - lmd) % MVAL\n                break\n        p2 *= 2\n    return ra % MVAL\nt = int(input())\nans = []\nfor ti in range(t):\n    (l, r) = map(int, input().split())\n    ans.append(rangeand(l, r))\nprint(*ans, sep='\\n')", "MVAL = 1000000007\n\ndef rangeand(low, hi):\n    ra = 0\n    p2 = 1\n    lmd = 0\n    ldv = low\n    hdv = hi\n    while p2 <= low:\n        thisbit = low & p2\n        p2 *= 2\n        ldv //= 2\n        hdv //= 2\n        if ldv == hdv:\n            ra += (hi + 1 - low) * (low - lmd) % MVAL\n            break\n        elif thisbit > 0:\n            lmd += thisbit\n            ra += (p2 - lmd) * thisbit % MVAL\n    return ra % MVAL\nt = int(input())\nfor ti in range(t):\n    (l, r) = map(int, input().split())\n    print(rangeand(l, r))", "MVAL = 1000000007\n\ndef rangeand(low, hi):\n    ra = 0\n    p2 = 1\n    while p2 <= low:\n        (ld, lm) = divmod(low, p2 * 2)\n        (hd, hm) = divmod(hi, p2 * 2)\n        if ld == hd:\n            ra += (hm - lm + 1) * (p2 & lm) % MVAL\n        else:\n            ra += (p2 * 2 - lm) * (p2 & lm) % MVAL\n        p2 *= 2\n    return ra % MVAL\nt = int(input())\nfor ti in range(t):\n    (l, r) = map(int, input().split())\n    print(rangeand(l, r))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    st = bin(a)[2:]\n    s = 0\n    m = 1\n    ans = 0\n    for i in range(len(st) - 1, -1, -1):\n        if st[i] == '1':\n            ans += m * min(m - s, b - a + 1)\n            ans %= 1000000007\n            s += m\n        m *= 2\n    print(ans)", "mod = 1000000007\nt = int(input())\nwhile t:\n    (l, r) = map(int, input().split())\n    ans = 0\n    if l == r:\n        print(l % mod)\n    else:\n        temp = l\n        i = 1\n        j = 1\n        while temp:\n            if temp & 1:\n                tp2 = l & i\n                k = min(r - l + 1, i - tp2 + 1)\n                ans = (ans + j * k) % mod\n            i <<= 1\n            i += 1\n            j <<= 1\n            temp >>= 1\n        print(ans % mod)\n    t -= 1", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    z = 2\n    while z <= l:\n        z *= 2\n    if r > z:\n        r = z - 1\n    z = z // 2\n    ans = l\n    lb = bin(l).replace('0b', '')\n    for i in lb:\n        if i != '0':\n            h = l % z\n            h = z - h - 1\n            if h >= r - l:\n                g = r % z\n                g = z - g - 1\n                if g < h:\n                    h = h - g\n            ans += h * z\n        z = z // 2\n    print(ans % mod)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    z = 2\n    while z <= l:\n        z *= 2\n    if r > z:\n        r = z - 1\n    z = z // 2\n    ans = l\n    lb = bin(l).replace('0b', '')\n    for i in lb:\n        if i != '0':\n            h = l % z\n            h = z - h - 1\n            if h >= r - l:\n                g = r % z\n                g = z - g - 1\n                if g < h:\n                    h = h - g\n            ans += h * z\n        z = z // 2\n    print(ans % mod)", "import math\nfor _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    ans = 1\n    sum = 0\n    c = int(math.log2(a))\n    for i in range(c + 1):\n        doo = 2 ** i\n        po = doo & a\n        if po == doo:\n            sum += min(b - a + 1, ans) * doo\n        else:\n            ans += doo\n    print(sum % 1000000007)", "import math\n\ndef optimalSol(a, b):\n    power = int(math.log(a, 2))\n    add = 0\n    mod = 10 ** 9 + 7\n    previous_i = -1\n    present = 0\n    end = 0\n    for i in range(power + 1):\n        bit_add = 2 ** i\n        end += 2 ** i\n        if a & bit_add == bit_add:\n            present += bit_add\n            total_added = min(b - a + 1, end - present + 1)\n            add += bit_add * total_added\n    return add % mod\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(optimalSol(a, b))", "modulo = int(1000000000.0) + 7\nfor t in range(int(input())):\n    (l, r) = map(int, input().split())\n    curr = 1\n    ans = 0\n    for i in range(61):\n        q = l // curr\n        if q & 1:\n            end = min(r, (q + 1) * curr - 1)\n            ans = (ans + curr * (end - l + 1) % modulo % modulo) % modulo\n        curr *= 2\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (a, b) = list(map(int, input().split()))\n    k = 1\n    m = a\n    n = b\n    sum = 0\n    x = 0\n    y = 1\n    while a > 0:\n        a = a // 2\n        l = m // k\n        if l % 2 != 0:\n            p = k * l\n            q = k * (l + 1)\n        else:\n            p = k * (l + 1)\n            q = k * (l + 2)\n        k *= 2\n        if m >= p and m < q:\n            if b < q:\n                o = b - m + 1\n                lum = o % 1000000007 * (y % 1000000007) % 1000000007\n                sum = sum + lum\n                sum = sum % 1000000007\n            else:\n                o = q - m\n                lum = o % 1000000007 * (y % 1000000007) % 1000000007\n                sum = sum + lum\n                sum = sum % 1000000007\n        y *= 2\n    print(sum)\n    t -= 1", "t = int(input())\nm = 10 ** 9 + 7\nwhile t:\n    p = 0\n    res = 0\n    (l, r) = map(int, input().split())\n    d = r - l + 1\n    br = bin(r)[2:]\n    lbr = len(br)\n    l = bin(l)[2:]\n    k = -1\n    lol = 0\n    ll = len(l)\n    ind = ll - 1\n    if 2 ** ll > r:\n        for i in range(ll):\n            if l[i] == '0' and br[i] == '1':\n                ind = i\n                break\n        for i in range(len(l) - 1, ind, -1):\n            k += 1\n            if l[i] == '1':\n                a = 2 ** k\n                p += a\n                res += (min(r + 1, 2 ** (k + 1)) - p) * a\n        for i in range(ind + 1):\n            if l[i] == '1':\n                res += 2 ** (ll - i - 1) * d\n    else:\n        for i in range(len(l) - 1, -1, -1):\n            k += 1\n            if l[i] == '1':\n                a = 2 ** k\n                p += a\n                res += (min(r + 1, 2 ** (k + 1)) - p) * a\n    print(res % m)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    (l, r) = map(int, input().split())\n    ans = 0\n    for i in range(60):\n        if l >> i & 1 ^ 1:\n            continue\n        l2 = min((l >> i) + 1 << i, r + 1)\n        ans += (l2 - l) * (1 << i) % (10 ** 9 + 7)\n        ans %= 10 ** 9 + 7\n    print(ans % (10 ** 9 + 7))", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    s = '{0:0b}'.format(a)\n    s = s[-1::-1]\n    d = 1\n    for i in range(len(s)):\n        if s[i] == '1':\n            x = a % d\n            m = d - x\n            n = b - a + 1\n            ans = (ans + d * min(m, n)) % e\n        d *= 2\n    print(ans)", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    s = '{0:0b}'.format(a)\n    s = s[-1::-1]\n    for i in range(len(s)):\n        if s[i] == '1':\n            d = pow(2, i)\n            x = a % d\n            m = d - x\n            n = b - a + 1\n            ans = (ans + d * min(m, n)) % e\n    print(ans)", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline())):\n        (l, r) = map(int, stdin.readline().split())\n        a = bin(l)[2:]\n        n = len(a)\n        (ci, k, res) = (0, 0, 0)\n        for i in range(n):\n            if a[n - 1 - i] == '1':\n                k = l + (2 ** i - (2 ** i - 1 & l))\n                ci = min(k - l, r - l + 1)\n                res += ci * 2 ** i\n        print(res % 1000000007)\nsolve()", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline())):\n        (l, r) = map(int, stdin.readline().split())\n        a = bin(l)[2:]\n        n = len(a)\n        (ci, k, res) = (0, 0, 0)\n        for i in range(n):\n            if a[n - 1 - i] == '1':\n                k = l + (2 ** i - (2 ** i - 1 & l))\n            else:\n                k = l\n            ci = min(k - l, r - l + 1)\n            res += ci * 2 ** i\n        print(res % 1000000007)\nsolve()", "for t in range(int(input())):\n    (c, c1, summ) = (0, 0, 0)\n    M = 1000000007\n    (l, r) = list(map(int, input().split()))\n    for i in range(60):\n        if l & 1 << i:\n            summ += min(r - l + 1, c1 - c + 1) % M * (1 << i) % M % M\n            c += 1 << i\n        c1 += 1 << i\n    print(summ % M)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    a = 1\n    b = 0\n    s = 0\n    x = l\n    binary = ''\n    while l > 0:\n        binary += str(l % 2)\n        l //= 2\n    for i in binary:\n        if i == '1':\n            s += a * min(a - b, r - x + 1) % 1000000007\n            s %= 1000000007\n            b += a\n        a *= 2\n    print(s)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    binary = bin(l)[2:]\n    (a, b, s) = (1, 0, 0)\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            s += a * min(a - b, r - l + 1)\n            s %= 1000000007\n            b += a\n        a *= 2\n    print(s)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    binary = bin(l)[2:]\n    (a, b, s) = (1, 0, 0)\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            s += a * min(a - b, r - l + 1)\n            s %= 10 ** 9 + 7\n            b += a\n        a *= 2\n    print(s)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    binary = bin(l)[2:]\n    (a, b, s) = (1, 0, 0)\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            s += a * min(a - b, r - l + 1)\n            s %= mod\n            b += a\n        a *= 2\n    print(s)", "def rand(l, r):\n    mod = 10 ** 9 + 7\n    binary = bin(l)[2:]\n    (a, b, res) = (1, 0, 0)\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            res += a * min(a - b, r - l + 1)\n            res %= mod\n            b += a\n        a *= 2\n    return res\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(rand(a, b))", "import math\nt = int(input())\nmod = 10 ** 9 + 7\nfor j in range(t):\n    (l, r) = map(int, input().split())\n    count1 = 0\n    count2 = 0\n    result = 0\n    for i in range(60):\n        count2 += 1 << i\n        if l & 1 << i:\n            count1 += 1 << i\n            mini = min(r - l + 1, count2 - count1 + 1)\n            result += mini % mod * ((1 << i) % mod) % mod\n    print(result % mod)", "from math import log2\nrightmost = lambda n: int(log2(n & -n))\nbini = lambda x: bin(x)[2:]\nmod = int(1000000000.0 + 7)\n\ndef solve(l, r):\n    res = l\n    ans = 0\n    for i in range(l, r + 1):\n        res = res & i\n        ans += res\n    return ans\n\ndef optimized(l, r):\n    if l == r:\n        return l\n    ans = 0\n    val = l\n    cnt = 1 << rightmost(l)\n    ans = 0\n    arr = [l, val + cnt]\n    while arr[-1] <= r:\n        ans = ans + (arr[-1] - arr[-2]) % mod * (val % mod)\n        ans = ans % mod\n        val = val & val + cnt\n        if val == 0:\n            break\n        cnt = 1 << rightmost(val)\n        arr.append(cnt + val)\n    ans = ans + (r - arr[-2] + 1) % mod * (val % mod)\n    return ans % mod\nfor t in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(optimized(l, r))", "def solve(l, r):\n    mod = 10 ** 9 + 7\n    binary = bin(l)[2:]\n    (a, b, res) = (1, 0, 0)\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            res += a * min(a - b, r - l + 1)\n            res %= mod\n            b += a\n        a *= 2\n    return res\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(solve(a, b))", "import math\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    ans = 0\n    for i in range(60):\n        if l & 1 << i > 0:\n            pr = min((1 << i) - (l & (1 << i) - 1), r - l + 1)\n            ans += pr * (1 << i)\n    print(ans % (10 ** 9 + 7))", "T = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    a1 = a\n    b1 = b\n    p = a\n    ans = 0\n    x = 1\n    y = a - 1\n    z = a\n    while a > 0:\n        r = a % 2\n        if r == 1:\n            z = p + x - 1\n            if z <= b:\n                ans = ans + p * (z - y)\n            else:\n                ans += p * (b - y)\n                break\n            y = z\n            p = p - x\n        a = a // 2\n        x = x * 2\n        ans = ans % 1000000007\n    print(ans % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    a1 = bin(l)[2:]\n    if l == 1:\n        print(1)\n    else:\n        k = []\n        k1 = []\n        su = 0\n        if a1[-1] == '1':\n            k.append(1)\n            k1.append(1)\n            su = 1\n        p = len(a1)\n        ca = 2\n        for i in range(p - 2, -1, -1):\n            if a1[i] == '1':\n                k.append(ca)\n                k1.append(ca - su)\n                su += ca\n            ca *= 2\n        re = r - l + 1\n        ans = 0\n        for i in range(len(k)):\n            ans += k[i] % mod * min(re, k1[i]) % mod % mod\n            ans %= mod\n        print(ans)", "for _ in [0] * int(input()):\n    (L, R) = [int(x) for x in input().split()]\n    LB = bin(L)[2:]\n    product = 1\n    has = 0\n    res = 0\n    for i in range(len(LB) - 1, -1, -1):\n        if LB[i] == '1':\n            res += product * min(product - has, R - L + 1)\n            res %= 1000000007\n            has += product\n        product *= 2\n    print(res)", "MOD = 10 ** 9 + 7\nII = lambda : [int(x) for x in input().split()]\nI2 = lambda : int(input())\nT = int(input())\nfor _ in range(T):\n    (L, R) = (int(x) for x in input().split())\n    sum = 0\n    max_R1 = 1\n    while max_R1 <= L:\n        max_R1 *= 2\n    val = int(max_R1 / 2)\n    max_R1 -= 1\n    while val >= 1:\n        if L & val:\n            R = min(R, max_R1)\n            a = R - L + 1\n            count = min(val, a) % MOD\n            sum += val * count % MOD\n            L = L - val\n            R -= val\n        max_R1 -= val\n        val = int(val / 2)\n    print(sum % MOD)", "MOD = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (l, r) = map(int, input().split())\n    bl = bin(l)[2:]\n    sum = 0\n    val = 1\n    s = 0\n    for i in range(len(bl) - 1, -1, -1):\n        if bl[i] == '1':\n            sum += val * min(val - s, r - l + 1)\n            sum = sum % MOD\n            s += val\n        val *= 2\n    print(sum)", "t = int(input())\np = pow(10, 9) + 7\np = int(p)\nwhile t:\n    t -= 1\n    (l, r) = map(int, input().split())\n    f = bin(l)[2:]\n    po = 1\n    s = 0\n    res = 0\n    for i in range(len(f) - 1, -1, -1):\n        if f[i] == '1':\n            res += po * min(po - s, r - l + 1)\n            res = res % p\n            s += po\n        po = po * 2\n    print(res)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (l, r) = [int(i) for i in input().split()]\n    if l == r:\n        print(l % mod)\n        continue\n    res = 0\n    diff = r - l + 1\n    i = 1\n    j = 1\n    temp = l\n    while temp:\n        if temp & 1:\n            temp2 = l & i\n            k = min(r + 1 - l, i + 1 - temp2)\n            res = (res + j * k) % mod\n        temp = temp // 2\n        i = i * 2 + 1\n        j = j * 2\n    print(res % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (l, r) = [int(i) for i in input().split()]\n    if l == r:\n        print(l, l, l % mod)\n        continue\n    res = 0\n    diff = r - l + 1\n    i = 1\n    j = 1\n    temp = l\n    while temp:\n        if temp & 1:\n            temp2 = l & i\n            k = min(r + 1 - l, i + 1 - temp2)\n            res = (res + j * k) % mod\n        temp = temp // 2\n        i = i * 2 + 1\n        j = j * 2\n    print(res)", "import math\nfor _ in range(int(input())):\n    (l, r) = list(map(int, input().split()))\n    p = pow(2, 80)\n    (ltmp, rtmp) = (l, r)\n    b1 = int(math.log2(l)) + 1\n    b2 = int(math.log2(r)) + 1\n    ans = 0\n    while l > 0:\n        while p > l:\n            p //= 2\n        rem = p * 2 - l\n        ans += rem * p\n        l %= p\n    if b1 != b2:\n        print(ans % (10 ** 9 + 7))\n    else:\n        p = pow(2, 80)\n        while r:\n            while p > r:\n                p //= 2\n            br = int(math.log2(r))\n            if ltmp & pow(2, br) == 0:\n                rem = p * 2 - r\n                rem -= 1\n                r %= p\n                break\n            else:\n                rem = p * 2 - r\n                rem -= 1\n                ans -= rem * p\n                r %= p\n        print(ans % (10 ** 9 + 7))", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    binl = bin(l)[2:]\n    diff = r - l + 1\n    (ans, ans1, ans2) = (0, 0, 0)\n    for j in range(len(binl)):\n        if diff <= 0:\n            break\n        if binl[len(binl) - j - 1] == '1':\n            x = 2 ** j\n            ans += (l - ans2) % (10 ** 9 + 7) * min(diff, x - ans1) % (10 ** 9 + 7) % (10 ** 9 + 7)\n            ans %= 10 ** 9 + 7\n            diff -= x - ans1\n            ans1 = 2 * x\n            ans2 += x\n    print(ans)", "t = int(input())\nmod = 10 ** 9 + 7\nfor i in range(t):\n    (a, b) = (int(x) for x in input().split())\n    sum = a\n    check = 2\n    while check <= a:\n        rem = a // check\n        to = (rem + 1) * check - a - 1\n        if to > b - a:\n            to = b - a\n        if rem % 2 != 0:\n            sum = sum + to * (check % mod)\n            sum = sum % mod\n        check = check * 2\n    print(sum % mod)", "M = int(1000000000.0 + 7)\nT = int(input())\nfor i in range(T):\n    (L, R) = map(int, input().split())\n    ans = 0\n    if L == R:\n        ans = L % M\n    else:\n        b1 = bin(L)[2:]\n        b2 = bin(R)[2:]\n        val = -1\n        if len(b2) == len(b1):\n            for j in range(len(b1)):\n                if b1[j] != b2[j]:\n                    val = j\n                    break\n        cur = L\n        zl = len(b1) - 1\n        last = 0\n        ans = L % M\n        cv = 1\n        while zl > val:\n            if b1[zl] == '0':\n                ans = (ans + cur % M * cv % M) % M\n            else:\n                cur -= cv\n            cv <<= 1\n            zl -= 1\n        if val != -1:\n            pp = b2[val + 1:]\n            cv = int(pp, 2) + 1\n            ans = (ans + cur % M * cv % M) % M\n    print(ans % M)", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    if l == r:\n        print(l % mod)\n        continue\n    a = bin(l)[2:]\n    b = bin(r)[2:]\n    a = '0' * (len(b) - len(a)) + a\n    ind = 0\n    while a[ind] == b[ind]:\n        ind += 1\n    ans = 0\n    cnt = 0\n    flag = 0\n    for i in range(len(a) - 1, -1, -1):\n        if flag == 1:\n            break\n        if a[i] == '0':\n            cnt += 1\n            if i == ind:\n                flag = 1\n            continue\n        if i == len(a) - 1:\n            ans += 1\n        else:\n            ans += 2 ** cnt * (2 ** cnt - 1 - int(a[i + 1:], 2) + 1)\n        if i == ind:\n            break\n        cnt += 1\n    for i in range(ind - 1, -1, -1):\n        if a[i] == '0':\n            cnt += 1\n            continue\n        if i == len(a) - 1:\n            ans += 1\n        else:\n            ans += 2 ** cnt * (int(b[i + 1:], 2) - int(a[i + 1:], 2) + 1)\n        cnt += 1\n    print(ans % mod)", "t = int(input())\nfor _ in range(t):\n    (l, r) = [int(v) for v in input().split()]\n    b = bin(l)[2:]\n    p = 1\n    s = 0\n    res = 0\n    for i in range(len(b) - 1, -1, -1):\n        if b[i] == '1':\n            res += p * min(p - s, r - l + 1)\n            res %= 1000000007\n            s += p\n        p *= 2\n    print(res)"]