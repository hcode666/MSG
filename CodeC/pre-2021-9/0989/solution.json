["t = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    if (c - 1) % 3 == 0 and (r - 1) % 4 == 0:\n        print('Vanya')\n    elif (c - 1) % 3 != 0 and (r - 1) % 4 == 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 0 and (r - 1) % 4 != 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 1 and (r - 1) % 4 == 1:\n        print('Vanya')\n    elif (c - 1) % 3 == 2 and (r - 1) % 4 == 2:\n        print('Vanya')\n    else:\n        print('Tuzik')", "t = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    if (c - 1) % 3 == 0 and (r - 1) % 4 == 0:\n        print('Vanya')\n    elif (c - 1) % 3 != 0 and (r - 1) % 4 == 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 0 and (r - 1) % 4 != 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 1 and (r - 1) % 4 == 1:\n        print('Vanya')\n    elif (c - 1) % 3 == 2 and (r - 1) % 4 == 2:\n        print('Vanya')\n    else:\n        print('Tuzik')", "t = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    if (c - 1) % 3 == 0 and (r - 1) % 4 == 0:\n        print('Vanya')\n    elif (c - 1) % 3 != 0 and (r - 1) % 4 == 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 0 and (r - 1) % 4 != 0:\n        print('Tuzik')\n    elif (c - 1) % 3 == 1 and (r - 1) % 4 == 1:\n        print('Vanya')\n    elif (c - 1) % 3 == 2 and (r - 1) % 4 == 2:\n        print('Vanya')\n    else:\n        print('Tuzik')", "cases = int(input())\nfor _ in range(cases):\n    (rows, cols) = map(int, input().split())\n    if (cols - 1) % 3 == 0 and (rows - 1) % 4 == 0:\n        print('Vanya')\n    elif (cols - 1) % 3 != 0 and (rows - 1) % 4 == 0:\n        print('Tuzik')\n    elif (cols - 1) % 3 == 0 and (rows - 1) % 4 != 0:\n        print('Tuzik')\n    elif (cols - 1) % 3 == 1 and (rows - 1) % 4 == 1:\n        print('Vanya')\n    elif (cols - 1) % 3 == 2 and (rows - 1) % 4 == 2:\n        print('Vanya')\n    else:\n        print('Tuzik')", "from functools import reduce\n\ndef movimientos(i, j):\n    for movsI in range(0, i):\n        yield (movsI, j)\n    for movsJ in range(0, j):\n        yield (i, movsJ)\n\ndef posicionGanadora(i, j):\n    return reduce(lambda res, sigMov: res or not posicionGanadora(sigMov[0], sigMov[1]), movimientos(i, j), False)\ntestCases = int(input())\nfor tc in range(testCases):\n    (n, m) = list(map(int, input().split(' ')))\n    print('Tuzik' if posicionGanadora((n - 1) % 4, (m - 1) % 3) else 'Vanya')", "from functools import reduce\n\ndef movimientos(i, j):\n    for movsI in range(0, i):\n        yield (movsI, j)\n    for movsJ in range(0, j):\n        yield (i, movsJ)\n\ndef posicionGanadora(i, j, memo):\n    if memo[i][j] is None:\n        memo[i][j] = reduce(lambda res, sigMov: res or not posicionGanadora(sigMov[0], sigMov[1], memo), movimientos(i, j), False)\n    return memo[i][j]\ntestCases = int(input())\nmemo = [[None for i in range(3)] for j in range(4)]\nfor tc in range(testCases):\n    (n, m) = list(map(int, input().split(' ')))\n    print('Tuzik' if posicionGanadora((n - 1) % 4, (m - 1) % 3, memo) else 'Vanya')", "from functools import reduce\n\ndef movimientos(i, j):\n    movs = [(movsI, j) for movsI in range(0, i)]\n    movs.extend([(i, movsJ) for movsJ in range(0, j)])\n    return movs\n\ndef posicionGanadora(i, j, memo):\n    if memo[i][j] is None:\n        memo[i][j] = reduce(lambda res, sigMov: res or not posicionGanadora(sigMov[0], sigMov[1], memo), movimientos(i, j), False)\n    return memo[i][j]\ntestCases = int(input())\nmemo = [[None for i in range(3)] for j in range(4)]\nfor tc in range(testCases):\n    (n, m) = list(map(int, input().split(' ')))\n    print('Tuzik' if posicionGanadora((n - 1) % 4, (m - 1) % 3, memo) else 'Vanya')", "from functools import reduce\n\ndef movimientos(i, j):\n    movs = [(movsI, j) for movsI in range(0, i)]\n    movs.extend([(i, movsJ) for movsJ in range(0, j)])\n    return movs\n\ndef posicionGanadora(i, j, memo):\n    if memo[i][j] is None:\n        memo[i][j] = not reduce(lambda res, sigMov: res and posicionGanadora(sigMov[0], sigMov[1], memo), movimientos(i, j), True)\n    return memo[i][j]\ntestCases = int(input())\nmemo = [[False if i == 0 and j == 0 else None for i in range(3)] for j in range(4)]\nfor tc in range(testCases):\n    (n, m) = list(map(int, input().split(' ')))\n    print('Tuzik' if posicionGanadora((n - 1) % 4, (m - 1) % 3, memo) else 'Vanya')", "t = int(input())\nfor i in range(t):\n    n = input().split(' ')\n    for i in range(2):\n        n[i] = int(n[i])\n    l = n[1] % 3\n    if n[1] % 3 == 0:\n        l = 3\n    if n[0] % 4 == l:\n        print('Vanya')\n    else:\n        print('Tuzik')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    winner = 'Vanya' if (n - 1) % 4 == (m - 1) % 3 else 'Tuzik'\n    print(winner)", "for _ in range(int(input())):\n    change = False\n    (n, m) = map(int, input().split())\n    if (n - 1) % 4 == (m - 1) % 3:\n        print('Vanya')\n    else:\n        print('Tuzik')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    print('Vanya' if (n - 1) % 4 == (m - 1) % 3 else 'Tuzik')"]