["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "t1 = int(input())\nfor i in range(t1):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    ct = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            ct = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(ct)", "t1 = int(input())\nfor i in range(t1):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    ct = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            ct = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(ct)", "t2 = int(input())\nfor i in range(t2):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    ct = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            ct = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(ct)", "t2 = int(input())\nfor i in range(t2):\n    (n2, m2) = map(int, input().split())\n    v2 = []\n    for _m2 in range(m2):\n        (x2, y2) = map(int, input().split())\n        v2.append([y2, x2])\n    v2.sort()\n    l2 = 0\n    r2 = n2 - 1\n    ct = -1\n    while l2 <= r2:\n        mid = (l2 + r2) // 2\n        seg = 1\n        for i in range(m2):\n            if seg >= v2[i][0] or v2[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v2[i][0])\n        if seg == n2:\n            ct = mid\n            r2 = mid - 1\n        else:\n            l2 = mid + 1\n    print(ct)", "t2 = int(input())\nfor i in range(t2):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    ct = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            ct = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(ct)", "t1 = int(input())\nfor i in range(t1):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    ct = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            ct = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(ct)", "t1 = int(input())\nfor i in range(t1):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    cnt = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            cnt = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (p, q) = map(int, input().split())\n    v = []\n    for _q in range(q):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = p - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(q):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == p:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "t1 = int(input())\nfor i in range(t1):\n    (n1, m1) = map(int, input().split())\n    v1 = []\n    for _m1 in range(m1):\n        (x1, y1) = map(int, input().split())\n        v1.append([y1, x1])\n    v1.sort()\n    l1 = 0\n    r1 = n1 - 1\n    cnt = -1\n    while l1 <= r1:\n        mid = (l1 + r1) // 2\n        seg = 1\n        for i in range(m1):\n            if seg >= v1[i][0] or v1[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v1[i][0])\n        if seg == n1:\n            cnt = mid\n            r1 = mid - 1\n        else:\n            l1 = mid + 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if not (seg >= v[i][0] or v[i][1] > seg):\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 0\n    r = n - 1\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = []\n    for _m in range(m):\n        (x, y) = map(int, input().split())\n        v.append([y, x])\n    v.sort()\n    l = 1\n    r = n\n    cnt = -1\n    while l <= r:\n        mid = (l + r) // 2\n        seg = 1\n        for i in range(m):\n            if seg >= v[i][0] or v[i][1] > seg:\n                continue\n            else:\n                seg = min(seg + mid, v[i][0])\n        if seg == n:\n            cnt = mid\n            r = mid - 1\n        else:\n            l = mid + 1\n    print(cnt)"]