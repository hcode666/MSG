["import math\nfor _ in range(int(input())):\n    x = int(input())\n    k = math.sqrt(2 * x + 1 / 4) - 1 / 2\n    (ceil, floor) = (math.ceil(k), math.floor(k))\n    (sum_max, sum_min) = (ceil * (ceil + 1) // 2, floor * (floor + 1) // 2)\n    print(min(floor + abs(x - sum_min), ceil + abs(sum_max - x)))", "def sear(i):\n    i2 = 1\n    p2 = 0\n    listr = []\n    while p2 < i:\n        p2 = i2 * (i2 + 1) // 2\n        i2 = i2 + 1\n    return i2 - 1\n\ndef lister(o):\n    i = 1\n    p = 0\n    ans = 0\n    listr = []\n    while p <= o:\n        p = i * (i + 1) // 2\n        i = i + 1\n    listr.append((i - 2) * (i - 1) // 2)\n    listr.append(p)\n    if o in listr:\n        return sear(o)\n    if o - listr[0] <= listr[1] - o:\n        return sear(listr[0]) + o - listr[0]\n    if o - listr[0] > listr[1] - o:\n        return sear(listr[1]) + listr[1] - o\ni = int(input())\nlistk = []\nfor _ in range(i):\n    x = int(input())\n    listk.append(lister(x))\nfor ele in listk:\n    print(ele)", "for i in range(int(input())):\n    x = int(input())\n    y = 0\n    time = 0\n    prev = 0\n    while True:\n        time += 1\n        prev = y\n        y += time\n        if y > x or x == y:\n            break\n    print(min(time + (x - prev) - 1, time + (y - x)))", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    k = math.sqrt(2 * x + 1 / 4) - 1 / 2\n    (ceil, floor) = (math.ceil(k), math.floor(k))\n    (sum_max, sum_min) = (ceil * (ceil + 1) // 2, floor * (floor + 1) // 2)\n    print(min(floor + abs(x - sum_min), ceil + abs(sum_max - x)))", "for i in range(int(input())):\n    y = int(input())\n    x = 0\n    c = 0\n    prev = 0\n    while True:\n        c += 1\n        prev = x\n        x += c\n        if x > y or x == y:\n            break\n    print(min(c + (y - prev) - 1, c + (x - y)))", "n = int(input(''))\nfor j in range(n):\n    x = int(input(''))\n    lst = []\n    dist = 0\n    i = 1\n    mins = 0\n    if x == 1:\n        print(1)\n    else:\n        while True:\n            dist += i\n            if dist >= x:\n                diff = dist - x\n                break\n            diff = x - dist\n            lst.append(diff)\n            i += 1\n        minimum = min(lst)\n        if diff < minimum:\n            mins = diff + i\n        else:\n            mins = minimum + i - 1\n        print(mins)", "n = int(input())\nfor j in range(n):\n    inp = int(input())\n    x = 0\n    i = 0\n    while True:\n        if x >= inp:\n            x = x - i\n            break\n        i += 1\n        x += i\n    if inp - x <= x + i - inp:\n        time = i - 1 + inp - x\n    else:\n        x = x + i\n        time = i + x - inp\n    print(time)", "for i in range(int(input())):\n    x = int(input())\n    a = 0\n    b = 0\n    c = 0\n    while True:\n        c += 1\n        a = b\n        b += c\n        if a <= x and b > x:\n            break\n    print(min(c + x - a - 1, c + b - x))", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    k = math.sqrt(2 * x + 1 / 4) - 1 / 2\n    (ceil, floor) = (math.ceil(k), math.floor(k))\n    (sum_max, sum_min) = (ceil * (ceil + 1) // 2, floor * (floor + 1) // 2)\n    print(min(floor + abs(x - sum_min), ceil + abs(sum_max - x)))", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    k = math.sqrt(2 * x + 1 / 4) - 1 / 2\n    (ceil, floor) = (math.ceil(k), math.floor(k))\n    (sum_max, sum_min) = (ceil * (ceil + 1) // 2, floor * (floor + 1) // 2)\n    print(min(floor + abs(x - sum_min), ceil + abs(sum_max - x)))", "for t in range(int(input())):\n    x = int(input())\n    time = 0\n    st = 0\n    sub = 0\n    while sub + st + 1 <= x:\n        st += 1\n        sub += st\n        time += 1\n    if x - sub <= sub + st + 1 - x:\n        time += x - sub\n    else:\n        time += 1 + sub + st + 1 - x\n    print(time)", "for t in range(int(input())):\n    x = int(input())\n    time = 0\n    st = 0\n    sub = 0\n    while sub + st + 1 <= x:\n        st += 1\n        sub += st\n        time += 1\n    if x - sub <= sub + st + 1 - x:\n        time += x - sub\n    else:\n        time += 1 + sub + st + 1 - x\n    print(time)", "for t in range(int(input())):\n    x = int(input())\n    time = 0\n    st = 0\n    sub = 0\n    while sub + st + 1 <= x:\n        st += 1\n        sub += st\n        time += 1\n    if x - sub <= sub + st + 1 - x:\n        time += x - sub\n    else:\n        time += 1 + sub + st + 1 - x\n    print(time)", "for t in range(int(input())):\n    x = int(input())\n    time = 0\n    st = 0\n    sub = 0\n    while sub + st + 1 <= x:\n        st += 1\n        sub += st\n        time += 1\n    if x - sub <= sub + st + 1 - x:\n        time += x - sub\n    else:\n        time += 1 + sub + st + 1 - x\n    print(time)", "for _ in range(int(input())):\n    x = int(input())\n    dist = 0\n    i = 1\n    count = 0\n    while dist + i < x:\n        dist += i\n        i += 1\n        count += 1\n    count += min(x - dist, i - (x - dist) + 1)\n    print(count)", "output = ''\nfor _ in range(int(input())):\n    x = int(input())\n    mystery = 2 * x\n    i = 0\n    while i ** 2 < mystery:\n        i += 1\n    t = i - 1\n    dist = int(t * (t + 1) / 2)\n    remain = x - dist\n    t += abs(remain)\n    output += str(t) + '\\n'\nprint(output)", "output = ''\nfor _ in range(int(input())):\n    x = int(input())\n    mystery = 2 * x\n    i = 0\n    while i ** 2 < mystery:\n        i += 1\n    t = i - 1\n    dist = int(t * (t + 1) / 2)\n    remain = x - dist\n    t += abs(remain)\n    output += str(t) + '\\n'\nprint(output)", "output = ''\nfor _ in range(int(input())):\n    x = int(input())\n    mystery = 2 * x\n    i = 0\n    while i ** 2 < mystery:\n        i += 1\n    t = i - 1\n    dist = int(t * (t + 1) / 2)\n    remain = x - dist\n    t += abs(remain)\n    output += str(t) + '\\n'\nprint(output)", "import math\nt = int(input())\na = 0.5\nb = 0.5\nfor ti in range(t):\n    x = int(input())\n    c = -x\n    delta = b ** 2 - 4 * a * c\n    x2 = -b + math.sqrt(delta)\n    n_floor = math.floor(x2)\n    n_ceil = math.ceil(x2)\n    pos_floor = n_floor * (n_floor + 1) / 2\n    pos_ceil = n_ceil * (n_ceil + 1) / 2\n    time_floor = int(n_floor + abs(pos_floor - x))\n    time_ceil = int(n_ceil + abs(pos_ceil - x))\n    if time_floor > time_ceil:\n        print(time_ceil)\n    else:\n        print(time_floor)", "for i in range(int(input())):\n    x = int(input())\n    i = 0\n    j = 1\n    t = -1\n    d = 0\n    while x > i:\n        i = i + j\n        j = j + 1\n        t = t + 1\n    if abs(i - x) >= abs(x - (i - j + 1)):\n        t = t - 1\n        d += abs(x - (i - j + 1))\n    else:\n        d = abs(i - x)\n    print(t + 1 + d)", "import math\ntests = int(input())\nfor i in range(tests):\n    position = int(input())\n    approx = math.floor((2 * position) ** 0.5)\n    while approx * (approx + 1) < position:\n        approx += 1\n    distance = approx + abs(position - approx * (approx + 1) // 2)\n    approx -= 1\n    distance = min(distance, approx + abs(position - approx * (approx + 1) // 2))\n    print(distance)", "import math\ntests = int(input())\nfor i in range(tests):\n    position = int(input())\n    approx = math.floor((2 * position) ** 0.5)\n    while approx * (approx + 1) < position:\n        approx += 1\n    distance = approx + abs(position - approx * (approx + 1) // 2)\n    approx -= 1\n    distance = min(distance, approx + abs(position - approx * (approx + 1) // 2))\n    print(distance)", "import math\ntests = int(input())\nfor i in range(tests):\n    position = int(input())\n    approx = math.floor(position ** 0.5)\n    while approx * (approx + 1) // 2 < position:\n        approx += 1\n    distance = approx + abs(position - approx * (approx + 1) // 2)\n    approx -= 1\n    distance = min(distance, approx + abs(position - approx * (approx + 1) // 2))\n    print(distance)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    i = 1\n    num = 0\n    prev = 0\n    while num <= n:\n        prev = num\n        num = num + i\n        i = i + 1\n        count = count + 1\n    if abs(prev - n) > num - n:\n        print(num - n + count)\n    else:\n        print(abs(prev - n) + count - 1)\n    count = 0", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    z = 2 * x\n    c = int(z ** (1 / 2))\n    if c * (c + 1) <= z:\n        a = c\n    else:\n        a = c - 1\n    g = a * (a + 1) // 2\n    f = (a + 1) * (a + 2) // 2\n    print(min(a + (x - g), a + 1 + (f - x)))", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    z = 2 * x\n    c = int(z ** (1 / 2))\n    if c * (c + 1) <= z:\n        a = c\n    else:\n        a = c - 1\n    g = a * (a + 1) // 2\n    f = (a + 1) * (a + 2) // 2\n    print(min(a + (x - g), a + 1 + (f - x)))", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    z = 2 * x\n    c = int(z ** (1 / 2))\n    if c * (c + 1) <= z:\n        a = c\n    else:\n        a = c - 1\n    g = a * (a + 1) // 2\n    f = (a + 1) * (a + 2) // 2\n    print(min(a + (x - g), a + 1 + (f - x)))", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x == 1:\n        print(1)\n    else:\n        l = []\n        l.append(1)\n        i = 2\n        while True:\n            l.append(l[-1] + i)\n            i += 1\n            if l[-1] >= x:\n                break\n        if x == l[-1]:\n            print(len(l))\n        else:\n            a = len(l) - 1 + (x - l[-2])\n            b = len(l) + (l[-1] - x)\n            print(min(a, b))", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    z = 2 * x\n    c = int(z ** (1 / 2))\n    if c * (c + 1) <= z:\n        a = c\n    else:\n        a = c - 1\n    g = a * (a + 1) // 2\n    f = (a + 1) * (a + 2) // 2\n    print(min(a + (x - g), a + 1 + (f - x)))", "T = int(input())\nfor i in range(0, T):\n    a = int(input())\n    tt = 1\n    d = 1\n    while d < a:\n        tt += 1\n        d += tt\n    bb = tt\n    dd = d - bb\n    bb -= 1\n    print(min(tt + (d - a), bb + (a - dd)))", "for _ in range(int(input())):\n    n = int(input())\n    i = 0\n    ans = 0\n    while n > ans:\n        i += 1\n        ans += i\n    pre_ans = ans - i\n    pre_i = i - 1\n    if n == ans:\n        print(i)\n    elif ans - n + i < n - pre_ans + pre_i:\n        print(ans - n + i)\n    else:\n        print(n - pre_ans + pre_i)", "import sys\nfor xx in range(int(sys.stdin.readline())):\n    x = int(sys.stdin.readline())\n    i = 1\n    a = 0\n    while True:\n        a += i\n        if a > x:\n            ans = i + min(x - a + i - 1, a - x)\n            print(ans)\n            break\n        elif a == x:\n            print(i)\n            break\n        i += 1", "for xx in range(int(input())):\n    x = int(input())\n    i = 1\n    a = 0\n    r = (0, 0)\n    while True:\n        a += i\n        if a > x:\n            r = (a - i, a)\n            ans = i + min(x - a + i - 1, a - x)\n            print(ans)\n            break\n        elif a == x:\n            print(i)\n            break\n        i += 1", "for _ in range(int(input())):\n    x = int(input())\n    ans = 0\n    i = 0\n    while x > ans:\n        i += 1\n        ans += i\n    pre_ans = ans - i\n    pre_i = i - 1\n    if ans - x + 1 > x - pre_ans:\n        sol = pre_i + (x - pre_ans)\n    elif ans - x + 1 <= x - pre_ans:\n        sol = i + (ans - x)\n    elif ans == x:\n        sol = i\n    print(sol)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    p = int(((8 * n + 1) ** 0.5 - 1) // 2)\n    print(p + min(n - p * (p + 1) // 2, (p + 1) * (p + 2) // 2 - n + 1))", "for _ in range(int(input())):\n    n = int(input())\n    k = (1 + 8 * n) ** 0.5 - 1\n    k = int(k // 2)\n    p = k * (k + 1) // 2\n    q = (k + 1) * (k + 2) // 2\n    print(min(n - p + k, q - n + k + 1))", "for _ in range(int(input())):\n    n = int(input())\n    k = (1 + 8 * n) ** 0.5 - 1\n    k = int(k // 2)\n    p = k * (k + 1) // 2\n    q = (k + 1) * (k + 2) // 2\n    print(min(n - p + k, q - n + k + 1))", "for _ in range(int(input())):\n    n = int(input())\n    k = (1 + 8 * n) ** 0.5 - 1\n    k = int(k // 2)\n    p = k * (k + 1) // 2\n    q = (k + 1) * (k + 2) // 2\n    print(min(n - p + k, q - n + k + 1))", "import math as m\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    if x < 3:\n        print(x)\n    else:\n        c = m.ceil((m.sqrt(1 + 8 * x) - 1) / 2)\n        f = m.floor((m.sqrt(1 + 8 * x) - 1) / 2)\n        n1 = c * (c + 1) // 2\n        n2 = f * (f + 1) // 2\n        print(min(c + abs(n1 - x), f + abs(n2 - x)))", "import math\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    res = 0\n    dis = 0\n    no = 1\n    while dis + no <= x:\n        res += 1\n        dis += no\n        no += 1\n    res += min(x - dis, no - (x - dis) + 1)\n    print(res)", "y = int(input())\nfor i in range(y):\n    x = int(input())\n    dist = 0\n    i = 1\n    count = 0\n    while dist + i < x:\n        dist += i\n        i += 1\n        count += 1\n    count += min(x - dist, i - (x - dist) + 1)\n    print(count)", "y = int(input())\nfor i in range(y):\n    x = int(input())\n    dist = 0\n    i = 1\n    count = 0\n    while dist + i < x:\n        dist += i\n        i += 1\n        count += 1\n    count += min(x - dist, i - (x - dist) + 1)\n    print(count)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    j = 1\n    while j * (j + 1) < 2 * N:\n        j += 1\n    if j * (j + 1) == N:\n        print(j)\n        continue\n    j -= 1\n    A = j * (j + 1)\n    A //= 2\n    j += 1\n    B = j * (j + 1)\n    B //= 2\n    print(min(j - 1 + N - A, j - N + B))", "from math import *\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    if x == 1:\n        print(1)\n        continue\n    else:\n        j = 1\n        temp = 2 * x\n        while j * (j + 1) < temp:\n            j = j + 1\n        if j * (j + 1) == temp:\n            print(j)\n            continue\n        j = j - 1\n        temp1 = j * (j + 1)\n        temp1 = int(temp1 / 2)\n        temp2 = (j + 1) * (j + 2)\n        temp2 = int(temp2 / 2)\n        print(min(j + x - temp1, j + 1 - x + temp2))", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nfrom math import sqrt\n\ndef tri(n):\n    return n * (n + 1) // 2\n\ndef reverse_tri(n):\n    return int((sqrt(8 * n + 1) - 1) / 2)\n\ndef solve(x):\n    l = reverse_tri(x)\n    (lt, ht) = (tri(l), tri(l + 1))\n    return min(l + x - lt, l + 1 + (ht - x))\n\ndef do_codechef():\n    for t in rii():\n        print(solve(ii()))\ndo_codechef()\nexit()", "for _ in range(int(input())):\n    x = int(input())\n    ans = 0\n    curr_dist = 0\n    i = 1\n    while curr_dist + i <= x:\n        ans += 1\n        curr_dist += i\n        i += 1\n    ans += min(x - curr_dist, i - (x - curr_dist) + 1)\n    print(ans)", "for _ in range(int(input())):\n    x = int(input())\n    ans = 0\n    curr_dist = 0\n    i = 1\n    while curr_dist + i <= x:\n        ans += 1\n        curr_dist += i\n        i += 1\n    ans += min(x - curr_dist, i - (x - curr_dist) + 1)\n    print(ans)", "for _ in range(int(input())):\n    x = int(input())\n    ans = 0\n    curr_dist = 0\n    i = 1\n    while curr_dist + i <= x:\n        ans += 1\n        curr_dist += i\n        i += 1\n    ans += min(x - curr_dist, i - (x - curr_dist) + 1)\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    n2 = (math.sqrt(1 + 8 * x) - 1) // 2\n    if x == 1:\n        print(1)\n    else:\n        dis1 = (n2 * n2 + n2) // 2\n        dis2 = ((n2 + 1) * (n2 + 1) + (n2 + 1)) // 2\n        ans1 = 1 + (n2 - 1) + abs(x - dis1)\n        ans2 = 1 + n2 + abs(x - dis2)\n        print(min(int(ans1), int(ans2)))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    count = 0\n    if x == 1:\n        print(1)\n        continue\n    for i in range(0, x + 1):\n        if i * (i + 1) // 2 >= x:\n            count = i - 1 + min(abs(x - (i - 1) * i // 2), abs(x - i * (i + 1) // 2))\n            if abs(x - (i - 1) * i // 2) > abs(x - i * (i + 1) // 2):\n                count += 1\n            print(count)\n            break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        c = 1\n        s = 1\n        while s < n:\n            s += c + 1\n            c += 1\n        if s - n < n - (s - c):\n            print(c + (s - n))\n        else:\n            print(c - 1 + (n - (s - c)))", "try:\n    t = int(input())\n    while t != 0:\n        x = int(input())\n        if x == 1:\n            print(1)\n            t = t - 1\n            continue\n        i = 1\n        temp = 1\n        while temp < x:\n            temp = temp + i + 1\n            i += 1\n        if temp - x < x - (temp - i):\n            print(i + (temp - x))\n        else:\n            print(i - 1 + (x - (temp - i)))\n        t = t - 1\nexcept:\n    pass", "try:\n    t = int(input())\n    while t != 0:\n        x = int(input())\n        if x == 1:\n            print(1)\n            t = t - 1\n            continue\n        i = 1\n        temp = 1\n        while temp < x:\n            temp = temp + i + 1\n            i += 1\n        if temp - x < x - (temp - i):\n            print(i + (temp - x))\n        else:\n            print(i - 1 + (x - (temp - i)))\n        t = t - 1\nexcept:\n    pass", "try:\n    t = int(input())\n    while t != 0:\n        x = int(input())\n        if x == 1:\n            print(1)\n            t = t - 1\n            continue\n        i = 1\n        temp = 1\n        while temp < x:\n            temp = temp + i + 1\n            i += 1\n        if temp - x < x - (temp - i):\n            print(i + (temp - x))\n        else:\n            print(i - 1 + (x - (temp - i)))\n        t = t - 1\nexcept:\n    pass", "T = int(input().strip())\nwhile T > 0:\n    x = int(input().strip())\n    station = 0\n    previousstation = 0\n    for i in range(x):\n        previousstation = station\n        station += i + 1\n        if x == station:\n            print(i + 1)\n            break\n        elif x == station + 1:\n            print(i + 2)\n            break\n        elif x < station:\n            if abs(station - x) < abs(previousstation - x):\n                timetaken = i + abs(station - x) + 1\n                print(timetaken)\n                break\n            else:\n                timetaken = i + abs(previousstation - x)\n                print(timetaken)\n                break\n    T = T - 1", "chef_home = 0\nfirst_station_point = 1\nadjacent_station_point = 0\nstation_count = 1\ntrain_mins = 1\nfor tc in range(int(input())):\n    cinema_point = int(input())\n    while cinema_point >= first_station_point:\n        if cinema_point == first_station_point:\n            print(train_mins)\n            break\n        adjacent_station_point = station_count + 1 + first_station_point\n        if cinema_point > first_station_point and cinema_point < adjacent_station_point:\n            point = first_station_point + 1\n            count = 0\n            for i in range(point, cinema_point + 1):\n                count += 1\n            point = adjacent_station_point\n            count1 = 0\n            for i in range(point, cinema_point - 1, -1):\n                count1 += 1\n            if count1 <= count:\n                by_walk_mins = count1\n            else:\n                by_walk_mins = count\n            print(train_mins + by_walk_mins)\n            break\n        station_count += 1\n        train_mins += 1\n        first_station_point = adjacent_station_point", "import math\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    n2 = (math.sqrt(1 + 8 * x) - 1) // 2\n    if x == 1:\n        print(1)\n    else:\n        dis1 = (n2 * n2 + n2) // 2\n        dis2 = ((n2 + 1) * (n2 + 1) + (n2 + 1)) // 2\n        ans1 = 1 + (n2 - 1) + abs(x - dis1)\n        ans2 = 1 + n2 + abs(x - dis2)\n        print(min(int(ans1), int(ans2)))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        i = 1\n        j = 1\n        while j < n:\n            j = j + i + 1\n            i += 1\n        if j - n < n - (j - i):\n            print(i + (j - n))\n        else:\n            print(i - 1 + (n - (j - i)))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        i = 1\n        j = 1\n        while j < n:\n            j = j + i + 1\n            i += 1\n        if j - n < n - (j - i):\n            print(i + (j - n))\n        else:\n            print(i - 1 + (n - (j - i)))", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    s = 1\n    i = 1\n    while s < x:\n        i = i + 1\n        s = s + i\n    ma = s - i\n    mb = s\n    if abs(ma - x) <= abs(mb - x):\n        ans = i - 1 + x - ma\n    else:\n        ans = i + mb - x\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        i = 1\n        j = 1\n        while j < n:\n            j = j + i + 1\n            i += 1\n        if j - n < n - (j - i):\n            print(i + (j - n))\n        else:\n            print(i - 1 + (n - (j - i)))", "try:\n    t = int(input())\n    while t != 0:\n        x = int(input())\n        if x == 1:\n            print(1)\n            t = t - 1\n            continue\n        i = 1\n        temp = 1\n        while temp < x:\n            temp = temp + i + 1\n            i += 1\n        if temp - x < x - (temp - i):\n            print(i + (temp - x))\n        else:\n            print(i - 1 + (x - (temp - i)))\n        t = t - 1\nexcept:\n    pass", "import math as m\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    if x < 3:\n        print(x)\n    elif m.ceil((m.sqrt(1 + 8 * x) - 1) / 2) == m.floor((m.sqrt(1 + 8 * x) - 1) / 2):\n        print(m.floor(m.sqrt(1 + 8 * x) - 1) // 2)\n    else:\n        c = m.ceil((m.sqrt(1 + 8 * x) - 1) / 2)\n        f = m.floor((m.sqrt(1 + 8 * x) - 1) / 2)\n        n1 = c * (c + 1) // 2\n        n2 = f * (f + 1) // 2\n        print(min(c + abs(n1 - x), f + abs(n2 - x)))", "for _ in range(int(input())):\n    x = int(input())\n    l = [1, 3]\n    for i in range(3, x):\n        p = i * (i + 1) // 2\n        l.append(p)\n        if p > x:\n            break\n    print(min(len(l) + l[-1] - x, len(l) - 1 + x - l[-2]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = 0.5 * (8 * n + 1) ** 0.5 - 0.5\n    res = int(res)\n    alt = res + 1\n    if res + (n - (res ** 2 + res) // 2) < alt + ((alt ** 2 + alt) // 2 - n):\n        print(res + (n - (res * res + res) // 2))\n    else:\n        print(alt + (alt * alt + alt) // 2 - n)", "for _ in range(int(input())):\n    X = int(input())\n    station = 0\n    i = 0\n    if X == 1:\n        print(1)\n    elif X == 2:\n        print(2)\n    else:\n        while station < X:\n            i += 1\n            station += i\n        prev = station - i\n        if station - X >= X - prev:\n            print(i - 1 + X - prev)\n        else:\n            print(i + station - X)", "for _ in range(int(input())):\n    n = int(input())\n    sub = int((n * 2) ** 0.5)\n    print(min(sub + abs(n - sub * (sub + 1) // 2), sub - 1 + abs(n - (sub - 1) * sub // 2), sub + 1 + abs(n - (sub + 1) * (sub + 2) // 2)))", "from math import sqrt\n\ndef nsum(n):\n    return n * (n + 1) // 2\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    n = int(sqrt(x * 2)) - 1\n    while n * (n + 1) < x * 2:\n        n = n + 1\n    d1 = n - 1 + x - nsum(n - 1)\n    d2 = n + nsum(n) - x\n    print(min(d1, d2))", "from math import sqrt\n\ndef nsum(n):\n    return n * (n + 1) // 2\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    n = int(sqrt(x * 2)) - 1\n    while n * (n + 1) < x * 2:\n        n = n + 1\n    d1 = n - 1 + x - nsum(n - 1)\n    d2 = n + nsum(n) - x\n    print(min(d1, d2))", "import math\nfor _ in range(int(input())):\n    tn = int(input())\n    a = 1\n    b = 1\n    c = 2 * tn\n    time = 0\n    pos = (-1 + math.sqrt(1 + 4 * c)) / 2\n    pos = round(pos)\n    pre_pos = pos - 1\n    station = int(pos * (pos + 1) / 2)\n    pre_station = int(pre_pos * (pre_pos + 1) / 2)\n    if (station + pre_station) / 2 >= tn:\n        pos = pre_pos\n    time += pos\n    station = int(pos * (pos + 1) / 2)\n    time += abs(tn - station)\n    print(time)", "import math\nfor _ in range(int(input())):\n    tn = int(input())\n    a = 1\n    b = 1\n    c = 2 * tn\n    time = 0\n    pos = (-1 + math.sqrt(1 + 4 * c)) / 2\n    pos = round(pos)\n    pre_pos = pos - 1\n    station = int(pos * (pos + 1) / 2)\n    pre_station = int(pre_pos * (pre_pos + 1) / 2)\n    if (station + pre_station) / 2 >= tn:\n        pos = pre_pos\n    time += pos\n    station = int(pos * (pos + 1) / 2)\n    time += abs(tn - station)\n    print(time)", "for _ in range(int(input())):\n    x = int(input())\n    t = (-1 + int((1 + 8 * x) ** 0.5)) // 2\n    t_1 = t * (t + 1) // 2\n    t_2 = t_1 + (t + 1)\n    a_1 = t + (x - t_1)\n    a_2 = t + 1 + (t_2 - x)\n    print(min(a_1, a_2))", "import math\nfor i in range(int(input())):\n    a = int(input())\n    z = (math.sqrt(1 + 8 * a) - 1) // 2\n    y = z + 1\n    print(int(min(z + a - z * (z + 1) // 2, y + y * (y + 1) // 2 - a)))", "import math\nt = int(input())\nwhile t:\n    x = int(input())\n    n = (-1 + math.sqrt(1 + 8 * x)) / 2\n    (a, b) = (math.floor(n), math.ceil(n))\n    (p, q) = (int(a * (a + 1) / 2), int(b * (b + 1) / 2))\n    if a == b:\n        c = int(n)\n    elif x - p <= q - x:\n        c = a + x - p\n    else:\n        c = b + q - x\n    print(c)\n    t -= 1", "l = [0]\nfor i in range(1, 44722):\n    l.append(l[-1] + i)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    for i in range(1, 44722):\n        if l[i] >= n:\n            x = l[i] - n\n            break\n    if n - l[i - 1] <= x:\n        x = n - l[i - 1]\n        i -= 1\n    print(i + x)\n    t -= 1", "import math\ntest = int(input())\nfor _ in range(test):\n    a = int(input())\n    z = (math.sqrt(1 + 8 * a) - 1) // 2\n    y = z + 1\n    print(int(min(z + a - z * (z + 1) // 2, y + y * (y + 1) // 2 - a)))", "import math\nfor i in range(int(input())):\n    a = int(input())\n    z = (math.sqrt(1 + 8 * a) - 1) // 2\n    y = z + 1\n    print(int(min(z + a - z * (z + 1) // 2, y + y * (y + 1) // 2 - a)))", "import math\nfor i in range(int(input())):\n    a = int(input())\n    z = (math.sqrt(1 + 8 * a) - 1) // 2\n    y = z + 1\n    print(int(min(z + a - z * (z + 1) // 2, y + y * (y + 1) // 2 - a)))", "for _ in range(int(input())):\n    X = int(input())\n    l = [1, 3]\n    for i in range(3, X):\n        p = i * (i + 1) // 2\n        l.append(p)\n        if p > X:\n            break\n    t1 = len(l) + l[-1] - X\n    t2 = len(l) - 1 + X - l[-2]\n    print(min(t1, t2))", "for _ in range(int(input())):\n    X = int(input())\n    l = [0, 1]\n    while True:\n        p = len(l) + l[-1]\n        l.append(p)\n        if p > X:\n            break\n    t1 = len(l) - 1 + l[-1] - X\n    t2 = len(l) - 2 + X - l[-2]\n    print(min(t1, t2))", "from math import *\nfrom collections import *\nfrom itertools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(1000000)\nd = defaultdict(lambda : 0, {})\n\ndef io():\n    return map(int, input().split())\n\ndef op():\n    return list(map(int, input().split()))\n\ndef o():\n    return int(input())\n\ndef r(x):\n    if type(x) == int:\n        return range(x)\n    else:\n        return range(len(x))\n\ndef kl(con, x=0):\n    if x == 0:\n        print('Yes') if con else print('No')\n    elif x == 1:\n        print('yes') if con else print('no')\n    elif x == 2:\n        print('YES') if con else print('NO')\nMOD = 1000000007\nMAX = float('inf')\nMIN = -float('inf')\np = input\n\ndef bs(n):\n    (l, r) = (0, 10 ** 9)\n    while l <= r:\n        m = (l + r + 1) // 2\n        z = m * (m + 1) // 2\n        if z == n:\n            return m\n        elif l == r:\n            z1 = m * (m + 1) // 2\n            z2 = (m + 1) * (m + 2) // 2\n            if abs(z1 - n) > abs(z2 - n):\n                return m + 1\n            else:\n                return m\n        elif z < n:\n            l = m\n        else:\n            r = m - 1\n    return -1\nfor i in range(int(input())):\n    n = o()\n    x = bs(n)\n    ans = x\n    ans += abs(x * (x + 1) // 2 - n)\n    print(ans)", "import math\nfor i in range(int(input())):\n    a = int(input())\n    z = (math.sqrt(1 + 8 * a) - 1) // 2\n    y = z + 1\n    print(int(min(z + a - z * (z + 1) // 2, y + y * (y + 1) // 2 - a)))", "testcase = int(input())\nfor z in range(testcase):\n    X = int(input())\n    li = [0]\n    nums = 1\n    while li[-1] < X:\n        li.append(li[nums - 1] + nums)\n        nums = nums + 1\n    if li[-1] == X:\n        print(nums - 1)\n        continue\n    if li[-1] - X > X - li[-2]:\n        print(nums - 2 + X - li[-2])\n    if li[-1] - X < X - li[-2]:\n        print(nums - 1 + li[-1] - X)\n    if li[-1] - X == X - li[-2]:\n        print(nums - 2 + X - li[-2])", "from bisect import bisect_left\nx = [0] * 50000\nfor i in range(50000):\n    x[i] = x[i - 1] + (i + 1)\nfor j in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        index = bisect_left(x, n)\n        a = index\n        b = index - 1\n        c = b + abs(x[b] - n) + 1\n        d = a + abs(x[a] - n) + 1\n        print(min(c, d))", "T = int(input())\nfor i in range(T):\n    x = int(input())\n    (s, t, c) = (0, 0, 0)\n    while True:\n        if t == x:\n            print(s)\n            break\n        if c < x and x < t:\n            if t - x < x - c:\n                print(t - x + s)\n            else:\n                print(x - c + s - 1)\n            break\n        s += 1\n        c = t\n        t += s", "for _ in range(int(input())):\n    n = int(input())\n    i = 0\n    s = 0\n    p = 0\n    while 1:\n        if s == n:\n            print(i)\n            break\n        if p < n and n < s:\n            if s - n < n - p:\n                print(s - n + i)\n            else:\n                print(n - p + i - 1)\n            break\n        i += 1\n        p = s\n        s += i", "d = {}\ncount = 1\nother = 2\nfor i in range(1, 10 ** 9):\n    d[count] = i\n    count += other\n    other += 1\n    if count > 10 ** 9 * 2:\n        break\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    if n in d:\n        print(d[n])\n    else:\n        minus = n\n        plus = n\n        co = 0\n        while True:\n            minus -= 1\n            plus += 1\n            co += 1\n            if minus in d:\n                ans += co\n                ans += d[minus]\n                print(ans)\n                break\n            elif plus in d:\n                ans += co\n                ans += d[plus]\n                print(ans)\n                break", "stations_li = [1]\nfor i in range(int(input())):\n    cinema_loc = int(input())\n    while stations_li[-1] < cinema_loc:\n        nextStation = stations_li[-1] + len(stations_li) + 1\n        stations_li.append(nextStation)\n    mins = 1\n    if cinema_loc > 1:\n        train_time = len(stations_li)\n        use_last = train_time + stations_li[-1] - cinema_loc\n        second_last = train_time - 1 + cinema_loc - stations_li[-2]\n        mins = min(use_last, second_last)\n    print(mins)", "for t in range(int(input())):\n    x = int(input())\n    i = (-1 + (4 + 8 * x) ** 0.5) // 2\n    time = min(i + x - i * (i + 1) // 2, i + (i + 2) * (i + 1) // 2 - x + 1)\n    print(int(time))", "from math import sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    elif n == 3:\n        print(2)\n    elif n == 4:\n        print(3)\n    else:\n        b = int((sqrt(8 * n + 1) - 1) // 2)\n        p = b * (b + 1) // 2\n        q = (b + 2) * (b + 1) // 2\n        print(min(b + n - p, b + 1 + q - n))", "t = int(input())\nwhile t:\n    x = int(input())\n    time = 0\n    arr = []\n    arr.append(0)\n    for i in range(1, x + 1):\n        st = arr[i - 1] + i\n        arr.append(st)\n        if x == st:\n            time = i\n            break\n        if st > x:\n            difflarge = st - x\n            diffsmall = x - arr[i - 1]\n            if difflarge == diffsmall:\n                time = i - 1 + difflarge\n                break\n            if difflarge > diffsmall:\n                time = i - 1 + diffsmall\n            else:\n                time = i + difflarge\n            break\n    print(time)\n    t = t - 1", "from math import sqrt\nfor _ in range(int(input())):\n    X = int(input())\n    if X == 1:\n        print(1)\n    elif X == 2:\n        print(2)\n    elif X == 3:\n        print(2)\n    elif X == 4:\n        print(3)\n    else:\n        a = int((sqrt(8 * X + 1) - 1) // 2)\n        p = a * (a + 1) // 2\n        q = (a + 2) * (a + 1) // 2\n        print(min(a + X - p, a + 1 + q - X))", "def CO92SUBW(x):\n    from math import sqrt\n    n = (-1 + int(sqrt(1 + 8 * x))) // 2\n    nx = (n + 1) * (n + 2) // 2\n    return min(x - n * (n + 1) // 2 + n, 1 + n + (nx - x))\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    print(CO92SUBW(x))", "import bisect\nT = int(input())\nlst = [0, 1]\nlim = 2 * 10 ** 9\ni = 2\nwhile True:\n    lst.append(lst[-1] + i)\n    i += 1\n    if lst[-1] > lim:\n        break\nfor z in range(T):\n    N = int(input())\n    left_idx = bisect.bisect_left(lst, N)\n    print(min(left_idx + abs(N - lst[left_idx]), left_idx - 1 + abs(lst[left_idx - 1] - N)))", "from bisect import bisect_left as bl\na = [1] * 50000\nfor i in range(1, 50000):\n    a[i] = a[i - 1] + i + 1\nfor _ in range(int(input())):\n    x = int(input())\n    ans = 0\n    indx = bl(a, x)\n    if a[indx] == x:\n        print(indx + 1)\n    else:\n        print(min(indx + x - a[indx - 1], indx + 1 + a[indx] - x))", "TC = int(input())\nfor _ in range(TC):\n    n = int(input())\n    if n == 1 or n == 2:\n        print(n)\n        continue\n    x = (int((1 + 8 * n) ** 0.5) - 1) // 2\n    y = x + 1\n    a = (x * x + x) // 2\n    b = (y * y + y) // 2\n    if abs(n - a) <= abs(n - b) + 1:\n        print(x + abs(n - a))\n    else:\n        print(y + abs(n - b))", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (x, sum, c) = (int(sys.stdin.readline()), 0, 0)\n    while x > sum:\n        c += 1\n        sum = sum + c\n    if sum - x < x - sum + c:\n        sys.stdout.write(str(c + sum - x) + '\\n')\n    else:\n        sys.stdout.write(str(c - 1 + x - sum + c) + '\\n')", "for _ in range(int(input())):\n    x = int(input())\n    i = 1\n    l = []\n    k = 2\n    while i <= x:\n        l.append(i)\n        i += k\n        k += 1\n    l.append(i)\n    temp = min(l[-2:], key=lambda i: abs(i - x))\n    print(l.index(temp) + 1 + abs(temp - x))"]