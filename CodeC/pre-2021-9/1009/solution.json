["import math\nfor _ in range(int(input())):\n    (k, arr) = (int(input()), sorted(list(map(int, input().split()))))\n    if k % 2 == 0:\n        print(0)\n    else:\n        (m, M) = (-1, [])\n        for i in range(k):\n            if arr[i] % 2 == 0:\n                m = 1\n                break\n        if m == -1:\n            for i in range(k):\n                if (arr[i] - 1) // 2 % 2 == 0 and arr[i] > 2:\n                    m = 2\n                    break\n        if m == -1:\n            for i in range(k):\n                if math.log(arr[i] + 1, 2) != int(math.log(arr[i] + 1, 2)) and arr[i] > 2:\n                    b = list(bin(arr[i])[2:])\n                    if '0' in b:\n                        M.append(pow(2, b[::-1].index('0')))\n        print(m) if M == [] else print(min(M))", "import math\nfor _ in range(int(input())):\n    (k, arr) = (int(input()), sorted(list(map(int, input().split()))))\n    if k % 2 == 0:\n        print(0)\n    else:\n        (m, M) = (-1, [])\n        for i in range(k):\n            if arr[i] % 2 == 0:\n                m = 1\n                break\n        if m == -1:\n            for i in range(k):\n                if (arr[i] - 1) // 2 % 2 == 0 and arr[i] > 2:\n                    m = 2\n                    break\n        if m == -1:\n            for i in range(k):\n                if math.log(arr[i] + 1, 2) != int(math.log(arr[i] + 1, 2)) and arr[i] > 2:\n                    b = list(bin(arr[i])[2:])\n                    if '0' in b:\n                        M.append(pow(2, b[::-1].index('0')))\n        print(m) if M == [] else print(min(M))", "import math\nfor _ in range(int(input())):\n    (k, arr) = (int(input()), sorted(list(map(int, input().split()))))\n    if k % 2 == 0:\n        print(0)\n    else:\n        (m, M) = (-1, [])\n        for i in range(k):\n            if arr[i] % 2 == 0:\n                m = 1\n                break\n        if m == -1:\n            for i in range(k):\n                if (arr[i] - 1) // 2 % 2 == 0 and arr[i] > 2:\n                    m = 2\n                    break\n        if m == -1:\n            for i in range(k):\n                if math.log(arr[i] + 1, 2) != int(math.log(arr[i] + 1, 2)) and arr[i] > 2:\n                    b = list(bin(arr[i])[2:])\n                    if '0' in b:\n                        M.append(pow(2, b[::-1].index('0')))\n        print(m) if M == [] else print(min(M))", "import math\nfor _ in range(int(input())):\n    (k, arr) = (int(input()), sorted(list(map(int, input().split()))))\n    if k % 2 == 0:\n        print(0)\n    else:\n        (m, M) = (-1, [])\n        for i in range(k):\n            if arr[i] % 2 == 0:\n                m = 1\n                break\n        if m == -1:\n            for i in range(k):\n                if (arr[i] - 1) // 2 % 2 == 0 and arr[i] > 2:\n                    m = 2\n                    break\n        if m == -1:\n            for i in range(k):\n                if math.log(arr[i] + 1, 2) != int(math.log(arr[i] + 1, 2)) and arr[i] > 2:\n                    b = list(bin(arr[i])[2:])\n                    if '0' in b:\n                        M.append(pow(2, b[::-1].index('0')))\n        print(m) if M == [] else print(min(M))", "t = int(input())\n\ndef conv(n):\n    k = bin(n)\n    k = k[2:]\n    z = len(k)\n    c = '1' * z\n    if c == k:\n        return False\n\ndef find(n):\n    x = bin(n)[2:]\n    str = ''\n    for i in x[::-1]:\n        if i == '0':\n            str += '1'\n            break\n        else:\n            str += '0'\n    return int(str[::-1], 2)\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = l[0]\n    if n % 2 == 0:\n        print(0)\n    else:\n        flag = 0\n        for j in l:\n            if j % 2 == 0:\n                flag = 1\n                break\n        if flag == 1:\n            print(1)\n        else:\n            min = 10 ** 24\n            for j in l:\n                k = conv(j)\n                if k != False:\n                    z = find(j)\n                    if z < min:\n                        min = z\n            if min == 10 ** 24:\n                print(-1)\n            else:\n                print(min)", "import math\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    if k % 2 == 0:\n        print(0)\n    else:\n        m = -1\n        arr.sort()\n        M = []\n        for i in range(k):\n            if arr[i] % 2 == 0:\n                m = 1\n                break\n        if m == -1:\n            for i in range(k):\n                if (arr[i] - 1) // 2 % 2 == 0 and arr[i] > 2:\n                    m = 2\n                    break\n        if m == -1:\n            for i in range(k):\n                x = math.log(arr[i] + 1, 2)\n                if x != int(x) and arr[i] > 2:\n                    b = list(bin(arr[i])[2:])\n                    if '0' in b:\n                        idx = b[::-1].index('0')\n                        P = pow(2, idx)\n                        M.append(P)\n        if M == []:\n            print(m)\n        else:\n            print(min(M))", "for i in range(int(input())):\n    k = int(input())\n    l1 = list(map(int, input().split()))\n    countodd = 0\n    count1 = 0\n    l2 = []\n    for item in l1:\n        if item % 2 == 1:\n            countodd += 1\n            if item != 1 and item != 3:\n                l2.append(item)\n    if k % 2 == 0:\n        print(0)\n    elif countodd % 2 == 0:\n        print(1)\n    elif countodd != k:\n        print(1)\n    else:\n        flag = 0\n        for item in l2:\n            c = 1\n            while c < item:\n                c *= 2\n            if c - 1 != item:\n                x = 1\n                while x & item != 0:\n                    x = x * 2\n                if flag == 0:\n                    flag = 1\n                    mins = x\n                else:\n                    mins = min(mins, x)\n        if flag == 1:\n            print(mins)\n        else:\n            print(-1)", "def find(x):\n    j = bin(x)[2:][::-1]\n    c = 1\n    flag = 0\n    for i in range(len(j)):\n        if j[i] == '0':\n            return pow(2, i)\n    return -1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = []\n    h = []\n    flag = 0\n    v = 10 ** 18\n    if n % 2 == 0:\n        print(0)\n    else:\n        for i in a:\n            x = find(i)\n            if x > 0:\n                flag = 1\n                v = min(v, x)\n        if flag == 0:\n            print(-1)\n        else:\n            print(v)", "def fun():\n    test = int(input())\n    for t in range(test):\n        k = int(input())\n        arr = list(map(int, input().split()))\n        if k & 1:\n            even = False\n            for i in arr:\n                if i % 2 == 0:\n                    even = True\n            if even:\n                print(1)\n                continue\n            ans = pow(10, 20)\n            for i in arr:\n                if i & i + 1 != 0:\n                    count = 0\n                    j = i\n                    while j:\n                        if j % 2 == 0:\n                            break\n                        count += 1\n                        j = j // 2\n                    ans = min(ans, 1 << count)\n            if ans > pow(10, 19):\n                ans = -1\n            print(ans)\n        else:\n            print(0)\nfun()", "T = int(input())\n\ndef best(t):\n    v2 = 0\n    while t % 2 == 0:\n        v2 += 1\n        t = t // 2\n    if t == 1:\n        return -1\n    else:\n        return 2 ** v2\nfor _ in range(T):\n    k = int(input())\n    L = [int(x) for x in input().split()]\n    if k % 2 == 0:\n        print(0)\n    elif k > 1:\n        even = False\n        for i in L:\n            if i % 2 == 0:\n                even = True\n                break\n        if even:\n            print(1)\n        else:\n            X = []\n            for i in L:\n                X.append(best(i + 1))\n            S = []\n            for i in X:\n                if i != -1:\n                    S.append(i)\n            if len(S) == 0:\n                print(-1)\n            else:\n                print(min(S))\n    else:\n        print(best(L[0] + 1))"]