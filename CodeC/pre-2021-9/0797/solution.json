["(n, m) = map(int, input().split())\nl = set(list(map(int, input().split())))\nans = []\nfor x in range(n + 1):\n    (z, ct, b) = (1, 0, 0)\n    while True:\n        if z == 1 and ct != 0:\n            break\n        if b == m:\n            break\n        if z in l:\n            b += 1\n        if z + x <= n:\n            z += x\n        else:\n            k = z + x\n            z = k - n\n        ct += 1\n    if b == m:\n        ans.append(ct)\nprint(min(ans))", "(n, m) = map(int, input().split())\nl = set(list(map(int, input().split())))\nans = []\nfor x in range(n + 1):\n    (z, ct, b) = (1, 0, 0)\n    while True:\n        if z == 1 and ct != 0:\n            break\n        if b == m:\n            break\n        if z in l:\n            b += 1\n        if z + x <= n:\n            z += x\n        else:\n            k = z + x\n            z = k - n\n        ct += 1\n    if b == m:\n        ans.append(ct)\nprint(min(ans))", "(n, m) = map(int, input().split())\nl = set(list(map(int, input().split())))\nans = []\nfor x in range(n + 1):\n    (z, ct, b) = (1, 0, 0)\n    while True:\n        if z == 1 and ct != 0:\n            break\n        if b == m:\n            break\n        if z in l:\n            b += 1\n        if z + x <= n:\n            z += x\n        else:\n            k = z + x\n            z = k - n\n        ct += 1\n    if b == m:\n        ans.append(ct)\nprint(min(ans))", "(n, m) = map(int, input().split())\nl = set(list(map(int, input().split())))\nans = []\nfor x in range(n + 1):\n    (z, ct, b) = (1, 0, 0)\n    while True:\n        if z == 1 and ct != 0:\n            break\n        if b == m:\n            break\n        if z in l:\n            b += 1\n        if z + x <= n:\n            z += x\n        else:\n            k = z + x\n            z = k - n\n        ct += 1\n    if b == m:\n        ans.append(ct)\nprint(min(ans))", "(n, m) = map(int, input().split())\nl = set(list(map(int, input().split())))\nans = []\nfor x in range(n + 1):\n    (z, ct, b) = (1, 0, 0)\n    while True:\n        if z == 1 and ct != 0:\n            break\n        if b == m:\n            break\n        if z in l:\n            b += 1\n        if z + x <= n:\n            z += x\n        else:\n            k = z + x\n            z = k - n\n        ct += 1\n    if b == m:\n        ans.append(ct)\nprint(min(ans))", "(m, n) = map(int, input().split())\nv = [int(x) for x in input().split()]\nans = m\nfor i in range(1, m):\n    cpy = v.copy()\n    (k, cnt, l) = (1, 1, [1])\n    while len(cpy) != 0:\n        if k in cpy:\n            cpy.remove(k)\n        if len(cpy) == 0:\n            break\n        k += i\n        cnt += 1\n        if k > m:\n            k = k - m\n        if k in l:\n            cnt = 10000000000000.0\n            break\n        l.append(k)\n    ans = min(ans, cnt)\nprint(ans)", "(m, n) = map(int, input().split())\nv = [int(x) for x in input().split()]\nans = []\nfor i in range(1, m):\n    cpy = v.copy()\n    (k, cnt, l) = (1, 1, [1])\n    while len(cpy) != 0:\n        if k in cpy:\n            cpy.remove(k)\n        if len(cpy) == 0:\n            break\n        k += i\n        cnt += 1\n        if k > m:\n            k = k - m\n        if k in l:\n            cnt = 10000000000000.0\n            break\n        l.append(k)\n    ans.append(cnt)\nprint(min(ans))", "(m, n) = map(int, input().split())\nv = [int(x) for x in input().split()]\nans = []\nfor i in range(1, m):\n    cpy = v.copy()\n    (k, cnt, l) = (1, 1, [1])\n    while len(cpy) != 0:\n        if k in cpy:\n            cpy.remove(k)\n        if len(cpy) == 0:\n            break\n        k += i\n        cnt += 1\n        if k > m:\n            k = k - m\n        if k in l:\n            cnt = 10000000000000\n            break\n        l.append(k)\n    ans.append(cnt)\nprint(min(ans))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nc = 1000000000000\nf = [False] * n\nfor i in a:\n    f[i - 1] = True\nfor j in range(1, n):\n    b = list(f)\n    x = 0\n    y = 0\n    z = 0\n    while y != m and x < c:\n        if b[z]:\n            y += 1\n            b[z] = False\n        z = (z + j) % n\n        x += 1\n    if x < c:\n        c = x\n    if c == m:\n        break\nprint(c)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nc = 1000000000000\nf = [False] * n\nfor i in a:\n    f[i - 1] = True\nfor j in range(1, n):\n    b = list(f)\n    x = 0\n    y = 0\n    z = 0\n    while y != m and x < c:\n        if b[z]:\n            y += 1\n            b[z] = False\n        z = (z + j) % n\n        x += 1\n    if x < c:\n        c = x\n    if c == m:\n        break\nprint(c)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nc = 1000000000000\nf = [False] * n\nfor i in a:\n    f[i - 1] = True\nfor j in range(1, n):\n    b = list(f)\n    x = 0\n    y = 0\n    z = 0\n    while y != m and x < c:\n        if b[z]:\n            y += 1\n            b[z] = False\n        z = (z + j) % n\n        x += 1\n    if x < c:\n        c = x\n    if c == m:\n        break\nprint(c)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nmaximum = 1000000000000\nfinal = [False] * n\nfor i in a:\n    final[i - 1] = True\nfor j in range(1, n):\n    test = list(final)\n    total = 0\n    x = 0\n    index = 0\n    while x != m and total < maximum:\n        if test[index]:\n            x += 1\n            test[index] = False\n        index = (index + j) % n\n        total += 1\n    if total < maximum:\n        maximum = total\n    if maximum == m:\n        break\nprint(maximum)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nmaximum = 1000000000000\nfinal = [False] * n\nfor i in a:\n    final[i - 1] = True\nfor j in range(1, n):\n    test = list(final)\n    total = 0\n    x = 0\n    index = 0\n    while x != m and total < maximum:\n        if test[index]:\n            x += 1\n            test[index] = False\n        index = (index + j) % n\n        total += 1\n    if total < maximum:\n        maximum = total\n    if maximum == m:\n        break\nprint(maximum)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nmaximum = 1000000000000\nfinal = [False] * n\nfor i in a:\n    final[i - 1] = True\nfor j in range(1, n):\n    test = list(final)\n    total = 0\n    x = 0\n    index = 0\n    while x != m and total < maximum:\n        if test[index]:\n            x += 1\n            test[index] = False\n        index = (index + j) % n\n        total += 1\n    if total < maximum:\n        maximum = total\n    if maximum == m:\n        break\nprint(maximum)", "(hash, ans) = ({}, [])\n(n, m) = map(int, input().split())\nka = set(list(map(int, input().split())))\nfor i in range(n + 1):\n    (z, count, ba) = (1, 0, 0)\n    while True:\n        if z == 1 and count != 0:\n            break\n        if ba == m:\n            break\n        if z in ka:\n            ba += 1\n        if z + i <= n:\n            z += i\n        else:\n            k = z + i\n            z = k - n\n        count += 1\n    if ba == m:\n        ans.append(count)\nprint(min(ans))", "(n, m) = map(int, input().split())\nls = set(list(map(int, input().split())))\nmn = 10 ** 9\nfor i in range(1, n):\n    count = 0\n    dct = {}\n    s = 0\n    k = m\n    case = 1\n    while k > 0:\n        if s in dct:\n            case = 0\n            break\n        dct[s] = 1\n        if s + 1 in ls:\n            k -= 1\n        s = (s + i) % n\n        count += 1\n    if case:\n        mn = min(mn, count)\nprint(mn)", "(hash, ans) = ({}, [])\n(n, m) = map(int, input().split())\nka = set(list(map(int, input().split())))\nfor i in range(n + 1):\n    (z, count, ba) = (1, 0, 0)\n    while True:\n        if z == 1 and count != 0:\n            break\n        if ba == m:\n            break\n        if z in ka:\n            ba += 1\n        if z + i <= n:\n            z += i\n        else:\n            k = z + i\n            z = k - n\n        count += 1\n    if ba == m:\n        ans.append(count)\nprint(min(ans))", "(hash, ans) = ({}, [])\n(n, m) = map(int, input().split())\nka = set(list(map(int, input().split())))\nfor i in range(n + 1):\n    (z, count, ba) = (1, 0, 0)\n    while True:\n        if z == 1 and count != 0:\n            break\n        if ba == m:\n            break\n        if z in ka:\n            ba += 1\n        if z + i <= n:\n            z += i\n        else:\n            k = z + i\n            z = k - n\n        count += 1\n    if ba == m:\n        ans.append(count)\nprint(min(ans))", "(hash, ans) = ({}, [])\n(n, m) = map(int, input().split())\nka = set(list(map(int, input().split())))\nfor i in range(n + 1):\n    (z, count, ba) = (1, 0, 0)\n    while True:\n        if z == 1 and count != 0:\n            break\n        if ba == m:\n            break\n        if z in ka:\n            ba += 1\n        if z + i <= n:\n            z += i\n        else:\n            k = z + i\n            z = k - n\n        count += 1\n    if ba == m:\n        ans.append(count)\nprint(min(ans))", "(m, n) = map(int, input().split())\nt = [int(x) for x in input().split()]\nans = []\nfor i in range(1, m):\n    td = t.copy()\n    (k, cnt, l) = (1, 1, [1])\n    while len(td) != 0:\n        if k in td:\n            td.remove(k)\n        if len(td) == 0:\n            break\n        k += i\n        cnt += 1\n        if k > m:\n            k = k - m\n        if k in l:\n            cnt = 10000000000000\n            break\n        l.append(k)\n    ans.append(cnt)\nprint(min(ans))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nmaximum = 1000000000000\nfinal = [False] * n\nfor i in a:\n    final[i - 1] = True\nfor j in range(1, n):\n    test = list(final)\n    total = 0\n    x = 0\n    index = 0\n    while x != m and total < maximum:\n        if test[index]:\n            x += 1\n            test[index] = False\n        index = (index + j) % n\n        total += 1\n    if total < maximum:\n        maximum = total\n    if maximum == m:\n        break\nprint(maximum)", "try:\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mindif = 999999\n    maxdif = arr[-1] - arr[0]\n    for i in range(1, m):\n        if mindif > arr[i] - arr[i - 1]:\n            mindif = arr[i] - arr[i - 1]\n    minstop = []\n    d = dict()\n    d1 = dict()\n    for i in range(mindif, maxdif + 1):\n        for _ in arr:\n            d[_] = 1\n            d1[_] = 1\n        count = 0\n        stop = 0\n        j = 1\n        while j < n + 1:\n            stop += 1\n            if j == 1:\n                count += 1\n                if count == 2:\n                    stop = 99999999\n                    break\n            if j in d:\n                if d[j] == 1:\n                    d[j] = 0\n                    del d1[j]\n                else:\n                    stop = 99999999\n                    break\n            if len(d1) == 0:\n                break\n            j += i\n            if j > n:\n                j = j % n\n        minstop += [stop]\n    print(min(minstop))\nexcept EOFError:\n    pass", "(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\nmaxi = 1000000000000\nfinal = [False for i in range(n)]\nfor i in a:\n    final[i - 1] = True\nfor jump in range(1, n):\n    test = list(final)\n    total = 0\n    x = index = 0\n    while x != m and total < maxi:\n        if test[index] == True:\n            x += 1\n            test[index] = False\n        index = (index + jump) % n\n        total += 1\n    if total < maxi:\n        maxi = total\n    if maxi == m:\n        break\nprint(maxi)", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\ne = {}\nfor i in range(m):\n    e[l[i]] = 0\nd = []\nfor i in range(1, n):\n    k = []\n    f = 0\n    while len(k) != n:\n        if len(k) == 0:\n            c = 1\n        else:\n            c = (k[-1] + i) % n\n        if c == 0:\n            c = n\n        k.append(c)\n        try:\n            g = e[k[-1]]\n            if g == 0:\n                f += 1\n                e[k[-1]] = 1\n            if f == m:\n                d.append(len(k))\n                break\n        except:\n            pass\n    for i in range(m):\n        e[l[i]] = 0\nprint(min(d))", "(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\nmaxi = 1000000000000\nfinal = [False for i in range(n)]\nfor i in a:\n    final[i - 1] = True\nfor jump in range(1, n):\n    test = list(final)\n    total = 0\n    x = index = 0\n    while x != m and total < maxi:\n        if test[index] == True:\n            x += 1\n            test[index] = False\n        index = (index + jump) % n\n        total += 1\n    if total < maxi:\n        maxi = total\n    if maxi == m:\n        break\nprint(maxi)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\nmindif = 999999\nmaxdif = arr[-1] - arr[0]\nfor i in range(1, m):\n    if mindif > arr[i] - arr[i - 1]:\n        mindif = arr[i] - arr[i - 1]\nminstop = []\nd = dict()\nd1 = dict()\nfor i in range(mindif, maxdif + 1):\n    for _ in arr:\n        d[_] = 1\n        d1[_] = 1\n    count = 0\n    stop = 0\n    j = 1\n    while j < n + 1:\n        stop += 1\n        if j == 1:\n            count += 1\n            if count == 2:\n                stop = 99999999\n                break\n        if j in d:\n            if d[j] == 1:\n                d[j] = 0\n                del d1[j]\n            else:\n                stop = 99999999\n                break\n        if len(d1) == 0:\n            break\n        j += i\n        if j > n:\n            j = j % n\n    minstop += [stop]\nprint(min(minstop))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nmark = [-1 for x in range(n + 1)]\nfor i in range(m):\n    mark[a[i]] = 0\nminn = 10000\nfor i in range(1, n):\n    pos = 1\n    count = 0\n    ans = 1\n    while True:\n        if mark[pos] != -1 and mark[pos] != i:\n            mark[pos] = 0\n            count += 1\n        pos = (pos + i) % n\n        if pos == 0:\n            pos = n\n        if pos == 1 or count == m:\n            break\n        ans += 1\n    if count == m:\n        minn = min(ans, minn)\nprint(minn)", "hash = {}\n(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nka = set(l)\nans = []\nfor i in range(n + 1):\n    z = 1\n    count = 0\n    ba = 0\n    while True:\n        if z == 1 and count != 0:\n            break\n        if ba == m:\n            break\n        if z in ka:\n            ba += 1\n        if z + i <= n:\n            z += i\n        else:\n            k = z + i\n            z = k - n\n        count += 1\n    if ba == m:\n        ans.append(count)\nans.sort()\nprint(ans[0])", "ll = lambda : list(map(int, input().split()))\n[n, x] = ll()\narr = ll()\nh = [0] * n\nminj = 9999999\nfor i in range(x):\n    h[arr[i] - 1] = 1\nfor px in range(1, n - 1):\n    vis = [0] * (n + 1)\n    viscells = 0\n    index = 0\n    jumps = 0\n    while viscells != x and vis[index] == 0:\n        if h[index] == 1:\n            viscells += 1\n        vis[index] = 1\n        index = (index + px) % n\n        jumps += 1\n    if viscells == x and jumps < minj:\n        minj = jumps\nprint(minj)", "(n, _) = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nboo = [True if i in arr and i != 1 else False for i in range(1, n + 1)]\nlis = [0] * n\nii = 1\nfor aa in range(1, n):\n    i = 1\n    boo1 = boo.copy()\n    while True in boo1:\n        boo1[i - 1] = False\n        lis[aa - 1] += 1\n        i = (i + aa) % n\n        if lis[aa - 1] > 2000:\n            break\n    time = lis[aa - 1]\nlis = lis[:-1]\nprint(min(lis))", "(n, m) = map(int, input().split())\nf = [[] * i for i in range(1001)]\nfor i in range(1001):\n    for j in range(1001):\n        f[i].append(-1)\nfor i in range(1, 1001):\n    s = 0\n    for x in range(1, 100000000, i):\n        s = s + 1\n        if s > 1005:\n            break\n        if x % n != 0:\n            if f[i][x % n] == -1:\n                f[i][x % n] = s\n            else:\n                f[i][x % n] = min(f[i][x % n], s)\n        elif f[i][n] == -1:\n            f[i][n] = s\n        else:\n            f[i][n] = min(f[i][n], s)\na = list(map(int, input().split()))\np = [100000000] * 1005\nfor i in range(1, 1001):\n    try:\n        for j in a:\n            if f[i][j] == -1:\n                s = 0 / 0\n            if p[i] == 100000000:\n                p[i] = f[i][j]\n            else:\n                p[i] = max(p[i], f[i][j])\n    except:\n        p[i] = 100000000\n        continue\nprint(min(p))", "(n, m) = map(int, input().split())\nf = [[] * i for i in range(1001)]\nfor i in range(1001):\n    for j in range(1001):\n        f[i].append(-1)\nfor i in range(1, 1001):\n    s = 0\n    for x in range(1, 100000000, i):\n        s = s + 1\n        if s > 1005:\n            break\n        if x % n != 0:\n            if f[i][x % n] == -1:\n                f[i][x % n] = s\n            else:\n                f[i][x % n] = min(f[i][x % n], s)\n        elif f[i][n] == -1:\n            f[i][n] = s\n        else:\n            f[i][n] = min(f[i][n], s)\na = list(map(int, input().split()))\np = [100000000] * 1005\nfor i in range(1, 1001):\n    try:\n        for j in a:\n            if f[i][j] == -1:\n                s = 0 / 0\n            if p[i] == 100000000:\n                p[i] = f[i][j]\n            else:\n                p[i] = max(p[i], f[i][j])\n    except:\n        p[i] = 100000000\n        continue\nprint(min(p))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = 999999999999\nfor x in range(1, n):\n    s = set(a)\n    stops = 0\n    q = 1\n    for i in range(n):\n        if q in s:\n            s.remove(q)\n        q = (q - 1 + x) % n + 1\n        stops += 1\n        if len(s) == 0:\n            break\n    if len(s) == 0:\n        ans = min(ans, stops)\nprint(ans)", "def read():\n    return input().strip()\n\ndef readint():\n    return int(read())\n(n, k) = map(int, read().split())\narr = [0] * 1001\nfor i in read().split():\n    arr[int(i)] = 1\nmink = 9999999\nfor i in range(1, n):\n    brr = list(arr)\n    s = k\n    j = 1\n    ii = 0\n    val = 0\n    while s > 0:\n        val = j % n\n        if val == 0:\n            val = n\n        if brr[val] == 0 and arr[val] == 1:\n            ii = 9999999\n            break\n        if brr[val] == 1:\n            s = s - 1\n            brr[val] = 0\n        j = j + i\n        ii += 1\n        if ii > mink:\n            break\n    if ii < mink:\n        mink = ii\nprint(mink)", "(n, m) = map(int, input().split())\nl = set(map(int, input().split()))\narr = [i for i in range(1, n + 1)]\nans = 10 ** 9\nx = 1\nwhile x < n + 1:\n    array = set()\n    ind = [False] * n\n    done = False\n    array.add(1)\n    val = 1\n    cou = 1\n    while not done:\n        no = (val + x) % n\n        if no == 0:\n            no = n\n        if no in array:\n            break\n        else:\n            array.add(no)\n            cou += 1\n        val += x\n        if cou == n:\n            done = True\n        if array >= l:\n            if len(array) < ans:\n                ans = len(array)\n            break\n    x += 1\nprint(ans)", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nimport random\nimport re\nMAX = sys.maxsize\nMAXN = 10 ** 5 + 10\nMOD = 10 ** 9 + 9\n\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2:\n        return True\n    if not n & 1:\n        return False\n    for x in range(3, int(n ** 0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a, b, x, y):\n    return abs(a - x) + abs(b - y)\n\ndef numIN(x=' '):\n    return map(int, sys.stdin.readline().strip().split(x))\n\ndef charIN(x=' '):\n    return sys.stdin.readline().strip().split(x)\n\ndef dis(x, y):\n    a = y[0] - x[0]\n    b = x[1] - y[1]\n    return (a * a + b * b) ** 0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1, len(a)):\n        g = math.gcd(g, a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    for i in range(len(a)):\n        meh += a[i]\n        if msf < meh:\n            msf = meh\n        if meh < 0:\n            meh = 0\n    return msf\n(n, m) = numIN()\na = list(numIN())\nd = [0] * (n + 1)\nfor i in a:\n    d[i] = 1\nmn = MAX\nfor i in range(1, n + 1):\n    x = 1\n    cnt = 0\n    if d[x]:\n        cnt += 1\n    fl = 1\n    ans = 1\n    f = [0] * (n + 1)\n    while cnt != m:\n        x += i\n        ans += 1\n        if x > n:\n            x %= n\n        f[x] += 1\n        if f[x] > 1:\n            fl = 0\n            break\n        if d[x]:\n            cnt += 1\n    if fl:\n        mn = min(mn, ans)\nprint(mn)", "(n, m) = map(int, input().split())\ns = [int(i) for i in input().split()]\nmin_val = 10 ** 9 + 7\nfor x in range(1, n):\n    c = [1001] * (n + 1)\n    c[0] = 0\n    for i in range(n + 1):\n        val = (x * i + 1) % n\n        if val == 0:\n            val = n\n        c[val] = min(c[val], i + 1)\n    temp_val = 0\n    for i in s:\n        temp_val = max(temp_val, c[i])\n    min_val = min(min_val, temp_val)\nprint(min_val)", "from collections import defaultdict\n(n, m) = map(int, input().split())\na = [int(j) for j in input().split()]\ndic = defaultdict(int)\nmi = 10 ** 10\nfor i in range(n):\n    for x in a:\n        dic[x] = 0\n    count = 0\n    anscount = 0\n    ind = 0\n    visited = [False] * n\n    while True:\n        if visited[ind] == True:\n            break\n        else:\n            visited[ind] = True\n            count += 1\n        if ind + 1 in dic:\n            if dic[ind + 1] == 0:\n                dic[ind + 1] = 1\n                anscount += 1\n        if anscount == len(a):\n            break\n        ind += i + 1\n        ind %= n\n    var = 0\n    for abc in dic:\n        if dic[abc] == 0:\n            var = 1\n            break\n    if count < mi and var == 0:\n        mi = count\nprint(mi)", "s = list(map(int, input().split()))\n(n, m) = (s[0], s[1])\nlol = list(map(int, input().split()))\ndict = {}\nfor i in range(10001):\n    dict[i] = 0\nfor i in range(len(lol)):\n    dict[lol[i]] = 1\nx = 1\nminstop = 1000000007\nwhile x < n:\n    stop = 1\n    nex = 1 + x\n    l = []\n    if dict[1] == 1:\n        l.append(1)\n    if len(l) == m:\n        minstop = 1\n        break\n    while True:\n        stop += 1\n        if dict[nex] == 1:\n            l.append(nex)\n        if len(l) == m:\n            break\n        nex = nex + x\n        if nex > n:\n            nex = nex - n\n        if nex == 1 and len(l) != m:\n            stop = 1000000007\n            break\n    minstop = min(minstop, stop)\n    x += 1\nprint(minstop)", "(n, m) = map(int, input().split())\nl = [int(i) for i in input().split()]\nfrom collections import Counter\nc = Counter(l)\nans = 10 ** 9\nfor x in range(1, n + 1):\n    cnt = 1\n    k = 0\n    z = 1\n    seen = 0\n    if c[1]:\n        seen = 1\n        c[1] -= 1\n    while cnt < n:\n        z = (z + x) % n\n        if z == 0:\n            z = n\n        if c[z]:\n            seen += 1\n            c[z] -= 1\n        cnt += 1\n        if seen == m:\n            break\n    c = Counter(l)\n    if seen == m:\n        if cnt < ans:\n            ans = cnt\n            ansx = x\nprint(ans)", "def totient(n):\n    ret = n\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            ret = (i - 1) * (ret // i)\n            while n % i == 0:\n                n //= i\n        i += 1\n    if n:\n        ret = (n - 1) * (ret // n)\n    return ret\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef main():\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    phi = totient(n)\n    ans = 1000\n    for i in range(1, n):\n        tmp = 0\n        g = gcd(i, n)\n        if g != 1:\n            for d in arr:\n                if (d - 1) % g:\n                    tmp = -1\n                    break\n        if tmp == -1:\n            continue\n        j = i // g\n        for d in arr:\n            tmp = max(tmp, (d - 1) // g * pow(j, phi - 1, n) % n)\n        if tmp == 1:\n            print(i)\n        ans = min(ans, tmp + 1)\n    print(ans)\n    return 0\nmain()"]