["t = int(input())\nfor ni in range(t):\n    (n, a, b, c) = map(int, input().split())\n    f = [int(i) for i in input().split()]\n    l = [abs(b - i) + abs(i - a) for i in f]\n    print(min(l) + c)", "for _ in range(int(input())):\n    (N, a, b, c) = map(int, input().split())\n    F = list(map(int, input().split()))\n    F.sort()\n    if a < b:\n        (a, b) = (b, a)\n    ans = c\n    for f in F:\n        if b < f:\n            ans += f - b + abs(a - f)\n            break\n    else:\n        ans += abs(f - b) + abs(a - f)\n    print(ans)", "for _ in range(int(input())):\n    (N, a, b, c) = map(int, input().split())\n    F = list(map(int, input().split()))\n    F.sort()\n    if a < b:\n        (a, b) = (b, a)\n    ans = c\n    for f in F:\n        if b < f:\n            ans += f - b + abs(a - f)\n            break\n    else:\n        ans += abs(f - b) + abs(a - f)\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    ft = [abs(i - b) + abs(i - a) for i in f]\n    tot = min(ft) + c\n    print(tot)", "for tc in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    ft = [abs(i - b) + abs(i - a) for i in f]\n    tot = min(ft) + c\n    print(tot)", "t = int(input())\nfor t in range(t):\n    (n, a, b, c) = [int(i) for i in input().split()]\n    floor = [int(i) for i in input().split()]\n    arr = [abs(f - b) + abs(f - a) for f in floor]\n    s = min(arr)\n    print(s + c)", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    floor_list = list(map(int, input().split()))\n    chk_list = [abs(fA - A) + abs(fA - B) for fA in floor_list]\n    chk_list.sort()\n    print(chk_list[0] + C)", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    floor_list = list(map(int, input().split()))\n    chk_list = [abs(fA - A) + abs(fA - B) for fA in floor_list]\n    chk_list.sort()\n    print(chk_list[0] + C)", "t = input()\nfor x in range(0, int(t)):\n    (n, a, b, c) = map(int, input().split())\n    ar = [int(i) for i in input().split()]\n    mini = 100000000000\n    ans = 0\n    for i in range(n):\n        ans = abs(ar[i] - b) + abs(ar[i] - a) + c\n        mini = min(mini, ans)\n    print(mini)", "tt = int(input())\nwhile tt != 0:\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = 0\n    x = 0\n    for f in range(n):\n        if l[f] >= a and l[f] <= b or (l[f] >= b and l[f] <= a):\n            t = 0\n            break\n        else:\n            s = min(abs(l[f] - a), abs(l[f] - b))\n            if x == 0:\n                x = 1\n                t = s\n            else:\n                t = min(t, s)\n    print(2 * t + c + abs(a - b))\n    tt -= 1", "tt = int(input())\nwhile tt != 0:\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = 0\n    x = 0\n    for f in range(n):\n        if l[f] >= a and l[f] <= b or (l[f] >= b and l[f] <= a):\n            t = 0\n            break\n        else:\n            s = min(abs(l[f] - a), abs(l[f] - b))\n            if x == 0:\n                x = 1\n                t = s\n            else:\n                t = min(t, s)\n    print(2 * t + c + abs(a - b))\n    tt -= 1", "for i in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = []\n    for i in l:\n        k.append(c + abs(a - i) + abs(b - i))\n    print(min(k))", "for _ in range(int(input())):\n    (n, a, b, d) = list(map(int, input().split()))\n    list_f = list(map(int, input().split()))\n    v = 10 ** 10\n    for i in list_f:\n        x = d + abs(a - i) + abs(b - i)\n        if v > x:\n            v = x\n    print(v)", "for _ in range(int(input())):\n    (N, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    l = []\n    for i in f:\n        l.append(abs(i - b) + c + abs(i - a))\n    print(min(l))", "import math\nt = int(input(''))\nif 1 <= t <= 10:\n    for _ in range(t):\n        (N, a, b, c) = map(int, input().split())\n        f = input().split()\n        if len(f) == N and 1 <= N <= 10 ** 5:\n            for i in range(N):\n                f[i] = math.fabs(int(f[i]) - b) + math.fabs(int(f[i]) - a)\n            print(int(min(f)) + c)", "casos = int(input())\nfor i in range(casos):\n    (nro_amigos, piso_Alice, piso_bob, minutos) = map(int, input().split())\n    pisos_disponibles = [int(x) for x in input().split()]\n    lista = []\n    for j in pisos_disponibles:\n        lista.append(abs(piso_bob - j) + minutos + abs(j - piso_Alice))\n    print(min(lista))", "casos = int(input())\nfor i in range(casos):\n    (nro_amigos, piso_Alice, piso_bob, minutos) = map(int, input().split())\n    pisos_disponibles = [int(x) for x in input().split()]\n    lista = []\n    for j in pisos_disponibles:\n        lista.append(abs(piso_bob - j) + minutos + abs(j - piso_Alice))\n    print(min(lista))", "import sys\nx = int(input())\nfor i in range(x):\n    k = input().split()\n    n = int(k[0])\n    p = int(k[1])\n    q = int(k[2])\n    c = int(k[3])\n    ls = list(map(int, input().split()))\n    x2 = sys.maxsize\n    for j in ls:\n        x1 = abs(p - j) + abs(q - j) + c\n        x2 = min(x1, x2)\n    print(x2)", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    m = []\n    for i in range(n):\n        m.append(abs(b - f[i]) + abs(a - f[i]))\n    r = m.index(min(m))\n    t = abs(b - f[r]) + c + abs(a - f[r])\n    print(t)", "t = input()\nfor x in range(0, int(t)):\n    (n, a, b, c) = map(int, input().split())\n    ar = [int(i) for i in input().split()]\n    mini = 100000000000\n    ans = 0\n    for i in range(n):\n        ans = abs(ar[i] - b) + abs(ar[i] - a) + c\n        mini = min(mini, ans)\n    print(mini)", "t = int(input())\nfor i in range(t):\n    (n, a, b, c) = map(int, input().split())\n    ar = [int(i) for i in input().split()]\n    mini = 100000000000\n    ans = 0\n    for i in range(n):\n        ans = abs(ar[i] - b) + abs(ar[i] - a) + c\n        mini = min(mini, ans)\n    print(mini)", "def bob(n, a, b, c, x):\n    min = abs(b - x[0]) + c + abs(x[0] - a)\n    for i in range(1, n):\n        if min > abs(b - x[i]) + c + abs(x[i] - a):\n            min = abs(b - x[i]) + c + abs(x[i] - a)\n    return print(min)\nk = int(input())\nwhile k:\n    arr = list(map(int, input().rstrip().split()))\n    x = list(map(int, input().rstrip().split()))\n    bob(arr[0], arr[1], arr[2], arr[3], x)\n    k -= 1", "t = int(input())\nfor i in range(t):\n    (n, a, b, c) = map(int, input().split())\n    ar = [int(i) for i in input().split()]\n    mini = 100000000000\n    ans = 0\n    for i in range(n):\n        ans = abs(ar[i] - b) + abs(ar[i] - a) + c\n        mini = min(mini, ans)\n    print(mini)", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    minimum = 10000000000.0\n    ans = 0\n    for i in range(n):\n        ans = abs(f[i] - b) + abs(f[i] - a) + c\n        minimum = min(minimum, ans)\n    print(minimum)", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    minimum = 10000000000.0\n    ans = 0\n    for i in range(n):\n        ans = abs(f[i] - b) + abs(f[i] - a) + c\n        minimum = min(minimum, ans)\n    print(minimum)", "def nearest(l, a, b):\n    x = l[0]\n    diff = abs(a - x) + abs(b - x)\n    for i in l:\n        if abs(a - i) + abs(b - i) < diff:\n            x = i\n            diff = abs(a - i) + abs(b - i)\n    return diff\nfor M in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = nearest(l, a, b)\n    print(temp + c)", "def nearest(l, a, b):\n    x = l[0]\n    diff = abs(a - x) + abs(b - x)\n    for i in l:\n        if abs(a - i) + abs(b - i) < diff:\n            x = i\n            diff = abs(a - i) + abs(b - i)\n    return diff\nfor M in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = nearest(l, a, b)\n    print(temp + c)", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "def nearest(l, a, b):\n    x = l[0]\n    diff = abs(a - x) + abs(b - x)\n    for i in l:\n        if abs(a - i) + abs(b - i) < diff:\n            x = i\n            diff = abs(a - i) + abs(b - i)\n    return diff\nfor M in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = nearest(l, a, b)\n    print(temp + c)", "def nearest(l, a, b):\n    x = l[0]\n    diff = abs(a - x) + abs(b - x)\n    for i in l:\n        if abs(a - i) + abs(b - i) < diff:\n            x = i\n            diff = abs(a - i) + abs(b - i)\n    return diff\nfor M in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = nearest(l, a, b)\n    print(temp + c)", "def nearest(l, a, b):\n    x = l[0]\n    diff = abs(a - x) + abs(b - x)\n    for i in l:\n        if abs(a - i) + abs(b - i) < diff:\n            x = i\n            diff = abs(a - i) + abs(b - i)\n    return diff\nfor M in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = nearest(l, a, b)\n    print(temp + c)", "T = int(input())\nfor _ in range(T):\n    (n, a, b, c) = map(int, input().split())\n    L = list(map(int, input().split()))\n    found = False\n    for i in range(n):\n        if L[i] < b and L[i] > a or (L[i] > b and L[i] < a):\n            found = True\n            break\n    if found:\n        print(c + abs(a - b))\n    else:\n        M = L.copy()\n        for i in range(n):\n            L[i] = abs(b - L[i])\n        k = min(L)\n        b = L.index(k)\n        print(c + k + abs(M[b] - a))", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 2 * max(l) + a + b + c\n    for i in l:\n        if abs(b - i) + c + abs(i - a) < m:\n            m = abs(b - i) + c + abs(i - a)\n    print(m)", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 2 * max(l) + a + b + c\n    for i in l:\n        if abs(b - i) + c + abs(i - a) < m:\n            m = abs(b - i) + c + abs(i - a)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (N, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    m = 2 * max(f) + c + a + b\n    check = False\n    for j in f:\n        if j == a or j == b or (j > a and j < b) or (j < a and j > b):\n            print(abs(b - a) + c)\n            check = True\n            break\n        else:\n            time = abs(j - a) + abs(j - b) + c\n            if time < m:\n                m = time\n    if not check:\n        print(m)", "t = int(input())\nfor i in range(t):\n    (N, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    m = 2 * max(f) + c + a + b\n    check = False\n    for j in f:\n        if j == a or j == b or (j > a and j < b) or (j < a and j > b):\n            print(abs(b - a) + c)\n            check = True\n            break\n        else:\n            time = abs(j - a) + abs(j - b) + c\n            if time < m:\n                m = time\n    if not check:\n        print(m)", "t = int(input())\nfor tc in range(t):\n    (N, a, b, c) = map(int, input().split(' '))\n    friend = list(map(int, input().split(' ')))\n    mini = 2 * max(friend) + c + a + b\n    chk = False\n    for fr in friend:\n        if fr == a or fr == b or (fr > a and fr < b) or (fr < a and fr > b):\n            print(abs(b - a) + c)\n            chk = True\n            break\n        else:\n            time = abs(fr - a) + abs(fr - b) + c\n            if time < mini:\n                mini = time\n    if not chk:\n        print(mini)", "times = []\ntest_cases = int(input())\nfor _ in range(test_cases):\n    (size, final, start, timeTakenAtRoom) = map(int, input().split())\n    nums = set(map(int, input().split()))\n    min_time = None\n    for num in nums:\n        x = abs(final - num) + abs(num - start) + timeTakenAtRoom\n        if min_time == None:\n            min_time = x\n        elif x < min_time:\n            min_time = x\n    times.append(min_time)\nfor num in times:\n    print(num)", "times = []\ntest_cases = int(input())\nfor _ in range(test_cases):\n    (size, final, start, timeTakenAtRoom) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    min_time = None\n    for num in nums:\n        x = abs(final - num) + abs(num - start) + timeTakenAtRoom\n        if min_time == None:\n            min_time = x\n        elif x < min_time:\n            min_time = x\n    times.append(min_time)\nfor num in times:\n    print(num)", "import collections\nfrom math import log2, log10, ceil\n\ndef pow2(n):\n    t = 0\n    while not n & 1:\n        n = n // 2\n        t += 1\n    return t\n\ndef solve():\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    times = []\n    for fi in f:\n        times.append(abs(fi - b) + abs(fi - a) + c)\n    times.sort()\n    print(times[0])\n\ndef main():\n    t = int(input())\n    while t:\n        t -= 1\n        solve()\nmain()", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().split())\n    F = list(map(int, input().split()))\n    G = list(filter(lambda x: x > B, F))\n    S = list(filter(lambda x: x < B, F))\n    T = [C, C]\n    if B in F:\n        print(C + abs(A - B))\n    elif G == []:\n        print(abs(max(S) - B) + abs(A - max(S)) + C)\n    elif S == []:\n        print(abs(min(G) - B) + abs(A - min(G)) + C)\n    else:\n        T[0] += abs(min(G) - B) + abs(A - min(G))\n        T[1] += abs(max(S) - B) + abs(A - max(S))\n        print(min(T))", "import sys\nt = int(input())\nfor i in range(t):\n    s = input().split()\n    n = int(s[0])\n    a = int(s[1])\n    b = int(s[2])\n    c = int(s[3])\n    l = list(map(int, input().split()))\n    t2 = sys.maxsize\n    for j in l:\n        t1 = abs(a - j) + abs(b - j) + c\n        t2 = min(t1, t2)\n    print(t2)", "T = int(input())\nfor i in range(T):\n    (N, a, b, c) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    least = 1000000000000000\n    for i in lst:\n        if least > abs(b - i) + abs(a - i):\n            least = abs(b - i) + abs(a - i)\n    time = least + c\n    print(time)", "from collections import defaultdict, Counter\nfrom sys import stdin, stdout, setrecursionlimit\nfrom math import *\nfrom bisect import bisect_left, bisect_right\nfrom statistics import mode\nfrom functools import reduce\nimport operator as op\nI = lambda : stdin.readline().rstrip('\\r\\n')\nari = lambda : list(map(int, I().split()))\nars = lambda : list(map(str, I().split()))\narf = lambda : list(map(float, I().split()))\nmpi = lambda : map(int, I().split())\nmps = lambda : map(str, I().split())\nmpf = lambda : map(float, I().split())\nmod = 10 ** 9 + 7\nsetrecursionlimit(10 ** 8)\ninf = float('inf')\n\ndef power(A, B, p):\n    res = 1\n    A = A % p\n    if A == 0:\n        return 0\n    while B > 0:\n        if B & 1 == 1:\n            res = res * A % p\n        B = B >> 1\n        A = A * A % p\n    return res\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, ceil(sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef nearest2(num):\n    return int(pow(2, int(log(num, 2))))\n\ndef comb(n, r):\n    r = min(r, n - r)\n    if r < 0:\n        return 0\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\n\ndef func(N, a, b, c, F):\n    (lf, rf) = (bisect_left(F, b) - 1, bisect_left(F, b))\n    (mn1, mn2) = (inf, inf)\n    if lf != -1:\n        mn1 = abs(F[lf] - b) + c + abs(F[lf] - a)\n    mn2 = abs(F[rf] - b) + c + abs(F[rf] - a)\n    return min(mn1, mn2)\nfor t in range(int(I())):\n    (N, a, b, c) = map(int, I().split())\n    F = sorted(list(map(int, I().split())))\n    print(func(N, a, b, c, F))", "import sys\nfor _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = l[0]\n    m = sys.maxsize\n    for i in l:\n        ans = abs(i - a) + abs(i - b) + c\n        if ans < m:\n            m = ans\n    print(m)", "import sys\nt = int(input())\nfor _ in range(t):\n    (n, a, b, c) = map(int, input().split())\n    ans = sys.maxsize\n    f = list(map(int, input().split()))\n    for i in f:\n        temp = abs(a - i) + abs(b - i) + c\n        ans = min(ans, temp)\n    print(ans)", "PI = 3.141592653589793\nINF = float('inf')\nMOD = 1000000007\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    t += 1\n    (n, a, b, c) = li()\n    f = li()\n    ans = INF\n    for i in f:\n        tim = abs(i - a) + abs(i - b) + c\n        ans = min(ans, tim)\n    print(ans)", "for i in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    numli = []\n    u = 0\n    for i in range(n):\n        numli.append(abs(a - l1[i]) + abs(b - l1[i]))\n    m = min(numli)\n    u = m + c\n    print(u)", "for i in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    numli = []\n    u = 0\n    for i in range(n):\n        numli.append(abs(a - l1[i]) + abs(b - l1[i]))\n    m = min(numli)\n    u = m + c\n    print(u)", "test_case = int(input())\nwhile test_case != 0:\n    test_case -= 1\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    ans = abs(b - f[0]) + c + abs(a - f[0])\n    for i in range(0, n):\n        temp = abs(b - f[i]) + c + abs(a - f[i])\n        if temp < ans:\n            ans = temp\n    print(ans)", "a = int(input())\nfor i in range(a):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    e = []\n    for j in f:\n        d = abs(j - b) + c + abs(j - a)\n        e.append(d)\n    print(min(e))", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = []\n    for i in l1:\n        p = abs(i - b) + c + abs(i - a)\n        l2.append(p)\n    print(min(l2))", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = []\n    for i in l1:\n        p = abs(i - b) + c + abs(i - a)\n        l2.append(p)\n    print(min(l2))", "for i in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l2 = []\n    total = 0\n    for j in l:\n        d = abs(b - j) + abs(j - a)\n        l2.append(d)\n    total = min(l2) + c\n    print(total)", "T = int(input())\nfor i in range(0, T):\n    (n, a, b, c) = map(int, input().split(' '))\n    f = list(map(int, input().split(' ')))\n    k = []\n    l = []\n    f.sort()\n    for i in range(0, len(f)):\n        m = abs(f[i] - a)\n        o = abs(f[i] - b)\n        k.append(m + o + c)\n    print(min(k))", "t = int(input())\nfor i in range(t):\n    (n, a, b, c) = map(int, input().split())\n    li = list(map(int, input().split()))\n    nli = []\n    u = 0\n    for i in range(n):\n        nli.append(abs(a - li[i]) + abs(b - li[i]))\n    mi = min(nli)\n    u = mi + c\n    print(u)", "t = int(input())\nfor i in range(0, t):\n    (n, a, b, c) = map(int, input().split(' '))\n    f = list(map(int, input().split(' ')))\n    k = []\n    l = []\n    f.sort()\n    for i in range(0, len(f)):\n        m = abs(f[i] - a)\n        o = abs(f[i] - b)\n        k.append(m + o + c)\n    print(min(k))", "try:\n    t = int(input())\n    for i in range(0, t):\n        (n, a, b, c) = map(int, input().split(' '))\n        f = list(map(int, input().split(' ')))\n        k = []\n        l = []\n        f.sort()\n        for i in range(0, len(f)):\n            m = abs(f[i] - a)\n            o = abs(f[i] - b)\n            k.append(m + o + c)\n        print(min(k))\nexcept:\n    pass", "for t in range(int(input())):\n    (N, a, b, c) = map(int, input().split())\n    F = list(map(int, input().split()))\n    bb = []\n    al = []\n    for i in range(len(F)):\n        bb.append(abs(b - F[i]))\n        al.append(abs(a - F[i]))\n    dist = min([bb[i] + al[i] for i in range(len(bb))])\n    print(dist + c)", "for t in range(int(input())):\n    (n, a, b, c) = [int(x) for x in input().rstrip().split()]\n    floor = [int(x) for x in input().rstrip().split()]\n    floor.sort()\n    min = abs(b - floor[0]) + c + abs(floor[0] - a)\n    for i in range(0, n):\n        s = abs(b - floor[i]) + c + abs(floor[i] - a)\n        if s < min:\n            min = s\n    print(min)", "def codechef(n, a, b, c, floor):\n    diff_lis = []\n    time = abs(b - a) + c\n    if a >= b:\n        x1 = a\n        x2 = b\n    elif b > a:\n        x1 = b\n        x2 = a\n    for i in floor:\n        if x2 < i < x1:\n            return time\n    for i in range(len(floor)):\n        if floor[i] >= x1:\n            diff_lis.append(floor[i] - x1)\n        elif floor[i] <= x2:\n            diff_lis.append(x2 - floor[i])\n    time = time + 2 * min(diff_lis)\n    return time\nt = int(input())\nwhile t > 0:\n    (n, a, b, c) = list(map(int, input().split()))\n    floor = list(map(int, input().split()))\n    print(codechef(n, a, b, c, floor))\n    t = t - 1", "try:\n    for _ in range(int(input())):\n        (n, a, b, c) = map(int, input().split(' '))\n        fl = [int(x) for x in input().split(' ')[:n]]\n        ans = c\n        fa = [abs(x - a) + abs(x - b) for x in fl]\n        print(c + min(fa))\nexcept EOFError:\n    pass", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    ans = float('inf')\n    for i in range(n):\n        min_time = abs(f[i] - b) + c + abs(a - f[i])\n        if min_time < ans:\n            ans = min_time\n    print(ans)", "T = int(input())\nans = []\nfor _ in range(T):\n    (N, a, b, c) = [int(i) for i in input().split()]\n    F = [int(i) for i in input().split()]\n    m = float('inf')\n    for i in range(N):\n        x = abs(F[i] - b) + abs(a - F[i]) + c\n        if x < m:\n            m = x\n    ans.append(m)\nfor i in ans:\n    print(i)", "import sys\nimport math\n\ndef main(arr, a, b, c):\n    ans = float('inf')\n    for i in range(len(arr)):\n        e = arr[i]\n        if abs(b - e) + c + abs(e - a) < ans:\n            ans = abs(b - e) + c + abs(e - a)\n    return ans\nfor _ in range(int(input())):\n    (n, a, b, c) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(main(arr, a, b, c))", "from sys import maxsize, stdout, stdin, stderr\nmod = int(1000000000.0 + 7)\n\ndef tup():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef lint():\n    return [int(x) for x in stdin.readline().split()]\n\ndef S():\n    return input().strip()\n\ndef grid(r, c):\n    return [lint() for i in range(r)]\n\ndef debug(*args, c=6):\n    print('\\x1b[3{}m'.format(c), *args, '\\x1b[0m', file=stderr)\nfrom _collections import defaultdict\nfor _ in range(I()):\n    (n, a, b, c) = tup()\n    minn = maxsize\n    ls = lint()\n    f = -1\n    for i in range(n):\n        x = abs(ls[i] - b) + c + abs(ls[i] - a)\n        if x < minn:\n            minn = x\n    print(minn)", "for o in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 99999999999999\n    for i in l:\n        x = abs(b - i) + c + abs(i - a)\n        if x < m:\n            m = x\n    print(m)", "for o in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 99999999999999\n    for i in l:\n        x = abs(b - i) + c + abs(i - a)\n        if x < m:\n            m = x\n    print(m)", "for o in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 99999999999999\n    for i in l:\n        x = abs(b - i) + c + abs(i - a)\n        if x < m:\n            m = x\n    print(m)", "for h in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    mini = abs(a - l[0]) + abs(b - l[0]) + c\n    for i in range(1, n):\n        k = abs(a - l[i]) + abs(b - l[i]) + c\n        if k < mini:\n            mini = k\n    print(mini)", "for h in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    mini = abs(a - l[0]) + abs(b - l[0]) + c\n    for i in l:\n        k = abs(a - i) + abs(b - i) + c\n        if k < mini:\n            mini = k\n    print(mini)", "def abs(a, b):\n    if a > b:\n        return a - b\n    else:\n        return b - a\n\ndef minimum(a, b):\n    if a < b:\n        return a\n    else:\n        return b\ntest_cases = int(input())\nfor _ in range(test_cases):\n    (N, a, b, c) = map(int, input().split())\n    F = list(map(int, input().split()))\n    min = 10 ** 9\n    for x in F:\n        if (b - x) * (a - x) <= 0:\n            print(abs(a, b) + c)\n            break\n        else:\n            p = abs(a, x)\n            q = abs(b, x)\n            if minimum(p, q) < min:\n                min = minimum(p, q)\n    else:\n        print(2 * min + c + abs(a, b))", "import math\nn = int(input())\nfor i in range(n):\n    l = []\n    (N, a, b, c) = [int(i) for i in input().split()]\n    f = [int(i) for i in input().split()]\n    for j in range(0, len(f)):\n        l.append(abs(b - f[j]) + c + abs(f[j] - a))\n    print(min(l))", "for _ in range(int(input())):\n    (N, a, b, c) = map(int, input().split())\n    F = list(map(int, input().split()))\n    arr = []\n    for i in range(len(F)):\n        sum = 0\n        sum = abs(a - F[i]) + c + abs(b - F[i])\n        arr.append(sum)\n    print(min(arr))", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 20 ** 9\n    for i in range(n):\n        if arr[i] > a and arr[i] < b or (arr[i] < a and arr[i] > b):\n            if abs(a - b) < count:\n                count = abs(a - b)\n        elif abs(arr[i] - a) + abs(arr[i] - b) < count:\n            count = abs(arr[i] - a) + abs(arr[i] - b)\n    print(count + c)", "for T in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    f.sort()\n    for (i, floor) in enumerate(f):\n        if floor >= b:\n            prev_floor_no = f[i - 1]\n            floor_no = floor\n            break\n    time1 = abs(floor_no - b) + abs(floor_no - a) + c\n    time2 = abs(prev_floor_no - b) + abs(prev_floor_no - a) + c\n    print(min(time1, time2))", "def mindist(a, b, F):\n    min = 2000000000\n    for val in F:\n        curr = abs(a - val) + abs(b - val)\n        if curr < min:\n            min = curr\n    return min\nT = int(input())\nfor i in range(T):\n    (N, a, b, c) = map(int, input().split(' '))\n    F = list(map(int, input().split(' ')))\n    m = mindist(a, b, F)\n    print(m + c)", "t = int(input())\nfor i in range(t):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    list1 = []\n    for i in range(n):\n        min1 = 0\n        min1 = abs(b - f[i]) + abs(a - f[i])\n        list1.append(min1)\n    print(min(list1) + c)", "def solve():\n    (n, a, b, c) = list(map(int, input().split()))\n    friend = list(map(int, input().split()))\n    ans = float('inf')\n    for fr in friend:\n        temp = abs(fr - a) + abs(fr - b) + c\n        ans = min(ans, temp)\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = float('inf')\n    for i in l:\n        x = abs(a - i) + abs(b - i) + c\n        p = min(p, x)\n    print(p)", "for i in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    f = list(map(int, input().split()))\n    f.append(a)\n    f.sort()\n    x = f.index(a)\n    if x == 0:\n        ans = abs(b - f[1]) + (f[1] - a) + c\n    elif x == n:\n        ans = abs(b - f[n - 1]) + (a - f[n - 1]) + c\n    else:\n        i = abs(b - f[x - 1]) + (a - f[x - 1]) + c\n        j = abs(b - f[x + 1]) + (f[x + 1] - a) + c\n        ans = min(i, j)\n    print(ans)", "def li():\n    return list(map(int, input().split()))\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().split())\nfor _ in range(ii()):\n    (n, a, b, c) = mi()\n    f = li()\n    time = 0\n    mn = 10 ** 9 + 1\n    for i in range(n):\n        if f[i] in range(a, b) or f[i] in range(b, a):\n            print(abs(a - b) + c)\n            break\n        else:\n            if abs(a - f[i]) < mn:\n                mn = abs(a - f[i])\n            if abs(b - f[i]) < mn:\n                mn = abs(b - f[i])\n    else:\n        print(2 * mn + c + abs(a - b))", "from sys import stdin, maxsize\ntry:\n    t = eval(stdin.readline())\n    for _ in range(t):\n        (n, a, b, c) = [int(x) for x in stdin.readline().split()]\n        arr = [int(x) for x in stdin.readline().split()]\n        minDist = maxsize\n        chosenAp = -1\n        for i in range(n):\n            cur = abs(arr[i] - b) + abs(arr[i] - a)\n            if cur < minDist:\n                minDist = cur\n        answer = c + minDist\n        print(answer)\nexcept:\n    pass", "def binserach(a, aa, b, i, j, valid, ans):\n    while i <= j:\n        mid = (i + j) // 2\n        if a[mid] > aa and a[mid] < b or (a[mid] < aa and a[mid] > b):\n            return 0\n        g = abs(a[mid] - b)\n        if a[mid] > b:\n            if g < ans:\n                valid = []\n                valid.append(mid)\n                ans = g\n            elif g == ans:\n                valid.append(mid)\n            j = mid - 1\n        else:\n            if g < ans:\n                valid = []\n                valid.append(mid)\n                ans = g\n            elif g == ans:\n                valid.append(mid)\n            i = mid + 1\n    return valid\nfor _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    floor = list(map(int, input().split()))\n    floor.sort()\n    ind = binserach(floor, a, b, 0, len(floor) - 1, [], 1000000000000)\n    f = abs(a - b)\n    f = f + c\n    if ind == 0:\n        print(f)\n    else:\n        print(f + 2 * abs(floor[ind[0]] - b))", "inp = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (N, a, b, c) = inp()\n    seq = list(inp())\n    minn = float('inf')\n    if a > b:\n        (b, a) = (a, b)\n    for i in range(N):\n        if seq[i] < a:\n            v = a - seq[i]\n            if v < minn:\n                minn = v\n        elif seq[i] > b:\n            v = seq[i] - b\n            if v < minn:\n                minn = v\n        else:\n            print(b - a + c)\n            break\n    else:\n        print(b - a + minn * 2 + c)", "t = int(input())\nfor i in range(0, t):\n    (n, a, b, c) = map(int, input().split(' '))\n    if n == 1:\n        l = []\n        l.append(int(input()))\n    else:\n        l = list(map(int, input().split(' ')))\n    mini = 100000000000\n    for j in range(0, n):\n        mini = min(abs(l[j] - b) + abs(l[j] - a) + c, mini)\n    print(mini)", "t = int(input())\nwhile t > 0:\n    (n, a, b, c) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = []\n    for i in range(n):\n        val = abs(x[i] - b) + abs(x[i] - a)\n        y.append(val)\n    print(min(y) + c)\n    t = t - 1", "for _ in range(int(input())):\n    (N, A, B, C) = map(int, input().rstrip().split())\n    FriendFLoor = list(map(int, input().split()))\n    time = []\n    for elem in FriendFLoor:\n        time.append(abs(B - elem) + abs(A - elem) + C)\n    print(min(time))", "t = int(input())\nif t >= 1 and t <= 10:\n    for i in range(t):\n        s = list(map(int, input().strip().split(' ')))\n        (n, a, b, c) = (s[0], s[1], s[2], s[3])\n        f = list(map(int, input().strip().split(' ')))\n        p = []\n        for i in range(n):\n            p.append(abs(b - f[i]) + abs(a - f[i]) + c)\n        print(min(p))\nelse:\n    print('Invalid input')", "t = int(input())\nfor i in range(t):\n    (n, a, b, c) = map(int, input().split())\n    lst = [int(x) for x in input().split()]\n    b1 = []\n    for i in range(n):\n        c2 = abs(lst[i] - a) + abs(lst[i] - b) + c\n        b1.append(c2)\n    print(min(b1))", "import math\nfor _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = math.inf\n    for i in range(len(l)):\n        t_1 = abs(l[i] - a) + abs(l[i] - b)\n        if t > t_1:\n            t = t_1\n    t += c\n    print(t)", "try:\n    t = int(input())\n    while t:\n        t = t - 1\n        (n, a, b, c) = map(int, input().split())\n        f = list(map(int, input().split()))\n        s = 9999999999\n        for i in range(n):\n            x = abs(a - f[i]) + abs(b - f[i])\n            if x < s:\n                s = x\n        print(s + c)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, a, b, c) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    ans1 = None\n    for i in ar:\n        ans = abs(b - i) + abs(a - i) + c\n        if ans1 is None:\n            ans1 = ans\n        elif ans < ans1:\n            ans1 = ans\n    print(ans1)", "t = int(input())\nfor _ in range(t):\n    (n, a, b, c) = map(int, input().split())\n    N = list(map(int, input().split()))\n    N.append(b)\n    N.sort()\n    inu = N.index(b)\n    if a > b:\n        if inu + 1 < n + 1:\n            print(abs(N[inu + 1] - b) + c + abs(a - N[inu + 1]))\n        else:\n            print(abs(N[inu - 1] - b) + c + abs(a - N[inu - 1]))\n    elif inu - 1 >= 0:\n        print(abs(N[inu - 1] - b) + c + abs(a - N[inu - 1]))\n    else:\n        print(abs(N[inu + 1] - b) + c + abs(a - N[inu + 1]))", "t = int(input())\nfor _ in range(t):\n    (n, a, b, c) = map(int, input().split())\n    N = list(map(int, input().split()))\n    N.append(b)\n    N.sort()\n    inu = N.index(b)\n    if a > b:\n        if inu + 1 < n + 1:\n            print(abs(N[inu + 1] - b) + c + abs(a - N[inu + 1]))\n        else:\n            print(abs(N[inu - 1] - b) + c + abs(a - N[inu - 1]))\n    elif inu - 1 >= 0:\n        print(abs(N[inu - 1] - b) + c + abs(a - N[inu - 1]))\n    else:\n        print(abs(N[inu + 1] - b) + c + abs(a - N[inu + 1]))"]