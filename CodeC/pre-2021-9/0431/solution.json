["T = int(input())\nfor i in range(T):\n    user_input = input().split()\n    L = int(user_input[0])\n    R = int(user_input[1])\n    L = 2 * L\n    R = 2 * R\n    print(R - L + 1)", "T = int(input())\nfor i in range(T):\n    user_input = input().split()\n    L = int(user_input[0])\n    R = int(user_input[1])\n    L = 2 * L\n    R = 2 * R\n    print(R - L + 1)", "testcases = int(input())\nwhile testcases:\n    [L, R] = list(map(int, input().split(' ')))\n    print(2 * R - 2 * L + 1)\n    testcases -= 1", "t = int(input())\nfor t in range(t):\n    (n, m) = map(int, input().split())\n    print(1 if abs(2 * n - 2 * m) == 0 else abs(2 * n - 2 * m) + 1)", "from sys import stdin, stdout\ninput = stdin.readline\nr_int = lambda : int(input())\nm_int = lambda : map(int, input().split())\nl_int = lambda : list(map(int, input()).split())\n\ndef solve():\n    (l, r) = m_int()\n    print(2 * (r - l) + 1)\n\ndef main():\n    n_cases = r_int()\n    for _ in range(n_cases):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    n = r - l + 1\n    print(2 * n - 1)", "t = int(input())\nwhile t > 0:\n    (a, b) = list(map(int, input().split()))\n    d = b - a + 1\n    print(2 * d - 1)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    user_input = input().split()\n    L = int(user_input[0])\n    R = int(user_input[1])\n    L = 2 * L\n    R = 2 * R\n    print(R - L + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * (r - l) + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    totalDigits = r - l + 1\n    if totalDigits > 1:\n        Combinations = totalDigits * totalDigits - (totalDigits - 1) * (totalDigits - 1)\n    else:\n        Combinations = 1\n    print(Combinations)", "t = int(input())\nfor _ in range(0, t):\n    (l, r) = map(int, input().split())\n    n = r - l + 1\n    if n == 0:\n        print(1)\n    else:\n        print(2 * n - 1)", "t = int(input())\nfor _ in range(0, t):\n    (l, r) = map(int, input().split())\n    n = r - l + 1\n    if n == 0:\n        print(1)\n    else:\n        print(2 * n - 1)", "import math\nT = int(input())\nfor var in range(0, T):\n    temp = input().split(' ')\n    L = int(temp[0])\n    R = int(temp[1])\n    length = R - L\n    result = 2 * length + 1\n    print(result)", "T = int(input())\nfor i in range(T):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    n = 2 * r - 2 * l + 1\n    print(n)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    n = 2 * r - 2 * l + 1\n    print(n)", "T = int(input())\nfor i in range(T):\n    user_input = input().split()\n    L = int(user_input[0])\n    R = int(user_input[1])\n    L = 2 * L\n    R = 2 * R\n    print(R - L + 1)", "t = int(input())\nfor t in range(t):\n    lr = list(map(int, input().split(' ')))\n    l = lr[0]\n    r = lr[1]\n    print(2 * (r - l) + 1)", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    a = 2 * l[0]\n    b = 2 * l[1]\n    print(b - a + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    s = r - l + 1\n    if s == 0:\n        print(1)\n    else:\n        print(2 * s - 1)", "for _ in range(int(input())):\n    (L, R) = map(int, input().split())\n    print(R - L + (R - L + 1))", "for _ in range(int(input())):\n    (L, R) = map(int, input().split())\n    print(R * 2 - L * 2 + 1)", "for j in range(int(input())):\n    l = list(map(int, input().split()))\n    n = len(l)\n    print(2 * l[n - 1] - 2 * l[0] + 1)", "test = int(input())\nfor i in range(test):\n    (l, r) = list(map(int, input().split()))\n    k = r - l + 1\n    count = 0\n    if l == r:\n        count = 1\n    else:\n        count = 2 * k - 1\n    print(count)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    n = r - l + 1\n    print(2 * n - 1)", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    print(2 * l[-1] - 2 * l[0] + 1)", "t = int(input())\nwhile t:\n    li = []\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(1)\n    else:\n        print(2 * b - 2 * a + 1)\n    t -= 1", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * 2 - a * 2 + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * 2 - a * 2 + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * 2 - a * 2 + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * 2 - a * 2 + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    c = r - l + 1\n    print(c + c - 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(r * 2 - l * 2 + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    d = r - l\n    x = d + 1 + d\n    print(x)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print((b - a) * 2 + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * 2 - a * 2 + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    c = r - l + 1\n    print(c + c - 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    first_number = r - l + 1\n    print(first_number + (r - l))", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(2 * a[1] - 2 * a[0] + 1)", "t = int(input())\nfor _ in range(t):\n    x = list(map(int, input().split()))\n    print(2 * x[1] - 2 * x[0] + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    l = 2 * l\n    r = 2 * r\n    if l != r:\n        print(r + 1 - l)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, s) = map(int, input().split())\n    n = n + n\n    s = s + s\n    if n != s:\n        print(s - n + 1)\n    else:\n        print(1)", "tests = int(input())\nfor i in range(tests):\n    (l, r) = map(int, input().split())\n    numbers = r - l\n    print(2 * numbers + 1)", "tests = int(input())\nfor i in range(tests):\n    (l, r) = map(int, input().split())\n    numbers = r - l + 1\n    print(2 * numbers - 1)", "t = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "T = int(input())\nfor i in range(T):\n    (L, R) = map(int, input().split())\n    print(2 * R - 2 * L + 1)", "t = int(input())\nfor _ in range(t):\n    (L, R) = [int(i) for i in input().split()]\n    d = R - L + 1\n    print(2 * d - 1)", "for _ in range(int(input())):\n    count = 0\n    (a, b) = map(int, input().split())\n    print((b - a) * 2 + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    n = r - l + 1\n    print(n * 2 - 1)", "for t in range(int(input())):\n    (l, r) = (int(x) for x in input().split())\n    j = r - l\n    j = j + 1 + int((j + 1) / 2) + int(j / 2)\n    print(j)", "for t in range(int(input())):\n    (l, r) = (int(x) for x in input().split())\n    j = r - l\n    j = j + 1 + int((j + 1) / 2) + int(j / 2)\n    print(j)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "def nSum(n):\n    return n * (n + 1) / 2\nt = int(input())\nwhile t > 0:\n    inputs = list(map(int, input().split(' ')))\n    print(int(2 * inputs[1] - 2 * inputs[0] + 1))\n    t -= 1", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "t = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split())\n    print((r - l) * 2 + 1)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split(' ')))\n    c = l[1] - l[0] + 1\n    u = c * 2 - 1\n    print(u)", "test_case = int(input())\nfor _ in range(test_case):\n    (l, r) = map(int, input().split(' '))\n    if r - l == 0:\n        print(1)\n    else:\n        print(2 * (r - l + 1) - 1)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(2 * b - 2 * a + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "n = int(input())\nfor _ in range(n):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "def main():\n    for _ in range(int(input())):\n        (l, r) = map(int, input().split())\n        print(2 * r - 2 * l + 1)\nmain()", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().split()))\n    print(2 * (b[1] - b[0]) + 1)", "n = int(input())\nfor i in range(n):\n    (l, r) = map(int, input().split(' '))\n    print(2 * (r - l) + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    print(2 * (r - l) + 1)", "import collections as clts\nimport math\nimport heapq\nMOD = 10 ** 9 + 7\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return int(x / gcd(x, y) * y)\n\ndef take_input(type='list-int'):\n    if type == 'list-int':\n        return list(map(int, input().split()))\n    elif type == 'list-float':\n        return list(map(float, input().split()))\n    else:\n        return None\nfor _ in range(int(input())):\n    (L, R) = take_input()\n    diff = R - L\n    print(2 * diff + 1)", "t = int(input())\nfor _ in range(t):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    n = m - n + 1\n    print(2 * n - 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    n = r - l + 1\n    print(2 * n - 1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    sum = m - n + 1\n    print(2 * sum - 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "def distinctPair(l, r):\n    print(2 * r - 2 * l + 1)\n    return None\nfor _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    distinctPair(l, r)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "def solve():\n    (L, R) = map(int, input().split())\n    if L == R:\n        print(1)\n        return\n    else:\n        x = R - L + 1\n        print(x + (x - 1))\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    (l, r) = [int(x) for x in input().split()]\n    if l == r:\n        print(1)\n    else:\n        print(int(2 * r - 2 * l + 1))", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "T = int(input())\nfor i in range(T):\n    (L, R) = map(int, input().split())\n    print(2 * R - 2 * L + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "t = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    ans = 2 * (r - l) + 1\n    print(ans)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    a = []\n    if l == r:\n        print(1)\n    else:\n        n = r - l + 1\n        print(2 * n - 1)", "def manysums(arr):\n    count = 2 * (int(arr[-1]) - int(arr[0]) + 1) - 1\n    print(count)\nT = int(input())\nfor _ in range(T):\n    arr = input().split(' ')\n    manysums(arr)", "T = int(input())\nfor _ in range(T):\n    (l, r) = map(int, input().split())\n    a = r * 2 - l * 2 + 1\n    print(a)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "for _ in range(int(input())):\n    (l, r) = map(int, input().split())\n    print(2 * r - 2 * l + 1)", "t = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    print(2 * (b - a) + 1)\n    t -= 1", "for _ in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    print(2 * r - 2 * l + 1)", "t = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split(' '))\n    n = r - l + 1\n    l = int(n * 2 - 1)\n    print(l)", "for i in range(int(input())):\n    (l, r) = map(int, input().split(' '))\n    x = r - l + 1\n    print(x * 2 - 1)", "N = int(input())\nfor i in range(N):\n    (L, R) = [int(i) for i in input().split()]\n    length = R - L + 1\n    print(length * 2 - 1)", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    count = 0\n    if l == r:\n        print('1')\n    else:\n        print(r - l + 1 + (r - l))", "for i in range(int(input())):\n    (l, r) = map(int, input().split())\n    count = 0\n    if l == r:\n        print('1')\n    else:\n        print(2 * r - 2 * l + 1)"]