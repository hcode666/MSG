["import sys\n(n, m, c) = map(int, sys.stdin.readline().split())\nbit = [0] * (n + 1)\n\ndef add(index, val):\n    index += 1\n    while index <= n:\n        bit[index] += val\n        index += index & -index\n\ndef get(index):\n    r = 0\n    index += 1\n    while index:\n        r += bit[index]\n        index -= index & -index\n    return r\nwhile m:\n    m -= 1\n    op = sys.stdin.readline().split()\n    if len(op) == 4:\n        (_, u, v, k) = op\n        u = int(u)\n        v = int(v)\n        k = int(k)\n        u -= 1\n        v -= 1\n        add(u, k)\n        add(v + 1, -k)\n    else:\n        (_, p) = op\n        p = int(p)\n        print(get(p - 1) + c)", "import sys\n(n, m, c) = map(int, sys.stdin.readline().split())\nbit = [0] * (n + 1)\n\ndef add(index, val):\n    index += 1\n    while index <= n:\n        bit[index] += val\n        index += index & -index\n\ndef get(index):\n    r = 0\n    index += 1\n    while index:\n        r += bit[index]\n        index -= index & -index\n    return r\nwhile m:\n    m -= 1\n    op = sys.stdin.readline().split()\n    if len(op) == 4:\n        (_, u, v, k) = op\n        u = int(u)\n        v = int(v)\n        k = int(k)\n        u -= 1\n        v -= 1\n        add(u, k)\n        add(v + 1, -k)\n    else:\n        (_, p) = op\n        p = int(p)\n        print(get(p - 1) + c)", "import sys\n(n, m, c) = map(int, sys.stdin.readline().split())\nbit = [0] * (n + 1)\n\ndef add(index, val):\n    index += 1\n    while index <= n:\n        bit[index] += val\n        index += index & -index\n\ndef get(index):\n    r = 0\n    index += 1\n    while index:\n        r += bit[index]\n        index -= index & -index\n    return r\nwhile m:\n    m -= 1\n    op = sys.stdin.readline().split()\n    if len(op) == 4:\n        (_, u, v, k) = op\n        u = int(u)\n        v = int(v)\n        k = int(k)\n        u -= 1\n        v -= 1\n        add(u, k)\n        add(v + 1, -k)\n    else:\n        (_, p) = op\n        p = int(p)\n        print(get(p - 1) + c)"]