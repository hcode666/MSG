["for _ in range(int(input())):\n    (K, N) = list(map(int, input().split()))\n    X = str(K)\n    if X[0] != X[1] and X[1] != X[2] and (X[2] != X[0]):\n        print('27')\n        continue\n    if X[0] == X[1] == X[2]:\n        print('1')\n        continue\n    if N >= 2:\n        print(8)\n    else:\n        print(7)", "t = int(input().strip())\nfor _ in range(t):\n    (k, n) = map(int, input().strip().split())\n    digits = []\n    while k:\n        digits.append(k % 10)\n        k //= 10\n    print(len(set(digits)) ** 3)", "t = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    ks = str(k)\n    if ks[0] == ks[1] == ks[2]:\n        print(1)\n    elif ks[0] == ks[1] or ks[1] == ks[2] or ks[2] == ks[0]:\n        print(8)\n    else:\n        print(27)", "for _ in range(int(input())):\n    (K, N) = list(map(int, input().split()))\n    X = str(K)\n    if X[0] != X[1] and X[1] != X[2] and (X[2] != X[0]):\n        print('27')\n        continue\n    if X[0] == X[1] == X[2]:\n        print('1')\n        continue\n    if N >= 2:\n        print(8)\n    else:\n        print(7)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    X = str(N)\n    if X[0] != X[1] and X[1] != X[2] and (X[2] != X[0]):\n        print('27')\n        continue\n    if X[0] == X[1] == X[2]:\n        print('1')\n        continue\n    if K >= 2:\n        print(8)\n    else:\n        print(7)", "t = int(input())\nfor _ in range(t):\n    (k, n) = [int(x) for x in input().split()]\n    new_num = set((x for x in str(k) + str(k)))\n    c = set()\n    for x in new_num:\n        for y in new_num:\n            for z in new_num:\n                c.add(f'{x}{y}{z}')\n    print(len(c))", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    digits = list(str(k))\n    if digits[0] == digits[1] == digits[2]:\n        print(1)\n    elif digits[0] != digits[1] and digits[1] != digits[2] and (digits[0] != digits[2]):\n        print(27)\n    else:\n        print(8)", "a = int(input())\nfor i in range(a):\n    (K, N) = input().split()\n    if K.count(K[0]) == 3:\n        print(1)\n    elif K.count(K[0]) == 2 or K.count(K[1]) == 2 or K.count(K[2]) == 2:\n        print(8)\n    else:\n        print(27)", "a = int(input())\nfor i in range(a):\n    (K, N) = input().split()\n    if K.count(K[0]) == 3:\n        print(1)\n    elif K.count(K[0]) == 2 or K.count(K[1]) == 2 or K.count(K[2]) == 2:\n        print(8)\n    else:\n        print(27)", "a = int(input())\nfor i in range(a):\n    (K, N) = input().split()\n    if K.count(K[0]) == 3:\n        print(1)\n    elif K.count(K[0]) == 2 or K.count(K[1]) == 2 or K.count(K[2]) == 2:\n        print(8)\n    else:\n        print(27)", "t = int(input())\nfor i in range(t):\n    (k, n) = input().split()\n    if k.count(k[0]) == 1 and k.count(k[1]) == 1 and (k.count(k[2]) == 1):\n        print(27)\n    elif 2 in [k.count(k[0]), k.count(k[1]), k.count(k[2])]:\n        print(8)\n    else:\n        print(1)", "T = int(input())\nfor each_case in range(T):\n    (k, n) = input().split(' ')\n    n = int(n)\n    res = 1\n    (ch1, ch2, ch3) = (k.count(k[0]), k.count(k[1]), k.count(k[2]))\n    if ch1 == 1 and ch2 == 1 and (ch3 == 1):\n        res = 3 ** 3\n    elif 2 in [ch1, ch2, ch3]:\n        res = 2 ** 3\n    print(res)", "t = int(input())\nfor i in range(t):\n    (k, n) = input().split()\n    if k.count(k[0]) == 1 and k.count(k[1]) == 1 and (k.count(k[2]) == 1):\n        print(27)\n    elif 2 in [k.count(k[0]), k.count(k[1]), k.count(k[2])]:\n        print(8)\n    else:\n        print(1)", "T = int(input())\nfor each_case in range(T):\n    (k, n) = input().split(' ')\n    n = int(n)\n    res = 1\n    (ch1, ch2, ch3) = (k.count(k[0]), k.count(k[1]), k.count(k[2]))\n    if ch1 == 1 and ch2 == 1 and (ch3 == 1):\n        res = 3 ** 3\n    elif 2 in [ch1, ch2, ch3]:\n        res = 2 ** 3\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    g = len(set(str(k)))\n    print(g ** 3)", "t = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    g = len(set(str(k)))\n    print(g ** 3)", "t = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    g = len(set(str(k)))\n    print(g ** 3)", "t = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    g = len(set(str(k)))\n    print(g ** 3)", "t = int(input())\nfor i in range(t):\n    g = 0\n    l = input().split()\n    (k, n) = (l[0], l[1])\n    g = len(set(k))\n    print(g ** 3)", "for _ in range(int(input())):\n    arr = input().split()\n    (k, n) = (arr[0], arr[1])\n    dct = len(set(k))\n    if dct == 1:\n        print(1)\n    elif dct == 2:\n        print(8)\n    else:\n        print(27)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = str(n)\n    x = [j for j in s]\n    l = len(set(x))\n    print(l ** 3)", "tc = int(input())\nfor _ in range(tc):\n    (x, n) = map(int, input().split())\n    X = tuple(str(x))\n    X = set(X)\n    ans = len(X) ** 3\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    x = [i for i in n]\n    l = len(set(x))\n    print(l ** 3)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    x = [i for i in n]\n    l = len(set(x))\n    print(l ** 3)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    a = [i for i in n]\n    l = len(set(a))\n    print(l ** 3)", "for _ in range(int(input())):\n    (K, N) = input().split()\n    print(len(set(K)) ** 3)", "for _ in range(int(input())):\n    (k, n) = input().split()\n    while int(n) >= 5:\n        print(len(set(k)) ** 3)\n        break", "for _ in range(int(input())):\n    (K, N) = map(int, input().split())\n    K = str(K)\n    l = [int(d) for d in K]\n    while N >= 5:\n        print(len(set(K)) ** 3)\n        break", "try:\n    from sys import stdin as si, stdout as so\n    for _ in range(int(si.readline())):\n        (n, k) = si.readline().split()\n        a = set(n)\n        so.write(str(len(a) ** 3) + '\\n')\nexcept:\n    pass", "for _ in range(int(input())):\n    (k, n) = input().split()\n    if k[0] == k[1] and k[1] == k[2]:\n        print(1)\n    elif k[0] != k[1] and k[1] != k[2] and (k[0] != k[2]):\n        print(27)\n    else:\n        print(8)", "for _ in range(int(input())):\n    (k, n) = input().split()\n    if k[0] == k[1] and k[1] == k[2]:\n        print(1)\n    elif k[0] != k[1] and k[1] != k[2] and (k[0] != k[2]):\n        print(27)\n    else:\n        print(8)", "from math import *\nfor _ in range(int(input())):\n    (k, n) = map(str, input().split())\n    n = int(n)\n    p = len(set(list(k)))\n    if p == 1:\n        print(1)\n    else:\n        p = p ** 3\n        x = 1\n        y = 1\n        flag = 0\n        for i in range(n):\n            if x > p:\n                flag = 1\n                break\n            x += y * 2\n            y *= 2\n        if flag == 0:\n            print(x - y)\n        else:\n            print(p)", "for _ in range(int(input())):\n    (k, n) = map(str, input().split())\n    if k[0] == k[1] == k[2]:\n        print(1)\n    elif k[0] != k[1] and k[0] != k[2] and (k[1] != k[2]):\n        print(27)\n    else:\n        print(8)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    l = list(map(int, str(a[0])))\n    t = len(set(l))\n    if t == 3:\n        print('27')\n    elif t == 2:\n        print('8')\n    else:\n        print('1')", "t = int(input())\nwhile t:\n    (n, k) = [i for i in input().split()]\n    k = len(set(n))\n    if k == 3:\n        print(27)\n    elif k == 2:\n        print(8)\n    elif k == 1:\n        print(1)\n    t = t - 1", "for i in range(int(input())):\n    (a, n) = map(int, input().split())\n    a = set(str(a))\n    if len(a) == 3:\n        print(27)\n    elif len(a) == 2:\n        print(8)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a, n) = map(int, input().split())\n    a = set(str(a))\n    if len(a) == 3:\n        print(27)\n    elif len(a) == 2:\n        print(8)\n    else:\n        print(1)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    l = list(map(int, str(a[0])))\n    t = len(set(l))\n    if t == 3:\n        print('27')\n    elif t == 2:\n        print('8')\n    else:\n        print('1')", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    s = str(k)\n    s = set(s)\n    if len(s) == 3:\n        print(27)\n    elif len(s) == 2:\n        print(8)\n    elif len(s) == 1:\n        print(1)", "for _ in range(int(input())):\n    s = input().split()\n    print(len(set(s[0])) ** 3)", "for _ in range(int(input())):\n    s = input().split()\n    print(len(set(s[0])) ** 3)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    nk = list(map(int, input().split()))\n    n = int(nk[0])\n    k = int(nk[1])\n    arr = [0] * 10\n    while n > 0:\n        temp = n % 10\n        n = int(n / 10)\n        arr[temp] = 1\n    count = 0\n    for i in range(10):\n        if arr[i] == 1:\n            count += 1\n    print(count ** 3)", "for _ in range(int(input())):\n    s = input().split()\n    x = len(set(s[0]))\n    print(x * x * x)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    s = str(k)\n    s = set(s)\n    if len(s) == 3:\n        print(27)\n    elif len(s) == 2:\n        print(8)\n    elif len(s) == 1:\n        print(1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    a = set(str(a))\n    print(len(a) ** 3)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    a = set(str(a))\n    print(len(a) ** 3)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    a = set(str(a))\n    print(len(a) ** 3)", "try:\n    t = int(input())\nexcept:\n    t = 0\nfor i in range(t):\n    X = list(map(int, input().split()))\n    r = X[0] % 10\n    q = (X[0] % 100 - r) / 10\n    p = (X[0] - q * 10 - r) / 100\n    N = [0] * 10\n    N[int(p)] += 1\n    N[int(q)] += 1\n    N[int(r)] += 1\n    ans = 4 - max(N)\n    print(ans ** 3)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    a = set(str(a))\n    l = len(a) ** 3\n    print(l)", "for _ in range(int(input())):\n    inp = [int(x) for x in input().split()]\n    K = inp[0]\n    N = inp[1]\n    k1 = K % 10\n    k2 = K // 10 % 10\n    k3 = K // 100\n    if k1 == k2 == k3:\n        print(1)\n    elif k1 == k2 or k2 == k3 or k1 == k3:\n        print(8)\n    else:\n        print(27)", "for _ in range(int(input())):\n    (k, n) = input().split()\n    a = list(k)\n    x = len(set(a))\n    print(x ** 3)", "t = int(input())\nwhile t:\n    t = t - 1\n    (k, n) = map(int, input().split())\n    a = []\n    while k != 0:\n        x = k % 10\n        if x not in a:\n            a.append(x)\n        k = k // 10\n    print(len(a) ** 3)", "for _ in range(int(input())):\n    (k, n) = input().split()\n    a = list(k)\n    k2 = len(set(a))\n    print(k2 ** 3)", "T = int(input())\nwhile T > 0:\n    (a, b) = map(int, input().split())\n    a = set(str(a))\n    l = len(a) ** 3\n    print(l)\n    T -= 1", "testcase = int(input())\nfor i in range(testcase):\n    testcase = testcase - 1\n    (k, n) = map(int, input().split())\n    k = set(str(k))\n    l = len(k) ** 3\n    print(l)", "for t in range(int(input())):\n    (n, k) = input().split()\n    _ = len(set(list(n)))\n    if _ == 3:\n        print(27)\n    elif _ == 2:\n        print(8)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    (k, n) = map(int, input().split())\n    l = set(str(k))\n    m = len(l)\n    print(m ** 3)", "t = int(input())\nwhile t > 0:\n    (k, n) = map(int, input().split())\n    k = set(str(k))\n    l = len(k) ** 3\n    print(l)\n    t -= 1", "def icl(a, n):\n    m = a * 1001\n    a = str(m)\n    a = set(a)\n    n = len(a)\n    print(n ** 3)\nfor _ in range(int(input())):\n    (a, n) = map(int, input().split())\n    icl(a, n)", "for i in range(int(input())):\n    (k, n) = map(int, input().split())\n    if len(set(str(k))) == 1:\n        print(1)\n    if len(set(str(k))) == 2:\n        print(8)\n    if len(set(str(k))) == 3:\n        print(27)", "import math\nimport sys\n\ndef fac(num):\n    i = 1\n    pr = 1\n    while i <= num:\n        pr *= i\n        i += 1\n    return pr\nfor i in range(int(input())):\n    (k, n) = map(int, input().split())\n    fi = k\n    su = 0\n    fi = 1001 * fi\n    s = str(fi)\n    na = []\n    for b in range(len(s)):\n        if s[b] not in na:\n            na.append(s[b])\n    su = math.pow(len(na), 3)\n    print(int(su))", "t = int(input())\nwhile t > 0:\n    (k, n) = list(map(int, input().split()))\n    k = str(k)\n    k = set(k)\n    if len(k) == 3:\n        print(27)\n    elif len(k) == 2:\n        print(8)\n    else:\n        print(1)\n    t -= 1", "t = int(input())\nfor tt in range(t):\n    (k, n) = map(int, input().split())\n    k = str(k)\n    if k[0] == k[1] or k[1] == k[2] or k[2] == k[0]:\n        if k[1] == k[2] and k[2] == k[0]:\n            print(1)\n        else:\n            print(8)\n    else:\n        print(27)", "for _ in range(int(input())):\n    (K, _) = input().split()\n    diff = len(list(K)) - len(set(K))\n    if diff == 2:\n        print(1)\n    elif diff == 1:\n        print(8)\n    else:\n        print(27)", "from itertools import permutations\n\ndef apply(K):\n    digits = []\n    val = 100\n    while val > 0:\n        x = K // val\n        digits.append(x)\n        digits.append(x)\n        K = K - x * val\n        val //= 10\n    perms = {a * 100 + b * 10 + c for (a, b, c) in set(permutations(digits, 3))}\n    return perms\n\ndef solve(K, N):\n    perms = {K}\n    last_len = 1\n    for i in range(N):\n        app = map(apply, perms)\n        for perm in app:\n            perms = perms.union(perm)\n        if len(perms) == last_len:\n            break\n        last_len = len(perms)\n    return last_len\nfor _ in range(int(input())):\n    (K, N) = map(int, input().split())\n    print(solve(K, N))", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nnb_test = RI()\nfor _ in range(nb_test):\n    (curr, _) = RMI()\n    ans = 1\n    lens = len(set(str(curr)))\n    if lens == 3:\n        ans = 27\n    if lens == 2:\n        ans = 8\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (K, N) = map(str, input().split())\n    K = len(set(K))\n    print(K ** 3)", "T = int(input())\nfor _ in range(T):\n    A = list(map(str, input().split()))\n    l = A[0]\n    d = dict()\n    d[l[0]] = 0\n    d[l[1]] = 0\n    d[l[2]] = 0\n    x = len(d.keys())\n    print(x ** 3)", "while True:\n    n = int(input())\n    if 1 <= n <= 1000:\n        break\ntc = list()\nfor i in range(0, n):\n    while True:\n        (k, p) = input().split()\n        if 0 <= int(k) <= 999 and 5 <= int(p) <= 1000000000:\n            break\n    tc.append([k, p])\nfor a in tc:\n    (k, p) = a\n    if k[0] == k[1] or k[1] == k[2] or k[0] == k[2]:\n        if k[0] == k[1] == k[2]:\n            print(1)\n        else:\n            print(2 ** 3)\n    else:\n        print(3 ** 3)", "while True:\n    n = int(input())\n    if 1 <= n <= 1000:\n        break\ntc = list()\nfor i in range(0, n):\n    while True:\n        (k, p) = input().split()\n        if 0 <= int(k) <= 999 and 5 <= int(p) <= 1000000000:\n            break\n    tc.append([k, p])\nfor a in tc:\n    (k, p) = a\n    if k[0] == k[1] or k[1] == k[2] or k[0] == k[2]:\n        if k[0] == k[1] == k[2]:\n            print(1)\n        else:\n            print(2 ** 3)\n    else:\n        print(3 ** 3)", "while True:\n    n = int(input())\n    if 1 <= n <= 1000:\n        break\ntc = list()\nfor i in range(0, n):\n    while True:\n        (k, p) = input().split()\n        if 0 <= int(k) <= 999 and 5 <= int(p) <= 1000000000:\n            break\n    tc.append([k, p])\nfor a in tc:\n    (k, p) = a\n    if k[0] == k[1] or k[1] == k[2] or k[0] == k[2]:\n        if k[0] == k[1] == k[2]:\n            print(1)\n        else:\n            print(2 ** 3)\n    else:\n        print(3 ** 3)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    s = str(k)\n    s = set(s)\n    if len(s) == 3:\n        print(27)\n    elif len(s) == 2:\n        print(8)\n    elif len(s) == 1:\n        print(1)", "for _ in range(int(input())):\n    s = input().split()\n    x = len(set(s[0]))\n    print(x * x * x)", "def main():\n    t = int(input())\n    for z in range(t):\n        (n, k) = input().split()\n        n = int(n)\n        k = int(n)\n        n1 = n % 10\n        n2 = int((n % 100 - n1) / 10)\n        n3 = int((n - n2 * 10 - n1) / 100)\n        if n1 == n2 == n3:\n            print(1)\n        elif n1 == n2 or n1 == n3 or n2 == n3:\n            if k == 1:\n                print(7)\n            else:\n                print(8)\n        elif k == 1:\n            print(24)\n        else:\n            print(27)\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    nk = list(map(int, input().split()))\n    n = int(nk[0])\n    k = int(nk[1])\n    arr = [0] * 10\n    while n > 0:\n        temp = n % 10\n        n = int(n / 10)\n        arr[temp] = 1\n    count = 0\n    for i in range(10):\n        if arr[i] == 1:\n            count += 1\n    print(count ** 3)", "from itertools import permutations\n\ndef ProcessNum(num, processed, count):\n    total = 1\n    for i in range(count):\n        newNum = num * 13 * 11 * 7\n        processed.append(num)\n        digList = [int(d) for d in str(newNum)]\n        perm = set(permutations(digList, 3))\n        for s in perm:\n            n = 100 * s[0] + 10 * s[1] + s[2]\n            if n not in processed:\n                processed.append(n)\n                total += ProcessNum(n, processed, n - 1)\n    return total\nt = int(input())\nfor _ in range(t):\n    (k, n) = map(int, input().split())\n    numList = set([int(d) for d in str(k)])\n    print(len(numList) ** 3)", "for _ in range(int(input())):\n    (k, n) = map(str, input().split())\n    if k[0] == k[1] or k[1] == k[2] or k[2] == k[0]:\n        if k[0] == k[1] == k[2]:\n            print(1)\n        else:\n            print(2 ** 3)\n    else:\n        print(3 ** 3)", "input()\nimport sys\nfor kn in sys.stdin:\n    (k, n) = kn.rstrip().split()\n    if k[0] == k[1] and k[1] == k[2]:\n        print(1)\n    elif k[0] == k[1] or k[1] == k[2] or k[0] == k[2]:\n        print(8)\n    else:\n        print(27)", "t = int(input())\nwhile t:\n    t = t - 1\n    (k, n) = map(str, input().split())\n    n = int(n)\n    if k[0] == k[1] or k[1] == k[2] or k[0] == k[2]:\n        if k[0] == k[1] == k[2]:\n            print(1)\n        else:\n            print(2 ** 3)\n    else:\n        print(3 ** 3)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    tmp = set(str(k))\n    if len(tmp) == 3:\n        print(27)\n    elif len(tmp) == 2:\n        print(8)\n    else:\n        print(1)", "for _ in range(int(input())):\n    N = input()\n    L = []\n    for i in N:\n        L.append(i)\n    if L[0] == L[1] and L[1] == L[2]:\n        print(1)\n    elif L[0] == L[1] and L[1] != L[2] or (L[0] == L[2] and L[1] != L[2]) or (L[0] != L[1] and L[1] == L[2]):\n        print(8)\n    else:\n        print(27)", "t = int(input())\nfor _ in range(t):\n    x = input()\n    a = x.split()\n    m = a[0]\n    n = int(a[1])\n    b = []\n    c = 0\n    for __ in range(0, 3):\n        if m[__] not in b:\n            c = c + 1\n            b.append(m[__])\n    if c == 3:\n        if n > 1:\n            print('27')\n        else:\n            print('24')\n    elif c == 2:\n        if n > 1:\n            print('8')\n        else:\n            print('7')\n    else:\n        print('1')", "for _ in range(int(input())):\n    (k, n) = input().split()\n    unique = set(k)\n    len_set = len(unique)\n    print(len_set ** 3)", "t = int(input())\nfor z in range(t):\n    (k, n) = map(int, input().split())\n    s = set(str(k))\n    l = len(s)\n    if l == 3:\n        ans = 27\n    elif l == 2:\n        ans = 8\n    else:\n        ans = 1\n    print(ans)", "for T in range(int(input())):\n    (k, n) = map(int, input().split())\n    s = str(k)\n    if s[0] == s[1] and s[1] == s[2]:\n        print('1')\n    elif s[0] == s[1] or s[0] == s[2] or s[1] == s[2]:\n        print('8')\n    else:\n        print('27')", "t = int(input())\nfor i in range(t):\n    (k, n) = map(int, input().split())\n    if n == 1:\n        lis = [int(x) for x in str(k)]\n        mylist = list(dict.fromkeys(lis))\n        if len(mylist) == 3:\n            print('24')\n        elif len(mylist) == 2:\n            print('7')\n        else:\n            print('1')\n    else:\n        lis = [int(x) for x in str(k)]\n        mylist = list(dict.fromkeys(lis))\n        if len(mylist) == 3:\n            print('27')\n        elif len(mylist) == 2:\n            print('8')\n        else:\n            print('1')", "t = int(input())\nfor i in range(t):\n    (k, n) = map(int, input().split())\n    if n == 1:\n        lis = [int(x) for x in str(k)]\n        mylist = list(dict.fromkeys(lis))\n        if len(mylist) == 3:\n            print('24')\n        elif len(mylist) == 2:\n            print('7')\n        else:\n            print('1')\n    else:\n        lis = [int(x) for x in str(k)]\n        mylist = list(dict.fromkeys(lis))\n        if len(mylist) == 3:\n            print('27')\n        elif len(mylist) == 2:\n            print('8')\n        else:\n            print('1')", "def dist_num(n, cnt):\n    l = len(set(n))\n    if l == 1:\n        return 1\n    elif l == 2 and cnt == 1:\n        return 7\n    elif l == 2 and cnt > 1:\n        return 8\n    elif l == 3 and cnt == 1:\n        return 24\n    else:\n        return 27\nT = int(input())\nfor i in range(T):\n    (n, cnt) = input().split()\n    cnt = int(cnt)\n    print(dist_num(n, cnt))", "l = [[1, 1, 1], [1, 7, 8], [1, 18, 27]]\nfor _ in range(int(input())):\n    (k, n) = input().split()\n    k = len(set(k)) - 1\n    n = min(int(n), 2)\n    print(l[k][n])", "t = int(input())\nfor i in range(t):\n    (num, k) = input().split()\n    num = set(num)\n    l = len(num)\n    if l == 3:\n        print('27')\n    if l == 2:\n        print('8')\n    if l == 1:\n        print('1')", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nimport random\nMAX = sys.maxsize\nMAXN = 10 ** 5 + 10\nMOD = 10 ** 9 + 7\n\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2:\n        return True\n    if not n & 1:\n        return False\n    for x in range(3, int(n ** 0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a, b, x, y):\n    return abs(a - x) + abs(b - y)\n\ndef numIN(x=' '):\n    return map(int, sys.stdin.readline().strip().split(x))\n\ndef charIN():\n    return sys.stdin.readline().strip().split()\n\ndef dis(x, y):\n    a = y[0] - x[0]\n    b = x[1] - y[1]\n    return (a * a + b * b) ** 0.5\n\ndef isper(n):\n    return int(n ** 0.5) == n ** 0.5\nfor _ in range(int(input())):\n    (n, k) = numIN()\n    le = len(set([int(i) for i in str(n)]))\n    if le == 3:\n        print(27)\n    elif le == 2:\n        print(8)\n    else:\n        print(1)", "def solve(K, n):\n    s = str(K)\n    d = len(set([x for x in s]))\n    return d ** 3\nt = int(input())\nfor _ in range(t):\n    (K, n) = map(int, input().split())\n    print(solve(K, n))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    l = list(n)\n    l = set(l)\n    if len(l) == 1:\n        print(1)\n    elif len(l) == 2:\n        print(8)\n    else:\n        print(27)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    l = list(n)\n    l = set(l)\n    if len(l) == 1:\n        print(1)\n    elif len(l) == 2:\n        print(8)\n    else:\n        print(27)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, k) = input().split()\n    k = int(k)\n    counter = 0\n    counter_0 = 0\n    for j in n:\n        if j == '0':\n            count = n.count(j)\n            counter_0 = max(count, counter_0)\n        else:\n            count = n.count(j)\n            counter = max(count, counter)\n    if k >= 2:\n        if counter == 1 and counter_0 == 0:\n            ans.append(27)\n        elif counter == 2 and counter_0 == 0:\n            ans.append(8)\n        elif counter == 3:\n            ans.append(1)\n        elif counter == 1 and counter_0 == 1:\n            ans.append(12)\n        elif counter == 2 and counter_0 == 1:\n            ans.append(4)\n        elif counter == 1 and counter_0 == 2:\n            ans.append(4)\n    if k == 1:\n        if counter == 1 and counter_0 == 0:\n            ans.append(24)\n        elif counter == 2 and counter_0 == 0:\n            ans.append(6)\n        elif counter == 3:\n            ans.append(1)\n        elif counter == 1 and counter_0 == 1:\n            ans.append(10)\n        elif counter == 2 and counter_0 == 1:\n            ans.append(4)\n        elif counter == 1 and counter_0 == 2:\n            ans.append(3)\nfor a in ans:\n    print(a)", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    (q, w) = input().split()\n    a.append(int(q))\n    b.append(int(w))\nfor i in range(n):\n    x = a[i] % 10\n    y = int((a[i] % 100 - x) / 10)\n    z = int((a[i] - a[i] % 100) / 100)\n    count = 0\n    if x == y:\n        count += 1\n    if y == z:\n        count += 1\n    if z == x:\n        count += 1\n    if count == 0:\n        print(27)\n    if count == 1:\n        print(8)\n    if count > 1:\n        print(1)", "for _ in range(int(input())):\n    (num, temp) = map(str, input().split())\n    set_num = set([int(i) for i in num])\n    print(pow(len(set_num), 3))", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = set(n)\n    print(len(n) ** 3)", "for i in range(int(input())):\n    (k, n) = map(int, input().split())\n    li = []\n    s = str(k)\n    li = []\n    for j in s:\n        li.append(j)\n    l = len(set(li))\n    if l == 3:\n        if n == 1:\n            print('24')\n        else:\n            print(27)\n    elif l == 2:\n        if n == 1:\n            print('7')\n        else:\n            print('8')\n    else:\n        print('1')", "t = int(input())\nfor i in range(t):\n    n = input()\n    if n[0] != n[1] and n[1] != n[2] and (n[0] != n[2]):\n        print(27)\n    elif n[1] == n[2] and n[1] == n[0]:\n        print(1)\n    else:\n        print(8)"]