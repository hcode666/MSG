["def get_dp(n: int, a: list) -> list:\n    (lc, rc) = ([0] * n, [0] * n)\n    for i in range(n):\n        for j in range(n // 2):\n            if a[i][j] == '1':\n                lc[i] += 1\n            if a[i][n - 1 - j] == '1':\n                rc[i] += 1\n    return [i - j for (i, j) in zip(lc, rc)]\n\ndef solve(n: int, a: list) -> int:\n    diff = get_dp(n, a)\n    sd = sum(diff)\n    asd = abs(sd)\n    for d in diff:\n        nsd = sd - 2 * d\n        asd = min(asd, abs(nsd))\n    return asd\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = []\n    for i in range(n):\n        a.append(input().strip())\n    print(solve(n, a))", "def get_dp(n: int, a: list) -> list:\n    (lc, rc) = ([0] * n, [0] * n)\n    for i in range(n):\n        for j in range(n // 2):\n            if a[i][j] == '1':\n                lc[i] += 1\n            if a[i][n - 1 - j] == '1':\n                rc[i] += 1\n    return [i - j for (i, j) in zip(lc, rc)]\n\ndef solve(n: int, a: list) -> int:\n    diff = get_dp(n, a)\n    sd = sum(diff)\n    asd = abs(sd)\n    for d in diff:\n        nsd = sd - 2 * d\n        asd = min(asd, abs(nsd))\n    return asd\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = []\n    for i in range(n):\n        a.append(input().strip())\n    print(solve(n, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    pepd = [0 for i in range(n)]\n    for j in range(n):\n        r = str(input())\n        p1 = r[:n // 2].count('1')\n        p2 = r[n // 2:].count('1')\n        pepd[j] = p1 - p2\n    if sum(pepd) == 0:\n        print(0)\n    else:\n        f = sum(pepd)\n        minf = abs(f)\n        for d in pepd:\n            newf = abs(f - 2 * d)\n            if newf < minf:\n                minf = newf\n        print(minf)", "for _ in range(int(input())):\n    N = int(input())\n    reverse = [0] * N\n    diff = 0\n    for z in range(N):\n        inp = input()\n        x = y = 0\n        for j in range(N):\n            if inp[j] == '1':\n                if j < N // 2:\n                    x += 1\n                else:\n                    y += 1\n        diff += x - y\n        reverse[z] = -2 * (x - y)\n    ans = abs(diff)\n    for i in range(N):\n        if abs(diff + reverse[i]) < ans:\n            ans = abs(diff + reverse[i])\n    print(ans)", "import numpy as np\n\ndef program():\n    n = int(input())\n    Pz_list = []\n    for i in range(n):\n        s = input()\n        L = []\n        for j in range(n):\n            L.append(s[j])\n        Pz_list.append(L)\n    Pz = np.array(Pz_list, dtype='int8')\n    nh = int(n / 2)\n    Pz1 = Pz[:, 0:nh]\n    Pz2 = Pz[:, nh:n]\n    s1 = np.sum(Pz1)\n    s2 = np.sum(Pz2)\n    diff = s1 - s2\n    s1_row = np.sum(Pz1, axis=1)\n    s2_row = np.sum(Pz2, axis=1)\n    diff_row = s1_row - s2_row\n    change_row = np.abs(diff - diff_row * 2)\n    min_change = np.min(change_row)\n    ans = min(min_change, abs(diff))\n    print(ans)\nT = int(input())\nwhile T:\n    program()\n    T -= 1", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = []\n    M = []\n    for i in range(n):\n        N = list(input())\n        ans1 = 0\n        ans2 = 0\n        for j in range(n):\n            if N[j] == '1':\n                if j < n // 2:\n                    ans1 += 1\n                else:\n                    ans2 += 1\n        M.append(ans1)\n        L.append(ans2)\n    ans1 = sum(M)\n    ans2 = sum(L)\n    if ans1 == ans2:\n        print(0)\n    elif ans1 > ans2:\n        a = ans1 - ans2\n        dif = a\n        for i in range(n):\n            if M[i] > L[i]:\n                b = M[i] - L[i]\n                if abs(a - 2 * b) < dif:\n                    dif = abs(a - 2 * b)\n        print(dif)\n    else:\n        a = ans2 - ans1\n        dif = a\n        for i in range(n):\n            if L[i] > M[i]:\n                b = L[i] - M[i]\n                if abs(a - 2 * b) < dif:\n                    dif = abs(a - 2 * b)\n        print(dif)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = []\n    M = []\n    for i in range(n):\n        N = list(input())\n        ans1 = 0\n        ans2 = 0\n        for j in range(n):\n            if N[j] == '1':\n                if j < n // 2:\n                    ans1 += 1\n                else:\n                    ans2 += 1\n        M.append(ans1)\n        L.append(ans2)\n    ans1 = sum(M)\n    ans2 = sum(L)\n    if ans1 == ans2:\n        print(0)\n    elif ans1 > ans2:\n        a = ans1 - ans2\n        dif = a\n        for i in range(n):\n            if M[i] > L[i]:\n                b = M[i] - L[i]\n                if abs(a - 2 * b) < dif:\n                    dif = abs(a - 2 * b)\n        print(dif)\n    else:\n        a = ans2 - ans1\n        dif = a\n        for i in range(n):\n            if L[i] > M[i]:\n                b = L[i] - M[i]\n                if abs(a - 2 * b) < dif:\n                    dif = abs(a - 2 * b)\n        print(dif)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    (ls, rs) = (0, 0)\n    (mls, mrs) = ([0] * n, [0] * n)\n    for i in range(n):\n        x = input()\n        for j in x[:n // 2]:\n            mls[i] += int(j)\n        for j in x[n // 2:]:\n            mrs[i] += int(j)\n        ls += mls[i]\n        rs += mrs[i]\n    res = abs(ls - rs)\n    for i in range(n):\n        res = min(res, abs(ls - 2 * mls[i] + 2 * mrs[i] - rs))\n    print(res)", "def ans(mat, n):\n    (a, b) = (0, 0)\n    x = n // 2\n    for i in range(n):\n        for j in range(n):\n            if j <= x - 1:\n                a += mat[i][j]\n            else:\n                b += mat[i][j]\n    if abs(a - b) == 0:\n        print(0)\n        return\n    ans = abs(a - b)\n    for i in range(n):\n        (x1, y) = (0, 0)\n        for j in range(n):\n            if j <= x - 1:\n                x1 += mat[i][j]\n            else:\n                y += mat[i][j]\n        ans = min(ans, abs(a + y - x1 - (b + x1 - y)))\n    print(ans)\n    return\nfor _ in range(int(input())):\n    n = int(input())\n    mat = []\n    for _ in range(n):\n        arr = [int(i) for i in input()]\n        mat.append(arr)\n    ans(mat, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p1 = []\n    p2 = []\n    d = []\n    for j in range(n):\n        p = input()\n        p1.append(p[:n // 2].count('1'))\n        p2.append(p[n // 2:].count('1'))\n        d.append(p1[j] - p2[j])\n    m = abs(sum(p1) - sum(p2))\n    for k in range(len(d)):\n        r = abs(sum(p1) + 2 * p2[k] - sum(p2) - 2 * p1[k])\n        if r < m:\n            m = r\n    print(m)", "tests = int(input())\nfor t in range(tests):\n    N = int(input())\n    pizl = []\n    pizr = []\n    diffs = []\n    for i in range(N):\n        p = input()\n        pizl.append(p[:N // 2].count('1'))\n        pizr.append(p[N // 2:].count('1'))\n        diffs.append(pizl[i] - pizr[i])\n    mx = abs(sum(pizl) - sum(pizr))\n    for i in range(len(diffs)):\n        diff = abs(sum(pizl) + 2 * pizr[i] - sum(pizr) - 2 * pizl[i])\n        if diff < mx:\n            mx = diff\n    print(mx)", "def solution():\n    N = int(input())\n    grid = []\n    total_left = 0\n    total_right = 0\n    for i in range(N):\n        line = [int(x) for x in list(input())]\n        half = int(N / 2)\n        left_sum = sum(line[:half])\n        right_sum = sum(line[half:])\n        total_right += right_sum\n        total_left += left_sum\n        grid.append([left_sum, right_sum])\n    diff = abs(total_right - total_left)\n    for i in range(N):\n        (left_sum, right_sum) = grid[i]\n        total_left += right_sum - left_sum\n        total_right += left_sum - right_sum\n        diff = min(diff, abs(total_right - total_left))\n        total_left += left_sum - right_sum\n        total_right += right_sum - left_sum\n    print(diff)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def solution():\n    N = int(input())\n    grid = []\n    total_left = 0\n    total_right = 0\n    for i in range(N):\n        line = [int(x) for x in list(input())]\n        half = int(N / 2)\n        left_sum = sum(line[:half])\n        right_sum = sum(line[half:])\n        total_right += right_sum\n        total_left += left_sum\n        grid.append([left_sum, right_sum])\n    diff = abs(total_right - total_left)\n    for i in range(N):\n        (left_sum, right_sum) = grid[i]\n        total_left += right_sum - left_sum\n        total_right += left_sum - right_sum\n        diff = min(diff, abs(total_right - total_left))\n        total_left += left_sum - right_sum\n        total_right += right_sum - left_sum\n    print(diff)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def peperoni(a, n):\n    p1 = p2 = 0\n    for i in range(n):\n        for j in range(0, n // 2, 1):\n            if a[i][j] == 1:\n                p1 += 1\n        for k in range(n // 2, n, 1):\n            if a[i][k] == 1:\n                p2 += 1\n    return p2 - p1\ntestCase = int(input())\nfor _ in range(testCase):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a += [[int(x) for x in list(input())]]\n    m = peperoni(a, n)\n    ans = abs(m)\n    for i in range(n):\n        if ans == 0:\n            break\n        x = a[i][0:n // 2].count(1)\n        y = a[i][n // 2:n].count(1)\n        t = abs(m + (2 * x - 2 * y))\n        if t < ans:\n            ans = t\n    print(ans)", "def peperoni(a, n):\n    p1 = p2 = 0\n    for i in range(n):\n        for j in range(0, n // 2, 1):\n            if a[i][j] == 1:\n                p1 += 1\n        for k in range(n // 2, n, 1):\n            if a[i][k] == 1:\n                p2 += 1\n    return p2 - p1\ntestCase = int(input())\nfor _ in range(testCase):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a += [[int(x) for x in list(input())]]\n    m = peperoni(a, n)\n    ans = abs(m)\n    for i in range(n):\n        if ans == 0:\n            break\n        x = a[i][0:n // 2].count(1)\n        y = a[i][n // 2:n].count(1)\n        t = abs(m + (2 * x - 2 * y))\n        if t < ans:\n            ans = t\n    print(ans)", "def row(alist):\n    (a, n) = (0, len(alist))\n    for i in range(n // 2):\n        if alist[i] == '1':\n            a += 1\n    for i in range(n // 2, n):\n        if alist[i] == '1':\n            a -= 1\n    return a\nt = int(input())\nfor count in range(t):\n    n = int(input())\n    mat = [input() for i in range(n)]\n    A = []\n    for i in range(n):\n        A.append(row(mat[i]))\n    s = sum(A)\n    B = [abs(s)]\n    if s > 0:\n        for i in range(n):\n            if A[i] > 0:\n                B.append(abs(s - 2 * A[i]))\n    else:\n        for i in range(n):\n            if A[i] < 0:\n                B.append(abs(s - 2 * A[i]))\n    print(min(B))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    aux = [0] * n\n    tot = 0\n    for i in range(n):\n        s = list(map(int, list(input())))\n        aux[i] = sum(s[:n // 2]) - sum(s[n // 2:])\n    tot = sum(aux)\n    if tot == 0:\n        print(0)\n    else:\n        x = []\n        for i in range(len(aux)):\n            x.append(abs(tot - 2 * aux[i]))\n        print(min(x))", "def answer():\n    (x, y) = (0, 0)\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == '0':\n                continue\n            if j < n // 2:\n                x += 1\n            else:\n                y += 1\n    ans = abs(x - y)\n    for i in range(n):\n        (c1, c2) = (0, 0)\n        for j in range(n):\n            if a[i][j] == '0':\n                continue\n            if j < n // 2:\n                c1 += 1\n            else:\n                c2 += 1\n        ans = min(ans, abs(x - c1 + c2 - (y - c2 + c1)))\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = [input() for i in range(n)]\n    print(answer())", "for _ in range(int(input())):\n    n = int(input())\n    (l, s) = ([], 0)\n    for i in range(n):\n        s1 = input()\n        a = s1[:n // 2].count('1') - s1[n // 2:].count('1')\n        l.append(a)\n        s += a\n    if s == 0:\n        print(0)\n    else:\n        m = 1001\n        for i in l:\n            m = min(m, abs(s - 2 * i))\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    (l, l1, l2, s) = ([], [], [], 0)\n    for i in range(n):\n        s1 = input()\n        a = s1[:n // 2].count('1') - s1[n // 2:].count('1')\n        l.append(a)\n        s += a\n    if s == 0:\n        print(0)\n    else:\n        m = 1000000000\n        for i in l:\n            if abs(s - 2 * i) < m:\n                m = abs(s - 2 * i)\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = []\n    l2 = []\n    for i in range(n):\n        s = input()\n        a = s[:n // 2].count('1')\n        b = s[n // 2:].count('1')\n        if a > b:\n            l1.append(a - b)\n        elif a < b:\n            l2.append(b - a)\n    p = sum(l1)\n    q = sum(l2)\n    if p == q:\n        print(0)\n    elif p > q:\n        diff = p - q\n        flag = 0\n        for i in range(diff // 2, 0, -1):\n            a = diff - i\n            if i in l1 or a in l1:\n                print(abs(a - i))\n                flag = 1\n                break\n        if flag == 0:\n            print(diff)\n    else:\n        diff = q - p\n        flag = 0\n        for i in range(diff // 2, 0, -1):\n            a = diff - i\n            if i in l2 or a in l2:\n                print(abs(a - i))\n                flag = 1\n                break\n        if flag == 0:\n            print(diff)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    c1 = 0\n    c2 = 0\n    for i in range(n):\n        s = input()\n        a.append([s[0:n // 2].count('1'), s[n // 2:].count('1')])\n        c1 += a[i][0]\n        c2 += a[i][1]\n    tp1 = c1\n    tp2 = c2\n    m = abs(c1 - c2)\n    for i in range(n):\n        tp1 += a[i][1]\n        tp1 -= a[i][0]\n        tp2 += a[i][0]\n        tp2 -= a[i][1]\n        if m > abs(tp1 - tp2):\n            m = abs(tp1 - tp2)\n        tp1 = c1\n        tp2 = c2\n    print(m)", "def row(alist):\n    (a, n) = (0, len(alist))\n    for i in range(n // 2):\n        if alist[i] == '1':\n            a += 1\n    for i in range(n // 2, n):\n        if alist[i] == '1':\n            a -= 1\n    return a\nt = int(input())\nfor count in range(t):\n    n = int(input())\n    mat = [input() for i in range(n)]\n    A = []\n    for i in range(n):\n        A.append(row(mat[i]))\n    s = sum(A)\n    B = [abs(s)]\n    if s > 0:\n        for i in range(n):\n            if A[i] > 0:\n                B.append(abs(s - 2 * A[i]))\n    else:\n        for i in range(n):\n            if A[i] < 0:\n                B.append(abs(s - 2 * A[i]))\n    print(min(B))", "for _ in range(int(input())):\n    n = int(input())\n    aux = [0] * n\n    tot = 0\n    for i in range(n):\n        s = list(map(int, list(input())))\n        aux[i] = sum(s[:n // 2]) - sum(s[n // 2:])\n    tot = sum(aux)\n    if tot == 0:\n        print(0)\n    else:\n        x = []\n        for i in range(len(aux)):\n            x.append(abs(tot - 2 * aux[i]))\n        print(min(x))", "for t in range(int(input())):\n    n = int(input())\n    p1 = 0\n    p2 = 0\n    ans = 500\n    diff = []\n    for i in range(n):\n        a = input()\n        x = 0\n        y = 0\n        for j in range(n // 2):\n            if a[j] == '1':\n                p1 += 1\n                x += 1\n        for j in range(n // 2, n):\n            if a[j] == '1':\n                p2 += 1\n                y += 1\n        diff.append(2 * (y - x))\n    for k in range(n):\n        ans = min(ans, abs(p1 - p2 + diff[k]))\n    print(min(ans, abs(p1 - p2)))", "for t in range(int(input())):\n    n = int(input())\n    matrix = []\n    ans = 500\n    p1 = 0\n    p2 = 0\n    diff = []\n    for i in range(n):\n        num = []\n        a = input()\n        x = 0\n        y = 0\n        for j in range(n // 2):\n            num.append(int(a[j]))\n            if a[j] == '1':\n                p1 += 1\n                x += 1\n        for j in range(n // 2, n):\n            num.append(int(a[j]))\n            if a[j] == '1':\n                p2 += 1\n                y += 1\n        diff.append(2 * (y - x))\n        matrix.append(num)\n    for k in range(n):\n        ans = min(ans, abs(p1 - p2 + diff[k]))\n    print(min(ans, abs(p1 - p2)))", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    a = []\n    p1 = p2 = 0\n    for j in range(n):\n        s = input()\n        a.append([s[:n // 2].count('1'), s[n // 2:].count('1')])\n        p1 += a[j][0]\n        p2 += a[j][1]\n    m = abs(p1 - p2)\n    tp2 = p2\n    tp1 = p1\n    for j in range(n):\n        tp1 -= a[j][0]\n        tp1 += a[j][1]\n        tp2 -= a[j][1]\n        tp2 += a[j][0]\n        if m > abs(tp1 - tp2):\n            m = abs(tp1 - tp2)\n        tp1 = p1\n        tp2 = p2\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    p1 = p2 = 0\n    for j in range(n):\n        s = input()\n        a.append([s[:n // 2].count('1'), s[n // 2:].count('1')])\n        p1 += a[j][0]\n        p2 += a[j][1]\n    m = abs(p1 - p2)\n    tp2 = p2\n    tp1 = p1\n    for j in range(n):\n        tp1 -= a[j][0]\n        tp1 += a[j][1]\n        tp2 -= a[j][1]\n        tp2 += a[j][0]\n        if m > abs(tp1 - tp2):\n            m = abs(tp1 - tp2)\n        tp1 = p1\n        tp2 = p2\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    p1 = p2 = 0\n    for j in range(n):\n        s = input()\n        a.append([s[:n // 2].count('1'), s[n // 2:].count('1')])\n        p1 += a[j][0]\n        p2 += a[j][1]\n    m = abs(p1 - p2)\n    tp2 = p2\n    tp1 = p1\n    for j in range(n):\n        tp1 -= a[j][0]\n        tp1 += a[j][1]\n        tp2 -= a[j][1]\n        tp2 += a[j][0]\n        if m > abs(tp1 - tp2):\n            m = abs(tp1 - tp2)\n        tp1 = p1\n        tp2 = p2\n    print(m)", "from sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    leftsum = []\n    rightsum = []\n    LEFTSUM = 0\n    RIGHTSUM = 0\n    halfn = int(n / 2)\n    for i in range(n):\n        a = input()\n        leftsum.append(a[:halfn].count('1'))\n        rightsum.append(a[halfn:].count('1'))\n        LEFTSUM += leftsum[i]\n        RIGHTSUM += rightsum[i]\n    ans = 10 ** 10\n    for i in range(n):\n        ans = min(ans, abs(LEFTSUM - RIGHTSUM - 2 * leftsum[i] + 2 * rightsum[i]), abs(LEFTSUM - RIGHTSUM))\n    print(ans)", "from sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    leftsum = []\n    rightsum = []\n    LEFTSUM = 0\n    RIGHTSUM = 0\n    halfn = int(n / 2)\n    for i in range(n):\n        a = input()\n        leftsum.append(a[:halfn].count('1'))\n        rightsum.append(a[halfn:].count('1'))\n        LEFTSUM += leftsum[i]\n        RIGHTSUM += rightsum[i]\n    ans = 10 ** 10\n    for i in range(n):\n        ans = min(ans, abs(LEFTSUM - RIGHTSUM - 2 * leftsum[i] + 2 * rightsum[i]), abs(LEFTSUM - RIGHTSUM))\n    print(ans)", "from sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    leftsum = []\n    rightsum = []\n    LEFTSUM = 0\n    RIGHTSUM = 0\n    halfn = int(n / 2)\n    for i in range(n):\n        a = input()\n        leftsum.append(a[:halfn].count('1'))\n        rightsum.append(a[halfn:].count('1'))\n        LEFTSUM += leftsum[i]\n        RIGHTSUM += rightsum[i]\n    ans = 10 ** 10\n    for i in range(n):\n        ans = min(ans, abs(LEFTSUM - RIGHTSUM - 2 * leftsum[i] + 2 * rightsum[i]), abs(LEFTSUM - RIGHTSUM))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lr = [0] * n\n    for i in range(n):\n        s = input()\n        lr[i] = s[:n // 2].count('1') - s[n // 2:].count('1')\n    lrsum = sum(lr)\n    if lrsum == 0:\n        print('0')\n    else:\n        x = [abs(lrsum - 2 * lr[i]) for i in range(n)]\n        print(min(x))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [0] * n\n    r = [0] * n\n    for i in range(n):\n        s = input()\n        l[i] = s[:n // 2].count('1')\n        r[i] = s[n // 2:].count('1')\n        if l[i] > r[i]:\n            l[i] = l[i] - r[i]\n            r[i] = 0\n        elif l[i] == r[i]:\n            l[i] = 0\n            r[i] = 0\n        else:\n            r[i] = r[i] - l[i]\n            l[i] = 0\n    lsum = sum(l)\n    rsum = sum(r)\n    x = abs(lsum - rsum)\n    if x == 0:\n        print('0')\n    else:\n        m = 1000000000000000\n        if lsum > rsum:\n            for j in range(n):\n                k = abs(x - 2 * l[j])\n                if k < m:\n                    m = k\n                    if m == 0:\n                        break\n        elif rsum > lsum:\n            for j in range(n):\n                k = abs(x - 2 * r[j])\n                if k < m:\n                    m = k\n                    if m == 0:\n                        break\n        print(m)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    t1 = []\n    for i in range(N):\n        s = list(map(int, input()))\n        (c1, c2) = (0, 0)\n        for j in range(N):\n            if s[j] == 1 and j < N // 2:\n                c1 += 1\n            elif s[j] and j >= N // 2:\n                c2 += 1\n        t1.append(c1 - c2)\n    t2 = sum(t1)\n    r = []\n    for k in range(len(t1)):\n        r.append(abs(t2 - 2 * t1[k]))\n    print(min(min(r), abs(t2)))", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        a = input()\n        l.append(a)\n    x = 0\n    y = 0\n    p = 0\n    q = 0\n    li = []\n    for i in range(n):\n        p = 0\n        q = 0\n        for j in range(n):\n            if j < n / 2 and l[i][j] == '1':\n                x += 1\n                p += 1\n            elif j >= n / 2 and l[i][j] == '1':\n                y += 1\n                q += 1\n        a = []\n        a = (p, q)\n        li.append(a)\n    mi = abs(x - y)\n    if x - y == 0:\n        print(x - y)\n    else:\n        mi = abs(x - y)\n        d = x - y\n        for i in range(n):\n            c = x - li[i][0] + li[i][1]\n            b = y + li[i][0] - li[i][1]\n            z = abs(c - b)\n            if mi > abs(z):\n                mi = abs(z)\n        print(mi)", "t = int(input())\nfor i in range(t):\n    diff = []\n    n = int(input())\n    for j in range(n):\n        c1 = 0\n        c2 = 0\n        l1 = list(map(int, input()))\n        for k in range(n):\n            if l1[k] == 1 and k < n // 2:\n                c1 += 1\n            elif l1[k] and k >= n // 2:\n                c2 += 1\n        diff.append(c1 - c2)\n    current_diff = sum(diff)\n    new = []\n    for kk in range(len(diff)):\n        new.append(abs(current_diff - 2 * diff[kk]))\n    print(min(min(new), abs(current_diff)))", "t = int(input())\nfor you in range(t):\n    n = int(input())\n    lo = []\n    for i in range(n):\n        l = input()\n        li = [int(i) for i in l]\n        lo.append(li)\n    lrowhalf1 = [0 for i in range(n)]\n    lrowhalf2 = [0 for i in range(n)]\n    for i in range(n):\n        lrowhalf1[i] = sum(lo[i][0:n // 2])\n        lrowhalf2[i] = sum(lo[i][n // 2:n])\n    mina = abs(sum(lrowhalf1) - sum(lrowhalf2))\n    for i in range(n):\n        mini = abs(sum(lrowhalf1) - 2 * (lrowhalf1[i] - lrowhalf2[i]) - sum(lrowhalf2))\n        if mini < mina:\n            mina = mini\n    print(mina)", "for _ in range(int(input())):\n    n = int(input())\n    left = 0\n    right = 0\n    Dict = {}\n    for i in range(n):\n        s = input()\n        curr_left = s[0:n // 2].count('1')\n        curr_right = s[n // 2:n].count('1')\n        left += curr_left\n        right += curr_right\n        Dict[i] = curr_left - curr_right\n    ans = abs(left - right)\n    org_ans = left - right\n    for i in range(n):\n        ans = min(ans, abs(org_ans - 2 * Dict[i]))\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    mini = 10000000\n    (count1, count2) = (0, 0)\n    u = []\n    save = []\n    for i in range(N):\n        a = input()\n        u.append(a)\n        x = a[:N // 2].count('1')\n        y = a[N // 2:].count('1')\n        count1 += x\n        count2 += y\n        save.append(x - y)\n    if count1 == count2:\n        print(0)\n        continue\n    for i in save:\n        mini = min(abs(count1 - 2 * i - count2), mini)\n    print(mini)", "for _ in range(int(input())):\n    N = int(input())\n    array = []\n    for i in range(N):\n        a = input()\n        first = 0\n        second = 0\n        for j in range(N // 2):\n            first += int(a[j])\n        for j in range(N // 2, N):\n            second += int(a[j])\n        array.append([first, second])\n    sm1 = 0\n    sm2 = 0\n    for i in array:\n        sm1 += i[0]\n        sm2 += i[1]\n    diff = abs(sm1 - sm2)\n    for i in array:\n        diff = min(diff, abs(sm1 - sm2 - i[0] * 2 + i[1] * 2))\n    print(diff)", "for __ in range(int(input())):\n    n = int(input())\n    a = []\n    ans = 10 ** 9\n    for _ in range(n):\n        a.append(list(input()))\n    (l1, l2, acnt, bcnt, diff) = ([], [], 0, 0, [])\n    for i in range(n):\n        (acnt, bcnt) = (0, 0)\n        for j in range(len(a[i]) // 2):\n            if a[i][j] == '1':\n                acnt += 1\n            if a[i][n - 1 - j] == '1':\n                bcnt += 1\n        l1.append(acnt)\n        l2.append(bcnt)\n    (acnt, bcnt) = (sum(l1), sum(l2))\n    if acnt == bcnt:\n        print('0')\n    elif abs(bcnt - acnt) == 1:\n        print('1')\n    else:\n        if bcnt > acnt:\n            (l1, l2) = (l2, l1)\n            (acnt, bcnt) = (bcnt, acnt)\n        for i in range(n):\n            val = l1[i] - l2[i]\n            diff.append(val if val > 0 else 0)\n        for i in range(len(diff)):\n            ans = min(ans, abs(acnt - diff[i] - bcnt - diff[i]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    row_count = {}\n    for i in range(n):\n        s = input()\n        row_count[i + 1] = [s[:n // 2].count('1'), s[n // 2:].count('1')]\n    (left_sum, right_sum) = (0, 0)\n    for val in row_count.values():\n        left_sum += val[0]\n        right_sum += val[1]\n    min_abs_diff = abs(left_sum - right_sum)\n    for (row, val) in row_count.items():\n        diff_swap_row = abs(left_sum - val[0] + val[1] - (right_sum - val[1] + val[0]))\n        if diff_swap_row < min_abs_diff:\n            min_abs_diff = diff_swap_row\n    print(min_abs_diff)", "for T in range(int(input())):\n    N = int(input())\n    P = [0] * N\n    Q = [0] * N\n    R = [0] * N\n    X = N // 2\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(X):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + X] == '1':\n                R[I] += 1\n    S = sum(Q) - sum(R)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != R[I]:\n            Z.add(abs(S + 2 * (R[I] - Q[I])))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = [0] * N\n    Q = [0] * N\n    R = [0] * N\n    X = N // 2\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(X):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + X] == '1':\n                R[I] += 1\n    S = sum(Q) - sum(R)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != R[I]:\n            Z.add(abs(S + 2 * (R[I] - Q[I])))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = [0] * N\n    Q = [0] * N\n    X = N // 2\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(X):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + X] == '1':\n                Q[I] -= 1\n    S = sum(Q)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != 0:\n            Z.add(abs(S - 2 * Q[I]))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = list(range(N))\n    Q = [0 for x in range(N)]\n    X = N // 2\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(X):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + X] == '1':\n                Q[I] -= 1\n    S = sum(Q)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != 0:\n            Z.add(abs(S - 2 * Q[I]))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = []\n    Q = [0 for x in range(N)]\n    X = N // 2\n    for I in range(N):\n        P.append(input())\n    for I in range(N):\n        for J in range(X):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + X] == '1':\n                Q[I] -= 1\n    S = sum(Q)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != 0:\n            Z.add(abs(S - 2 * Q[I]))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = []\n    Q = [0 for x in range(N)]\n    for I in range(N):\n        P.append(input())\n    for I in range(N):\n        for J in range(N // 2):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + N // 2] == '1':\n                Q[I] -= 1\n    S = sum(Q)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != 0:\n            Z.add(abs(S - 2 * Q[I]))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = []\n    Q = [0 for x in range(N)]\n    for I in range(N):\n        P.append(input())\n    for I in range(N):\n        for J in range(N):\n            if P[I][J] == '1':\n                if J < N / 2:\n                    Q[I] += 1\n                else:\n                    Q[I] -= 1\n    S = sum(Q)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != 0:\n            Z.add(abs(S - 2 * Q[I]))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = []\n    Q = [0 for x in range(N)]\n    for I in range(N):\n        P.append(input())\n    for I in range(N):\n        for J in range(N):\n            if P[I][J] == '1':\n                if J < N / 2:\n                    Q[I] += 1\n                else:\n                    Q[I] -= 1\n    S = sum(Q)\n    Z = abs(S)\n    for I in range(N):\n        Z = min(Z, abs(S - 2 * Q[I]))\n    print(Z)", "for T in range(int(input())):\n    N = int(input())\n    P = list(range(N))\n    Q = [0 for x in range(N)]\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(N):\n            if P[I][J] == '1':\n                if J < N / 2:\n                    Q[I] += 1\n                else:\n                    Q[I] -= 1\n    S = sum(Q)\n    Z = abs(S)\n    for I in range(N):\n        Z = min(Z, abs(S - 2 * Q[I]))\n    print(Z)", "for T in range(int(input())):\n    N = int(input())\n    P = list(range(N))\n    Q = [0 for x in range(N)]\n    R = [0 for x in range(N)]\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(N // 2):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + N // 2] == '1':\n                R[I] += 1\n    S = sum(Q) - sum(R)\n    Z = {abs(S)}\n    for I in range(N):\n        if Q[I] != R[I]:\n            Z.add(abs(S + 2 * (R[I] - Q[I])))\n    print(min(Z))", "for T in range(int(input())):\n    N = int(input())\n    P = list(range(N))\n    Q = [0 for x in range(N)]\n    R = [0 for x in range(N)]\n    for I in range(N):\n        P[I] = input()\n    for I in range(N):\n        for J in range(N // 2):\n            if P[I][J] == '1':\n                Q[I] += 1\n            if P[I][J + N // 2] == '1':\n                R[I] += 1\n    LS = sum(Q)\n    RS = sum(R)\n    Z = [abs(LS - RS)]\n    for I in range(N):\n        Z.append(abs(LS - Q[I] + R[I] - (RS - R[I] + Q[I])))\n    print(min(Z))", "t = int(input())\nfor itera in range(t):\n    n = int(input())\n    grid = []\n    x = []\n    p1_g = 0\n    p2_g = 0\n    for i in range(n):\n        grid.append(input())\n        grid[i] = list(map(int, grid[i]))\n        x.append(sum(grid[i][0:n // 2]) - sum(grid[i][n // 2:n]))\n    diffi = sum(x)\n    if diffi > 0:\n        p1_g = 1\n    elif diffi < 1:\n        p2_g = 1\n    mini = abs(diffi)\n    diffi = abs(diffi)\n    if diffi != 0:\n        if p1_g == 1:\n            for (i, val) in enumerate(x):\n                if x[i] > 0:\n                    if mini > abs(diffi - 2 * x[i]):\n                        mini = abs(diffi - 2 * x[i])\n        else:\n            for (i, val) in enumerate(x):\n                if x[i] < 0:\n                    if mini > abs(diffi + 2 * x[i]):\n                        mini = abs(diffi + 2 * x[i])\n    print(abs(mini))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = []\n        for i in range(n):\n            s = input().strip()\n            a.append(s[:n // 2].count('1') - s[n // 2:].count('1'))\n        diff = sum(a)\n        if diff == 0:\n            print(diff)\n        else:\n            l = [abs(diff - 2 * i) for i in a]\n            print(min(l))\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    for i in range(n):\n        s = input()\n        (x, y) = (0, 0)\n        for j in range(len(s)):\n            if j < n / 2 and s[j] == '1':\n                x += 1\n            elif j >= n / 2 and s[j] == '1':\n                y += 1\n        a.append(x)\n        b.append(y)\n    (sa, sb) = (sum(a), sum(b))\n    ans = abs(sa - sb)\n    for i in range(len(a)):\n        if sa > sb:\n            temp = abs(sa - a[i] + b[i] - (sb + a[i] - b[i]))\n            ans = min(ans, temp)\n        elif sb > sa:\n            temp = abs(sa + b[i] - a[i] - (sb - b[i] + a[i]))\n            ans = min(ans, temp)\n    print(ans)", "for _ in range(int(input())):\n    b_left = []\n    c_right = []\n    d_left = []\n    e_right = []\n    aa = []\n    a = []\n    nil = int(input())\n    for _ in range(nil):\n        a = list(map(int, input()))\n        aa.append(a)\n    for ia in aa:\n        b_left.append(ia[:nil // 2])\n        c_right.append(ia[nil // 2:])\n        d_left.append(sum(ia[:nil // 2]))\n        e_right.append(sum(ia[nil // 2:]))\n    max_diff = abs(sum(d_left) - sum(e_right))\n    if max_diff == 0:\n        print(0)\n    else:\n        m = 0\n        for (i, j) in zip(b_left, c_right):\n            if sum(i) > sum(j) or sum(j) > sum(i):\n                dummy_d_left = d_left.copy()\n                dummy_e_right = e_right.copy()\n                ls = b_left[m]\n                rs = c_right[m]\n                dummy_d_left[m] = sum(rs)\n                dummy_e_right[m] = sum(ls)\n                if abs(sum(dummy_d_left) - sum(dummy_e_right)) < max_diff:\n                    max_diff = abs(sum(dummy_d_left) - sum(dummy_e_right))\n            m = m + 1\n        print(max_diff)", "for _ in range(int(input())):\n    b_left = []\n    c_right = []\n    d_left = []\n    e_right = []\n    aa = []\n    a = []\n    nil = int(input())\n    for _ in range(nil):\n        a = list(map(int, input()))\n        aa.append(a)\n    for ia in aa:\n        b_left.append(ia[:nil // 2])\n        c_right.append(ia[nil // 2:])\n        d_left.append(sum(ia[:nil // 2]))\n        e_right.append(sum(ia[nil // 2:]))\n    max_diff = abs(sum(d_left) - sum(e_right))\n    if max_diff == 0:\n        print(0)\n    else:\n        m = 0\n        for (i, j) in zip(b_left, c_right):\n            if sum(i) > sum(j) or sum(j) > sum(i):\n                dummy_d_left = d_left.copy()\n                dummy_e_right = e_right.copy()\n                ls = b_left[m]\n                rs = c_right[m]\n                dummy_d_left[m] = sum(rs)\n                dummy_e_right[m] = sum(ls)\n                if abs(sum(dummy_d_left) - sum(dummy_e_right)) < max_diff:\n                    max_diff = abs(sum(dummy_d_left) - sum(dummy_e_right))\n            m = m + 1\n        print(max_diff)", "for _ in range(int(input())):\n    N = int(input())\n    differences = []\n    for i in range(N):\n        row = input()\n        left = row[:N // 2].count('1')\n        right = row[N // 2:].count('1')\n        differences.append(left - right)\n    s = sum(differences)\n    if s == 0:\n        ans = 0\n    else:\n        ans = min((abs(s - 2 * x) for x in differences))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    left = [None] * n\n    right = [None] * n\n    for i in range(n):\n        st = input()\n        left[i] = st[:n // 2].count('1')\n        right[i] = st[n // 2:].count('1')\n    dif = abs(sum(left) - sum(right))\n    if dif == 0:\n        print(0)\n    else:\n        for i in range(n):\n            lft = list(left)\n            rgt = list(right)\n            t = lft[i]\n            lft[i] = rgt[i]\n            rgt[i] = t\n            dif2 = abs(sum(lft) - sum(rgt))\n            if dif2 < dif:\n                dif = dif2\n        print(dif)", "def diff(k):\n    if k >= 0:\n        return k\n    else:\n        return -1 * k\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for _ in range(n):\n        s = input()\n        tmp = 0\n        for j in range(int(n / 2)):\n            tmp += int(s[j]) - int(s[j + int(n / 2)])\n        l.append(tmp)\n    if sum(l) == 0:\n        print(0)\n    else:\n        if sum(l) < 0:\n            l = [-1 * i for i in l]\n        tmp = sum(l)\n        s = sum(l)\n        for i in l:\n            if diff(s - 2 * i) < tmp:\n                tmp = diff(s - 2 * i)\n        print(tmp)", "def diff(k):\n    if k >= 0:\n        return k\n    else:\n        return -1 * k\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for _ in range(n):\n        s = input()\n        tmp = 0\n        for j in range(int(n / 2)):\n            tmp += int(s[j]) - int(s[j + int(n / 2)])\n        l.append(tmp)\n    if sum(l) == 0:\n        print(0)\n    elif sum(l) > 0:\n        tmp = sum(l)\n        s = sum(l)\n        for i in l:\n            if diff(s - 2 * i) < tmp:\n                tmp = diff(s - 2 * i)\n        print(tmp)\n    else:\n        l = [-1 * i for i in l]\n        tmp = sum(l)\n        s = sum(l)\n        for i in l:\n            if diff(s - 2 * i) < tmp:\n                tmp = diff(s - 2 * i)\n        print(tmp)", "for _ in range(int(input())):\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(input())\n    l = []\n    r = []\n    for i in s:\n        l.append(i[:n // 2].count('1'))\n        r.append(i[n // 2:].count('1'))\n    p = sum(l) - sum(r)\n    if abs(p) <= 1:\n        print(abs(p))\n    else:\n        x = min([abs(p - 2 * (l[i] - r[i])) for i in range(n)])\n        print(x)", "import math\nt = int(input())\nwhile t > 0:\n    r = []\n    n = int(input())\n    (c1, c2) = (0, 0)\n    p = [0] * n\n    q = [0] * n\n    for i in range(0, n):\n        r = input()\n        for j in range(0, n // 2):\n            if r[j] == '1':\n                c1 = c1 + 1\n                p[i] = p[i] + 1\n            if r[n - j - 1] == '1':\n                c2 = c2 + 1\n                q[i] = q[i] + 1\n    if c1 == c2:\n        print(0)\n    else:\n        m = abs(c1 - c2)\n        for i in range(0, n):\n            m = min(m, abs(c1 - p[i] + q[i] - (c2 - q[i] + p[i])))\n        print(m)\n    t = t - 1", "for i in range(0, int(input())):\n    d = []\n    t = int(input())\n    for j in range(0, t):\n        a = input()\n        a = list(a)\n        num = 0\n        diff = 0\n        for k in a:\n            if num < t / 2:\n                if k == '1':\n                    diff = diff + 1\n            elif k == '1':\n                diff = diff - 1\n            num = num + 1\n        d.append(diff)\n    p = sum(d)\n    if p == 0:\n        print(0)\n    else:\n        min = abs(p)\n        for k in range(0, len(d)):\n            f = d.pop(k)\n            d.insert(k, -1 * f)\n            if abs(sum(d)) < min:\n                min = abs(sum(d))\n            d.pop(k)\n            d.insert(k, f)\n        print(min)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    q = []\n    c1 = 0\n    c2 = 0\n    for i in range(n):\n        x = [int(n) for n in input().strip()]\n        a.append(x[0:n // 2].count(1))\n        c1 += a[i]\n        b.append(x[n // 2:n].count(1))\n        c2 += b[i]\n    for i in range(n):\n        x = c1\n        y = c2\n        if x == y:\n            q.append(0)\n            break\n        x = x - a[i] + b[i]\n        y = y - b[i] + a[i]\n        q.append(abs(x - y))\n    print(min(q))", "t = int(input())\nwhile t:\n    cp = 0\n    pc = 0\n    p1 = []\n    p2 = []\n    n = int(input().rstrip())\n    if n % 2 == 0:\n        for _ in range(n):\n            st = input()\n            for i in range(n // 2):\n                if st[i] == '1':\n                    cp += 1\n            p1.append(cp)\n            for i in range(n // 2, n):\n                if st[i] == '1':\n                    pc += 1\n            p2.append(pc)\n            cp = 0\n            pc = 0\n        diff = abs(sum(p1) - sum(p2))\n        if diff == 0:\n            print(0)\n        else:\n            for i in range(n):\n                tp1 = sum(p1)\n                tp2 = sum(p2)\n                tp1 += p2[i] - p1[i]\n                tp2 += p1[i] - p2[i]\n                cdiff = abs(tp1 - tp2)\n                if cdiff < diff:\n                    diff = cdiff\n            print(diff)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    r = []\n    for i in range(n):\n        row = list(map(int, input()))\n        l.append(sum(row[:n // 2]))\n        r.append(sum(row[n // 2:]))\n    res = abs(sum(l) - sum(r))\n    for i in range(n):\n        tl = l.copy()\n        tr = r.copy()\n        (tl[i], tr[i]) = (tr[i], tl[i])\n        if abs(sum(tl) - sum(tr)) < res:\n            res = abs(sum(tl) - sum(tr))\n    print(res)", "import sys\nt = int(input())\nwhile t:\n    n = int(input())\n    h = [[0, 0] for i in range(n)]\n    p = [0, 0]\n    for i in range(n):\n        line = input()\n        for j in range(n):\n            h[i][int(2 * j / n)] += int(line[j])\n            p[int(2 * j / n)] += int(line[j])\n    minDiff = abs(p[0] - p[1])\n    for i in range(n):\n        diff = abs(p[0] - p[1] + 2 * (h[i][1] - h[i][0]))\n        if diff < minDiff:\n            minDiff = diff\n    sys.stdout.write(str(minDiff) + '\\n')\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l = []\n    b = []\n    for i in range(0, n):\n        o = input()\n        l.append(o)\n    (f1, s1) = (0, 0)\n    for i in range(0, n):\n        (f, s) = (0, 0)\n        for j in range(0, n):\n            if j < n // 2:\n                if l[i][j] == '1':\n                    f += 1\n                    f1 += 1\n            elif l[i][j] == '1':\n                s += 1\n                s1 += 1\n        b.append([f, s])\n    ans1 = abs(f1 - s1)\n    a1 = f1\n    b1 = s1\n    for j in range(0, len(b)):\n        f1 -= b[j][0]\n        s1 -= b[j][1]\n        f1 += b[j][1]\n        s1 += b[j][0]\n        ans1 = min(ans1, abs(f1 - s1))\n        f1 = a1\n        s1 = b1\n    print(ans1)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    pizza = [None] * n\n    for i in range(n):\n        pizza[i] = list(map(int, list(input())))\n    f1_pep = f2_pep = 0\n    for i in range(n):\n        for j in range(n // 2):\n            if pizza[i][j] == 1:\n                f1_pep += 1\n    for i in range(n):\n        for j in range(n // 2, n):\n            if pizza[i][j] == 1:\n                f2_pep += 1\n    diff = abs(f1_pep - f2_pep)\n    if diff == 0:\n        print(0)\n    else:\n        for i in range(n):\n            left_sum = sum(pizza[i][:n // 2])\n            right_sum = sum(pizza[i][n // 2:])\n            f1_pep = f1_pep - left_sum + right_sum\n            f2_pep = f2_pep - right_sum + left_sum\n            current_diff = abs(f1_pep - f2_pep)\n            if current_diff < diff:\n                diff = current_diff\n            f1_pep = f1_pep + left_sum - right_sum\n            f2_pep = f2_pep + right_sum - left_sum\n        print(diff)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    pizza = [None] * n\n    for i in range(n):\n        pizza[i] = list(map(int, list(input())))\n    f1_pep = f2_pep = 0\n    for i in range(n):\n        for j in range(n // 2):\n            if pizza[i][j] == 1:\n                f1_pep += 1\n    for i in range(n):\n        for j in range(n // 2, n):\n            if pizza[i][j] == 1:\n                f2_pep += 1\n    diff = abs(f1_pep - f2_pep)\n    if diff == 0:\n        print(0)\n    else:\n        for i in range(n):\n            left_sum = sum(pizza[i][:n // 2])\n            right_sum = sum(pizza[i][n // 2:])\n            f1_pep = f1_pep - left_sum + right_sum\n            f2_pep = f2_pep - right_sum + left_sum\n            current_diff = abs(f1_pep - f2_pep)\n            if current_diff < diff:\n                diff = current_diff\n            f1_pep = f1_pep + left_sum - right_sum\n            f2_pep = f2_pep + right_sum - left_sum\n        print(diff)", "def findAnswer(li):\n    n = len(li)\n    count1 = [0] * n\n    count2 = [0] * n\n    for i in range(n):\n        for k in range(n):\n            if k < n // 2 and li[i][k] == '1':\n                count1[i] += 1\n            if k >= n // 2 and li[i][k] == '1':\n                count2[i] += 1\n    leftsum = sum(count1)\n    rightsum = sum(count2)\n    ans = abs(leftsum - rightsum)\n    for j in range(n):\n        ansfaltu = leftsum - count1[j] + count2[j] - (rightsum - count2[j] + count1[j])\n        ans = min(ans, abs(ansfaltu))\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    count1 = 0\n    count2 = 0\n    for _ in range(n):\n        st = input()\n        lo = list(st)\n        li.append(lo)\n    findAnswer(li)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [input() for _ in range(n)]\n    (fh, sh) = (list(), list())\n    (p1, p2) = (0, 0)\n    for i in range(n):\n        s = l[i]\n        (a, b) = (s[:n // 2].count('1'), s[n // 2:].count('1'))\n        p1 += a\n        p2 += b\n        fh.append(a)\n        sh.append(b)\n    d = abs(p1 - p2)\n    for i in range(n):\n        k = p1 - fh[i] + sh[i]\n        m = p2 - sh[i] + fh[i]\n        if abs(k - m) < d:\n            d = abs(k - m)\n    print(d)", "for x in range(int(input())):\n    n = int(input())\n    l = []\n    l1 = []\n    l2 = []\n    (p, q, p1, q1) = (0, 0, 0, 0)\n    for x in range(n):\n        l.append(input())\n    for x in range(n):\n        (p, q) = (0, 0)\n        for y in range(n // 2):\n            if l[x][y] == '1':\n                if l[x][n - y - 1] != '1':\n                    p += 1\n            elif l[x][n - y - 1] == '1':\n                q += 1\n        p1 += p\n        q1 += q\n        if p - q != 0:\n            l1.append([p, q])\n    if p1 == q1:\n        print('0')\n    else:\n        k = p1\n        k1 = q1\n        for x in range(len(l1)):\n            t = p1 + l1[x][1] - l1[x][0]\n            t1 = q1 + l1[x][0] - l1[x][1]\n            if abs(t - t1) < abs(k - k1):\n                k = t\n                k1 = t1\n        p1 = k\n        q1 = k1\n        print(abs(p1 - q1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = []\n    arr2 = []\n    for i in range(n):\n        pizza = input()\n        part1 = pizza[:n // 2]\n        part2 = pizza[n // 2:]\n        arr1.append(part1.count('1'))\n        arr2.append(part2.count('1'))\n    initial = abs(sum(arr1) - sum(arr2))\n    x = sum(arr1)\n    y = sum(arr2)\n    final = [initial]\n    for i in range(len(arr1)):\n        x1 = x\n        y1 = y\n        x1 = x1 - arr1[i] + arr2[i]\n        y1 = y1 - arr2[i] + arr1[i]\n        final.append(abs(x1 - y1))\n    print(min(final))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    (p1, p2, f) = (0, 0, 0)\n    for i in range(n):\n        l = []\n        s = input()\n        p1 += s.count('1', 0, n // 2)\n        p2 += s.count('1', n // 2, n)\n        l = list(s)\n        li.append(l)\n    (g, h) = (p1, p2)\n    b = abs(p1 - p2)\n    if abs(p1 - p2) == 0:\n        print(0)\n    else:\n        c1 = []\n        for k in li:\n            for j in range(n // 2):\n                if k[j] == '1' and k[n - 1 - j] == '0':\n                    p1 -= 1\n                    p2 += 1\n                elif k[j] == '0' and k[n - 1 - j] == '1':\n                    p2 -= 1\n                    p1 += 1\n            c1.append(abs(p1 - p2))\n            (p1, p2) = (g, h)\n        print(min(c1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    (p1, p2, f) = (0, 0, 0)\n    for i in range(n):\n        l = []\n        s = input()\n        p1 += s.count('1', 0, n // 2)\n        p2 += s.count('1', n // 2, n)\n        l = list(s)\n        li.append(l)\n    (g, h) = (p1, p2)\n    b = abs(p1 - p2)\n    if abs(p1 - p2) == 0:\n        print(0)\n    else:\n        c1 = []\n        for k in li:\n            for j in range(n // 2):\n                if k[j] == '1' and k[n - 1 - j] == '0':\n                    p1 -= 1\n                    p2 += 1\n                elif k[j] == '0' and k[n - 1 - j] == '1':\n                    p2 -= 1\n                    p1 += 1\n            c1.append(abs(p1 - p2))\n            (p1, p2) = (g, h)\n        print(min(c1))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    left_tot = 0\n    right_tot = 0\n    curr = []\n    for k in range(n):\n        st = input()\n        le = st[:n // 2].count('1')\n        ri = st[n // 2:].count('1')\n        left_tot += le\n        right_tot += ri\n        curr.append([le, ri])\n    curr_tot = int(math.fabs(left_tot - right_tot))\n    for h in range(len(curr)):\n        new_left = left_tot\n        new_right = right_tot\n        new_left -= curr[h][0]\n        new_left += curr[h][1]\n        new_right -= curr[h][1]\n        new_right += curr[h][0]\n        if math.fabs(new_left - new_right) < curr_tot:\n            curr_tot = math.fabs(new_left - new_right)\n    print(int(curr_tot))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = []\n    for i in range(n):\n        s = str(input())\n        x = s[:n // 2].count('1') - s[n // 2:].count('1')\n        a.append(x)\n    y = sum(a)\n    if y == 0:\n        print(0)\n    else:\n        b = [abs(y - 2 * a[i]) for i in range(n)]\n        print(min(b))", "from numpy import *\nt = int(input())\nfor i in range(t):\n    N = int(input())\n    A = []\n    for i in range(N):\n        k = int(input())\n        l = []\n        while k > 0:\n            l.insert(0, k % 10)\n            k = k // 10\n        while len(l) != N:\n            l.insert(0, 0)\n        A.append(l)\n        l = []\n    k = array(A)\n    k1 = k[0:, 0:N // 2]\n    k2 = k[0:, N // 2:]\n    chetan = abs(sum(sum(k1)) - sum(sum(k2)))\n    if sum(sum(k1)) - sum(sum(k2)) != 0:\n        for i in range(N):\n            k[i] = k[i][::-1]\n            chetan = min(chetan, abs(sum(sum(k1)) - sum(sum(k2))))\n            k[i] = k[i][::-1]\n        print(chetan)\n    else:\n        print(0)", "def reverse(s):\n    str = ''\n    for i in s:\n        str = i + str\n    return str\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [None for _ in range(n)]\n    p1 = 0\n    p2 = 0\n    for j in range(n):\n        l[j] = input()\n        s = l[j][0:int(n / 2)]\n        s1 = l[j][int(n / 2):n]\n        p1 = p1 + s.count('1')\n        p2 = p2 + s1.count('1')\n    smallest = abs(p1 - p2)\n    for j in range(n):\n        l[j] = reverse(l[j])\n        p1 = 0\n        p2 = 0\n        for x in range(n):\n            s = l[x][0:int(n / 2)]\n            s1 = l[x][int(n / 2):n]\n            p1 = p1 + s.count('1')\n            p2 = p2 + s1.count('1')\n        if abs(p1 - p2) < smallest:\n            smallest = abs(p1 - p2)\n        l[j] = reverse(l[j])\n    print(smallest)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    mid = n // 2\n    l1 = []\n    l2 = []\n    val = []\n    for i in range(n):\n        num = input()\n        s1 = num[:mid]\n        s2 = num[mid:]\n        l1.append(s1.count('1'))\n        l2.append(s2.count('1'))\n    v1 = sum(l1)\n    v2 = sum(l2)\n    diff = abs(v1 - v2)\n    for i in range(n):\n        diff = min(diff, abs(v1 - l1[i] + l2[i] - (v2 - l2[i] + l1[i])))\n    print(diff)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        (ss, a) = ([], [])\n        (f, lo) = (0, 0)\n        limit = int(n / 2)\n        for t in range(n):\n            s = input()\n            ss.append(s)\n            p = s[0:limit]\n            f = p.count('1')\n            p1 = s[limit:n]\n            lo = p1.count('1')\n            a.append(f - lo)\n        total = sum(a)\n        if total == 0:\n            print(0)\n        else:\n            f = [abs(total - 2 * a[i]) for i in range(n)]\n            print(min(f))\nexcept:\n    pass", "for ii in range(int(input())):\n    n = int(input())\n    l = []\n    (s, ss) = (0, 0)\n    for i in range(n):\n        sr = input()\n        (p, q) = (sr[:n // 2].count('1'), sr[n // 2:].count('1'))\n        l.append([p, q])\n        s += p\n        ss += q\n    if s == ss:\n        print('0')\n    else:\n        m = abs(s - ss)\n        for i in l:\n            k = abs(s - i[0] + i[1] - (ss - i[1] + i[0]))\n            if k < m:\n                m = k\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    f3 = []\n    for _ in range(n):\n        x = input()\n        f3.append(x[:n // 2].count('1') - x[n // 2:].count('1'))\n    s = sum(f3)\n    m = abs(s)\n    for i in f3:\n        m = min(m, abs(s - 2 * i))\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p1 = p2 = 0\n    pepper = []\n    for i in range(n):\n        pizza = input()\n        left = right = 0\n        for i in range(n // 2):\n            if pizza[i] == '1':\n                left += 1\n            if pizza[n - i - 1] == '1':\n                right += 1\n        p1 += left\n        p2 += right\n        pepper.append((left, right))\n    if p1 == p2:\n        print(0)\n    else:\n        result = abs(p1 - p2)\n        for (left, right) in pepper:\n            val = abs(p1 - p2 - 2 * (left - right))\n            if val < result:\n                result = val\n        print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p1 = 0\n    p2 = 0\n    row1 = list()\n    row2 = list()\n    for __ in range(n):\n        s = input()\n        row1.append(sum(list(map(int, s[0:n // 2]))))\n        row2.append(sum(list(map(int, s[n // 2:]))))\n    p1 = sum(row1)\n    p2 = sum(row2)\n    diff = abs(p1 - p2)\n    if diff == 0:\n        print(0)\n    else:\n        for __ in range(n):\n            diff = min(diff, abs(p1 - row1[__] + row2[__] - p2 + row2[__] - row1[__]))\n        print(diff)", "T = int(input())\nfor i in range(T):\n    l = []\n    p1 = 0\n    p2 = 0\n    N = int(input())\n    for j in range(N):\n        s = input()\n        l.append(s)\n        p1 += s[:N // 2].count('1')\n        p2 += s[N // 2:].count('1')\n    m = abs(p1 - p2)\n    for j in range(N):\n        a = l[j][:(N + 1) // 2].count('1')\n        b = l[j][(N + 1) // 2:].count('1')\n        p_1 = p1 - a + b\n        p_2 = p2 - b + a\n        m = min(m, abs(p_1 - p_2))\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    inp = []\n    for _ in range(n):\n        inp.append(list(input()))\n    m = len(inp)\n    n = len(inp[0])\n    p1 = 0\n    p2 = 0\n    ar1 = []\n    ar2 = []\n    for i in range(m):\n        left = 0\n        right = 0\n        for j in range(n):\n            if j <= n // 2 - 1:\n                if inp[i][j] == '1':\n                    left += 1\n            elif inp[i][j] == '1':\n                right += 1\n        ar1.append(left)\n        ar2.append(right)\n    mini = abs(sum(ar1) - sum(ar2))\n    if mini == 0:\n        print(mini)\n    else:\n        for i in range(len(ar1)):\n            (ar1[i], ar2[i]) = (ar2[i], ar1[i])\n            minv = abs(sum(ar1) - sum(ar2))\n            if minv <= mini:\n                mini = minv\n            (ar1[i], ar2[i]) = (ar2[i], ar1[i])\n        print(mini)", "import numpy as np\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    rowDiffs = []\n    for n in range(N):\n        s = input()\n        half1 = s[:N // 2]\n        half2 = s[N // 2:]\n        rowDiffs.append(half2.count('1') - half1.count('1'))\n    Diff = sum(rowDiffs)\n    absArr = [abs(i) for i in Diff - 2 * np.array(rowDiffs)]\n    ind = np.argmin(absArr)\n    ans = min(min(absArr), abs(Diff))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mat = []\n    for j in range(n):\n        s = list(input())\n        mat.append(s)\n    cnt = []\n    p1 = 0\n    p2 = 0\n    for j in range(n):\n        a = 0\n        b = 0\n        for k in range(len(mat[j])):\n            if k < n / 2 and mat[j][k] == '1':\n                a += 1\n                p1 += 1\n            elif k >= n / 2 and mat[j][k] == '1':\n                b += 1\n                p2 += 1\n        cnt.append([a, b])\n    minm = abs(p1 - p2)\n    for i in range(n):\n        minm = min(minm, abs(p1 - p2 - 2 * cnt[i][0] + 2 * cnt[i][1]))\n    print(minm)", "n = lambda : map(int, input().split())\nx = int(input())\nfor __ in range(x):\n    a = int(input())\n    d = []\n    e = []\n    for i in range(a):\n        b = input()\n        d.append(b[:a // 2].count('1'))\n        e.append(b[a // 2:].count('1'))\n    p = sum(d)\n    q = sum(e)\n    m = abs(p - q)\n    for i in range(a):\n        l = abs(p - d[i] + e[i] - (q - e[i] + d[i]))\n        if l < m:\n            m = l\n    print(m)", "import copy\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    c = []\n    r = []\n    for j in range(n):\n        f = input()\n        a.append(f)\n        b.append(f.count('1', 0, n // 2))\n        c.append(f.count('1', n // 2, n))\n    s = copy.deepcopy(a)\n    x = sum(b)\n    y = sum(c)\n    if x == y:\n        print(0)\n        continue\n    else:\n        for k in range(n):\n            a = copy.deepcopy(s)\n            b = []\n            c = []\n            a[k] = a[k][::-1]\n            for j in range(n):\n                b.append(a[j].count('1', 0, n // 2))\n                c.append(a[j].count('1', n // 2, n))\n            x = sum(b)\n            y = sum(c)\n            r.append(abs(x - y))\n    print(min(r))", "for _ in range(int(input())):\n    n = int(input())\n    q = []\n    for i in range(n):\n        d = input()\n        q.append(d)\n    p1 = 0\n    p2 = 0\n    d = -1\n    for i in range(n):\n        p1 += q[i][:n // 2].count('1')\n        p2 += q[i][n // 2:].count('1')\n    w = abs(p1 - p2)\n    for i in range(n):\n        a = q[i][:n // 2].count('1')\n        b = q[i][n // 2:].count('1')\n        w = min(w, abs(p1 - 2 * (a - b) - p2))\n    print(w)", "import numpy as np\nfor _ in range(int(input())):\n    n = int(input())\n    m1 = []\n    m2 = []\n    (c1, c2) = ([], [])\n    for i in range(n):\n        temp = [int(x) for x in input()]\n        m1 = temp[0:n // 2]\n        m2 = temp[n // 2:]\n        c1.append(m1.count(1))\n        c2.append(m2.count(1))\n    if sum(c1) - sum(c2) == 0:\n        print('0')\n    else:\n        ans = abs(sum(c1) - sum(c2))\n        for i in range(n):\n            if c1[i] != c2[i]:\n                s = abs(sum(c1) - c1[i] + c2[i] - (sum(c2) + c1[i] - c2[i]))\n                ans = min(s, ans)\n        print(ans)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    x = 0\n    y = 0\n    l = []\n    for j in range(n):\n        a = list(map(int, input()))\n        l.append(a)\n        for i in range(n // 2):\n            x += a[i]\n        for i in range(n // 2, n):\n            y += a[i]\n    p = abs(x - y)\n    for j in range(n):\n        u = 0\n        v = 0\n        for i in range(n // 2):\n            u += l[j][i]\n        for i in range(n // 2, n):\n            v += l[j][i]\n        if p > abs(x - y + 2 * v - 2 * u):\n            p = abs(x - y + 2 * v - 2 * u)\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    q = []\n    for i in range(n):\n        d = input()\n        q.append(d)\n    p1 = 0\n    p2 = 0\n    d = -1\n    for i in range(n):\n        p1 += q[i][:n // 2].count('1')\n        p2 += q[i][n // 2:].count('1')\n    w = abs(p1 - p2)\n    for i in range(n):\n        a = q[i][:n // 2].count('1')\n        b = q[i][n // 2:].count('1')\n        w = min(w, abs(p1 - 2 * (a - b) - p2))\n    print(w)"]