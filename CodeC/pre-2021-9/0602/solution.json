["for t in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    k = 0\n    a = 0\n    p = 1\n    l = 1\n    while n != k and m != a:\n        if f[k] < c[a]:\n            if p == 0:\n                l += 1\n            k += 1\n            p = 1\n        else:\n            if p:\n                l += 1\n            a += 1\n            p = 0\n    print(l)", "import sys\nfrom math import gcd, sqrt, ceil, log\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    farr = li()\n    carr = li()\n    lst = []\n    lst.append([0, 1])\n    for a in farr:\n        lst.append([a, 1])\n    for b in carr:\n        lst.append([b, 2])\n    lst.sort()\n    cnt = 0\n    for i in range(1, len(lst)):\n        if lst[i][1] != lst[i - 1][1]:\n            cnt += 1\n    print(cnt)", "import sys\nfrom math import gcd, sqrt, ceil, log\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    farr = li()\n    carr = li()\n    lst = []\n    lst.append([0, 1])\n    for a in farr:\n        lst.append([a, 1])\n    for b in carr:\n        lst.append([b, 2])\n    lst.sort()\n    cnt = 0\n    for i in range(1, len(lst)):\n        if lst[i][1] != lst[i - 1][1]:\n            cnt += 1\n    print(cnt)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    fli = list(map(int, input().split()))\n    cli = list(map(int, input().split()))\n    lst = list()\n    lst.append([0, 1])\n    for a in fli:\n        lst.append([a, 1])\n    for b in cli:\n        lst.append([b, 2])\n    lst.sort()\n    cnt = 0\n    for i in range(1, len(lst)):\n        if lst[i][1] != lst[i - 1][1]:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    start = 0\n    ch = 0\n    ans = 0\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if foot[i] < cric[j]:\n            if ch == 1:\n                ans += 1\n            i += 1\n            ch = 0\n        else:\n            if ch == 0:\n                ans += 1\n            j += 1\n            ch = 1\n    if i < n and ch == 1:\n        ans += 1\n    elif j < m and ch == 0:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(lambda x: 2 * int(x), input().split()))\n    c = list(map(lambda x: 2 * int(x) + 1, input().split()))\n    fc = sorted(f + c, key=int)\n    k = 0\n    c = 0\n    for j in fc:\n        if (j - k) % 2 == 1:\n            c += 1\n        k = j\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    chan = 1\n    ans = 0\n    te = [(i, 1) for i in foot] + [(j, 2) for j in cric]\n    te = sorted(te)\n    for i in te:\n        if i[1] != chan:\n            ans += 1\n            chan = i[1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    start = 0\n    channel = 0\n    ans = 0\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if foot[i] < cric[j]:\n            if channel == 1:\n                ans += 1\n            i += 1\n            channel = 0\n        else:\n            if channel == 0:\n                ans += 1\n            j += 1\n            channel = 1\n    if i < n and channel == 1:\n        ans += 1\n    elif j < m and channel == 0:\n        ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    start = 0\n    channel = 0\n    ans = 0\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if foot[i] < cric[j]:\n            if channel == 1:\n                ans += 1\n            i += 1\n            channel = 0\n        else:\n            if channel == 0:\n                ans += 1\n            j += 1\n            channel = 1\n    if i < n and channel == 1:\n        ans += 1\n    elif j < m and channel == 0:\n        ans += 1\n    print(ans)", "a = int(input())\nwhile a != 0:\n    ans = 0\n    now = 1\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    f2 = list(map(int, input().split()))\n    timeline = [(i, 1) for i in f1] + [(i, 2) for i in f2]\n    timeline = sorted(timeline)\n    for i in timeline:\n        if i[1] != now:\n            ans = ans + 1\n            now = i[1]\n    print(ans)\n    a = a - 1", "a = int(input())\nwhile a != 0:\n    ans = 0\n    now = 1\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    f2 = list(map(int, input().split()))\n    timeline = [(i, 1) for i in f1] + [(i, 2) for i in f2]\n    timeline = sorted(timeline)\n    for i in timeline:\n        if i[1] != now:\n            ans = ans + 1\n            now = i[1]\n    print(ans)\n    a = a - 1", "import collections as clts\nimport math\nimport heapq\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return int(x / gcd(x, y) * y)\nfor _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    switches = 0\n    current = 'F'\n    while True:\n        if i <= N - 1 and j <= M - 1 and (F[i] > C[j]) and (current == 'F'):\n            switches += 1\n            current = 'C'\n        if i <= N - 1 and j <= M - 1 and (C[j] > F[i]) and (current == 'C'):\n            switches += 1\n            current = 'F'\n        if current == 'F' and i <= N - 1:\n            i += 1\n        if current == 'C' and j <= M - 1:\n            j += 1\n        if i == N or j == M:\n            break\n    if j <= M - 1 and current == 'F':\n        switches += 1\n    if i <= N - 1 and current == 'C':\n        switches += 1\n    print(switches)", "import collections as clts\nimport math\nimport heapq\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return int(x / gcd(x, y) * y)\nfor _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    switches = 0\n    current = 'F'\n    while True:\n        if i <= N - 1 and j <= M - 1 and (F[i] > C[j]) and (current == 'F'):\n            switches += 1\n            current = 'C'\n        if i <= N - 1 and j <= M - 1 and (C[j] > F[i]) and (current == 'C'):\n            switches += 1\n            current = 'F'\n        if current == 'F' and i <= N - 1:\n            i += 1\n        if current == 'C' and j <= M - 1:\n            j += 1\n        if i == N or j == M:\n            break\n    if j <= M - 1 and current == 'F':\n        switches += 1\n    if i <= N - 1 and current == 'C':\n        switches += 1\n    print(switches)", "import collections as clts\nimport math\nimport heapq\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return int(x / gcd(x, y) * y)\nfor _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    switches = 0\n    current = 'F'\n    while True:\n        if i <= N - 1 and j <= M - 1 and (F[i] > C[j]) and (current == 'F'):\n            switches += 1\n            current = 'C'\n        if i <= N - 1 and j <= M - 1 and (C[j] > F[i]) and (current == 'C'):\n            switches += 1\n            current = 'F'\n        if current == 'F' and i <= N - 1:\n            i += 1\n        if current == 'C' and j <= M - 1:\n            j += 1\n        if i == N or j == M:\n            break\n    if j <= M - 1 and current == 'F':\n        switches += 1\n    if i <= N - 1 and current == 'C':\n        switches += 1\n    print(switches)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    now = 1\n    ans = 0\n    timeline = [(i, 1) for i in foot] + [(i, 2) for i in cric]\n    timeline = sorted(timeline, key=lambda x: x[0])\n    for curr in timeline:\n        if curr[1] != now:\n            ans += 1\n            now = curr[1]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    now = 1\n    ans = 0\n    timeline = [(i, 1) for i in foot] + [(i, 2) for i in cric]\n    timeline = sorted(timeline, key=lambda x: x[0])\n    for curr in timeline:\n        if curr[1] != now:\n            ans += 1\n            now = curr[1]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    now = 1\n    ans = 0\n    timeline = [(i, 1) for i in foot] + [(i, 2) for i in cric]\n    timeline = sorted(timeline, key=lambda x: x[0])\n    for curr in timeline:\n        if curr[1] != now:\n            ans += 1\n            now = curr[1]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    now = 1\n    ans = 0\n    timeline = [(i, 1) for i in foot] + [(i, 2) for i in cric]\n    timeline = sorted(timeline, key=lambda x: x[0])\n    for curr in timeline:\n        if curr[1] != now:\n            ans += 1\n            now = curr[1]\n    print(ans)", "def integer_list():\n    return list(map(int, input().split()))\n\ndef main():\n    f.sort(reverse=True)\n    c.sort(reverse=True)\n    swich = 0\n    s = True\n    while f and c:\n        if f[-1] < c[-1] and s:\n            f.pop()\n        elif f[-1] <= c[-1] and (not s):\n            f.pop()\n            s = not s\n            swich += 1\n        elif c[-1] < f[-1] and (not s):\n            c.pop()\n        elif c[-1] <= f[-1] and s:\n            c.pop()\n            s = not s\n            swich += 1\n    if f and (not s):\n        swich += 1\n    if c and s:\n        swich += 1\n    print(swich)\nt = int(input())\nfor _ in range(t):\n    (fn, cm) = integer_list()\n    f = integer_list()\n    c = integer_list()\n    main()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef main():\n    f.sort(reverse=True)\n    c.sort(reverse=True)\n    swich = 0\n    s = True\n    while f and c:\n        if f[-1] < c[-1] and s:\n            f.pop()\n        elif f[-1] <= c[-1] and (not s):\n            f.pop()\n            s = not s\n            swich += 1\n        elif c[-1] < f[-1] and (not s):\n            c.pop()\n        elif c[-1] <= f[-1] and s:\n            c.pop()\n            s = not s\n            swich += 1\n    if f and (not s):\n        swich += 1\n    if c and s:\n        swich += 1\n    print(swich)\nt = int(input())\nfor _ in range(t):\n    (fn, cm) = integer_list()\n    f = integer_list()\n    c = integer_list()\n    main()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef main():\n    f.sort(reverse=True)\n    c.sort(reverse=True)\n    swich = 0\n    s = True\n    while f and c:\n        if f[-1] < c[-1] and s:\n            f.pop()\n        elif f[-1] <= c[-1] and (not s):\n            f.pop()\n            s = not s\n            swich += 1\n        elif c[-1] < f[-1] and (not s):\n            c.pop()\n        elif c[-1] <= f[-1] and s:\n            c.pop()\n            s = not s\n            swich += 1\n    if f and (not s):\n        swich += 1\n    if c and s:\n        swich += 1\n    print(swich)\nt = int(input())\nfor _ in range(t):\n    (fn, cm) = integer_list()\n    f = integer_list()\n    c = integer_list()\n    main()", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = {}\n    ft = 0\n    for i in f:\n        d[i] = 0\n    for i in c:\n        d[i] = 1\n    l = list(d.keys())\n    l.sort()\n    count = 0\n    for i in l:\n        if d[i] == ft:\n            pass\n        else:\n            count += 1\n            ft = d[i]\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = {}\n    ft = 0\n    for i in f:\n        d[i] = 0\n    for i in c:\n        d[i] = 1\n    l = list(d.keys())\n    l.sort()\n    count = 0\n    for i in l:\n        if d[i] == ft:\n            pass\n        else:\n            count += 1\n            ft = d[i]\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a = [(it, 0) for it in f]\n    a += [(it, 1) for it in c]\n    a.sort()\n    curr = 0\n    turn = 0\n    for (event, sport) in a:\n        if sport != curr:\n            turn += 1\n            curr = sport\n    print(turn)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a = [(it, 0) for it in f]\n    a += [(it, 1) for it in c]\n    a.sort()\n    curr = 0\n    turn = 0\n    for (event, sport) in a:\n        if sport != curr:\n            turn += 1\n            curr = sport\n    print(turn)", "for cases in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    d = {}\n    current_pos = 'f'\n    change = 0\n    for i in range(n):\n        d[arr[i]] = 'f'\n    for j in range(m):\n        d[cric[j]] = 'c'\n        arr.append(cric[j])\n    arr.sort()\n    for ele in arr:\n        if d[ele] != current_pos:\n            change += 1\n            current_pos = d[ele]\n    print(change)", "n = int(input())\nfor i in range(n):\n    (f, c) = map(int, input().split())\n    foo = list(map(int, input().split()))\n    cri = list(map(int, input().split()))\n    count = 0\n    e = {}\n    for i in range(f):\n        e[foo[i]] = 0\n    for i in range(c):\n        e[cri[i]] = 1\n    e = dict(sorted(e.items(), key=lambda x: x[0]))\n    keys = list(e.keys())\n    temp = 0\n    for i in range(len(keys)):\n        if e[keys[i]] != temp:\n            temp = e[keys[i]]\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    fb = list(map(int, input().split()))\n    ct = list(map(int, input().split()))\n    first = 'fb'\n    count = 0\n    for i in range(N + M):\n        if fb != [] and ct != []:\n            if fb[0] < ct[0]:\n                present = 'fb'\n                fb.pop(0)\n            else:\n                present = 'ct'\n                ct.pop(0)\n        elif fb == []:\n            present = 'ct'\n        elif ct == []:\n            present = 'fb'\n        if first != present:\n            first = present\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    fb = list(map(int, input().split()))\n    ct = list(map(int, input().split()))\n    first = 'fb'\n    count = 0\n    for i in range(N + M):\n        if fb != [] and ct != []:\n            if fb[0] < ct[0]:\n                present = 'fb'\n                fb.pop(0)\n            else:\n                present = 'ct'\n                ct.pop(0)\n        elif fb == []:\n            present = 'ct'\n            ct.pop(0)\n        elif ct == []:\n            present = 'fb'\n            fb.pop(0)\n        if first != present:\n            first = present\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    fb = list(map(int, input().split()))\n    ct = list(map(int, input().split()))\n    first = 'fb'\n    count = 0\n    for i in range(N + M):\n        if fb != [] and ct != []:\n            if fb[0] < ct[0]:\n                present = 'fb'\n                fb.pop(0)\n            else:\n                present = 'ct'\n                ct.pop(0)\n        elif fb == []:\n            present = 'ct'\n            ct.pop(0)\n        elif ct == []:\n            present = 'fb'\n            fb.pop(0)\n        if first != present:\n            first = present\n            count += 1\n    print(count)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    ftb = list(map(int, input().split()))\n    crc = list(map(int, input().split()))\n    d = {}\n    count = 0\n    for i in range(n):\n        d[ftb[i]] = 'f'\n    for i in range(m):\n        d[crc[i]] = 'c'\n    d = dict(sorted(d.items(), key=lambda x: x[0]))\n    temp = 'f'\n    dkeys = list(d.keys())\n    for i in range(len(d)):\n        if d[dkeys[i]] != temp:\n            count += 1\n            temp = d[dkeys[i]]\n    print(count)", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    fb = list(map(int, input().split()))\n    ct = list(map(int, input().split()))\n    first = 'fb'\n    count = 0\n    for i in range(N + M):\n        if fb != [] and ct != []:\n            if fb[0] < ct[0]:\n                present = 'fb'\n                fb.pop(0)\n            else:\n                present = 'ct'\n                ct.pop(0)\n        elif fb == []:\n            present = 'ct'\n            ct.pop(0)\n        elif ct == []:\n            present = 'fb'\n            fb.pop(0)\n        if first != present:\n            first = present\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    pre = 'F'\n    count = 0\n    for i in range(n + m):\n        if f != [] and c != []:\n            if f[0] < c[0]:\n                imp = 'F'\n                f.pop(0)\n            else:\n                imp = 'C'\n                c.pop(0)\n        elif f == []:\n            imp = 'C'\n            c.pop(0)\n        elif c == []:\n            imp = 'F'\n            f.pop(0)\n        if pre != imp:\n            pre = imp\n            count += 1\n    print(count)", "try:\n    from debug import debug, timer\nexcept ImportError:\n    pass\nfrom sys import stdin\ninput = stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef getvals():\n    while True:\n        yield from input().split()\n\ndef tri(n):\n    return n * (n + 1) // 2\n\ndef smallest_first(m, n):\n    return (min(m, n), max(m, n))\nfrom itertools import groupby\n\ndef solve(*args):\n    (n, m, f, c) = args\n    ans = sorted([(0, 0)] + [(0, x) for x in f] + [(1, x) for x in c], key=lambda y: y[1])\n    return len([x for (x, y) in groupby([y for (y, z) in ans])]) - 1\n\ndef do_codechef():\n    for t in rii():\n        (n, m) = mii()\n        f = lmii()\n        c = lmii()\n        print(solve(n, m, f, c))\ndo_codechef()\nexit()", "for t in range(int(input())):\n    (nF, nC) = map(int, input().split())\n    F = [int(i) for i in input().split()]\n    C = [int(i) for i in input().split()]\n    present = 'F'\n    count = 0\n    for i in range(nF + nC):\n        if F != [] and C != []:\n            if F[0] < C[0]:\n                imp = 'F'\n                F.pop(0)\n            else:\n                imp = 'C'\n                C.pop(0)\n        elif F == []:\n            imp = 'C'\n            C.pop(0)\n        elif C == []:\n            imp = 'F'\n            F.pop(0)\n        if present != imp:\n            present = imp\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (f, c, pf, pc, prev) = (list(map(int, input().split())), list(map(int, input().split())), [0 for _ in range(0, n)], [1 for _ in range(0, m)], 0)\n    (xf, xc) = (dict(zip(f, pf)), dict(zip(c, pc)))\n    xc.update(xf)\n    (y, x) = (sorted(f + c), 0)\n    for i in y:\n        if xc[i] != prev:\n            (x, prev) = (x + 1, xc[i])\n    print(x)", "t = int(input())\nwhile t != 0:\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    switches = 0\n    chanel = 0\n    event = []\n    for i in foot:\n        event.append([i, 0])\n    for j in cric:\n        event.append([j, 1])\n    event = sorted(event, key=lambda x: x[0])\n    i = 0\n    while i < len(event):\n        if event[i][1] != chanel:\n            switches += 1\n            chanel = 1 - chanel\n        i += 1\n    print(switches)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    switches = 0\n    chanel = 0\n    event = []\n    for i in foot:\n        event.append([i, 0])\n    for j in cric:\n        event.append([j, 1])\n    event = sorted(event, key=lambda x: x[0])\n    i = 0\n    while i < len(event):\n        if event[i][1] != chanel:\n            switches += 1\n            chanel = 1 - chanel\n        i += 1\n    print(switches)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (n, m) = list(map(int, input().split()))\n    foot = list(map(int, input().split()))\n    cric = list(map(int, input().split()))\n    switches = 0\n    chanel = 0\n    event = []\n    for i in foot:\n        event.append([i, 0])\n    for j in cric:\n        event.append([j, 1])\n    event = sorted(event, key=lambda x: x[0])\n    i = 0\n    while i < len(event):\n        if event[i][1] != chanel:\n            switches += 1\n            chanel = 1 - chanel\n        i += 1\n    print(switches)\n    t -= 1", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    football = list(map(int, input().split()))\n    cricket = list(map(int, input().split()))\n    count = 0\n    f = 0\n    c = 0\n    curren = 'F'\n    while f < N and c < M:\n        if football[f] < cricket[c]:\n            if curren != 'F':\n                count += 1\n                curren = 'F'\n            f += 1\n        elif cricket[c] < football[f]:\n            if curren != 'C':\n                count += 1\n                curren = 'C'\n            c += 1\n    if f != N and curren == 'C':\n        count += 1\n    if c != M and curren == 'F':\n        count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = 0\n    if f[0] < c[0]:\n        curr = 0\n        i = 1\n        j = 0\n    else:\n        ans += 1\n        curr = 1\n        i = 0\n        j = 1\n    while i < n and j < m:\n        if f[i] < c[j]:\n            if curr == 1:\n                ans += 1\n            curr = 0\n            i += 1\n        elif c[j] < f[i]:\n            if curr == 0:\n                ans += 1\n            curr = 1\n            j += 1\n    if i < n:\n        if curr == 1:\n            ans += 1\n    elif curr == 0:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append((f[i], 'f'))\n    for j in range(m):\n        l.append((c[j], 'c'))\n    prev = 'f'\n    l.sort()\n    c = 0\n    for i in range(n + m):\n        try:\n            if l[i][1] != prev:\n                c += 1\n        except IndexError:\n            pass\n        prev = l[i][1]\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    Lf = [int(x) for x in input().split()]\n    Lc = [int(x) for x in input().split()]\n    k = 0\n    f = 0\n    c = 0\n    current = 'F'\n    while f < n and c < m:\n        if Lf[f] < Lc[c]:\n            if current != 'F':\n                k += 1\n                current = 'F'\n            f += 1\n        elif Lc[c] < Lf[f]:\n            if current != 'C':\n                k += 1\n                current = 'C'\n            c += 1\n    if f != n and current == 'C':\n        k += 1\n    if c != m and current == 'F':\n        k += 1\n    print(k)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    Lf = [int(x) for x in input().split()]\n    Lc = [int(x) for x in input().split()]\n    k = 0\n    f = 0\n    c = 0\n    current = 'F'\n    while f < n and c < m:\n        if Lf[f] < Lc[c]:\n            if current != 'F':\n                k += 1\n                current = 'F'\n            f += 1\n        elif Lc[c] < Lf[f]:\n            if current != 'C':\n                k += 1\n                current = 'C'\n            c += 1\n    if f != n and current == 'C':\n        k += 1\n    if c != m and current == 'F':\n        k += 1\n    print(k)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flst = list(map(int, input().split()))\n    clst = list(map(int, input().split()))\n    s = 0\n    d = {}\n    (a, b) = (0, 0)\n    for i in range(len(flst) + len(clst)):\n        try:\n            if flst[a] < clst[b]:\n                d[flst[a]] = 'f'\n                a += 1\n            else:\n                d[clst[b]] = 'c'\n                b += 1\n        except:\n            if len(flst) == a:\n                for i in clst[b:]:\n                    d[i] = 'c'\n            else:\n                for i in flst[a:]:\n                    d[i] = 'f'\n            break\n    prev = 'f'\n    for i in d:\n        if d[i] != prev:\n            s += 1\n            prev = d[i]\n    print(s)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    (n, m) = M()\n    f = L()\n    c = L()\n    arr = [[i, 0] for i in f] + [[i, 1] for i in c]\n    arr.sort(key=lambda x: x[0])\n    k = 0\n    ans = 0\n    for (i, v) in arr:\n        if v != k:\n            ans += 1\n            k ^= 1\n    print(ans)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    football = list(map(int, input().split()))\n    cricket = list(map(int, input().split()))\n    count = 0\n    f = 0\n    c = 0\n    curren = 'F'\n    while f < N and c < M:\n        if football[f] < cricket[c]:\n            if curren != 'F':\n                count += 1\n                curren = 'F'\n            f += 1\n        elif cricket[c] < football[f]:\n            if curren != 'C':\n                count += 1\n                curren = 'C'\n            c += 1\n    if f != N and curren == 'C':\n        count += 1\n    if c != M and curren == 'F':\n        count += 1\n    print(count)", "T = int(input())\nfor tj in range(T):\n    (N, M) = list(map(int, input().split()))\n    Football = list(map(int, input().split()))\n    Cricket = list(map(int, input().split()))\n    controller = 0\n    count = 0\n    i = 0\n    j = 0\n    while i < N and j < M:\n        if Cricket[j] < Football[i]:\n            if controller == 0:\n                controller = 1\n                count += 1\n            j += 1\n        elif Football[i] < Cricket[j]:\n            if controller == 1:\n                controller = 0\n                count += 1\n            i += 1\n    if i < N and controller == 1:\n        count += 1\n    elif j < M and controller == 0:\n        count += 1\n    print(count)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    start = 'football'\n    count = 0\n    i = j = 0\n    while True:\n        if start == 'football':\n            if c[i] < f[j]:\n                start = 'cricket'\n                count += 1\n            else:\n                j += 1\n        elif f[j] < c[i]:\n            start = 'football'\n            count += 1\n        else:\n            i += 1\n        if i == m or j == n:\n            print(count + 1)\n            break", "def solve(n, m, football, cricket):\n    switches = 0\n    football_bool = True\n    f_index = 0\n    c_index = 0\n    while f_index < n and c_index < m:\n        if football[f_index] < cricket[c_index]:\n            if not football_bool:\n                switches += 1\n            football_bool = True\n            f_index += 1\n        else:\n            if football_bool:\n                switches += 1\n            c_index += 1\n            football_bool = False\n    if f_index < n and (not football_bool) or (c_index < m and football_bool):\n        switches += 1\n    return switches\n\ndef main():\n    for _ in range(int(input())):\n        (n, m) = map(int, input().split())\n        football = list(map(int, input().split()))\n        cricket = list(map(int, input().split()))\n        print(solve(n, m, football, cricket))\nmain()", "def hs(s, t):\n    g = 0\n    a = 0\n    (i, j) = (0, 0)\n    while i < len(s) and j < len(t):\n        if s[i] < t[j]:\n            if g == 1:\n                a = a + 1\n                g = 0\n            i = i + 1\n        else:\n            if g == 0:\n                a = a + 1\n                g = 1\n            j = j + 1\n    if i == len(s):\n        a = a + 1\n    if j == len(t):\n        a = a + 1\n    return a\nt = int(input())\nfor _ in range(t):\n    (f, c) = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    print(hs(s, t))", "def hs(s, t):\n    g = 0\n    a = 0\n    (i, j) = (0, 0)\n    while i < len(s) and j < len(t):\n        if s[i] < t[j]:\n            if g == 1:\n                a = a + 1\n                g = 0\n            i = i + 1\n        else:\n            if g == 0:\n                a = a + 1\n                g = 1\n            j = j + 1\n    if i == len(s):\n        a = a + 1\n    if j == len(t):\n        a = a + 1\n    return a\nt = int(input())\nfor _ in range(t):\n    (f, c) = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    print(hs(s, t))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    if 0 in l1 or 0 in l2:\n        continue\n    c = 0\n    flag = 0\n    sm = l1[0]\n    ptr1 = 0\n    ptr2 = 0\n    while ptr1 < n and ptr2 < m:\n        if l1[ptr1] < l2[ptr2]:\n            if flag == 1:\n                c = c + 1\n                flag = 0\n            ptr1 = ptr1 + 1\n        else:\n            if flag == 0:\n                c = c + 1\n                flag = 1\n            ptr2 = ptr2 + 1\n    if ptr1 < n and flag == 1:\n        c = c + 1\n    elif ptr2 < m and flag == 0:\n        c = c + 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    if 0 in l1 or 0 in l2:\n        continue\n    c = 0\n    flag = 0\n    sm = l1[0]\n    ptr1 = 0\n    ptr2 = 0\n    while ptr1 < n and ptr2 < m:\n        if l1[ptr1] < l2[ptr2]:\n            if flag == 1:\n                c = c + 1\n                flag = 0\n            ptr1 = ptr1 + 1\n        else:\n            if flag == 0:\n                c = c + 1\n                flag = 1\n            ptr2 = ptr2 + 1\n    if ptr1 < n and flag == 1:\n        c = c + 1\n    elif ptr2 < m and flag == 0:\n        c = c + 1\n    print(c)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    l = [(0, 1)]\n    for i in f:\n        l.append((i, 1))\n    for i in c:\n        l.append((i, 2))\n    l.sort()\n    ans = 0\n    for i in range(1, n + m + 1):\n        if l[i][1] != l[i - 1][1]:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 'f'\n    d = 0\n    x = y = 0\n    while True:\n        if c == 'f':\n            if b[y] < a[x]:\n                d += 1\n                c = 'c'\n            else:\n                x += 1\n        elif a[x] < b[y]:\n            d += 1\n            c = 'f'\n        else:\n            y += 1\n        if x == n or y == m:\n            print(d + 1)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 'f'\n    d = 0\n    x = y = 0\n    while True:\n        if c == 'f':\n            if b[y] < a[x]:\n                d += 1\n                c = 'c'\n            else:\n                x += 1\n        elif a[x] < b[y]:\n            d += 1\n            c = 'f'\n        else:\n            y += 1\n        if x == n or y == m:\n            print(d + 1)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 'f'\n    d = 0\n    x = y = 0\n    while True:\n        if c == 'f':\n            if b[y] < a[x]:\n                d += 1\n                c = 'c'\n            else:\n                x += 1\n        elif a[x] < b[y]:\n            d += 1\n            c = 'f'\n        else:\n            y += 1\n        if x == n or y == m:\n            print(d + 1)\n            break", "try:\n    from sys import stdin, stdout\n    rl = lambda : stdin.readline()\n    wl = lambda s: stdout.write(s)\n    tc = int(rl())\n    for _ in range(tc):\n        (n, m) = map(int, rl().split())\n        F = list(map(int, rl().split()))\n        C = list(map(int, rl().split()))\n        r = f = c = p = 0\n        while f < n and c < m:\n            if F[f] < C[c]:\n                if p == 1:\n                    p = 0\n                    r += 1\n                f += 1\n            else:\n                if p == 0:\n                    p = 1\n                    r += 1\n                c += 1\n        wl(str(r + 1) + '\\n')\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = f + c\n    d.sort()\n    x = 0\n    z = {}\n    for i in range(n):\n        z[f[i]] = 1\n    for i in range(m):\n        z[c[i]] = 0\n    for i in range(len(d)):\n        if z[d[i]] == 0 and x % 2 == 0:\n            x += 1\n        if z[d[i]] == 1 and x % 2 == 1:\n            x += 1\n    print(x)", "import sys\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = [int(x) for x in sys.stdin.readline().split()]\n    c = [int(x) for x in sys.stdin.readline().split()]\n    o = 0\n    s = 'f'\n    while len(c) != 0 and len(f) != 0:\n        if c[0] < f[0]:\n            c.pop(0)\n            if s == 'f':\n                o += 1\n                s = 'c'\n        else:\n            f.pop(0)\n            if s == 'c':\n                o += 1\n                s = 'f'\n    print(o + 1)", "import sys\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = [int(x) for x in sys.stdin.readline().split()]\n    c = [int(x) for x in sys.stdin.readline().split()]\n    o = 0\n    s = 'f'\n    while len(c) != 0 and len(f) != 0:\n        if c[0] < f[0]:\n            c.pop(0)\n            if s == 'f':\n                o += 1\n                s = 'c'\n        else:\n            f.pop(0)\n            if s == 'c':\n                o += 1\n                s = 'f'\n    print(o + 1)", "import heapq\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    n1 = list(map(int, input().split()))\n    m1 = list(map(int, input().split()))\n    ans = 1\n    football = True\n    heapq.heapify(n1)\n    heapq.heapify(m1)\n    while n1 and m1:\n        if n1[0] < m1[0]:\n            mi = heapq.heappop(n1)\n            if not football:\n                ans += 1\n                football = True\n        else:\n            mi = heapq.heappop(m1)\n            if football:\n                ans += 1\n                football = False\n    print(ans)", "import heapq\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    n1 = list(map(int, input().split()))\n    m1 = list(map(int, input().split()))\n    ans = 1\n    football = True\n    heapq.heapify(n1)\n    heapq.heapify(m1)\n    while n1 and m1:\n        if n1[0] < m1[0]:\n            mi = heapq.heappop(n1)\n            if not football:\n                ans += 1\n                football = True\n        else:\n            mi = heapq.heappop(m1)\n            if football:\n                ans += 1\n                football = False\n    print(ans)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split(' '))\n    w = list(map(int, input().split(' ')))\n    e = list(map(int, input().split(' ')))\n    z = 0\n    f = 0\n    c = 0\n    p = 0\n    while f < n and c < q:\n        if w[f] < e[c]:\n            if p == 1:\n                p = 0\n                z += 1\n            f += 1\n        else:\n            if p == 0:\n                p = 1\n                z += 1\n            c += 1\n    print(str(z + 1))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    i = 0\n    j = 0\n    curr = 'F'\n    res = 0\n    while i < n and j < m:\n        if f[i] < c[j]:\n            if curr == 'C':\n                res += 1\n                curr = 'F'\n            i += 1\n        elif f[i] == c[j]:\n            if curr == 'C':\n                res += 1\n                curr = 'F'\n            elif curr == 'F':\n                res += 1\n                curr = 'C'\n            i += 1\n            j += 1\n        else:\n            if curr == 'F':\n                res += 1\n                curr = 'C'\n            j += 1\n    if i < n:\n        if curr == 'C':\n            res += 1\n    if j < m:\n        if curr == 'F':\n            res += 1\n    print(res)", "for _ in range(int(input())):\n    (noOfFoot, noOfCric) = map(int, input().split(' '))\n    footImpEvents = list(map(int, input().split(' ')))\n    cricImpEvents = list(map(int, input().split(' ')))\n    r = f = c = p = 0\n    while f < noOfFoot and c < noOfCric:\n        if footImpEvents[f] < cricImpEvents[c]:\n            if p == 1:\n                p = 0\n                r += 1\n            f += 1\n        else:\n            if p == 0:\n                p = 1\n                r += 1\n            c += 1\n    print(str(r + 1))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    arr3 = arr1 + arr2\n    c = 1\n    switches = 0\n    for i in range(n):\n        arr1[i] = (arr1[i], 1)\n    for j in range(m):\n        arr2[j] = (arr2[j], 2)\n    arr3 = arr1 + arr2\n    arr3.sort()\n    for i in arr3:\n        if i[1] != c:\n            switches += 1\n            c = i[1]\n    print(switches)", "T = int(input())\nfor i in range(T):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    D = F + C\n    D.sort()\n    val = 0\n    F1 = {}\n    for i in range(N):\n        F1[F[i]] = 1\n    for i in range(M):\n        F1[C[i]] = 0\n    for i in range(len(D)):\n        if F1[D[i]] == 0 and val % 2 == 0:\n            val += 1\n        if F1[D[i]] == 1 and val % 2 == 1:\n            val += 1\n    print(val)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    d = {}\n    for j in l:\n        d[j] = 0\n    for j in t:\n        d[j] = 1\n    c = 0\n    f = 0\n    for j in sorted(d.keys()):\n        if d[j] == 0 and f == 1:\n            f = 0\n            c = c + 1\n        if d[j] == 1 and f == 0:\n            f = 1\n            c = c + 1\n    print(c)", "import heapq as hq\nT = int(input())\nc = []\nfor i in range(T):\n    [N, M] = [int(k) for k in input().split()]\n    a = input().split()\n    b = input().split()\n    for i in range(N):\n        hq.heappush(c, (int(a[i]), 1))\n    for i in range(M):\n        hq.heappush(c, (int(b[i]), 2))\n    w = 1\n    cnt = 0\n    for i in range(len(c)):\n        x = hq.heappop(c)\n        if x[1] != w:\n            cnt = cnt + 1\n            w = x[1]\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = i = j = 0\n    xd = 'f'\n    while i < n and j < m:\n        if f[i] < c[j]:\n            if xd != 'f':\n                ans += 1\n                xd = 'f'\n            i += 1\n        elif f[i] > c[j]:\n            if xd != 'c':\n                ans += 1\n                xd = 'c'\n            j += 1\n    print(ans + 1)", "def ans():\n    ans = i = j = p = 0\n    while i < n and j < m:\n        if f[i] < c[j]:\n            if p != 0:\n                p = 0\n                ans += 1\n            i += 1\n        else:\n            if p == 0:\n                p = 1\n                ans += 1\n            j += 1\n    print(ans + 1)\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans()", "tot = int(input())\nfor _ in range(tot):\n    (nf, nc) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    crick = set(map(int, input().split()))\n    ev = list(foot.union(crick))\n    ev.sort()\n    chan = 'foot'\n    s = 0\n    for i in ev:\n        if i in crick and chan != 'crick':\n            s += 1\n            chan = 'crick'\n        elif i in foot and chan != 'foot':\n            s += 1\n            chan = 'foot'\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    p = 1\n    c = 0\n    while i < n and j < m:\n        if a[i] < b[j]:\n            if p == 1:\n                i += 1\n                continue\n            else:\n                c += 1\n                p = 1\n                i += 1\n        elif p == 2:\n            j += 1\n            continue\n        else:\n            c += 1\n            p = 2\n            j += 1\n    print(c + 1)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    p = 1\n    c = 0\n    while i < n and j < m:\n        if a[i] < b[j]:\n            if p == 1:\n                i += 1\n                continue\n            else:\n                c += 1\n                p = 1\n                i += 1\n        elif p == 2:\n            j += 1\n            continue\n        else:\n            c += 1\n            p = 2\n            j += 1\n    print(c + 1)", "t = int(input())\nwhile t != 0:\n    (n, m) = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    fd = list(map(lambda x: (x, 'f'), f))\n    cd = list(map(lambda x: (x, 'c'), c))\n    main = fd + cd\n    main.sort()\n    toSwitch = 'c'\n    switches = 0\n    for i in range(len(main)):\n        if toSwitch == main[i][1]:\n            switches = switches + 1\n            if toSwitch == 'c':\n                toSwitch = 'f'\n            else:\n                toSwitch = 'c'\n    print(switches)\n    t = t - 1", "for _ in range(int(input())):\n    (nf, nc) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    crick = set(map(int, input().split()))\n    ev = list(foot.union(crick))\n    ev.sort()\n    chan = 'foot'\n    s = 0\n    for i in ev:\n        if i in crick and chan != 'crick':\n            s += 1\n            chan = 'crick'\n        elif i in foot and chan != 'foot':\n            s += 1\n            chan = 'foot'\n    print(s)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    cric = set(map(int, input().split()))\n    array = list(foot.union(cric))\n    array.sort()\n    temp = 'football'\n    count = 0\n    for i in array:\n        if i in cric and temp != 'cricket':\n            count += 1\n            temp = 'cricket'\n        elif i in foot and temp != 'football':\n            count += 1\n            temp = 'football'\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    p = 1\n    c = 0\n    while i < n and j < m:\n        if a[i] < b[j]:\n            if p == 1:\n                i += 1\n                continue\n            else:\n                c += 1\n                p = 1\n                i += 1\n        elif p == 2:\n            j += 1\n            continue\n        else:\n            c += 1\n            p = 2\n            j += 1\n    print(c + 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    cric = set(map(int, input().split()))\n    array = list(foot.union(cric))\n    array.sort()\n    temp = 'football'\n    count = 0\n    for i in array:\n        if i in cric and temp != 'cricket':\n            count += 1\n            temp = 'cricket'\n        elif i in foot and temp != 'football':\n            count += 1\n            temp = 'football'\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    cric = set(map(int, input().split()))\n    array = list(foot.union(cric))\n    array.sort()\n    temp = 'football'\n    count = 0\n    for i in array:\n        if i in cric and temp != 'cricket':\n            count += 1\n            temp = 'cricket'\n        elif i in foot and temp != 'football':\n            count += 1\n            temp = 'football'\n    print(count)", "try:\n    t = int(input())\n    for i in range(t):\n        (n, m) = [int(itm) for itm in input().split()]\n        ma = {}\n        f = [int(itm) for itm in input().split()]\n        c = [int(itm) for itm in input().split()]\n        for itm in f:\n            ma[itm] = 'F'\n        for itm in c:\n            ma[itm] = 'C'\n        mt = {0: 'F'}\n        for itm in sorted(ma.keys()):\n            mt[itm] = ma[itm]\n        check = 'F'\n        count = 0\n        for itm in mt.keys():\n            if mt[itm] != check:\n                count += 1\n                check = mt[itm]\n        print(count)\nexcept EOFError:\n    exit()", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    cric = set(map(int, input().split()))\n    array = list(foot.union(cric))\n    array.sort()\n    temp = 'football'\n    count = 0\n    for i in array:\n        if i in cric and temp != 'cricket':\n            count += 1\n            temp = 'cricket'\n        elif i in foot and temp != 'football':\n            count += 1\n            temp = 'football'\n    print(count)", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    foot = set(map(int, input().split()))\n    cric = set(map(int, input().split()))\n    array = list(foot.union(cric))\n    array.sort()\n    temp = 'football'\n    count = 0\n    for i in array:\n        if i in cric and temp != 'cricket':\n            count += 1\n            temp = 'cricket'\n        elif i in foot and temp != 'football':\n            count += 1\n            temp = 'football'\n    print(count)", "T = int(input())\nfor i in range(0, T):\n    (N, M) = map(int, input().split(' '))\n    array_FE = set(map(int, input().split(' ')))\n    array_CE = set(map(int, input().split(' ')))\n    array = list(array_FE.union(array_CE))\n    array.sort()\n    b = 'football'\n    c = 0\n    for event in array:\n        if event in array_CE and b != 'cricket':\n            c = c + 1\n            b = 'cricket'\n        elif event in array_FE and b != 'football':\n            c = c + 1\n            b = 'football'\n    print(c)", "def solve(A, n, B, m):\n    C = [(i, 0) for i in A]\n    C += [(i, 1) for i in B]\n    C.sort()\n    change = 0\n    curr = 0\n    for (tim, sport) in C:\n        if curr != sport:\n            change += 1\n        curr = sport\n    return change\nfor case in range(int(input())):\n    (n, m) = map(int, input().split())\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    ans = solve(F, n, C, m)\n    print(ans)", "def solve(A, n, B, m):\n    C = [(i, 0) for i in A]\n    C += [(i, 1) for i in B]\n    C.sort()\n    change = 0\n    curr = 0\n    for (tim, sport) in C:\n        if curr != sport:\n            change += 1\n        curr = sport\n    return change\nfor case in range(int(input())):\n    (n, m) = map(int, input().split())\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    ans = solve(F, n, C, m)\n    print(ans)", "t = int(input())\nfor z in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 0\n    count = 0\n    while i < n and j < m:\n        if f[i] < c[j]:\n            if k == 1:\n                k = 0\n                count += 1\n            i += 1\n        elif c[j] < f[i]:\n            if k == 0:\n                k = 1\n                count += 1\n            j += 1\n        else:\n            i += 1\n            j += 1\n    if i < n:\n        if k == 1:\n            k = 0\n            count += 1\n    if j < m:\n        if k == 0:\n            k = 1\n            count += 1\n    print(count)", "T = int(input())\nfor i in range(0, T):\n    (N, M) = map(int, input().split(' '))\n    array_FE = set(map(int, input().split(' ')))\n    array_CE = set(map(int, input().split(' ')))\n    array = list(array_FE.union(array_CE))\n    array.sort()\n    b = 'football'\n    c = 0\n    for event in array:\n        if event in array_CE and b != 'cricket':\n            c = c + 1\n            b = 'cricket'\n        elif event in array_FE and b != 'football':\n            c = c + 1\n            b = 'football'\n    print(c)", "T = int(input())\nfor i in range(0, T):\n    (N, M) = map(int, input().split(' '))\n    array_FE = set(map(int, input().split(' ')))\n    array_CE = set(map(int, input().split(' ')))\n    array = list(array_FE.union(array_CE))\n    array.sort()\n    b = 'football'\n    c = 0\n    for event in array:\n        if event in array_CE and b != 'cricket':\n            c = c + 1\n            b = 'cricket'\n        elif event in array_FE and b != 'football':\n            c = c + 1\n            b = 'football'\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    f = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    current = 'f'\n    count = 0\n    for i in range(n):\n        l.append((f[i], 'f'))\n    for i in range(m):\n        l.append((c[i], 'c'))\n    l.sort()\n    for i in range(len(l)):\n        if l[i][1] != current and current == 'f':\n            count = count + 1\n            current = 'c'\n            continue\n        if l[i][1] != current and current == 'c':\n            count = count + 1\n            current = 'f'\n    print(count)", "from math import *\nR = lambda : list(map(int, input().split()))\nMOD = 1000000007\nfor _ in range(int(input())):\n    (n, m) = R()\n    f = R()\n    c = R()\n    (l, r) = (0, 0)\n    (flag, cnt) = (0, 0)\n    while l < n and r < m:\n        if flag and f[l] < c[r]:\n            cnt += 1\n            flag = 0\n            l += 1\n        elif flag == 0 and c[r] < f[l]:\n            cnt += 1\n            flag = 1\n            r += 1\n        elif f[l] < c[r]:\n            l += 1\n        else:\n            r += 1\n    cnt += 1\n    print(cnt)", "for T in range(int(input())):\n    (N, M) = map(int, input().split())\n    F = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    Channel = 'F'\n    result = 0\n    for i in range(int(N + M)):\n        if len(F) != 0 and len(C) != 0:\n            if F[0] < C[0]:\n                del F[0]\n                if Channel != 'F':\n                    result += 1\n                    Channel = 'F'\n            else:\n                del C[0]\n                if Channel != 'C':\n                    result += 1\n                    Channel = 'C'\n        else:\n            result += 1\n            break\n    print(result)"]