["t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(n - 1):\n        d[j + 1] = l[j] - d[j]\n    for k in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(n - 1):\n        d[j + 1] = l[j] - d[j]\n    for k in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(n - 1):\n        d[j + 1] = l[j] - d[j]\n    for k in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(n - 1):\n        d[j + 1] = l[j] - d[j]\n    for k in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for j in range(n - 1):\n        d[j + 1] = l[j] - d[j]\n    for k in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = [0]\n    a = 0\n    for i in range(len(l)):\n        p = l[i] - ans[i]\n        ans.append(p)\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        gap = abs(x - y)\n        if gap % 2 == 0:\n            print('UNKNOWN')\n        else:\n            ans1 = ans[x - 1] + ans[y - 1]\n            print(ans1)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "T = int(input())\nfor i in range(T):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "for u in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        print('UNKNOWN') if abs(x - y) % 2 == 0 else print(d[x - 1] + d[y - 1])", "for u in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        print('UNKNOWN') if abs(x - y) % 2 == 0 else print(d[x - 1] + d[y - 1])", "test = int(input())\nfor u in range(test):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "test = int(input())\nfor u in range(test):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "for u in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n - 1):\n        d[i + 1] = l[i] - d[i]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if abs(x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(d[x - 1] + d[y - 1])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a1 = [0] * n\n    a2 = [0] * n\n    a1[0] = -1\n    a2[0] = -2\n    for i in range(1, n):\n        a1[i] = b[i - 1] - a1[i - 1]\n        a2[i] = b[i - 1] - a2[i - 1]\n    for i in range(q):\n        (a, b) = map(int, input().split())\n        if a1[a - 1] + a1[b - 1] == a2[a - 1] + a2[b - 1]:\n            print(a1[a - 1] + a1[b - 1])\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = [0] + [int(x) for x in input().split()]\n    for i in range(1, len(arr)):\n        if i % 2 == 1:\n            arr[i] += arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] - arr[i]\n    for i in range(q):\n        (a, b) = [int(x) for x in input().split()]\n        if a > b:\n            (a, b) = (a, b)\n        else:\n            (a, b) = (b, a)\n        if (a - b) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            ans = arr[b - 1] - arr[a - 1]\n            if a % 2 == 0:\n                ans *= -1\n            print(ans)", "try:\n    for _ in range(int(input())):\n        (n, q) = map(int, input().split())\n        list1 = list(map(int, input().split()))\n        list2 = []\n        list3 = []\n        for i in range(n - 1):\n            if i % 2 == 0:\n                list2.append(list1[i])\n            else:\n                list2.append(-list1[i])\n        for i in range(n - 1):\n            if i % 2 != 0:\n                list3.append(list1[i])\n            else:\n                list3.append(-list1[i])\n        for i in range(1, n - 1):\n            list2[i] += list2[i - 1]\n            list3[i] += list3[i - 1]\n        for j in range(q):\n            (a1, b1) = map(int, input().split())\n            a = min(a1, b1)\n            b = max(a1, b1)\n            if a == b:\n                print('UNKNOWN')\n            elif a % 2 != 0:\n                if b % 2 != 0:\n                    print('UNKNOWN')\n                elif a != 1:\n                    print(list2[b - 2] - list2[a - 2])\n                else:\n                    print(list2[b - 2])\n            elif a % 2 == 0:\n                if b % 2 == 0:\n                    print('UNKNOWN')\n                else:\n                    print(list3[b - 2] - list3[a - 2])\nexcept:\n    pass", "from math import *\nfor _ in range(int(input())):\n    (n, Q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    new = [0] * n\n    for i in range(0, n - 1):\n        new[i + 1] = b[i] - new[i]\n    for j in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(new[p - 1] + new[q - 1])", "from math import *\nfrom collections import *\nfrom itertools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(1000000)\nd = defaultdict(lambda : 0, {})\n\ndef io():\n    return map(int, input().split())\n\ndef op():\n    return list(map(int, input().split()))\n\ndef o():\n    return int(input())\n\ndef r(x):\n    if type(x) == int:\n        return range(x)\n    else:\n        return range(len(x))\n\ndef kl(con, x=0):\n    if x == 0:\n        print('Yes') if con else print('No')\n    elif x == 1:\n        print('yes') if con else print('no')\n    elif x == 2:\n        print('YES') if con else print('NO')\nMOD = 1000000007\nMAX = float('inf')\nMIN = -float('inf')\np = input\nfor _ in r(o()):\n    (n, q) = io()\n    a = op()\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for i in r(q):\n        (a, b) = sorted(io())\n        a -= 1\n        b -= 1\n        if not b - a & 1:\n            print('UNKNOWN')\n        else:\n            ans = l[b] - l[b - 1] + l[a] - (l[a - 1] if a > 0 else 0)\n            print(ans)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [0]\n    for i in range(len(b)):\n        a.append(b[i] - a[-1])\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if (x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(a[x - 1] + a[y - 1])", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = [1]\n    for j in range(len(x)):\n        y.append(x[j] - y[-1])\n    for j in range(q):\n        (p, q) = map(int, input().split())\n        if (p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(y[p - 1] + y[q - 1])", "def sum(idx):\n    result = 0\n    while idx:\n        result += bit_array[idx]\n        idx -= idx & -idx\n    return result\n\ndef add(idx, value):\n    while idx < len(bit_array):\n        bit_array[idx] += value\n        idx += idx & -idx\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    bit_array = [0] * N\n    for i in range(N - 1):\n        if i % 2 == 0:\n            add(i + 1, B[i])\n        else:\n            add(i + 1, B[i] * -1)\n    array = []\n    for i in range(N):\n        array.append(sum(i))\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if p % 2 + q % 2 != 1:\n            print('UNKNOWN')\n        else:\n            a = array[q - 1] - array[p - 1]\n            if p % 2 == 0:\n                print(-a)\n            else:\n                print(a)", "t = int(input())\nwhile t > 0:\n    (n, quer) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = []\n    a.append(1)\n    for i in range(0, n - 1):\n        a.append(b[i] - a[-1])\n    while quer > 0:\n        (p, q) = map(int, input().split())\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(a[p - 1] + a[q - 1])\n        quer = quer - 1\n    t = t - 1", "T = int(input())\n\ndef left(index):\n    return index\n\ndef right(index):\n    return index - 1\n\ndef flip_sum(index1, index2, BPrefix, B):\n    flip = False\n    total = 0\n    lft = left(index1)\n    rit = right(index2)\n    if lft == rit:\n        return B[lft - 1]\n    if lft == 1:\n        if rit % 2 == 1:\n            return BPrefix[rit - 1]\n        else:\n            return 0 - BPrefix[rit - 1]\n    elif rit % 2 == 1:\n        return BPrefix[rit - 1] - BPrefix[lft - 2]\n    else:\n        return 0 - (BPrefix[rit - 1] - BPrefix[lft - 2])\n    return total\nfor _ in range(T):\n    (n, q) = (int(i) for i in input().split())\n    B = [int(i) for i in input().split()]\n    BPrefix = [0 for i in range(len(B))]\n    BPrefix[0] = B[0]\n    flip = False\n    for i in range(1, len(B)):\n        if flip:\n            BPrefix[i] = BPrefix[i - 1] + B[i]\n        else:\n            BPrefix[i] = BPrefix[i - 1] - B[i]\n        flip = not flip\n    for i in range(q):\n        (index1, index2) = (int(i) for i in input().split())\n        (index1, index2) = (min(index1, index2), max(index1, index2))\n        if index1 % 2 == 1 and index2 % 2 == 0:\n            print(flip_sum(index1, index2, BPrefix, B))\n        elif index1 % 2 == 0 and index2 % 2 == 1:\n            print(flip_sum(index1, index2, BPrefix, B))\n        else:\n            print('UNKNOWN')", "T = int(input())\n\ndef left(index):\n    return index\n\ndef right(index):\n    return index - 1\n\ndef flip_sum(index1, index2, BPrefix, B):\n    flip = False\n    total = 0\n    lft = left(index1)\n    rit = right(index2)\n    if lft == rit:\n        return B[lft - 1]\n    if lft == 1:\n        if rit % 2 == 1:\n            return BPrefix[rit - 1]\n        else:\n            return 0 - BPrefix[rit - 1]\n    elif rit % 2 == 1:\n        return BPrefix[rit - 1] - BPrefix[lft - 2]\n    else:\n        return 0 - (BPrefix[rit - 1] - BPrefix[lft - 2])\n    return total\nfor _ in range(T):\n    (n, q) = (int(i) for i in input().split())\n    B = [int(i) for i in input().split()]\n    BPrefix = [0 for i in range(len(B))]\n    BPrefix[0] = B[0]\n    flip = False\n    for i in range(1, len(B)):\n        if flip:\n            BPrefix[i] = BPrefix[i - 1] + B[i]\n        else:\n            BPrefix[i] = BPrefix[i - 1] - B[i]\n        flip = not flip\n    for i in range(q):\n        (index1, index2) = (int(i) for i in input().split())\n        (index1, index2) = (min(index1, index2), max(index1, index2))\n        if index1 % 2 == 1 and index2 % 2 == 0:\n            print(flip_sum(index1, index2, BPrefix, B))\n        elif index1 % 2 == 0 and index2 % 2 == 1:\n            print(flip_sum(index1, index2, BPrefix, B))\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    best = [int(i) for i in input().split()]\n    answer = []\n    answer.append(0)\n    for i in range(1, n):\n        answer.append(best[i - 1] - answer[i - 1])\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if (x - y) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(answer[x - 1] + answer[y - 1])", "def compute_sum(B, size):\n    answer = [B[0], B[1]]\n    for i in range(2, size):\n        answer.append(B[i] + answer[i - 2])\n    return answer\n\ndef find_sum(S, p, q):\n    if q == 1:\n        return S[0]\n    answer = S[q - 1] - S[q - 2]\n    if p == 0:\n        return answer\n    if p == 1:\n        answer += S[0]\n        return answer\n    answer += S[p - 1] - S[p - 2]\n    return answer\nt = int(input())\nfor i in range(t):\n    (n, Q) = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    S = compute_sum(B, n - 1)\n    for j in range(Q):\n        (p, q) = [int(x) for x in input().split()]\n        if p > q:\n            (p, q) = (q, p)\n        diff = q - p\n        if diff % 2 == 0:\n            print('UNKNOWN')\n        else:\n            answer = find_sum(S, p - 1, q - 1)\n            print(answer)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    ans = [0 for x in range(n)]\n    for i in range(1, n):\n        ans[i] = b[i - 1] - ans[i - 1]\n    for i in range(q):\n        (f, g) = map(int, input().split())\n        if f + g & 1 != 1:\n            print('UNKNOWN')\n        else:\n            print(ans[f - 1] + ans[g - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [0] * n\n    for i in range(len(b)):\n        a[i + 1] = b[i] - a[i]\n    for i in range(q):\n        (l, r) = map(int, input().split())\n        if l > r:\n            (l, r) = (r, l)\n        if (r - l) % 2:\n            print(a[r - 1] + a[l - 1])\n        else:\n            print('UNKNOWN')", "import sys\ntest_cases = int(sys.stdin.readline().split(' ')[0])\nwhile test_cases > 0:\n    test_cases = test_cases - 1\n    (n, count_q) = map(int, sys.stdin.readline().split(' '))\n    b_array = list(map(int, sys.stdin.readline().split(' ')))\n    odd_number_sum = [0]\n    even_number_sum = [0]\n    for pos in range(0, len(b_array)):\n        if pos % 2 == 0:\n            even_number_sum.append(b_array[pos] + even_number_sum[pos])\n            odd_number_sum.append(odd_number_sum[pos])\n        else:\n            odd_number_sum.append(b_array[pos] + odd_number_sum[pos])\n            even_number_sum.append(even_number_sum[pos])\n    no_q = 0\n    while no_q < count_q:\n        no_q = no_q + 1\n        (p, q) = map(int, sys.stdin.readline().split(' '))\n        diff_pq = abs(p - q)\n        if diff_pq == 1:\n            print(b_array[min(p, q) - 1])\n            continue\n        if diff_pq % 2 == 0:\n            print('UNKNOWN')\n            continue\n        min_n = min(p, q) - 1\n        max_pos = min_n + diff_pq\n        is_start_odd = min_n % 2\n        if is_start_odd:\n            total_odd_sum = odd_number_sum[max_pos] - odd_number_sum[min_n]\n            total_even = even_number_sum[max_pos] - even_number_sum[min_n]\n            diff = total_odd_sum - total_even\n        else:\n            total_odd_sum = odd_number_sum[max_pos] - odd_number_sum[min_n]\n            total_even = even_number_sum[max_pos] - even_number_sum[min_n]\n            diff = total_even - total_odd_sum\n        print(diff)", "for _ in range(int(input())):\n    (n, q) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    b = [0] * n\n    b[1] = arr[0]\n    for i in range(1, n - 1):\n        if i % 2:\n            b[i + 1] = b[i] - arr[i]\n        else:\n            b[i + 1] = b[i] + arr[i]\n    for i in range(q):\n        (p, q) = sorted([int(x) for x in input().split()])\n        if (q - p) % 2 != 0:\n            if p % 2:\n                ans = b[p - 1] - b[q - 1]\n            else:\n                ans = b[q - 1] - b[p - 1]\n            print(-ans)\n        else:\n            print('UNKNOWN')", "t = int(input())\nwhile t > 0:\n    (n, q) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    even = []\n    odd = []\n    even.append(0)\n    odd.append(0)\n    for i in range(1, n):\n        if i % 2 == 0:\n            even.append(even[i - 1] + a[i - 1])\n            odd.append(odd[i - 1] - a[i - 1])\n            continue\n        even.append(even[i - 1] - a[i - 1])\n        odd.append(odd[i - 1] + a[i - 1])\n    while q > 0:\n        (l, r) = [int(i) for i in input().split()]\n        if l > r:\n            temp = l\n            l = r\n            r = temp\n        if (l + r) % 2 == 0:\n            print('UNKNOWN')\n        elif l % 2:\n            r -= 1\n            print(odd[r] - odd[l - 1])\n        else:\n            r -= 1\n            print(even[r] - even[l - 1])\n        q -= 1\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, q) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    even = []\n    odd = []\n    even.append(0)\n    odd.append(0)\n    for i in range(1, n):\n        if i % 2 == 0:\n            even.append(even[i - 1] + a[i - 1])\n            odd.append(odd[i - 1] - a[i - 1])\n            continue\n        even.append(even[i - 1] - a[i - 1])\n        odd.append(odd[i - 1] + a[i - 1])\n    while q > 0:\n        (l, r) = [int(i) for i in input().split()]\n        if l > r:\n            temp = l\n            l = r\n            r = temp\n        if (l + r) % 2 == 0:\n            print('UNKNOWN')\n        elif l % 2:\n            r -= 1\n            print(odd[r] - odd[l - 1])\n        else:\n            r -= 1\n            print(even[r] - even[l - 1])\n        q -= 1\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [0 for x in range(n)]\n    for i in range(1, n):\n        a[i] = b[i - 1] - a[i - 1]\n    for i in range(q):\n        (c, b) = map(int, input().split())\n        if c + b & 1 != 1:\n            print('UNKNOWN')\n        else:\n            print(a[c - 1] + a[b - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    a = [0] * n\n    for j in range(1, n):\n        a[j] = ar[j - 1] - a[j - 1]\n    for query in range(q):\n        (i1, i2) = map(int, input().split())\n        if (i1 + i2) % 2 == 1:\n            print(a[i1 - 1] + a[i2 - 1])\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (N, Q) = [int(x) for x in input().split()]\n    bs = [int(x) for x in input().split()]\n    b = [0]\n    sign = 1\n    for val in bs:\n        b.append(b[-1] + sign * val)\n        sign *= -1\n    for _ in range(Q):\n        (a_1, a_2) = [int(x) for x in input().split()]\n        if (a_2 - a_1) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            start = min(a_1, a_2) - 1\n            finish = max(a_1, a_2) - 1\n            sign = 1 if start % 2 == 0 else -1\n            print(sign * b[finish] - sign * b[start])", "t = int(input())\nfor _ in range(t):\n    s = input().split(' ')\n    (n, q) = (int(s[0]), int(s[1]))\n    s = input().split(' ')\n    b = [int(i) for i in s]\n    a = [0] * (len(b) + 1)\n    for i in range(len(b)):\n        a[i + 1] = b[i] - a[i]\n    for _ in range(q):\n        s = input().split(' ')\n        (p, q) = (int(s[0]), int(s[1]))\n        if p % 2 == 0 and q % 2 == 0 or (p % 2 != 0 and q % 2 != 0):\n            print('UNKNOWN')\n        else:\n            print(a[p - 1] + a[q - 1])", "R = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, q) = R()\n    a = [None, 0]\n    i = 1\n    for x in R():\n        a.append(a[-1] + x * i)\n        i = -i\n    for _ in range(q):\n        (p, q) = R()\n        print((a[q] - a[p]) * (1 - q % 2 * 2) if (p ^ q) & 1 else 'UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    pre = []\n    pre.append(0)\n    sign = True\n    sums = 0\n    for item in arr:\n        if sign:\n            sign = False\n            sums = sums + item\n            pre.append(sums)\n        else:\n            sign = True\n            sums = sums - item\n            pre.append(sums)\n    for _ in range(q):\n        (a, b) = map(int, input().split())\n        if (b - a) % 2 != 0:\n            if a > b:\n                (a, b) = (b, a)\n            if a % 2:\n                print(pre[b - 1] - pre[a - 1])\n            else:\n                print(pre[a - 1] - pre[b - 1])\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    ar = [0]\n    for i in range(n - 1):\n        if i % 2 == 0:\n            ar.append(ar[i] + lst[i])\n        else:\n            ar.append(ar[i] - lst[i])\n    for _ in range(q):\n        (a, b) = map(int, input().split())\n        (a, b) = (a - 1, b - 1)\n        (a, b) = (min(a, b), max(a, b))\n        diff = b - a\n        if diff % 2 == 0:\n            print('UNKNOWN')\n        elif diff == 1:\n            print(lst[a])\n        elif a == 0:\n            print(ar[diff])\n        elif a % 2 != 0:\n            print(ar[a] - ar[b])\n        else:\n            print(ar[b] - ar[a])", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    b = list(map(int, input().split()))\n    s = [0] * n\n    c = 1\n    for i in range(1, n):\n        s[i] = s[i - 1] + c * b[i - 1]\n        c *= -1\n    s1 = 0\n    for i in range(m):\n        (p, q) = map(int, input().split())\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            y = min(p, q)\n            z = max(p, q)\n            if z % 2 == 0:\n                print(s[z - 1] - s[y - 1])\n            else:\n                print(s[y - 1] - s[z - 1])", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    l1 = [int(x) for x in input().split()]\n    l = [0, l1[0]]\n    for i in range(2, n):\n        l.append(l1[i - 1] - l[i - 1])\n    for _ in range(q):\n        (a, b) = map(int, input().split())\n        if abs(a - b) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(l[a - 1] + l[b - 1])", "t = input()\nt = int(t)\nwhile t > 0:\n    s = input().split(' ')\n    n = int(s[0])\n    q = int(s[1])\n    aux = list()\n    sum = 0\n    sign = 1\n    s = input().split(' ')\n    aux.append(0)\n    for i in range(0, n - 1):\n        sum += sign * int(s[i])\n        sign *= -1\n        aux.append(sum)\n    for i in range(q):\n        queries = input().split(' ')\n        x = int(queries[0])\n        y = int(queries[1])\n        diff = abs(x - y)\n        if diff % 2 == 0:\n            print('UNKNOWN')\n        else:\n            qmax = max(x, y)\n            qmin = min(x, y)\n            ans = aux[qmax - 1] - aux[qmin - 1] if qmax % 2 == 0 else aux[qmin - 1] - aux[qmax - 1]\n            print(ans)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, q1) = map(int, input().split(' '))\n    b = [int(y1) for y1 in input().split()]\n    (psum, qsum) = ([0], [0])\n    (pl, ql) = (0, 0)\n    for idx in range(1, n - 1):\n        if idx % 2 == 1:\n            psum.append(b[idx] - b[idx - 1] + psum[pl])\n            pl += 1\n        else:\n            qsum.append(b[idx] - b[idx - 1] + qsum[ql])\n            ql += 1\n    for i1 in range(q1):\n        (pi, qi) = map(int, input().split(' '))\n        x2 = (pi + qi) % 2\n        if x2 == 0:\n            ans = 'UNKNOWN'\n        else:\n            if pi % 2 == 0:\n                (p, q) = (qi, pi)\n            else:\n                (p, q) = (pi, qi)\n            c = (p - 1) // 2\n            d = (q - 2) // 2\n            ans = psum[c] + qsum[d] + b[0]\n        print(ans)", "for t in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    diff = []\n    for i in range(len(a) + 1):\n        if i < 2:\n            diff.append(0)\n        else:\n            diff.append(diff[i - 2] + (a[i - 1] - a[i - 2]))\n    for i in range(q):\n        (ind1, ind2) = map(int, input().split())\n        if ind1 % 2 == ind2 % 2:\n            print('UNKNOWN')\n        else:\n            print(a[0] + diff[ind1 - 1] + diff[ind2 - 1])", "t = int(input())\nfor _ in range(t):\n    (n, Q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(1, len(a), 2):\n        a[i] *= -1\n    psum = [0 for i in range(len(a))]\n    psum[0] = a[0]\n    for i in range(1, len(a)):\n        psum[i] = psum[i - 1] + a[i]\n    psum = [0] + psum\n    for qq in range(Q):\n        (p, q) = map(int, input().split())\n        (p, q) = (min(p, q), max(p, q))\n        diff = q - p\n        if not diff % 2:\n            print('UNKNOWN')\n            continue\n        if p % 2 == 0:\n            print(-1 * (psum[q - 1] - psum[p - 1]))\n        else:\n            print(psum[q - 1] - psum[p - 1])", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, hq) = map(int, input().split())\n        b = list(map(int, input().split()))\n        bps = [0] * (n - 1)\n        bs = bps[0] = b[0]\n        for i in range(1, n - 1):\n            if i % 2 == 1:\n                bps[i] = bs - b[i]\n                bs -= b[i]\n            else:\n                bps[i] = b[i] + bs\n                bs += b[i]\n        bps = [0] + bps\n        for iq in range(hq):\n            (p, q) = map(int, input().split())\n            mi = min(p, q)\n            ma = max(p, q)\n            if (ma - mi) % 2 == 0:\n                print('UNKNOWN')\n            elif mi % 2 == 0:\n                print(bps[mi - 1] - bps[ma - 1])\n            elif mi % 2 == 1:\n                print(bps[ma - 1] - bps[mi - 1])\nmain()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    xval = [1 for i in range(n)]\n    cons = [0 for i in range(n)]\n    for i in range(n - 1):\n        cons[i + 1] = l[i] - cons[i]\n        xval[i + 1] = -xval[i]\n    for zz in range(q):\n        (p, q) = map(int, input().split())\n        val = cons[p - 1] + cons[q - 1]\n        if xval[p - 1] + xval[q - 1] == 0:\n            print(val)\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [0, a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "while True:\n    try:\n        for _ in range(int(input())):\n            (n, q) = map(int, input().split())\n            B = list(map(int, input().split()))\n            queries = []\n            for i in range(q):\n                queries.append(list(map(int, input().split())))\n            B = [(-1) ** i * B[i] for i in range(n - 1)]\n            C = []\n            C.append(B[0])\n            for i in range(1, n - 1):\n                C.append(C[-1] + B[i])\n            for (p, q) in queries:\n                (p, q) = (min(p, q), max(p, q))\n                if (q - p) % 2 == 0:\n                    print('UNKNOWN')\n                    continue\n                if p == 1:\n                    print(C[q - 2])\n                    continue\n                elif p % 2 == 1:\n                    print(C[q - 2] - C[p - 2])\n                else:\n                    print(C[p - 2] - C[q - 2])\n    except:\n        break", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    bs = list(map(int, input().split()))\n    flag = 0\n    for i in range(1, n - 1):\n        if flag == 0:\n            bs[i] = bs[i - 1] - bs[i]\n            flag = 1\n        else:\n            bs[i] += bs[i - 1]\n            flag = 0\n    bs.insert(0, 0)\n    for _ in range(q):\n        (p, r) = map(int, input().split())\n        if r < p:\n            (r, p) = (p, r)\n        if (r - p) % 2 == 0:\n            print('UNKNOWN')\n        elif p % 2 == 1:\n            print(bs[r - 1] - bs[p - 1])\n        else:\n            print(bs[p - 1] - bs[r - 1])", "t = int(input())\nwhile t:\n    (N, Q) = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    n = [b[0]]\n    c = -1\n    for i in range(1, N - 1):\n        n.append(n[i - 1] + c * b[i])\n        c *= -1\n    while Q:\n        (p, q) = [int(x) for x in input().split()]\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            min_ = min(p, q)\n            max_ = max(p, q)\n            if min_ == 1:\n                print(n[max_ - 2])\n            elif min_ % 2 == 0:\n                print(n[min_ - 2] - n[max_ - 2])\n            else:\n                print(n[max_ - 2] - n[min_ - 2])\n        Q -= 1\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    pre = [l[0], l[1]]\n    for i in range(2, n - 1):\n        pre.append(pre[-2] + l[i])\n    pre = [0] + [0] + pre\n    for i in range(q):\n        (p, q) = map(int, input().split())\n        mi = p + 2\n        ma = q + 2\n        if p > q:\n            mi = q + 2\n            ma = p + 2\n        if (ma - mi) % 2 == 0:\n            print('UNKNOWN')\n        elif ma - mi == 1:\n            print(l[mi - 3])\n        else:\n            print(pre[ma - 2] - pre[mi - 3] - (pre[ma - 3] - pre[mi - 2]))", "T = int(input())\nfor testcase in range(T):\n    (N, Q) = map(int, input().split())\n    B = [0] + list(map(int, input().split()))\n    odd = [0, B[1]]\n    for i in range(3, N, 2):\n        odd.append(odd[-1] + B[i])\n    even = [0, B[2]]\n    for i in range(4, N, 2):\n        even.append(even[-1] + B[i])\n    for query in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            if p > q:\n                (p, q) = (q, p)\n            if q % 2 == 0:\n                oddsum = odd[1 + (q - 2) // 2] - odd[1 + (p - 3) // 2]\n                evensum = even[1 + (q - 4) // 2] - even[1 + (p - 2) // 2]\n                ans = oddsum - evensum\n            else:\n                evensum = even[1 + (q - 3) // 2] - even[1 + (p - 4) // 2]\n                oddsum = odd[1 + (q - 3) // 2] - odd[1 + (p - 2) // 2]\n                ans = evensum - oddsum\n            print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, q) = map(int, sys.stdin.readline().split())\n    B = list(map(int, sys.stdin.readline().split()))\n    c = 1\n    S = [0] * n\n    for j in range(1, n):\n        S[j] = c * B[j - 1] + S[j - 1]\n        c *= -1\n    for i in range(q):\n        (a, b) = map(int, sys.stdin.readline().split())\n        if a > b:\n            (a, b) = (b, a)\n        if (b - a) % 2 == 0:\n            print('UNKNOWN')\n            continue\n        print(S[b - 1] - S[a - 1] if a % 2 else S[a - 1] - S[b - 1])", "for ii in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ll = [0 for i in range(n - 1)]\n    ll[0] = l[0]\n    t = 1\n    for j in range(1, n - 1):\n        if t & 1:\n            ll[j] = ll[j - 1] - l[j]\n        else:\n            ll[j] = ll[j - 1] + l[j]\n        t = t ^ 1\n    while q:\n        q = q - 1\n        (a, b) = map(int, input().split())\n        t = max(a, b) - min(a, b)\n        if t & 1:\n            (x, y) = (min(a, b) - 1, max(a, b) - 1)\n            if x == 0:\n                print(ll[y - 1])\n            else:\n                x = x - 1\n                y = y - 1\n                if x & 1:\n                    print(ll[y] - ll[x])\n                else:\n                    print(ll[x] - ll[y])\n        else:\n            print('UNKNOWN')", "import sys\n\ndef get_answer(final, s, r):\n    myarray = []\n    for p in final:\n        ans = p[s - 1] + p[r - 1]\n        if ans not in myarray and len(myarray) > 0:\n            return 'UNKNOWN'\n        myarray.append(ans)\n    return myarray[0]\ntestcase = int(sys.stdin.readline())\nwhile testcase > 0:\n    input1 = sys.stdin.readline().strip('\\n').split(' ')\n    n = int(input1[0])\n    q = int(input1[1])\n    array = []\n    for num in sys.stdin.readline().strip('\\n').split(' '):\n        array.append(int(num))\n    subarray = []\n    final = []\n    for i in range(2):\n        subarray = []\n        diff = i\n        subarray.append(diff)\n        for j in array:\n            diff = j - diff\n            subarray.append(diff)\n        final.append(subarray)\n    for k in range(q):\n        input1 = sys.stdin.readline().strip('\\n').split(' ')\n        s = int(input1[0])\n        e = int(input1[1])\n        print(get_answer(final, s, e))\n    testcase = testcase - 1", "t = int(input().strip())\nfor _ in range(t):\n    (n, q) = map(int, input().strip().split())\n    b = list(map(int, input().strip().split()))\n    a = [0] * n\n    for i in range(n - 2, -1, -1):\n        a[i] = b[i] - a[i + 1]\n    for _ in range(q):\n        (st, en) = map(int, input().strip().split())\n        if (st + en) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(a[st - 1] + a[en - 1])", "from itertools import accumulate\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    res1 = []\n    res2 = []\n    for i in range(n - 1):\n        if i % 2 == 0:\n            res1.append(b[i])\n        else:\n            res1.append(b[i] * -1)\n    for i in range(n - 1):\n        if i % 2 == 0:\n            res2.append(b[i] * -1)\n        else:\n            res2.append(b[i])\n    res1 = [0] + list(accumulate(res1))\n    res2 = [0] + list(accumulate(res2))\n    for i in range(q):\n        (p, q) = map(int, input().split())\n        if (p + q) % 2 == 0:\n            print('UNKNOWN')\n        elif p % 2 != 0:\n            print(res1[q - 1] - res1[p - 1])\n        else:\n            print(res2[q - 1] - res2[p - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    sum_arr = list(map(int, input().split()))\n    original = [0]\n    for i in range(1, n):\n        original.append(sum_arr[i - 1] - original[i - 1])\n    for i in range(q):\n        (l, r) = map(int, input().split())\n        l -= 1\n        r -= 1\n        if abs(l - r) % 2 == 1:\n            print(original[l] + original[r])\n        else:\n            print('UNKNOWN')", "N = int(input())\nfor _ in range(N):\n    (n, q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    A = [0] * n\n    for i in range(n - 1):\n        A[i + 1] = B[i] - A[i]\n    for i in range(q):\n        (L, R) = map(int, input().split())\n        if (R - L) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(A[L - 1] + A[R - 1])", "try:\n    for _ in range(int(input())):\n        (n, q) = [int(i) for i in input().split()]\n        b = [int(i) for i in input().split()]\n        a = [5]\n        for i in range(n - 1):\n            a.append(b[i] - a[i])\n        for x in range(q):\n            (p, q) = [int(i) for i in input().split()]\n            p -= 1\n            q -= 1\n            if p % 2 == 0 and q % 2 == 0:\n                print('UNKNOWN')\n            elif p % 2 != 0 and q % 2 != 0:\n                print('UNKNOWN')\n            else:\n                print(a[p] + a[q])\nexcept:\n    EOFError", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [0]\n    for i in range(len(b)):\n        a.append(b[i] - a[i])\n    for bcd in range(q):\n        (p, q) = map(int, input().split())\n        d = abs(p - q) - 1\n        if d % 2 != 0:\n            print('UNKNOWN')\n        else:\n            p -= 1\n            q -= 1\n            print(a[p] + a[q])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "for case in range(int(input())):\n    (N, Q) = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A = [0] * N\n    for i in range(N - 2, -1, -1):\n        A[i] = B[i] - A[i + 1]\n    for quer in range(Q):\n        (a, b) = list(map(int, input().split()))\n        if abs(a - b) % 2 == 1:\n            print(A[a - 1] + A[b - 1])\n        else:\n            print('UNKNOWN')", "t = int(input())\nfor _ in range(t):\n    (n, qu) = map(int, input().split())\n    b = [0] + list(map(int, input().split()))\n    a = [0, -1]\n    for i in range(1, n):\n        a.append(b[i] - a[-1])\n    for h in range(qu):\n        (a1, a2) = map(int, input().split())\n        p = min(a1, a2)\n        q = max(a1, a2)\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(a[p] + a[q])", "def findsum(a):\n    b = [0] * len(a)\n    even = 0\n    odd = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            even += a[i]\n            b[i] = even\n        else:\n            odd += a[i]\n            b[i] = odd\n    return b\n\ndef cal(a, b, c, d):\n    ans = d[b - 1] + c[a] - d[a]\n    ans -= d[b - 2] + c[a + 1] - d[a + 1]\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    (z, u) = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    temp = findsum(b)\n    while u:\n        u -= 1\n        (p, q) = [int(x) for x in input().split()]\n        m = min(p, q)\n        n = max(p, q)\n        if (m - n) % 2 == 0:\n            print('UNKNOWN')\n        elif m + 1 == n:\n            print(b[m - 1])\n        else:\n            cal(m - 1, n - 1, b, temp)", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, q) = R()\n    L = [0] + list(R())\n    for i in range(2, n, 2):\n        L[i] += L[i - 2]\n    for i in range(3, n, 2):\n        L[i] += L[i - 2]\n    for _ in range(q):\n        (a, b) = R()\n        (a, b) = (max(a, b), min(a, b))\n        if (a - b) % 2:\n            print(L[a - 1] - L[max(0, b - 2)] - (L[a - 2] - L[max(0, b - 1)]))\n        else:\n            print('UNKNOWN')", "for _ in range(int(input())):\n    (n, q) = input().split()\n    n = int(n)\n    q = int(q)\n    b = input().split()\n    b = [int(i) for i in b]\n    odd = [0] * (n + 1)\n    even = [0] * (n + 1)\n    for i in range(1, len(b) + 1):\n        if i % 2 == 1:\n            odd[i] = odd[i - 1] + b[i - 1]\n        else:\n            odd[i] = odd[i] + odd[i - 1]\n    for i in range(1, len(b) + 1):\n        if i % 2 == 0:\n            even[i] = even[i - 1] + b[i - 1]\n        else:\n            even[i] = even[i] + even[i - 1]\n    for i in range(q):\n        sum = 0\n        index = 0\n        (p, q) = input().split()\n        p = int(p)\n        q = int(q)\n        if p > q:\n            temp = p\n            p = q\n            q = temp\n        if (q - p) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            if q % 2 == 0:\n                temp1 = odd[q - 1] - odd[p - 1]\n                temp2 = even[q - 2] - even[p]\n                sum = temp1 - temp2\n            else:\n                temp1 = even[q - 1] - even[p - 1]\n                temp2 = odd[q - 2] - odd[p]\n                sum = temp1 - temp2\n            print(sum)", "for _ in range(int(input())):\n    (n, qu) = input().split(' ')\n    arr = input().split(' ')\n    arr1 = []\n    k = 1\n    for i in range(0, int(n) - 1):\n        arr[i] = int(arr[i])\n    for i in range(0, int(n) - 1):\n        arr1.append(k * 1)\n        k = k * -1\n    for i in range(1, int(n) - 1):\n        arr[i] = arr[i - 1] + arr[i] * arr1[i]\n    r = 0\n    for u in range(int(qu)):\n        (p1, q1) = input().split(' ')\n        p = int(p1)\n        q = int(q1)\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            if min(p, q) - 2 < 0:\n                r = 0\n            else:\n                r = arr[int(max(0, min(p, q) - 2))]\n            print(arr1[int(max(p, q) - 2)] * (arr[int(max(p, q) - 2)] - r))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    pre = [0, B[0]]\n    for i in range(n - 1):\n        if i % 2 == 0:\n            pre += [pre[-1] + B[i]]\n        else:\n            pre += [pre[-1] - B[i]]\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        if (y - x) % 2 == 0:\n            print('UNKNOWN')\n        elif y % 2 == 1:\n            print(-(pre[y] - pre[x]))\n        else:\n            print(pre[y] - pre[x])", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0, a[0]]\n    for i in range(1, n - 1):\n        temp = b[i] + pow(-1, i) * a[i]\n        b.append(temp)\n    for i in range(q):\n        (t, r) = map(int, input().split())\n        if t > r:\n            (t, r) = (r, t)\n        if (t - r) % 2 == 1:\n            if t % 2 == 1:\n                print(b[r - 2] + a[r - 2] - b[t - 1])\n            if t % 2 == 0:\n                print(b[t - 1] - b[r - 2] + a[r - 2])\n        else:\n            print('UNKNOWN')", "try:\n    for _ in range(int(input())):\n        (n, q) = map(int, input().split())\n        a = list(map(int, input().split()))\n        l = [a[0], a[1]]\n        for i in range(2, n - 1):\n            l.append(l[-2] + a[i])\n        l = [0] + l\n        for __ in range(q):\n            (p, q) = sorted(map(int, input().split()))\n            p -= 1\n            q -= 1\n            if not (p - q) % 2:\n                print('UNKNOWN')\n            else:\n                print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))\nexcept Exception:\n    pass", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    b1 = [b[0]]\n    b2 = [b[1]]\n    for i in range(2, len(b), 2):\n        b1.append(b1[len(b1) - 1] + b[i])\n    for i in range(3, len(b), 2):\n        b2.append(b2[len(b2) - 1] + b[i])\n    for _ in range(q):\n        (x, y) = map(int, input().split())\n        temp = x\n        x = min(x, y)\n        y = max(temp, y)\n        if (y - x) % 2 == 0:\n            print('UNKNOWN')\n        elif y - x == 1:\n            print(b[x - 1])\n        elif x % 2 == 0:\n            if x == 2:\n                ans1 = b2[(y - 1) // 2 - 1]\n                ans2 = b1[(y - 1) // 2 - 1] - b1[0]\n            else:\n                ans1 = b2[(y - 1) // 2 - 1] - b2[x // 2 - 2]\n                ans2 = b1[(y - 1) // 2 - 1] - b1[x // 2 - 1]\n            print(ans1 - ans2)\n        else:\n            if x == 1:\n                ans1 = b1[y // 2 - 1]\n                ans2 = b2[(y - 2) // 2 - 1]\n            else:\n                ans1 = b1[y // 2 - 1] - b1[x // 2 - 1]\n                ans2 = b2[(y - 2) // 2 - 1] - b2[(x - 1) // 2 - 1]\n            print(ans1 - ans2)", "from abc import ABC, abstractmethod\n\ndef get_int(source):\n    return int(source())\n\ndef get_ints(source):\n    return [int(x) for x in source().split(' ')]\n\ndef getline_from_std():\n    return input()\n\nclass IOProcessing(ABC):\n\n    @abstractmethod\n    def read_test_case(self, source):\n        pass\n\n    @abstractmethod\n    def process_test_case(self, tcase):\n        pass\n\n    def solve(self, input_type='from_std', output_type='to_std', input_path='', output_path='output.txt', tcase_handling='all'):\n        ans = []\n        if input_type == 'from_file':\n            with open(input_path, 'r') as in_file:\n                t = int(in_file.readline())\n                for _ in range(t):\n                    tcase = self.read_test_case(in_file.readline)\n                    ans.append(self.process_test_case(tcase))\n                    if tcase_handling == 'single' and output_type == 'to_std':\n                        print(ans[-1])\n        elif input_type == 'from_std':\n            t = int(getline_from_std())\n            for _ in range(t):\n                tcase = self.read_test_case(getline_from_std)\n                ans.append(self.process_test_case(tcase))\n                if tcase_handling == 'single' and output_type == 'to_std':\n                    print(ans[-1])\n        if output_type == 'to_file':\n            with open(output_path, 'w') as output:\n                for a in ans:\n                    output.write(a)\n        elif output_type == 'to_std' and tcase_handling == 'all':\n            for a in ans:\n                print(a)\n\nclass Ex_1_io(IOProcessing):\n\n    def read_test_case(self, source):\n        (n, q) = get_ints(source)\n        b = get_ints(source)\n        queries = []\n        for _ in range(q):\n            queries.append(get_ints(source))\n        return (n, q, b, queries)\n\nclass Ex_1_io(IOProcessing):\n\n    def read_test_case(self, source):\n        (n, q) = get_ints(source)\n        b = get_ints(source)\n        queries = []\n        for _ in range(q):\n            queries.append(get_ints(source))\n        return (n, q, b, queries)\n\n    def process_test_case(self, tcase):\n        n = tcase[0]\n        q = tcase[1]\n        b = tcase[2]\n        queries = tcase[3]\n        a = [(0, 1)]\n        for i in range(1, n):\n            a.append((b[i - 1] - a[-1][0], -1 * a[-1][1]))\n        ans = []\n        for (l, r) in queries:\n            if a[l - 1][1] + a[r - 1][1] != 0:\n                ans.append('UNKNOWN')\n            else:\n                ans.append(str(a[l - 1][0] + a[r - 1][0]))\n        return '\\n'.join((x for x in ans))\nsolution = Ex_1_io()\nsolution.solve(input_type='from_std', output_type='to_std', input_path='input.txt', output_path='output.txt', tcase_handling='all')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))", "for _ in range(int(input())):\n    (n, Q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [0]\n    for i in range(1, n):\n        a.append(b[i - 1] - a[i - 1])\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if (p + q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(a[p - 1] + a[q - 1])", "t = int(input())\nfor cse in range(t):\n    (n, Q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    sumN = [0]\n    sumN.append(b[0])\n    sumN.append(b[1])\n    for i in range(3, n):\n        sumN.append(sumN[i - 2] + b[i - 1])\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if (p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            a = min(p, q)\n            b = max(p, q)\n            if a != 1:\n                add = sumN[b - 1] - sumN[a - 2]\n            else:\n                add = sumN[b - 1]\n            sub = sumN[b - 2] - sumN[a - 1]\n            print(add - sub)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k1 = [0, l[0]]\n    for i in range(2, n - 1, 2):\n        k1.append(k1[-1] + l[i])\n    k2 = [0, l[1]]\n    for i in range(3, n - 1, 2):\n        k2.append(k2[-1] + l[i])\n    for i in range(q):\n        (a, b) = map(int, input().split())\n        if (b - a) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            b1 = max(a, b)\n            a1 = min(a, b)\n            b = b1\n            a = a1\n            b -= 2\n            a -= 1\n            if b - a == 0:\n                print(l[b])\n                continue\n            if b % 2 == 0:\n                ans = k1[b // 2 + 1] - k1[a // 2]\n                x = b - 1\n                y = a + 1\n                ans -= k2[(x + 1) // 2] - k2[y // 2]\n            else:\n                ans = k2[(b + 1) // 2] - k2[a // 2]\n                x = b - 1\n                y = a + 1\n                ans -= k1[x // 2 + 1] - k1[y // 2]\n            print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    ans = [0]\n    for j in range(N - 1):\n        ans.append(l[j] - ans[j])\n    for i in range(Q):\n        (p, q) = list(map(int, input().split()))\n        if abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(ans[p - 1] + ans[q - 1])", "for _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    li = list(map(int, input().split()))\n    l = 0\n    s = []\n    s.append(0)\n    li2 = []\n    li2.append(0)\n    li2 = li2 + li\n    for i in range(1, N):\n        if i % 2 != 0:\n            l = l + li2[i]\n            s.append(l)\n        else:\n            l = l - li2[i]\n            s.append(l)\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if p < q:\n            c = p\n            p = q\n            q = c\n        if p == q:\n            print('UNKNOWN')\n        elif abs(p - q) % 2 == 0:\n            print('UNKNOWN')\n        elif p % 2 != 0:\n            print(s[q - 1] - s[p - 1])\n        else:\n            print(-1 * (s[q - 1] - s[p - 1]))", "import sys\nimport os\nfrom io import IOBase, BytesIO\nfor i in range(int(input())):\n    (n, q) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    b = [0] * n\n    for i in range(1, n):\n        b[i] = arr[i - 1]\n        if i % 2 == 1:\n            b[i] = b[i] + b[i - 1]\n        else:\n            b[i] = b[i - 1] - b[i]\n    for i in range(q):\n        (x, y) = map(int, sys.stdin.readline().split())\n        if x > y:\n            (x, y) = (y, x)\n        if (x + y) % 2 == 0:\n            print('UNKNOWN')\n            continue\n        temp = b[y - 1] - b[x - 1]\n        if x % 2 == 0:\n            temp = -1 * temp\n        print(temp)", "for xxx in range(int(input())):\n    (n, Q) = map(int, input().split())\n    b = list(map(int, input().split()))\n    l2 = [0] * n\n    x = 1\n    l2[0] = 1\n    for j in range(1, len(l2)):\n        l2[j] = b[j - 1] - x\n        x = l2[j]\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if (p + q) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(l2[p - 1] + l2[q - 1])", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    i = 2\n    j = 1\n    x = []\n    z = []\n    x.append(1)\n    z.append(1)\n    x.append(l[0] - 1)\n    while i < (n - 1) * 2:\n        if i % 2 == 0:\n            y = x[i - 1]\n            x.append(y)\n            i = i + 1\n            z.append(y)\n        else:\n            x.append(l[j] - y)\n            j = j + 1\n            i = i + 1\n    z.append(x[(n - 1) * 2 - 1])\n    for i in range(q):\n        (a, b) = map(int, input().split())\n        if (a + b) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            print(z[a - 1] + z[b - 1])", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    se = [0 for _ in range(N)]\n    so = [0 for _ in range(N)]\n    (se[0], so[1]) = (B[0], B[1])\n    for i in range(2, N - 1, 2):\n        se[i] += se[i - 2] + B[i]\n    for j in range(3, N - 1, 2):\n        so[j] += so[j - 2] + B[j]\n    for _ in range(Q):\n        (p, q) = map(int, input().split())\n        (p, q) = (max(p, q), min(p, q))\n        if p - q == 1:\n            print(B[min(p, q) - 1])\n            continue\n        if (p - q) % 2 == 1 and p - q >= 3:\n            (a, b) = (se, so) if p % 2 == 0 else (so, se)\n            s = a[p - 2] - (a[q - 3] if q - 3 >= 0 else 0)\n            s -= b[p - 3] - (b[q - 2] if q - 2 >= 0 else 0)\n            print(s)\n        else:\n            print('UNKNOWN')", "t = int(input())\nwhile t > 0:\n    (n, q) = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = [0] * n\n    a[0] = 0\n    for i in range(1, n):\n        if i % 2 == 0:\n            a[i] = a[i - 1] + b[i - 1]\n        else:\n            a[i] = a[i - 1] - b[i - 1]\n    while q > 0:\n        (x, y) = list(map(int, input().split()))\n        if x > y:\n            (x, y) = (y, x)\n        if (y - x) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            if x % 2 == 0:\n                su = a[y - 1] - a[x - 1]\n            else:\n                su = -(a[y - 1] - a[x - 1])\n            print(su)\n        q -= 1\n    t -= 1", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    se = [0 for _ in range(N)]\n    so = [0 for _ in range(N)]\n    (se[0], so[1]) = (B[0], B[1])\n    for i in range(2, N - 1, 2):\n        se[i] += se[i - 2] + B[i]\n    for j in range(3, N - 1, 2):\n        so[j] += so[j - 2] + B[j]\n    for _ in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(p - q) == 1:\n            print(B[min(p, q) - 1])\n            continue\n        (p, q) = (max(p, q), min(p, q))\n        if (p - q) % 2 == 1 and p - q >= 3:\n            (a, b) = (se, so) if p % 2 == 0 else (so, se)\n            s = a[p - 2] - (a[q - 3] if q - 3 >= 0 else 0)\n            s -= b[p - 3] - (b[q - 2] if q - 2 >= 0 else 0)\n            print(s)\n        else:\n            print('UNKNOWN')", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    se = [0 for _ in range(N)]\n    so = [0 for _ in range(N)]\n    (se[0], so[1]) = (B[0], B[1])\n    for i in range(2, N - 1, 2):\n        se[i] += se[i - 2] + B[i]\n    for j in range(3, N - 1, 2):\n        so[j] += so[j - 2] + B[j]\n    for _ in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(p - q) == 1:\n            print(B[min(p, q) - 1])\n        else:\n            if q > p:\n                (p, q) = (q, p)\n            if (p - q) % 2 == 1 and p - q >= 3:\n                (a, b) = (se, so) if p % 2 == 0 else (so, se)\n                s = a[p - 2] - (a[q - 3] if q - 3 >= 0 else 0)\n                s -= b[p - 3] - (b[q - 2] if q - 2 >= 0 else 0)\n                print(s)\n            else:\n                print('UNKNOWN')", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    se = [0 for _ in range(N)]\n    so = [0 for _ in range(N)]\n    for i in range(0, N - 1, 2):\n        se[i] += se[i - 2] + B[i] if i - 2 >= 0 else B[i]\n    for j in range(1, N - 1, 2):\n        so[j] += so[j - 2] + B[j] if j - 2 >= 0 else B[j]\n    for _ in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(p - q) == 1:\n            print(B[min(p, q) - 1])\n        else:\n            if q > p:\n                (p, q) = (q, p)\n            if (p - q) % 2 == 1 and p - q >= 3:\n                (a, b) = (se, so) if p % 2 == 0 else (so, se)\n                s = a[p - 2] - (a[q - 3] if q - 3 >= 0 else 0)\n                s -= b[p - 3] - (b[q - 2] if q - 2 >= 0 else 0)\n                print(s)\n            else:\n                print('UNKNOWN')", "t = int(input())\nfor i in range(t):\n    inp = input()\n    inp = inp.split(' ')\n    n = int(inp[0])\n    q = int(inp[1])\n    inp_b = input()\n    inp_b = inp_b.split(' ')\n    inp_arr = [int(k) for k in inp_b]\n    if n == 2:\n        for i in range(q):\n            inp_p_q = input()\n            inp_p_q = inp_p_q.split(' ')\n            p = int(inp_p_q[0])\n            q = int(inp_p_q[1])\n            low = min(p, q)\n            up = max(p, q)\n            if (up - low) % 2 == 0:\n                print('UNKNOWN')\n            else:\n                print(inp_arr[0])\n    else:\n        b_odd = [inp_arr[0]]\n        b_even = [inp_arr[1]]\n        for i in range(2, n - 1, 2):\n            b_odd.append(b_odd[-1] + inp_arr[i])\n        for i in range(3, n - 1, 2):\n            b_even.append(b_even[-1] + inp_arr[i])\n        for i in range(q):\n            inp_p_q = input()\n            inp_p_q = inp_p_q.split(' ')\n            p = int(inp_p_q[0])\n            q = int(inp_p_q[1])\n            low = min(p, q)\n            up = max(p, q)\n            if (up - low) % 2 == 0:\n                print('UNKNOWN')\n            elif up % 2 == 0:\n                if up - low == 1:\n                    print(inp_arr[low - 1])\n                else:\n                    if low != 1:\n                        pos = b_odd[(up - 2) // 2] - b_odd[(low - 3) // 2]\n                        neg = b_even[(up - 4) // 2] - b_even[(low - 3) // 2]\n                    else:\n                        pos = b_odd[(up - 2) // 2]\n                        neg = b_even[(up - 4) // 2]\n                    print(pos - neg)\n            elif up - low == 1:\n                print(inp_arr[low - 1])\n            else:\n                if low != 2:\n                    pos = b_even[(up - 3) // 2] - b_even[(low - 4) // 2]\n                    neg = b_odd[(up - 3) // 2] - b_odd[(low - 2) // 2]\n                else:\n                    pos = b_even[(up - 3) // 2]\n                    neg = b_odd[(up - 3) // 2] - b_odd[0]\n                print(pos - neg)", "tcase = int(input())\nwhile tcase > 0:\n    tcase -= 1\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == 1:\n        while q > 0:\n            q -= 1\n            (l, r) = map(int, input().split())\n            print('UNKNOWN')\n    else:\n        var = dict()\n        var[1] = 0\n        var[2] = l[0]\n        for i in range(3, n + 1):\n            var[i] = l[i - 2] - l[i - 3] + var[i - 2]\n        while q > 0:\n            q -= 1\n            (l, r) = map(int, input().split())\n            if l % 2 + r % 2 == 1:\n                print(var[l] + var[r])\n            else:\n                print('UNKNOWN')", "from collections import defaultdict as dc\nimport sys\nimport math\n\ndef inp():\n    p = sys.stdin.readline()\n    return p\nfor _ in range(int(inp())):\n    (n, q) = list(map(int, inp().split()))\n    bl = list(map(int, inp().split()))\n    bo = []\n    be = []\n    l = 0\n    z = 0\n    for i in range(n - 1):\n        if (i + 1) % 2 == 0:\n            z = z + bl[i]\n            be.append(z)\n        else:\n            l = l + bl[i]\n            bo.append(l)\n    for t in range(q):\n        (a, b) = list(map(int, inp().split()))\n        if abs(b - a) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            x = min(a, b)\n            y = max(a, b)\n            ans1 = 0\n            ans2 = 0\n            if x % 2 == 0:\n                if (y - 2) // 2 < 0:\n                    x1 = 0\n                else:\n                    x1 = bo[(y - 2) // 2]\n                if x // 2 - 1 < 0:\n                    x2 = 0\n                else:\n                    x2 = bo[x // 2 - 1]\n                if (y - 1) // 2 - 1 < 0:\n                    x3 = 0\n                else:\n                    x3 = be[(y - 1) // 2 - 1]\n                if (x - 2) // 2 - 1 < 0:\n                    x4 = 0\n                else:\n                    x4 = be[(x - 2) // 2 - 1]\n                ans1 = x1 - x2\n                ans2 = x3 - x4\n                print(ans2 - ans1)\n            else:\n                if (y - 2) // 2 < 0:\n                    x1 = 0\n                else:\n                    x1 = bo[(y - 2) // 2]\n                if x // 2 - 1 < 0:\n                    x2 = 0\n                else:\n                    x2 = bo[x // 2 - 1]\n                if (y - 2) // 2 - 1 < 0:\n                    x3 = 0\n                else:\n                    x3 = be[(y - 2) // 2 - 1]\n                if (x - 1) // 2 - 1 < 0:\n                    x4 = 0\n                else:\n                    x4 = be[(x - 1) // 2 - 1]\n                ans1 = x1 - x2\n                ans2 = x3 - x4\n                print(ans1 - ans2)", "for _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    B = list(map(int, input().split()))\n    B.insert(0, 0)\n    arr1 = [0] * N\n    arr1[0] = 0\n    for i in range(1, N):\n        if i % 2 == 0:\n            arr1[i] = arr1[i - 1] + B[i]\n        else:\n            arr1[i] = arr1[i - 1] - B[i]\n    for i in range(Q):\n        (p, q) = map(int, input().split())\n        if abs(q - p) % 2 == 0:\n            print('UNKNOWN')\n        else:\n            (p, q) = sorted((p, q))\n            if p % 2 == 0:\n                print(arr1[q - 1] - arr1[p - 1])\n            else:\n                print(arr1[p - 1] - arr1[q - 1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    B = [int(x) for x in input().split()]\n    C = [0] * n\n    neg = False\n    for j in range(len(B)):\n        if not neg:\n            C[j + 1] = C[j] + B[j]\n        else:\n            C[j + 1] = C[j] - B[j]\n        neg = not neg\n    for j in range(q):\n        (a, b) = map(int, input().split())\n        if a > b:\n            temp = a\n            a = b\n            b = temp\n        if a % 2 == 0:\n            condition = True\n        else:\n            condition = False\n        if (a + b) % 2 == 0:\n            print('UNKNOWN')\n            continue\n        pos = True\n        s = C[b - 1] - C[a - 1]\n        if condition:\n            s = -s\n        print(s)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [a[0], a[1]]\n    for i in range(2, n - 1):\n        l.append(l[-2] + a[i])\n    l = [0] + l\n    for __ in range(q):\n        (p, q) = sorted(map(int, input().split()))\n        p -= 1\n        q -= 1\n        if not (p - q) % 2:\n            print('UNKNOWN')\n        else:\n            print(l[q] - l[q - 1] + l[p] - (l[p - 1] if p - 1 >= 0 else 0))"]