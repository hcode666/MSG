["from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = min(a)\n    flag = 0\n    for i in a:\n        if i - m <= m and m != i:\n            flag = 1\n            break\n    if flag == 1:\n        print(n)\n    else:\n        print(n - a.count(m))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = min(a)\n    flag = 0\n    for i in a:\n        if i - m <= m and m != i:\n            flag = 1\n            break\n    if flag == 1:\n        print(n)\n    else:\n        print(n - a.count(m))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = min(a)\n    flag = 0\n    for i in a:\n        if i - m <= m and m != i:\n            flag = 1\n            break\n    if flag == 1:\n        print(n)\n    else:\n        print(n - a.count(m))", "from collections import Counter\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = Counter(A)\n    C = list(set(A))\n    if len(C) == 1:\n        print(0)\n    else:\n        C.sort()\n        x = C[0]\n        y = C[1]\n        p = A.count(x)\n        if y <= 2 * x:\n            print(N)\n        else:\n            print(N - p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    m = L[0]\n    a = 1\n    ans = -1\n    for i in range(1, n):\n        if L[i] == m:\n            a += 1\n        else:\n            ans = L[i]\n            break\n    if a == n:\n        print(0)\n    elif ans > 2 * m:\n        print(n - a)\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    m = L[0]\n    a = 1\n    ans = -1\n    for i in range(1, n):\n        if L[i] == m:\n            a += 1\n        else:\n            ans = L[i]\n            break\n    if a == n:\n        print(0)\n    elif ans > 2 * m:\n        print(n - a)\n    else:\n        print(n)", "def snek(a, b):\n    if a / 2 > b:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = n\n    for j in set(l):\n        c = 0\n        s = j\n        for k in range(n):\n            if l[k] != j and (not snek(l[k], s)):\n                break\n            elif j != l[k]:\n                c += 1\n        else:\n            ans = min(ans, c)\n    print(ans)", "def valid(a, b):\n    if a / 2 > b:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = n\n    for i in set(l):\n        c = 0\n        el = i\n        for j in range(n):\n            if l[j] != i and (not valid(l[j], el)):\n                break\n            elif i != l[j]:\n                c += 1\n        else:\n            ans = min(ans, c)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = min(l)\n    if n == 1:\n        print(0)\n    elif 0 in l:\n        print(n - l.count(0))\n    else:\n        ans = n\n        f = 1\n        for i in l:\n            if i > x and i <= 2 * x:\n                f = 0\n        if f:\n            ans = min(ans, n - l.count(x))\n        print(ans)", "from math import gcd\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = 0\n    for i in l:\n        g = gcd(i, g)\n    x = min(l)\n    if n == 1:\n        print(0)\n    elif 0 in l:\n        print(n - l.count(0))\n    else:\n        ans = n\n        f = 1\n        for i in l:\n            if i > x and i <= 2 * x:\n                f = 0\n        if f:\n            ans = min(ans, n - l.count(x))\n        if 2 * g not in l:\n            ans = min(ans, n - l.count(g))\n        print(ans)", "for t in range(int(input())):\n\n    def solution():\n        N = int(input())\n        A = list(input().split())\n\n        def get_key(val, dic):\n            for (key, value) in dic.items():\n                if val == value:\n                    return key\n        for i in range(N):\n            A[i] = int(A[i])\n        dic = {}\n        for element in A:\n            if element not in dic:\n                dic[element] = 0\n            dic[element] += 1\n        keys = sorted(dic.keys())\n        import math\n        if len(keys) == 1:\n            return 0\n        elif keys[1] <= 2 * keys[0]:\n            return N\n        else:\n            return N - dic.get(keys[0])\n    print(solution())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mini = min(a)\n    cnt = a.count(mini)\n    flag = False\n    res = 0\n    for i in a:\n        if i != mini and i <= 2 * mini:\n            flag = True\n            break\n    if flag:\n        res = n\n    else:\n        res = n - cnt\n    print(res)", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    min_v = min(A)\n    min_c = A.count(min(A))\n    flag = True\n    for i in range(len(A)):\n        if A[i] != min_v:\n            if math.ceil(A[i] / 2) - 1 < min_v:\n                flag = False\n                break\n    if flag:\n        print(N - min_c)\n    else:\n        print(N)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mini = min(a)\n    count = 0\n    for i in range(n):\n        if a[i] == mini:\n            count = count + 1\n    flag = False\n    for i in range(n):\n        if a[i] == mini:\n            continue\n        elif a[i] <= 2 * mini:\n            flag = True\n            break\n        else:\n            continue\n    if flag == True:\n        print(n)\n    else:\n        print(n - count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mini = min(a)\n    count = 0\n    for i in range(n):\n        if a[i] == mini:\n            count = count + 1\n    flag = False\n    for i in range(n):\n        if a[i] == mini:\n            continue\n        elif a[i] <= 2 * mini:\n            flag = True\n            break\n        else:\n            continue\n    if flag == True:\n        print(n)\n    else:\n        print(n - count)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    i = 0\n    cnt = 0\n    ans = 0\n    while i < n and a[i] == a[0]:\n        i += 1\n    cnt = i\n    while i < n:\n        if a[i] <= 2 * a[0]:\n            ans = n\n            break\n        i += 1\n    if ans == n:\n        print(ans)\n    else:\n        print(n - cnt)\n    t -= 1", "tc = int(input())\nfor j in range(tc):\n    n = int(input())\n    b = list(map(int, input().rstrip().split()))\n    b.sort()\n    sm = 0\n    flg = 0\n    zc = 0\n    r = b[0]\n    for g in range(n):\n        if b[g] == 0:\n            zc += 0\n        else:\n            zc += 1\n    if b[0] == 0:\n        print(zc)\n        continue\n    for i in range(1, n):\n        if b[i] == r:\n            sm += 0\n            continue\n        if b[i] - r <= r:\n            flg = 1\n            break\n        if b[i] - r > r:\n            sm += 1\n    if flg == 1:\n        print(n)\n        continue\n    else:\n        print(sm)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    mn1 = a[0]\n    mn2 = -1\n    freq = 0\n    for i in range(n):\n        if mn1 != a[i]:\n            mn2 = a[i]\n            break\n        freq += 1\n    if mn2 != -1:\n        print(n - freq if mn1 * 2 < mn2 else n)\n    else:\n        print('0')\n    return\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    mn = min(arr)\n    smcnt = arr.count(mn)\n    canBe = True\n    for i in range(n):\n        if arr[i] != mn:\n            if arr[i] - 1 >> 1 < mn:\n                canBe = False\n    if canBe:\n        print(n - smcnt)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    cnt = 0\n    for i in arr:\n        if i != m:\n            cnt += 1\n    for i in arr:\n        if i != m and i <= m * 2:\n            print(n)\n            break\n    else:\n        print(cnt)", "from sys import stdin\nimport sys\nt = int(stdin.readline())\nwhile t > 0:\n    t -= 1\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    ans = 0\n    flag = True\n    first_min = a[0]\n    for i in a:\n        if i < first_min:\n            first_min = i\n    first_min_occurence = 0\n    for i in a:\n        if i == first_min:\n            first_min_occurence += 1\n    if first_min == 0 or first_min_occurence == n:\n        ans = n - first_min_occurence\n    else:\n        for i in a:\n            if i != first_min and first_min != i % (i - first_min):\n                flag = False\n                break\n    if flag:\n        ans = n - first_min_occurence\n    else:\n        ans = n\n    print(ans)", "import math\ntry:\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        r = min(l)\n        c = l.count(r)\n        f = 0\n        for i in range(0, len(l)):\n            if l[i] == r:\n                continue\n            else:\n                y = math.ceil(l[i] / 2) - 1\n                if not y >= r:\n                    f = 1\n                    break\n        if f == 1:\n            ans = len(l)\n        else:\n            ans = len(l) - c\n        print(ans)\nexcept:\n    pass", "import math\ntry:\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        r = min(l)\n        c = l.count(r)\n        f = 0\n        for i in range(0, len(l)):\n            if l[i] == r:\n                continue\n            elif l[i] <= 2 * r:\n                f = 1\n                break\n        if f == 1:\n            ans = len(l)\n        else:\n            ans = len(l) - c\n        print(ans)\nexcept:\n    pass", "import math\nT = int(input())\nfor i in range(T):\n    check = 0\n    N = int(input())\n    A = list(map(int, input().split()))\n    small = min(A)\n    smallfreq = A.count(small)\n    for j in A:\n        if j == small:\n            continue\n        range_j = math.ceil(j / 2) - 1\n        if small in range(range_j + 1):\n            check = 0\n        else:\n            check = 1\n            break\n    if check == 0:\n        print(N - smallfreq)\n    else:\n        print(N)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    s = min(l)\n    for i in l:\n        if i <= 2 * s and i != s:\n            print(n)\n            break\n    else:\n        print(n - l.count(s))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    mini = min(a)\n    sts = False\n    for i in range(n):\n        if a[i] < mini * 2 + 1 and a[i] != mini:\n            sts = True\n            break\n    if sts == False:\n        mc = a.count(mini)\n        print(n - mc)\n    else:\n        print(n)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    mini = min(a)\n    sts = False\n    for i in range(n):\n        if a[i] < mini * 2 + 1 and a[i] != mini:\n            sts = True\n            break\n    if sts == False:\n        mc = a.count(mini)\n        print(n - mc)\n    else:\n        print(n)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    mini = min(a)\n    sts = False\n    for i in range(n):\n        if a[i] == mini:\n            continue\n        elif a[i] < mini * 2 + 1:\n            sts = True\n            break\n    if sts == False:\n        mc = a.count(mini)\n        print(n - mc)\n    else:\n        print(n)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    m = min(seq)\n    if any((k % (k - m) != m for k in seq if k != m)):\n        print(n)\n    else:\n        print(n - seq.count(m))", "import math, os, io, sys\nfrom collections import Counter\nimport heapq\nfrom collections import deque\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    n = getInt()\n    c = Counter(getList())\n    if len(c) == 1:\n        return 0\n    mn = min(c)\n    cnt = c.pop(mn)\n    mn2 = min(c)\n    if mn2 >= 2 * mn + 1:\n        return n - cnt\n    else:\n        return n\nfor _ in range(getInt()):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = dict()\n    for i in arr:\n        d[i] = d.get(i, 0) + 1\n    mini = arr[0]\n    for i in range(1, len(arr)):\n        if mini > arr[i]:\n            mini = arr[i]\n    cnt = 0\n    flag = False\n    for i in d:\n        if i - mini == 0:\n            continue\n        elif i % (i - mini) == mini:\n            cnt += d[i]\n        else:\n            flag = True\n            break\n    if flag:\n        print(n)\n    else:\n        print(cnt)", "def fun(arr, n):\n    h = {arr[0]: 1}\n    sec_min = arr[0]\n    mini = arr[0]\n    for i in range(1, n):\n        if arr[i] in h:\n            h[arr[i]] += 1\n        else:\n            h[arr[i]] = 1\n            if arr[i] < mini:\n                sec_min = mini\n                mini = arr[i]\n            elif mini == sec_min:\n                sec_min = arr[i]\n            elif arr[i] < sec_min:\n                sec_min = arr[i]\n    if mini == sec_min:\n        return 0\n    if sec_min > 2 * mini:\n        return n - h[mini]\n    else:\n        return n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(fun(arr, n))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    a = 0\n    flag = True\n    s = 0\n    for i in range(N):\n        if m == l[i]:\n            a += 1\n        else:\n            b = l[i] - m\n            if l[i] % b == m:\n                s += 1\n            else:\n                flag = False\n                break\n    if flag:\n        print(N - a)\n    else:\n        print(N)", "import math\nT = int(input())\nfor i in range(T):\n    size = int(input())\n    e = [int(e) for e in input().split()]\n    minVal = min(e)\n    countMin = e.count(minVal)\n    flag = False\n    for ele in e:\n        if ele != minVal:\n            if minVal >= 0 and minVal <= math.ceil(ele / 2) - 1:\n                continue\n            else:\n                flag = True\n                break\n    if flag:\n        op = size\n    else:\n        op = size - countMin\n    print(op)", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    Min = min(arr)\n    ans = c = 0\n    for i in arr:\n        if i == Min:\n            c += 1\n        elif i <= 2 * Min:\n            ans = N\n    print(ans) if ans == N else print(N - c)", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    Min = min(arr)\n    ans = c = 0\n    for i in arr:\n        if i == Min:\n            c += 1\n        elif i <= 2 * Min:\n            ans = N\n    if ans == N:\n        print(ans)\n    else:\n        print(N - c)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if 0 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 not in a:\n        b = a.count(1)\n        print(n - b)\n    else:\n        m = min(a)\n        f = 1\n        for i in range(n):\n            if a[i] != m:\n                if a[i] % (a[i] - m) != m:\n                    f = 0\n                    break\n            if f == 0:\n                break\n        if f == 1:\n            print(n - a.count(m))\n        else:\n            print(n)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if 0 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 not in a:\n        b = a.count(1)\n        print(n - b)\n    else:\n        m = min(a)\n        f = 1\n        for i in range(n):\n            if a[i] != m:\n                if a[i] % (a[i] - m) != m:\n                    f = 0\n                    break\n            if f == 0:\n                break\n        if f == 1:\n            print(n - a.count(m))\n        else:\n            print(n)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if 0 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 not in a:\n        b = a.count(1)\n        print(n - b)\n    else:\n        m = min(a)\n        f = 1\n        for i in range(n):\n            if a[i] != m:\n                if a[i] % (a[i] - m) != m:\n                    f = 0\n                    break\n            if f == 0:\n                break\n        if f == 1:\n            print(n - a.count(m))\n        else:\n            print(n)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if 0 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 in a:\n        b = a.count(0)\n        print(n - b)\n    elif 1 in a and 2 not in a:\n        b = a.count(1)\n        print(n - b)\n    else:\n        m = min(a)\n        f = 1\n        for i in range(n):\n            if a[i] != m:\n                if a[i] % (a[i] - m) != m:\n                    f = 0\n                    break\n            if f == 0:\n                break\n        if f == 1:\n            print(n - a.count(m))\n        else:\n            print(n)", "test = int(input())\nfor i in range(0, test):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    counter = 0\n    smalli = 10000000000\n    for i in range(0, n):\n        if lis[i] < smalli:\n            smalli = lis[i]\n            counter = 1\n        elif lis[i] == smalli:\n            counter = counter + 1\n    flag = 1\n    for j in range(0, n):\n        if lis[j] != smalli and lis[j] - smalli <= smalli:\n            flag = 0\n            break\n    if flag or smalli == 0:\n        print(n - counter)\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, str(input()).split()))\n    ar.sort()\n    i = 1\n    while i < n and ar[i] == ar[0]:\n        i += 1\n    cou = i\n    ans = n - i\n    while i < n:\n        if ar[i] <= 2 * ar[0]:\n            ans = n\n            break\n        i += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dct = dict()\n    for x in arr:\n        if x in dct:\n            dct[x] += 1\n        else:\n            dct[x] = 1\n    b = list(dct.keys())\n    if len(b) == 1:\n        print(0)\n        continue\n    if 0 in b:\n        print(n - dct[0])\n    else:\n        flag = 1\n        ct = 0\n        p = min(b)\n        for x in b:\n            if x != p:\n                if x > 2 * p:\n                    ct += dct[x]\n                else:\n                    flag = 0\n                    break\n        if flag:\n            print(ct)\n        else:\n            print(n)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(0) > 0:\n        x = l.count(0)\n        print(n - x)\n        continue\n    k = l[0]\n    for i in range(1, n):\n        k = gcd(k, l[i])\n    l.sort()\n    f = 0\n    x = l.count(l[0])\n    for i in range(x, n):\n        if l[i] <= l[0] * 2:\n            f = 1\n            break\n    if f:\n        print(n)\n    else:\n        print(n - x)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dct = dict()\n    for x in arr:\n        if x in dct:\n            dct[x] += 1\n        else:\n            dct[x] = 1\n    b = list(dct.keys())\n    if len(b) == 1:\n        print(0)\n        continue\n    if 0 in b:\n        print(n - dct[0])\n    else:\n        flag = 1\n        ct = 0\n        p = min(b)\n        for x in b:\n            if x != p:\n                if x > 2 * p:\n                    ct += dct[x]\n                else:\n                    flag = 0\n                    break\n        if flag:\n            print(ct)\n        else:\n            print(n)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        l.sort()\n        it = 0\n        while it < n and l[it] == l[0]:\n            it += 1\n        if it < n and l[it] <= 2 * l[0]:\n            print(n)\n        else:\n            print(n - it)", "import math\n\ndef codechef(n, arr):\n    arr.sort()\n    mincnt = 0\n    for i in range(n):\n        if arr[i] == arr[0]:\n            mincnt += 1\n    if mincnt == n:\n        return 0\n    res = math.ceil(arr[mincnt] / 2) - 1\n    if res < arr[0]:\n        ans = n\n    else:\n        ans = n - mincnt\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(codechef(n, arr))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    m = min(A)\n    c = A.count(m)\n    i = 0\n    flag = True\n    for i in range(n):\n        if A[i] == m:\n            continue\n        if A[i] & 1:\n            x = A[i] // 2\n        else:\n            x = A[i] // 2 - 1\n        if x < m:\n            flag = False\n            print(n)\n            break\n    if i == n - 1 and flag == True:\n        print(n - c)\n    t -= 1", "import sys\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    if n == 1:\n        print(0)\n    else:\n        for j in range(1, n):\n            if a[0] > a[j]:\n                (a[0], a[j]) = (a[j], a[0])\n        changes_num = 0\n        for i in range(1, n):\n            if a[0] == a[i]:\n                continue\n            elif a[0] < 0.5 * a[i]:\n                changes_num += 1\n            else:\n                changes_num = n\n                break\n        print(changes_num)", "import sys, math\n\ndef helper(n, arr):\n    m = min(arr)\n    count = 0\n    for i in arr:\n        if i == m:\n            continue\n        elif m < math.ceil(i / 2):\n            count += 1\n        else:\n            return n\n    return count\nt = int(sys.stdin.readline())\nfor tt in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    sys.stdout.write(str(helper(n, arr)) + '\\n')", "import math\ntest_cases = int(input())\nfor i in range(0, test_cases):\n    n = int(input())\n    c = 0\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[0]\n    c = a.count(b)\n    flag = 0\n    counter = 0\n    for j in range(0, len(a)):\n        if a[j] == b:\n            continue\n        elif math.ceil(a[j] / 2) - 1 < b:\n            flag = 1\n            break\n        else:\n            counter = counter + 1\n    if flag == 1:\n        print(len(a))\n    else:\n        print(counter)", "import math\ntry:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        minn = min(arr)\n        cnt_min = arr.count(minn)\n        f = 0\n        for i in range(n):\n            if arr[i] != minn:\n                x = math.ceil(arr[i] / 2) - 1\n                if x < minn:\n                    f = 1\n        if f == 1:\n            print(n)\n        else:\n            print(n - cnt_min)\nexcept:\n    pass", "import math\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    d = {}\n    for i in num:\n        if d.get(i) is None:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = min(num)\n    c = 0\n    for i in num:\n        if i != m:\n            if m >= 0 and m <= math.ceil(i / 2) - 1:\n                c += 1\n            else:\n                c = n\n                break\n    if c == n:\n        print(c)\n    else:\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    p = min(li)\n    count = 0\n    bool = True\n    for t in range(len(li)):\n        if li[t] == p:\n            count += 1\n    for i in range(len(li)):\n        if li[i] != p:\n            if li[i] % (li[i] - p) != p:\n                bool = False\n                break\n            else:\n                pass\n        else:\n            pass\n    if bool:\n        print(len(li) - count)\n    else:\n        print(len(li))", "t = int(input())\nfor _ in range(t):\n    all = False\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    m = min(arr)\n    c = arr.count(m)\n    for i in arr:\n        if i == m:\n            continue\n        elif i <= 2 * m:\n            all = True\n            break\n    if all:\n        print(n)\n    else:\n        print(n - c)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    m = min(x)\n    d = x.count(m)\n    c = True\n    for i in x:\n        if i == m:\n            continue\n        elif i <= 2 * m:\n            c = False\n            break\n    if c:\n        print(len(x) - d)\n    else:\n        print(len(x))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = min(x)\n    s = x.count(c)\n    count = 0\n    for i in range(n):\n        if x[i] == c or x[i] > 2 * c:\n            continue\n        elif x[i] <= 2 * c:\n            count += 1\n            break\n    if count:\n        print(n)\n    else:\n        print(n - s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    count = 0\n    for j in a:\n        if j % 2 == 0:\n            if j == b:\n                pass\n            elif j / 2 - 1 < b:\n                count = n\n                break\n            else:\n                count += 1\n        elif j == b:\n            pass\n        elif int(j / 2) < b:\n            count = n\n            break\n        else:\n            count += 1\n    print(count)", "from math import ceil\nfor i in range(int(input())):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    minim = min(nums)\n    low = False\n    for j in range(len(nums)):\n        if nums[j] != minim and ceil(nums[j] / 2) - 1 < minim:\n            low = True\n            break\n    if not low:\n        print(n - nums.count(minim))\n    else:\n        print(n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    z = list(map(int, input().split()))\n    k = min(z)\n    lov = 0\n    c = 0\n    for i in z:\n        if i != k:\n            if i % 2 == 0:\n                f = i // 2 - 1\n            else:\n                f = i // 2\n            if k >= 0 and k <= f:\n                c += 1\n            else:\n                lov = 1\n                break\n    if lov == 1:\n        print(len(z))\n    else:\n        print(c)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    nums = input()\n    nums = nums.split()\n    total = 0\n    nums2 = []\n    epic = 1\n    for num in nums:\n        nums2.append(int(num))\n    nums2.sort()\n    start_val = 0\n    prev_count = nums2[0]\n    for num in nums2:\n        if num == prev_count:\n            start_val += 1\n        elif (num - 1) // 2 >= nums2[0] or num == nums2[0]:\n            pass\n        else:\n            print(N)\n            epic = 0\n            break\n    if epic == 1:\n        print(N - start_val)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    z = list(map(int, input().split()))\n    k = min(z)\n    lov = 0\n    c = 0\n    for i in z:\n        if i != k:\n            if i % 2 == 0:\n                f = i // 2 - 1\n            else:\n                f = i // 2\n            if k >= 0 and k <= f:\n                c += 1\n            else:\n                lov = 1\n                break\n    if lov == 1:\n        print(len(z))\n    else:\n        print(c)\n    t -= 1", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = Counter(arr)\n    mini = min(arr)\n    count = c[mini]\n    ans = 0\n    flag = 0\n    for (key, val) in c.items():\n        if key == mini:\n            continue\n        if key % 2 == 0:\n            up = key // 2 - 1\n        else:\n            up = key // 2\n        if mini <= up:\n            ans += val\n        else:\n            flag = 1\n            break\n    if flag:\n        print(n)\n    else:\n        print(ans)", "def sol(n, l):\n    m = min(l)\n    if m == 0:\n        return n - l.count(0)\n    else:\n        for ele in l:\n            if ele == m:\n                continue\n            elif ele <= 2 * m:\n                return n\n        return n - l.count(m)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(sol(n, l))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    flag = 0\n    for j in range(N):\n        if a[j] != b and a[j] % (a[j] - b) != b:\n            flag = 1\n            break\n    count = 0\n    if flag == 0:\n        for j in range(N):\n            if a[j] != b:\n                count += 1\n    else:\n        count = N\n    print(count)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    flag = 0\n    for j in range(N):\n        if a[j] != b and a[j] % (a[j] - b) != b:\n            flag = 1\n            break\n    count = 0\n    if flag == 0:\n        for j in range(N):\n            if a[j] != b:\n                count += 1\n    else:\n        count = N\n    print(count)", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    d = Counter(l)\n    b = min(l)\n    g = 1\n    for val in l:\n        if val != b:\n            a = math.ceil(val / 2) - 1\n            if a < b:\n                g = 0\n                break\n    if g == 0:\n        print(n)\n    else:\n        print(n - d[b])", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    d = Counter(l)\n    b = min(l)\n    g = 1\n    for val in l:\n        if val != b:\n            a = math.ceil(val / 2) - 1\n            if a < b:\n                g = 0\n                break\n    if g == 0:\n        print(n)\n    else:\n        print(n - d[b])", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    min_i = min(arr)\n    min_c = 0\n    for i in arr:\n        if i == min_i:\n            min_c += 1\n    if min_i == 0:\n        print(n - min_c)\n    else:\n        flag = 0\n        for i in arr:\n            val = i // 2 - 1 if i % 2 == 0 else i // 2\n            if i != min_i and (not 0 <= min_i <= val):\n                flag = 1\n                break\n        if flag:\n            print(n)\n        else:\n            print(n - min_c)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    c = a.count(m)\n    r = 0\n    for i in range(n):\n        if a[i] == m:\n            continue\n        elif a[i] <= 2 * m:\n            r = 1\n            break\n    if r:\n        print(n)\n    else:\n        print(n - c)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    c = b[0]\n    count = 0\n    check = 0\n    for i in b:\n        if i != c:\n            if (i + 1) // 2 - 1 >= c:\n                count += 1\n            else:\n                print(a)\n                check = 1\n                break\n    if check == 0:\n        print(count)", "import numpy as np\no = int(input())\nfor i in range(o):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = min(y)\n    a = int(np.ceil(z / 2) - 1)\n    n = len(y)\n    y = [i for i in y if i != z]\n    if len(y) == 0:\n        print(0)\n        continue\n    m = min(y)\n    b = int(np.ceil(m / 2) - 1)\n    if b < z:\n        print(n)\n    else:\n        print(len(y))", "t = int(input())\n\ndef sp():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=False)\n    p = a[0]\n    c = 0\n    for i in range(1, len(a)):\n        if a[i] == p:\n            pass\n        if p == 0:\n            c = len(a) - a.count(0)\n            break\n        elif a[i] - p == 1:\n            c = len(a) - a.count(0)\n            break\n        elif a[i] - p > 1:\n            if a[i] % (a[i] - p) == 0:\n                c = len(a) - a.count(0)\n                break\n            elif a[i] % (a[i] - p) == p:\n                c += 1\n            elif a[i] % (a[i] - p) != p:\n                c = len(a) - a.count(0)\n                break\n    print(c)\nfor _ in range(t):\n    sp()", "t = int(input())\n\ndef sp():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=False)\n    p = a[0]\n    c = 0\n    d = 0\n    l = []\n    for i in range(1, len(a)):\n        if a[i] == p:\n            pass\n        if p == 0:\n            c = len(a) - a.count(0)\n            break\n        elif a[i] - p == 1:\n            c = len(a) - a.count(0)\n            break\n        elif a[i] - p > 1:\n            if a[i] % (a[i] - p) == 0:\n                c = len(a) - a.count(0)\n                break\n            elif a[i] % (a[i] - p) == p:\n                c += 1\n            elif a[i] % (a[i] - p) != p:\n                c = len(a) - a.count(0)\n                break\n    print(c)\nfor _ in range(t):\n    sp()", "import sys\nfrom math import ceil\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    mi = min(arr)\n    mic = arr.count(mi)\n    fg = 1\n    for i in range(n):\n        if arr[i] != mi:\n            if ceil(arr[i] / 2) - 1 < mi:\n                fg = 0\n                break\n    print(n if not fg else n - mic)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    m = min(A)\n    mc = 0\n    check = True\n    for i in A:\n        if i == m:\n            mc += 1\n        elif math.ceil(i / 2) - 1 >= m:\n            continue\n        else:\n            check = False\n    if check:\n        print(n - mc)\n    else:\n        print(n)", "import math\nfor i in range(int(input())):\n    l = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    a = [e for e in a if e != m]\n    flag = False\n    for i in a:\n        if m in range(0, math.ceil(i / 2)):\n            continue\n        else:\n            flag = True\n            break\n    if flag:\n        print(l)\n    else:\n        print(len(a))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    mine = min(a)\n    cnt = a.count(mine)\n    c = False\n    for i in a:\n        if i == mine:\n            continue\n        elif math.ceil(i / 2) - 1 < mine:\n            c = True\n            break\n    if c == True:\n        print(n)\n    else:\n        print(n - cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n > 1:\n        l.sort()\n        c = 1\n        i = 1\n        while i < n:\n            if l[i] == l[0]:\n                i += 1\n            else:\n                break\n        if i == n:\n            print('0')\n        elif l[0] >= l[i] - l[0]:\n            print(n)\n        else:\n            print(n - i)\n    else:\n        print(n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    k = min(l)\n    c = 0\n    t = 0\n    for i in range(len(l)):\n        if l[i] == k:\n            t = t + 1\n            continue\n        else:\n            r = math.ceil(l[i] / 2) - 1\n            if r >= k:\n                continue\n            else:\n                c += 1\n    if c > 0:\n        print(n)\n    else:\n        print(n - t)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    smallest = min(arr)\n    count = 0\n    for i in arr:\n        if i == smallest:\n            continue\n        if i % 2 == 0:\n            if int(i / 2) - 1 < smallest:\n                count = -1\n                break\n        elif int(i / 2) < smallest:\n            count = -1\n            break\n    if count == -1:\n        print(n)\n    else:\n        print(n - arr.count(smallest))", "import sys, os.path\nfrom math import gcd, floor, ceil\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ninput = lambda : sys.stdin.readline().replace('\\n', '').strip()\ntup = lambda typ=int: map(typ, input().split())\nlis = lambda typ=int: list(map(typ, input().split()))\npr = lambda n: sys.stdout.write(str(n) + '\\n')\nprl = lambda n: sys.stdout.write(str(n) + ' ')\nfor _ in range(int(input())):\n    n = int(input())\n    l = lis()\n    l.sort()\n    mi = l[0]\n    cnt = l.count(mi)\n    f = 0\n    for i in range(cnt, n):\n        if ceil(l[i] / 2) - 1 < mi:\n            f = 1\n            break\n    if f:\n        pr(n)\n    else:\n        pr(n - cnt)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()[:n]))\n    a = min(l)\n    for item in l:\n        if item <= 2 * a and item != a:\n            print(n)\n            break\n    else:\n        print(n - l.count(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()[:n]))\n    a = min(l)\n    for i in l:\n        if i <= 2 * a and i != a:\n            print(n)\n            break\n    else:\n        print(n - l.count(a))", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    mini = min(array)\n    count = 0\n    for x in array:\n        if x == mini:\n            pass\n        elif x % (x - mini) == mini:\n            count += 1\n        else:\n            count = len(array) - array.count(0)\n            break\n    print(count)", "import math\nt = int(input())\nwhile t:\n    flag = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    minn = min(l)\n    p = l.count(minn)\n    for i in l:\n        if i != minn:\n            if math.ceil(i / 2) - 1 < minn:\n                print(n)\n                flag = 1\n                break\n    if flag == 0:\n        print(n - p)\n    t -= 1", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    c = 0\n    if m == 0:\n        print(n - a.count(m))\n        continue\n    for i in a:\n        if i != m:\n            mg = i // 2\n            if i % 2 == 0:\n                mg -= 1\n            if m > mg:\n                c = 1\n                break\n    if c:\n        print(n)\n    else:\n        print(n - a.count(m))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    ans = 0\n    f = 0\n    mn = min(a)\n    mnc = a.count(mn)\n    for i in a:\n        if i % 2 == 0:\n            x = i // 2 - 1\n        else:\n            x = i // 2\n        if x >= 0:\n            d[i] = x\n        else:\n            d[i] = 0\n    for i in a:\n        if i != mn:\n            if mn <= d[i]:\n                ans += 1\n            else:\n                f = 1\n                break\n    if f:\n        ans = n\n    print(ans)\n    t -= 1"]