["from collections import Counter\n\ndef c(n, r):\n    return fact(n) / (fact(n - r) * fact(r))\n\ndef fact(m):\n    if m == 0 or m == 1:\n        return 1\n    res = 1\n    for i in range(2, m + 1):\n        res *= i\n    return res\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    k = int(input())\n    a.sort()\n    s = Counter(a)\n    a = a[-k:]\n    s2 = Counter(a)\n    ans = 0\n    for i in s2:\n        if s[i] != s2[i]:\n            ans += c(s[i], s2[i])\n    if ans == 0:\n        print(1)\n    else:\n        print(int(ans))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "from itertools import permutations\n\ndef fac(n):\n    if n < 2:\n        return 1\n    else:\n        return n * fac(n - 1)\nfor i in range(int(input())):\n    a = sorted(list(map(int, input().split())))\n    n = int(input())\n    a.reverse()\n    count = 0\n    count1 = 0\n    for i in range(0, len(a)):\n        if a[n - 1] == a[i]:\n            count += 1\n    for i in range(0, n):\n        if a[n - 1] == a[i]:\n            count1 += 1\n    if count >= 2:\n        print(int(fac(count) / (fac(count - count1) * fac(count1))))\n    else:\n        print(1)", "import math\nn = int(input())\nfor _ in range(n):\n    lis = list(map(int, input().split()))\n    k = int(input())\n    dic = {}\n    for i in lis:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    lis.sort(reverse=True)\n    lis2 = lis[0:k]\n    mainelement = lis2[k - 1]\n    occurances = lis2.count(mainelement)\n    print(math.comb(dic[mainelement], occurances))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    k = int(input())\n    c = 0\n    m = l[11 - k]\n    c1 = l.count(m)\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    a = sorted(list(map(int, input().split())))\n    n = int(input())\n    l = [a[i] for i in range(11 - n, 11)]\n    m = l[0]\n    print(math.comb(a.count(m), l.count(m)))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "def fac1(t):\n    r = 1\n    for i in range(2, t + 1):\n        r = r * i\n    return r\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = int(input())\n    l.sort()\n    p = l[11 - k]\n    c = l[11 - k:].count(p)\n    d = l.count(p)\n    f = int(fac1(d) / (fac1(d - c) * fac1(c)))\n    print(f)", "import math\nfor _ in range(int(input())):\n    L = sorted(list(map(int, input().split())), reverse=True)\n    K = int(input())\n    max_L = L[:K]\n    res = 1\n    buf_L = []\n    for i in range(len(max_L)):\n        if max_L[i] not in buf_L:\n            res *= math.comb(L.count(max_L[i]), max_L.count(max_L[i]))\n            buf_L.append(max_L[i])\n    print(res)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    k = int(input())\n    c = 0\n    m = l[11 - k]\n    c1 = l.count(m)\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    lst = [int(x) for x in input().split()]\n    k = int(input())\n    lst.sort(reverse=True)\n    n = lst[:k].count(lst[k - 1])\n    m = lst.count(lst[k - 1])\n    print(math.comb(m, n))", "def fact(n):\n    if n == 0 or n == 1:\n        return 1\n    return n * fact(n - 1)\nfor _ in range(int(input())):\n    lst = [int(x) for x in input().split()]\n    k = int(input())\n    lst.sort(reverse=True)\n    n = lst[:k].count(lst[k - 1])\n    m = lst.count(lst[k - 1])\n    ans = int(fact(m) / (fact(n) * fact(m - n)))\n    print(ans)", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor tc in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort()\n    x = l.count(l[-n])\n    y = l[-n:].count(l[-n])\n    print(math.comb(x, y))", "import math\nfor tc in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort()\n    x = l.count(l[-n])\n    y = l[-n:].count(l[-n])\n    print(math.comb(x, y))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "def f(n):\n    s = 1\n    for i in range(n, 0, -1):\n        s *= i\n    return s\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort(reverse=True)\n    l1 = l[:n]\n    a = l.count(min(l1))\n    b = l1.count(min(l1))\n    re = f(a) // (f(a - b) * f(b))\n    print(re)", "def f(n):\n    s = 1\n    for i in range(n, 0, -1):\n        s *= i\n    return s\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort(reverse=True)\n    l1 = l[:n]\n    a = l.count(min(l1))\n    b = l1.count(min(l1))\n    re = f(a) // (f(a - b) * f(b))\n    print(re)", "def f(n):\n    s = 1\n    for i in range(n, 0, -1):\n        s *= i\n    return s\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort(reverse=True)\n    l1 = l[:n]\n    a = l.count(min(l1))\n    b = l1.count(min(l1))\n    re = f(a) // (f(a - b) * f(b))\n    print(re)", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nt = int(input())\nfor tc in range(t):\n    a = sorted(list(map(int, input().split())))\n    b = int(input())\n    s = []\n    c = a[11 - b]\n    for j in range(10, 10 - b, -1):\n        s.append(a[j])\n    print(math.comb(a.count(c), s.count(c)))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "def f(n):\n    s = 1\n    for i in range(n, 0, -1):\n        s *= i\n    return s\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort(reverse=True)\n    l1 = l[:n]\n    a = l.count(min(l1))\n    b = l1.count(min(l1))\n    re = f(a) // (f(a - b) * f(b))\n    print(re)", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor i in range(int(input())):\n    li = list(map(int, input().split()))\n    k = int(input())\n    li.sort()\n    m = li[11 - k]\n    count = li.count(m)\n    c = 0\n    for j in range(11 - k, 11):\n        if li[j] == m:\n            c = c + 1\n    print(math.comb(count, c))", "import math\nfor i in range(int(input())):\n    li = list(map(int, input().split()))\n    k = int(input())\n    li.sort()\n    m = li[11 - k]\n    count = li.count(m)\n    c = 0\n    for j in range(11 - k, 11):\n        if li[j] == m:\n            c = c + 1\n        else:\n            break\n    print(math.comb(count, c))", "import math\ntc = int(input())\nfor _ in range(tc):\n    a = list(map(int, input().split()))\n    k = int(input())\n    b = sorted(a)\n    last = b[11 - k]\n    c = []\n    for i in range(10, 10 - k, -1):\n        c.append(b[i])\n    print(math.comb(b.count(last), c.count(last)))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor i in range(int(input())):\n    l = list(map(int, input().split()))\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, len(l)):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\n\ndef ncr(n, r):\n    f = math.factorial\n    return f(n) // f(r) // f(n - r)\nt = int(input())\nwhile t != 0:\n    players = list(map(int, input().split()))\n    k = int(input())\n    players.sort()\n    n = 0\n    r = 0\n    idx = 11 - k\n    for x in range(idx, 11):\n        if players[x] == players[idx]:\n            r += 1\n    n = players.count(players[idx])\n    print(ncr(n, r))\n    t -= 1", "import math\nfor _ in range(int(input())):\n    scoreList = list(map(int, input().split()))\n    K = int(input())\n    scoreList.sort(reverse=True)\n    lowRun = scoreList[K - 1]\n    countLow = scoreList.count(lowRun)\n    end = K - 1\n    while end < len(scoreList) and scoreList[end] == lowRun:\n        end = end + 1\n    print(math.comb(countLow, end - K))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor i in range(int(input())):\n    l = list(map(int, input().split()))\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    x = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(x, c))", "import math\nfor tc in range(int(input())):\n    arr = list(map(int, input().split()))\n    k = int(input())\n    arr.sort(reverse=True)\n    kmap = {}\n    for ele in arr:\n        if ele not in kmap:\n            if len(kmap) < k:\n                kmap[ele] = 1\n            else:\n                break\n        else:\n            kmap[ele] += 1\n    chose = 0\n    for ele in kmap:\n        if chose + kmap[ele] < k:\n            chose += kmap[ele]\n        else:\n            unsel = k - chose\n            print(math.comb(kmap[ele], unsel))\n            break", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor i in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    x = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(x, c))", "from itertools import combinations\nfor _ in range(int(input())):\n    r = [sum(i) for i in combinations(map(int, input().split()), int(input()))]\n    print(r.count(max(r)))", "from itertools import combinations\nfor _ in range(int(input())):\n    r = []\n    r = [sum(i) for i in combinations(map(int, input().split()), int(input()))]\n    print(r.count(max(r)))", "from itertools import combinations\nfor _ in range(int(input())):\n    r = []\n    for i in combinations(map(int, input().split()), int(input())):\n        r.append(sum(i))\n    print(r.count(max(r)))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    m = int(input())\n    l.sort()\n    k = l[11 - m]\n    c1 = l.count(k)\n    c = 0\n    for i in range(11 - m, 11):\n        if l[i] == k:\n            c += 1\n        else:\n            break\n    ans = math.comb(c1, c)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    scores = sorted(list(map(int, input().split())), reverse=True)\n    k = int(input())\n    a = scores[k - 1]\n    b = scores.count(a)\n    c = scores[:k].count(a)\n    print(math.comb(b, c))", "factorial = [0, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800]\nfor _ in range(int(input())):\n    p = list(map(int, input().split()))\n    k = int(input())\n    p = sorted(p)\n    a = p[-k:]\n    n = p.count(a[0])\n    r = a.count(a[0])\n    if n - r == 0:\n        output = 1\n    else:\n        output = factorial[n] // (factorial[r] * factorial[n - r])\n    print(output)", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nt = int(input())\nfor _ in range(t):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    ans = math.comb(c1, c)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    x = int(input())\n    l.sort()\n    l1 = l[::-1]\n    l2 = []\n    for i in range(x):\n        l2.append(l1[i])\n    a = l1.count(min(l2)) - l2.count(min(l2))\n    print(int(math.factorial(l1.count(min(l2))) / (math.factorial(a) * math.factorial(l2.count(min(l2))))))", "import math\nn = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    k = int(input())\n    l.sort(reverse=True)\n    m = l[0:k]\n    w = m[k - 1]\n    k = l.count(w)\n    s = m.count(w)\n    print(math.comb(k, s))", "import math\nfor _ in range(int(input())):\n    lis = [int(i) for i in input().split()]\n    n = len(lis)\n    x = int(input())\n    lis.sort()\n    m = lis[11 - x]\n    c1 = lis.count(m)\n    c = 0\n    for i in range(11 - x, 11):\n        if lis[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "def factorial(num):\n    fact = 1\n    while num > 1:\n        fact = fact * num\n        num = num - 1\n    return fact\nnTest = int(input())\nfor i in range(nTest):\n    scores = list(map(int, input().split()))\n    k = int(input())\n    scores.sort(reverse=True)\n    n = scores.count(scores[k - 1])\n    r = scores[0:k].count(scores[k - 1])\n    print(int(factorial(n) / (factorial(r) * factorial(n - r))))", "import math\nfor _ in range(int(input())):\n    m = list(map(int, input().split()))\n    n = int(input())\n    m.sort()\n    k = m[11 - n]\n    l = m.count(k)\n    c = 0\n    for i in range(11 - n, 11):\n        if m[i] == k:\n            c += 1\n        else:\n            break\n    print(math.comb(l, c))", "facto_list = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000]\n\ndef combination(n, k):\n    return facto_list[n] // (facto_list[k] * facto_list[n - k])\nfor _ in range(int(input())):\n    a = sorted([int(x) for x in input().split()], reverse=True)\n    k = int(input())\n    d_bat = {}\n    for i in a:\n        d_bat[i] = d_bat.get(i, 0) + 1\n    ans = 1\n    d_bat = list(d_bat.values())\n    i = 0\n    while k > 0:\n        if d_bat[i] > k:\n            ans = combination(d_bat[i], k)\n            break\n        else:\n            k -= d_bat[i]\n            i += 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input().split()))\n    k = int(input())\n    if k == 11:\n        print(1)\n    else:\n        s.sort()\n        s1 = s[:11 - k]\n        s2 = s[-k:]\n        border = s2[0]\n        c1 = s1.count(border)\n        c2 = s2.count(border)\n        print(math.comb(c1 + c2, c2))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "from math import comb\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(comb(c1, c))", "import math\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    k = int(input())\n    a.sort(reverse=True)\n    f1 = a.count(a[k - 1])\n    f2 = a[:k].count(a[k - 1])\n    print(math.factorial(f1) // (math.factorial(f2) * math.factorial(f1 - f2)))", "import math\nt = int(input())\nfor _ in range(t):\n    p = list(map(int, input().split()))\n    n = int(input())\n    p = sorted(p)\n    mi = p[11 - n]\n    c1 = p.count(mi)\n    c = 0\n    for i in range(11 - n, 11):\n        if p[i] == mi:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor i in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    l.sort()\n    k = l[11 - n]\n    c = l.count(k)\n    c1 = 0\n    for i in range(11 - n, 11):\n        if l[i] == k:\n            c1 += 1\n        else:\n            break\n    print(math.comb(c, c1))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "for _ in range(int(input())):\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    a.sort(reverse=True)\n    n = a.count(a[k - 1])\n    c = 0\n    cnt = 1\n    j = 1\n    for i in range(k):\n        if a[i] == a[k - 1]:\n            c += 1\n    for i in range(c):\n        cnt = cnt * (n - i) // j\n        j += 1\n    print(cnt)", "import math\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    k = int(input())\n    a.sort(reverse=True)\n    f1 = a.count(a[k - 1])\n    f2 = a[:k].count(a[k - 1])\n    print(math.factorial(f1) // (math.factorial(f2) * math.factorial(f1 - f2)))", "for i in range(int(input())):\n    list1 = list(map(int, input().split()))\n    list1.sort(reverse=True)\n    n = int(input())\n    dict1 = {}\n    for x in list1:\n        if x not in dict1.keys():\n            dict1[x] = 1\n        else:\n            dict1[x] += 1\n\n    def factorial(x):\n        product = 1\n        while x > 0:\n            product *= x\n            x = x - 1\n        return product\n    total = 0\n    list1 = list1[:n]\n    for z in list1:\n        count1 = dict1[z]\n        count2 = list1.count(z)\n        if count1 != count2:\n            a = factorial(count1)\n            b = factorial(count1 - count2)\n            c = factorial(count2)\n            total = a // (b * c)\n    if total == 0:\n        print(1)\n    else:\n        print(total)", "import math\nfor _ in range(int(input())):\n    n = list(map(int, input().split()))\n    k = int(input())\n    n.sort()\n    max_lst = n[-k:]\n    min_ = max_lst[0]\n    total_comb = math.comb(n.count(min_), max_lst.count(min_))\n    print(total_comb)", "import math\nfor _ in range(int(input())):\n    n = list(map(int, input().split()))\n    k = int(input())\n    n.sort()\n    max_lst = n[-k:]\n    total_comb = 0\n    for i in set(max_lst):\n        comb = math.comb(n.count(i), max_lst.count(i))\n        if comb > 1:\n            total_comb += comb\n    print(total_comb if total_comb != 0 else 1)", "import math\nfor _ in range(int(input())):\n    n = list(map(int, input().split()))\n    k = int(input())\n    n.sort()\n    max_lst = n[-k:]\n    total_comb = 0\n    for i in set(max_lst):\n        comb = math.comb(n.count(i), max_lst.count(i))\n        if comb > 1:\n            total_comb += comb\n    print(total_comb if total_comb != 0 else 1)", "from math import comb\nfor t in range(int(input())):\n    pi = [int(i) for i in input().split()]\n    n = int(input())\n    pi.sort(reverse=True)\n    l = pi.count(pi[:n][-1])\n    r = pi[:n].count(pi[:n][-1])\n    print(comb(l, r))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))", "from math import comb\nfor _ in range(int(input())):\n    score = list(map(int, input().split()))\n    k = int(input())\n    score.sort(reverse=True)\n    list_before_k = score[:k]\n    temp = list_before_k[-1]\n    (m, n) = (score.count(temp), list_before_k.count(temp))\n    print(comb(m, n))", "import math as m\nfor _ in range(int(input())):\n    lst = [int(x) for x in input().split()]\n    k = int(input())\n    lst.sort(reverse=True)\n    lst2 = lst[:k]\n    x = lst2[-1]\n    (lstc, lst2c) = (lst.count(x), lst2.count(x))\n    print(m.comb(lstc, lst2c))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    n = len(l)\n    k = int(input())\n    l.sort()\n    m = l[11 - k]\n    c1 = l.count(m)\n    c = 0\n    for i in range(11 - k, 11):\n        if l[i] == m:\n            c += 1\n        else:\n            break\n    print(math.comb(c1, c))"]