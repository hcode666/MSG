["for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        a.append([li[i], i])\n        b.append(li[i])\n    a.sort()\n    b.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if b[i] == a[i][0]:\n            if flag == False:\n                (b[i], b[0]) = (b[0], b[i])\n                flag = True\n            else:\n                (b[i], b[n - 1]) = (b[n - 1], b[i])\n    ct = 0\n    co = [0] * n\n    for i in range(n):\n        if b[i] != a[i][0]:\n            ct += 1\n        co[a[i][1]] = b[i]\n    print(ct)\n    print(*co)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        a.append([li[i], i])\n        b.append(li[i])\n    a.sort()\n    b.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if b[i] == a[i][0]:\n            if flag == False:\n                (b[i], b[0]) = (b[0], b[i])\n                flag = True\n            else:\n                (b[i], b[n - 1]) = (b[n - 1], b[i])\n    ct = 0\n    co = [0] * n\n    for i in range(n):\n        if b[i] != a[i][0]:\n            ct += 1\n        co[a[i][1]] = b[i]\n    print(ct)\n    print(*co)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        a.append([li[i], i])\n        b.append(li[i])\n    a.sort()\n    b.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if b[i] == a[i][0]:\n            if flag == False:\n                (b[i], b[0]) = (b[0], b[i])\n                flag = True\n            else:\n                (b[i], b[n - 1]) = (b[n - 1], b[i])\n    ct = 0\n    co = [0] * n\n    for i in range(n):\n        if b[i] != a[i][0]:\n            ct += 1\n        co[a[i][1]] = b[i]\n    print(ct)\n    print(*co)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        a.append([li[i], i])\n        b.append(li[i])\n    a.sort()\n    b.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if b[i] == a[i][0]:\n            if flag == False:\n                (b[i], b[0]) = (b[0], b[i])\n                flag = True\n            else:\n                (b[i], b[n - 1]) = (b[n - 1], b[i])\n    ct = 0\n    co = [0] * n\n    for i in range(n):\n        if b[i] != a[i][0]:\n            ct += 1\n        co[a[i][1]] = b[i]\n    print(ct)\n    print(*co)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    b = []\n    for j in range(n):\n        a.append([l[j], j])\n        b.append(l[j])\n    a.sort()\n    b.sort(reverse=True)\n    f = False\n    for k in range(n):\n        if b[k] == a[k][0]:\n            if f == False:\n                (b[k], b[0]) = (b[0], b[k])\n                f = True\n            else:\n                (b[k], b[n - 1]) = (b[n - 1], b[k])\n    c = 0\n    s = [0] * n\n    for z in range(n):\n        if b[z] != a[z][0]:\n            c += 1\n        s[a[z][1]] = b[z]\n    print(c)\n    print(*s)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    A = []\n    B = []\n    for i in range(n):\n        A.append([lst[i], i])\n        B.append(lst[i])\n    A.sort()\n    B.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if B[i] == A[i][0]:\n            if flag == False:\n                (B[i], B[0]) = (B[0], B[i])\n                flag = True\n            else:\n                (B[i], B[n - 1]) = (B[n - 1], B[i])\n    cnt = 0\n    con = [0] * n\n    for i in range(n):\n        if B[i] != A[i][0]:\n            cnt += 1\n        con[A[i][1]] = B[i]\n    print(cnt)\n    print(*con)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    A = []\n    B = []\n    for i in range(n):\n        A.append([lst[i], i])\n        B.append(lst[i])\n    A.sort()\n    B.sort(reverse=True)\n    flag = False\n    for i in range(n):\n        if B[i] == A[i][0]:\n            if flag == False:\n                (B[i], B[0]) = (B[0], B[i])\n                flag = True\n            else:\n                (B[i], B[n - 1]) = (B[n - 1], B[i])\n    cnt = 0\n    con = [0] * n\n    for i in range(n):\n        if B[i] != A[i][0]:\n            cnt += 1\n        con[A[i][1]] = B[i]\n    print(cnt)\n    print(*con)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    b = [0] * n\n    for i in range(n):\n        d[a[i]] = d.get(a[i], []) + [i]\n    if n == 2:\n        b[0] = a[1]\n        b[1] = a[0]\n    elif n == 3:\n        p = a[0]\n        b[0] = a[1]\n        b[1] = a[2]\n        b[2] = p\n    elif n == 1:\n        b[0] = a[0]\n        k = 1\n    else:\n        d1 = {}\n        d2 = {}\n        for i in d:\n            if len(d[i]) == 1:\n                d1[i] = d[i]\n            else:\n                d2[i] = d[i]\n        ld1 = list(d1.keys())\n        ld2 = list(d2.keys())\n        if len(d1) > 1 and len(d2) > 1:\n            p = d1[ld1[0]][0]\n            for i in range(1, len(ld1)):\n                d1[ld1[i - 1]][0] = d1[ld1[i]][0]\n            d1[ld1[i]][0] = p\n            p = d2[ld2[0]]\n            for i in range(1, len(ld2)):\n                d2[ld2[i - 1]] = d2[ld2[i]]\n            d2[ld2[i]] = p\n        elif len(d1) == 0:\n            p = d2[ld2[0]]\n            for i in range(1, len(ld2)):\n                d2[ld2[i - 1]] = d2[ld2[i]]\n            d2[ld2[i]] = p\n        elif len(d2) == 0:\n            p = d1[ld1[0]][0]\n            for i in range(1, len(ld1)):\n                d1[ld1[i - 1]][0] = d1[ld1[i]][0]\n            d1[ld1[i]][0] = p\n        elif len(d1) == 1:\n            p = d2[ld2[0]]\n            for i in range(1, len(ld2)):\n                d2[ld2[i - 1]] = d2[ld2[i]]\n            d2[ld2[i]] = p\n            p = d1[ld1[0]][0]\n            d1[ld1[0]][0] = d2[ld2[0]][0]\n            d2[ld2[0]][0] = p\n        elif len(d2) == 1:\n            p = d1[ld1[0]][0]\n            for i in range(1, len(ld1)):\n                d1[ld1[i - 1]][0] = d1[ld1[i]][0]\n            d1[ld1[i]][0] = p\n            (x, y) = (d2[ld2[0]][0], d2[ld2[0]][1])\n            d2[ld2[0]][0] = d1[ld1[0]][0]\n            d2[ld2[0]][1] = d1[ld1[1]][0]\n            d1[ld1[1]][0] = x\n            d1[ld1[0]][0] = y\n        for i in d1:\n            b[d1[i][0]] = i\n        for i in d2:\n            b[d2[i][0]] = i\n            b[d2[i][1]] = i\n    c = 0\n    for i in range(n):\n        if b[i] != a[i]:\n            c += 1\n    print(c)\n    print(*b)", "def swap(b, i, x, n):\n    if a[i] != b[i + x]:\n        temp = b[i]\n        b[i] = b[i + x]\n        b[i + x] = temp\n    elif x < n - 2:\n        x += 1\n        swap(b, i, x, n)\n    return b\nfor t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = a[::-1]\n    ct = 0\n    if n > 2:\n        for i in range(n - 1):\n            x = 0\n            if a[i] == b[i + x]:\n                if x < n - 2:\n                    x += 1\n                    swap(b, i, x, n)\n                else:\n                    break\n        if a[n - 1] == b[n - 1]:\n            if a[n - 1] != b[0]:\n                temp = b[n - 1]\n                b[n - 1] = b[0]\n                b[0] = temp\n            elif a[n - 1] != b[n // 2]:\n                temp = b[n // 2]\n                b[n // 2] = b[n - 1]\n                b[n - 1] = temp\n        if a[0] == b[0]:\n            if a[n - 1] != b[1]:\n                temp = b[0]\n                b[0] = b[1]\n                b[0] = temp\n            elif a[0] != b[n // 2]:\n                temp = b[n // 2]\n                b[n // 2] = b[0]\n                b[0] = temp\n    if n >= 4:\n        ct = n\n    else:\n        for i in range(n):\n            if a[i] != b[i]:\n                ct += 1\n    print(ct)\n    print(' '.join((str(x) for x in b)))", "from itertools import permutations\nfrom sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    h = 0\n    b = a.copy()\n    if n <= 4:\n        b = a.copy()\n        for p in list(permutations(a)):\n            temph = 0\n            for i in range(n):\n                if a[i] != p[i]:\n                    temph += 1\n            if temph > h:\n                h = temph\n                b = p\n    else:\n        h = n\n        while True:\n            for i in range(n):\n                if a[i] == b[i]:\n                    b.append(b.pop(0))\n                    break\n            else:\n                break\n    print(h)\n    print(*b)", "from itertools import permutations\n\ndef Shift(A):\n    A.append(A.pop(0))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = 0\n    b = a.copy()\n    if n <= 4:\n        b = a.copy()\n        for p in list(permutations(a)):\n            temph = 0\n            for i in range(n):\n                if a[i] != p[i]:\n                    temph += 1\n            if temph > h:\n                h = temph\n                b = p\n    else:\n        h = n\n        while True:\n            for i in range(n):\n                if a[i] == b[i]:\n                    Shift(b)\n                    break\n            else:\n                break\n    print(h)\n    print(*b)", "from itertools import permutations\n\ndef Shift(A):\n    A.append(A.pop(0))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = 0\n    if n <= 4:\n        b = a.copy()\n        for p in list(permutations(a)):\n            temph = 0\n            for i in range(n):\n                if a[i] != p[i]:\n                    temph += 1\n            if temph > h:\n                h = temph\n                b = p\n    else:\n        b = sorted(a)\n        h = n\n        while True:\n            for i in range(n):\n                if a[i] == b[i]:\n                    Shift(b)\n                    break\n            else:\n                break\n    print(h)\n    print(*b)", "def ip():\n    return int(input())\n\ndef ipp():\n    return map(int, input().split())\n\ndef sar():\n    return list(ipp())\n\ndef pars(a):\n    print(' '.join(list(map(str, a))))\n\ndef parl(a):\n    print('\\r'.join(list(map(str, a))))\n\ndef ham(a, b):\n    s = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            s += 1\n    return s\n\ndef ans(a, n):\n    b = [0] * len(a)\n    for i in range(len(a)):\n        for j in range(len(a)):\n            b[j] = a[(i + j) % len(a)]\n        if ham(a, b) == n:\n            break\n    print(n)\n    pars(b)\nT = 1\nT = int(input().strip())\nfor _ in range(T):\n    n = ip()\n    a = []\n    a = sar()\n    if n == 2 and a[0] == a[1] or n == 1:\n        ans(a, 0)\n    elif n == 3 and (a[0] == a[1] or a[1] == a[2] or a[0] == a[2]):\n        ans(a, 2)\n    else:\n        ans(a, n)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arrA = [int(i) for i in input().split()]\n    nc = 0\n    mydb = {}\n    for i in range(n):\n        if arrA[i] in mydb:\n            mydb[arrA[i]][1] += 1\n            mydb[arrA[i]][2] = i\n            nc += 1\n        else:\n            mydb[arrA[i]] = [i, 1, -1]\n    ci = 0\n    si = nc\n    ns = n - 2 * nc\n    barray = [0] * (n + 2)\n    index = [-1] * n\n    adj = 1\n    if nc == 1:\n        adj = 2\n    else:\n        adj = 1\n    for num in arrA:\n        tmplist = mydb[num]\n        if tmplist[1] == 1:\n            barray[si + adj] = num\n            index[si] = tmplist[0]\n            si += 1\n        elif tmplist[1] == 2:\n            barray[ci + adj] = num\n            index[ci] = tmplist[0]\n            barray[ci + nc + ns + adj] = num\n            index[ci + nc + ns] = tmplist[2]\n            ci += 1\n            tmplist[1] = 0\n    if adj == 1:\n        barray[0] = barray[n]\n    elif adj == 2:\n        barray[0] = barray[n]\n        barray[1] = barray[n + 1]\n    newB = [0] * n\n    for i in range(n):\n        newB[index[i]] = barray[i]\n    if n == 3 and nc == 1:\n        print(2)\n    elif n == 1 or (n == 2 and nc == 1):\n        print(0)\n    else:\n        print(n)\n    for i in range(n):\n        print(newB[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l1 += l[n // 2:]\n    l1 += l[:n // 2]\n    c = 0\n    for i in range(len(l)):\n        if l[i] != l1[i]:\n            c += 1\n    print(c)\n    for i in l1:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    b = a[:]\n    distance = 0\n    for j in range(n):\n        if a[j] != b[j]:\n            continue\n        for k in range(n):\n            if a[j] != b[k] and a[k] != b[j]:\n                (b[j], b[k]) = (b[k], b[j])\n                break\n    for j in range(n):\n        if a[j] != b[j]:\n            distance += 1\n    print(distance)\n    print(' '.join(map(str, b)))", "def ham(A, B, n, c):\n    dist = 0\n    for i in range(n):\n        if A[i] != B[i]:\n            dist = dist + 1\n    print(dist)\n\ndef shuffle(A, n):\n    B = [None] * n\n    T = list()\n    T = sorted(A)\n    flag = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] != T[j]:\n                if i == j:\n                    break\n                elif A[j] != T[i]:\n                    temp = T[j]\n                    T[j] = T[i]\n                    T[i] = temp\n                    flag = 1\n                    break\n    conflict = list()\n    for i in range(n):\n        if A[i] == T[i]:\n            conflict.append(i)\n    count = 0\n    for con in range(len(conflict)):\n        c = conflict[con]\n        for i in range(n):\n            if T[i] != T[c] and A[i] != T[c] and (A[c] != T[i]):\n                temp = T[c]\n                T[c] = T[i]\n                T[i] = temp\n                count = count + 1\n                break\n    ham(A, T, n, count)\n    for i in range(n):\n        print(T[i], end=' ')\n    print()\nCase = int(input())\nfor i in range(Case):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    if n != 1:\n        shuffle(numbers, n)\n    else:\n        print(0)\n        print(numbers[0])", "def ham(A, B, n, c):\n    dist = 0\n    for i in range(n):\n        if A[i] != B[i]:\n            dist = dist + 1\n    print(dist)\n\ndef shuffle(A, n):\n    B = [None] * n\n    T = list()\n    T = sorted(A)\n    flag = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] != T[j]:\n                if i == j:\n                    break\n                elif A[j] != T[i]:\n                    temp = T[j]\n                    T[j] = T[i]\n                    T[i] = temp\n                    flag = 1\n                    break\n    conflict = list()\n    for i in range(n):\n        if A[i] == T[i]:\n            conflict.append(i)\n    count = 0\n    for con in range(len(conflict)):\n        c = conflict[con]\n        for i in range(n):\n            if T[i] != T[c] and A[i] != T[c] and (A[c] != T[i]):\n                temp = T[c]\n                T[c] = T[i]\n                T[i] = temp\n                count = count + 1\n                break\n    ham(A, T, n, count)\n    for i in range(n):\n        print(T[i], end=' ')\n    print()\nCase = int(input())\nfor i in range(Case):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    if n != 1:\n        shuffle(numbers, n)\n    else:\n        print(0)\n        print(numbers[0])", "def dist(a, ans):\n    c = 0\n    for i in range(0, n):\n        if a[i] == ans[i]:\n            c += 1\n    return c\nt = int(input())\nfor iteration in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = [i for i in a]\n    c = dist(a, ans)\n    for i in range(0, n):\n        if a[i] == ans[i]:\n            for j in range(0, n):\n                if i != j and a[i] != ans[j] and (a[j] != ans[i]):\n                    (ans[i], ans[j]) = (ans[j], ans[i])\n    c = dist(a, ans)\n    print(n - c)\n    print(' '.join(list(map(lambda x: str(x), ans))))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(a)\n    for i in range(n):\n        if a[i] != b[i]:\n            continue\n        for j in range(n):\n            if i == j:\n                continue\n            if a[i] != b[j] and a[j] != b[i]:\n                (b[i], b[j]) = (b[j], b[i])\n    h = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            h += 1\n    print(h)\n    for each in b:\n        print(each, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1 or (n == 2 and a[0] == a[1]):\n        print(0)\n        print(' '.join([str(i) for i in a]))\n        continue\n    elif n == 3 and (a[0] == a[1] or a[0] == a[2] or a[1] == a[2]):\n        print(2)\n        if a[0] == a[1]:\n            (a[1], a[2]) = (a[2], a[1])\n        elif a[1] == a[2]:\n            (a[0], a[2]) = (a[2], a[0])\n        elif a[0] == a[2]:\n            (a[0], a[1]) = (a[1], a[0])\n        print(' '.join([str(i) for i in a]))\n        continue\n    else:\n        print(n)\n        if n == 2:\n            (a[0], a[1]) = (a[1], a[0])\n            print(' '.join([str(i) for i in a]))\n            continue\n    latencies = set()\n    index = {}\n    for i in range(len(a)):\n        if a[i] in index.keys():\n            latencies.add(i - index[a[i]])\n            latencies.add(n - (i - index[a[i]]))\n        else:\n            index[a[i]] = i\n    rot = 1\n    while rot <= len(a):\n        if rot not in latencies:\n            break\n        rot += 1\n    a = a[rot:] + a[:rot]\n    print(' '.join([str(i) for i in a]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    new_l = l[:]\n    for i in range(n - 1):\n        (l[i], l[i + 1]) = (l[i + 1], l[i])\n    hd = n\n    for i in range(n):\n        if l[i] == new_l[i]:\n            for j in range(n):\n                if l[i] != l[j] and l[i] != new_l[j]:\n                    (l[i], l[j]) = (l[j], l[i])\n                    break\n            else:\n                hd -= 1\n    print(hd)\n    print(*l)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        a = str(input())\n        print(0)\n        print(a)\n    else:\n        a = [s for s in input().split()]\n        p = set(a)\n        if len(p) != len(a):\n            if n == 3:\n                b = [a[-1]] + a[:-1]\n                print(2)\n                print(' '.join(b))\n            elif n != 2:\n                b = [a[-1]] + a[:-1]\n                d = len(b)\n                for k in range(d):\n                    if b[k] == a[k]:\n                        for m in range(d):\n                            if b[m] != b[k] and b[k] != a[m]:\n                                temp = b[k]\n                                b[k] = b[m]\n                                b[m] = temp\n                                break\n                print(n)\n                print(' '.join(b))\n            else:\n                print(0)\n                print(' '.join(a))\n        else:\n            b = [a[-1]] + a[:-1]\n            print(n)\n            print(' '.join(b))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = [0] * n\n    if n == 1:\n        print(0)\n        print(a[0])\n    elif n == 2:\n        if a[0] == a[1]:\n            print(0)\n            print(a[0], a[1])\n        else:\n            print(2)\n            print(a[1], a[0])\n    elif n == 3:\n        if a[0] == a[1]:\n            print(2)\n            print(a[2], a[0], a[1])\n        elif a[0] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        elif a[1] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        else:\n            print(3)\n            print(a[2], a[0], a[1])\n    else:\n        r = n % 4\n        tt = n // 4\n        if r == 3:\n            if a[n - 3] == a[n - 2]:\n                z[n - 1] = a[n - 3]\n                z[n - 3] = a[n - 1]\n            elif a[n - 3] == a[n - 1]:\n                z[n - 3] = a[n - 2]\n                z[n - 2] = a[n - 3]\n            elif a[n - 1] == a[n - 2]:\n                z[n - 2] = a[n - 3]\n                z[n - 3] = a[n - 2]\n            else:\n                z[n - 3] = a[n - 1]\n                z[n - 2] = a[n - 3]\n                z[n - 1] = a[n - 2]\n        for i in range(0, tt * 4 - 4 + 1, 4):\n            if a[i + 2] == a[i + 3] or a[i] == a[i + 1]:\n                z[i] = a[i + 3]\n                z[i + 3] = a[i]\n                z[i + 1] = a[i + 2]\n                z[i + 2] = a[i + 1]\n            elif a[i] == a[i + 2] or a[i] == a[i + 3] or a[i + 1] == a[i + 3] or (a[i + 1] == a[i + 2]):\n                z[i] = a[i + 1]\n                z[i + 1] = a[i]\n                z[i + 2] = a[i + 3]\n                z[i + 3] = a[i + 2]\n            else:\n                z[i] = a[i + 1]\n                z[i + 1] = a[i]\n                z[i + 2] = a[i + 3]\n                z[i + 3] = a[i + 2]\n        if z[n - 1] == 0 and z[n - 2] == 0:\n            rmt = a[n - 2]\n            smt = a[n - 1]\n            z[n - 2] = z[0]\n            z[n - 1] = z[1]\n            z[0] = rmt\n            z[1] = smt\n        elif z[n - 1] == 0:\n            for i in range(n):\n                if a[n - 1] != z[i] and a[i] != a[n - 1]:\n                    z[n - 1] = z[i]\n                    z[i] = a[n - 1]\n                    break\n        elif z[n - 2] == 0:\n            for i in range(n):\n                if a[n - 2] != z[i] and a[i] != a[n - 2]:\n                    z[n - 2] = z[i]\n                    z[i] = a[n - 2]\n                    break\n        print(n)\n        for i in range(n):\n            print(z[i], end=' ')\n        print()\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    c = [0] * n\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        print(b[0])\n    if n == 2:\n        if b[0] == b[1]:\n            print(0)\n            print(b[0], b[1])\n        else:\n            print(2)\n            print(b[1], b[0])\n    if n == 3:\n        if b[0] == b[1] or b[1] == b[2] or b[2] == b[0]:\n            print(2)\n            if b[0] == b[1]:\n                print(b[2], b[0], b[1])\n            elif b[1] == b[2]:\n                print(b[1], b[0], b[2])\n            elif b[0] == b[2]:\n                print(b[1], b[0], b[2])\n        else:\n            print(3)\n            print(b[2], b[0], b[1])\n    if n >= 4:\n        x = []\n        print(n)\n        for i in range(n):\n            for j in range(i - 2, n):\n                if c[j] == 0 and b[j] != b[i] and (j != i):\n                    if j >= 0:\n                        c[j] = b[i]\n                        break\n        if c[n - 1] == 0:\n            if c[n - 2] == 0:\n                c[n - 1] = c[0]\n                c[n - 2] = c[1]\n                c[0] = b[n - 1]\n                c[1] = b[n - 2]\n            else:\n                for i in range(n):\n                    if b[n - 1] != b[i] and c[i] != b[n - 1]:\n                        c[n - 1] = c[i]\n                        c[i] = b[n - 1]\n                        break\n        if c[n - 1] != 0 and c[n - 2] == 0:\n            for i in range(n):\n                if b[n - 2] != b[i] and c[i] != b[n - 2]:\n                    c[n - 2] = c[i]\n                    c[i] = b[n - 2]\n                    break\n        print(' '.join(map(str, c)))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n > 3:\n        print(n)\n        j = 0\n        v = l[0:n]\n        z = [0 for i in range(n)]\n        while j < n:\n            if z[j] == 1:\n                j += 1\n                continue\n            temp = l[j]\n            k = j + 1\n            while k < n and (z[k] != 0 or v[j] == v[k]):\n                k += 1\n            if k != n:\n                (v[j], v[k]) = (v[k], v[j])\n                z[j] = 1\n                z[k] = 1\n            j += 1\n        j = 0\n        while j < n:\n            if z[j] == 0:\n                for i in range(n):\n                    if v[i] != v[j] and l[i] != l[j]:\n                        (v[i], v[j]) = (v[j], v[i])\n                        z[j] = 1\n                        break\n            j += 1\n        for i in v:\n            print(i, end=' ')\n    elif n == 1:\n        print(0)\n        print(l[0])\n    elif n == 2:\n        if l.count(l[0]) > 1:\n            print(0)\n            print(l[0], l[1])\n        else:\n            print(2)\n            print(l[1], l[0])\n    else:\n        x = l.count(l[0])\n        y = l.count(l[1])\n        z = l.count(l[2])\n        if x > 1:\n            print(2)\n            print(l[0], l[2], l[1])\n        elif y > 1:\n            print(2)\n            print(l[2], l[1], l[0])\n        else:\n            print(3)\n            print(l[2], l[0], l[1])\n    t -= 1", "for _ in range(int(input())):\n    m = int(input())\n    array = list(map(int, input().split()))\n    array2 = list(array)\n    array3 = []\n    if m == 1:\n        print(0)\n        print(*array)\n    else:\n        for i in range(m):\n            array[i] = str(array2[i - 1])\n            if str(array[i]) == str(array2[i]):\n                array3.append(i)\n        array4 = list(array)\n        if len(array3) <= 0:\n            print(m)\n            print(*array)\n        elif len(array3) == 1:\n            if m == 3:\n                print(2)\n                print(*array)\n            else:\n                (array[array3[0]], array[array3[0] - 2]) = (array[array3[0] - 2], array[array3[0]])\n                print(m)\n                print(*array)\n        elif m == 2:\n            print(0)\n            print(*array2)\n        else:\n            for i in range(len(array3)):\n                array[array3[i]] = int(array4[array3[i - 1]])\n            print(m)\n            print(*array)", "for _ in range(int(input())):\n    no = input()\n    no = int(no)\n    arr = map(int, input().split())\n    arr = list(arr)\n    st = 0\n    if no == 1 and st == 0:\n        print(no - 1)\n        ansarr = []\n        ansarr.append(arr[0])\n        print(*ansarr)\n        st = 1\n    elif no == 2 and st == 0:\n        if arr[1] == arr[0]:\n            print(no - 2)\n            ansarr = []\n            ansarr.append(arr[0])\n            ansarr.append(arr[1])\n            print(*ansarr)\n            st = 1\n        else:\n            print(no)\n            ansarr = []\n            ansarr.append(arr[1])\n            ansarr.append(arr[0])\n            print(*ansarr)\n            st = 1\n    elif no == 3 and st == 0:\n        if arr[0] == arr[2] or arr[0] == arr[1] or arr[2] == arr[1]:\n            print('2')\n            ansarr = []\n            ansarr.append(arr[2])\n            ansarr.append(arr[0])\n            ansarr.append(arr[1])\n            print(*ansarr)\n            st = 1\n        else:\n            print('3')\n            ansarr = []\n            ansarr.append(arr[1])\n            ansarr.append(arr[2])\n            ansarr.append(arr[0])\n            print(*ansarr)\n            st = 1\n    elif no == 4 and st == 0:\n        print('4')\n        ansarr = []\n        for i in range(no):\n            ansarr.append(-5)\n        if len(set(arr)) == no:\n            ansarr = arr[::-1]\n            print(*ansarr)\n            st = 1\n        else:\n            ansarr = []\n            for i in range(no):\n                ansarr.append(-5)\n            if arr[2] == arr[3]:\n                (ansarr[0], ansarr[1], ansarr[2], ansarr[3]) = (arr[3], arr[2], arr[1], arr[0])\n                print(*ansarr)\n                st = 1\n            else:\n                temp2 = []\n                for i in range(4):\n                    temp2.append(arr[i])\n                poin = 0\n                element = temp2[poin]\n                while poin != no:\n                    element = temp2[poin]\n                    for j in range(no):\n                        if arr[j] != element and ansarr[j] == -5:\n                            ansarr[j] = element\n                            poin += 1\n                            break\n                print(*ansarr)\n                st = 1\n    else:\n        print(no)\n        ansarr = []\n        for i in range(no):\n            ansarr.append(-5)\n        rep = []\n        temp = arr[no - 1]\n        for j in range(no - 1):\n            ansarr[j + 1] = arr[j]\n            if arr[j] == arr[j + 1]:\n                rep.append(j + 1)\n        if arr[0] == arr[no - 1]:\n            rep.append(0)\n        ansarr[0] = temp\n        repc = len(rep)\n        if repc > 0:\n            if repc == 1:\n                for x in range(no):\n                    if rep[0] != x:\n                        temp = x\n                        break\n                if rep[0] == no - 1:\n                    temp += 1\n                (ansarr[temp], ansarr[rep[0]]) = (ansarr[rep[0]], ansarr[temp])\n            elif len(rep) == 2:\n                (ansarr[rep[1]], ansarr[rep[0]]) = (ansarr[rep[0]], ansarr[rep[1]])\n            else:\n                for i in range(len(rep) - 1):\n                    h2 = rep[i + 1]\n                    h1 = rep[i]\n                    (ansarr[h1], ansarr[h2]) = (ansarr[h2], ansarr[h1])\n        print(*ansarr)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = [0] * n\n    if n == 1:\n        print(0)\n        print(a[0])\n    elif n == 2:\n        if a[0] == a[1]:\n            print(0)\n            print(a[0], a[1])\n        else:\n            print(2)\n            print(a[1], a[0])\n    elif n == 3:\n        if a[0] == a[1]:\n            print(2)\n            print(a[2], a[0], a[1])\n        elif a[0] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        elif a[1] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        else:\n            print(3)\n            print(a[2], a[0], a[1])\n    else:\n        r = 0\n        for i in range(n):\n            for j in range(i - 2, n):\n                if z[j] == 0 and a[i] != a[j] and (i != j):\n                    if j >= 0:\n                        z[j] = a[i]\n                        break\n        if z[n - 1] == 0 and z[n - 2] == 0:\n            rmt = a[n - 2]\n            smt = a[n - 1]\n            z[n - 2] = z[0]\n            z[n - 1] = z[1]\n            z[0] = rmt\n            z[1] = smt\n        elif z[n - 1] == 0:\n            for i in range(n):\n                if a[n - 1] != z[i] and a[i] != a[n - 1]:\n                    z[n - 1] = z[i]\n                    z[i] = a[n - 1]\n                    break\n        elif z[n - 2] == 0:\n            for i in range(n):\n                if a[n - 2] != z[i] and a[i] != a[n - 2]:\n                    z[n - 2] = z[i]\n                    z[i] = a[n - 2]\n                    break\n        print(n)\n        for i in range(n):\n            print(z[i], end=' ')\n        print()\n    t = t - 1", "MAX = 100001\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = [0] * MAX\n    for i in a:\n        c[i] += 1\n    if n == 1:\n        print(0)\n        print(a[0])\n        continue\n    if n == 2:\n        if a[0] == a[1]:\n            print(0)\n            print(a[0], a[0])\n        else:\n            print(2)\n            print(a[1], a[0])\n        continue\n    if n == 3:\n        if a[0] == a[1]:\n            print(2)\n            print(a[2], a[1], a[0])\n        elif a[0] == a[2]:\n            print(2)\n            print(a[0], a[2], a[1])\n        elif a[1] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        else:\n            print(3)\n            print(a[1], a[2], a[0])\n        continue\n    print(n)\n    x = []\n    y = []\n    for i in range(MAX):\n        if c[i] == 1:\n            x.append(i)\n        elif c[i] == 2:\n            y.append(i)\n    d = {}\n    if len(x) == 0:\n        d[y[0]] = y[len(y) - 1]\n        for i in range(1, len(y)):\n            d[y[i]] = y[i - 1]\n        for i in range(n):\n            print(d[a[i]], end=' ')\n        print()\n    elif len(y) == 0:\n        d[x[0]] = x[len(x) - 1]\n        for i in range(1, len(x)):\n            d[x[i]] = x[i - 1]\n        for i in range(n):\n            print(d[a[i]], end=' ')\n        print()\n    elif len(y) == 1:\n        for i in range(2, len(x)):\n            d[x[i]] = x[i - 2]\n        d[x[0]] = y[0]\n        d[x[1]] = y[0]\n        flag = 0\n        for i in range(n):\n            if c[a[i]] == 1:\n                print(d[a[i]], end=' ')\n            elif flag == 0:\n                print(x[len(x) - 1], end=' ')\n                flag = 1\n            else:\n                print(x[len(x) - 2], end=' ')\n        print()\n    elif len(x) == 1:\n        for i in range(1, len(y)):\n            d[y[i]] = y[i - 1]\n        flag = 0\n        for i in range(n):\n            if c[a[i]] == 1:\n                print(y[len(y) - 1], end=' ')\n            elif a[i] == y[0]:\n                if flag == 0:\n                    print(y[len(y) - 1], end=' ')\n                    flag = 1\n                else:\n                    print(x[0], end=' ')\n            else:\n                print(d[a[i]], end=' ')\n        print()\n    else:\n        d[x[0]] = x[len(x) - 1]\n        for i in range(1, len(x)):\n            d[x[i]] = x[i - 1]\n        d[y[0]] = y[len(y) - 1]\n        for i in range(1, len(y)):\n            d[y[i]] = y[i - 1]\n        for i in range(n):\n            print(d[a[i]], end=' ')\n        print()", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    l = list(map(int, input().split()))\n    nl = l[:]\n    hammed = [0 for i in range(n)]\n    cnt = 0\n    for i in range(n - 1):\n        if l[i] == nl[i]:\n            (nl[i], nl[i + 1]) = (nl[i + 1], nl[i])\n            if l[i] != nl[i]:\n                cnt += 1\n                hammed[i] = 1\n            elif i + 2 < n:\n                (nl[i], nl[i + 2]) = (nl[i + 2], nl[i])\n                cnt += 1\n                hammed[i] = 1\n        else:\n            cnt += 1\n            hammed[i] = 1\n    if l[-1] != nl[-1]:\n        cnt += 1\n        hammed[-1] = 1\n    else:\n        try:\n            temp = hammed.index(1)\n            if l[temp] != nl[-1] and nl[temp] != l[-1]:\n                (nl[temp], nl[-1]) = (nl[-1], nl[temp])\n                cnt += 1\n            else:\n                for i in range(temp + 1, n):\n                    if hammed[i] == 1 and nl[-1] != l[i] and (nl[i] != l[-1]):\n                        (nl[i], nl[-1]) = (nl[-1], nl[i])\n                        cnt += 1\n                        break\n        except:\n            pass\n    for i in range(n - 1):\n        if hammed[i] == 0:\n            try:\n                temp = hammed.index(1)\n                if l[temp] != nl[i] and nl[temp] != l[i]:\n                    (nl[temp], nl[i]) = (nl[i], nl[temp])\n                    cnt += 1\n                else:\n                    for j in range(temp + 1, n):\n                        if hammed[j] == 1 and nl[i] != l[j] and (nl[j] != l[i]):\n                            (nl[j], nl[i]) = (nl[i], nl[j])\n                            cnt += 1\n                            break\n            except:\n                pass\n    print(cnt)\n    print(*nl)", "for _ in range(int(input())):\n    ans = []\n    n = int(input())\n    l = [int(x) for x in input().rstrip().split()]\n    if n == 1:\n        print(0)\n        print(l[0])\n        continue\n    elif n == 2:\n        if l[0] == l[1]:\n            print(0)\n            ans = l\n        else:\n            print(2)\n            ans = [l[1], l[0]]\n        for i in range(n):\n            print(ans[i], end=' ')\n        print()\n        continue\n    elif n == 3:\n        if l[0] != l[1] and l[1] != l[2] and (l[0] != l[2]):\n            ans = [l[1], l[2], l[0]]\n            print(3)\n        else:\n            print(2)\n            if l[2] == l[0]:\n                ans = [l[1], l[0], l[2]]\n            else:\n                ans = [l[2], l[0], l[1]]\n        for i in range(n):\n            print(ans[i], end=' ')\n        print()\n        continue\n    else:\n        print(n)\n        ans = [-999] * n\n        rem = n % 4\n        nn = n - rem\n        for i in range(0, nn, 4):\n            a = l[i]\n            b = l[i + 1]\n            c = l[i + 2]\n            d = l[i + 3]\n            if a == c or b == d:\n                ans[i] = b\n                ans[i + 1] = a\n                ans[i + 2] = d\n                ans[i + 3] = c\n                continue\n            else:\n                ans[i] = c\n                ans[i + 1] = d\n                ans[i + 2] = a\n                ans[i + 3] = b\n                continue\n        if rem == 1:\n            for jij in range(0, 4):\n                if l[jij] != l[-1] and ans[jij] != l[-1]:\n                    ans[-1] = ans[jij]\n                    ans[jij] = l[-1]\n                    break\n        elif rem == 2:\n            lasta = l[-2]\n            lastb = l[-1]\n            if lasta == lastb:\n                ans[-2] = ans[0]\n                ans[-1] = ans[1]\n                ans[0] = lasta\n                ans[1] = lastb\n            else:\n                ans[-1] = l[-2]\n                ans[-2] = l[-1]\n        elif rem == 3:\n            a = l[-3]\n            b = l[-2]\n            c = l[-1]\n            if a == b:\n                ans[-3] = l[-1]\n                ans[-1] = l[-3]\n                loc = -2\n                for jij in range(0, 4):\n                    if l[jij] != l[loc] and ans[jij] != l[loc]:\n                        ans[loc] = ans[jij]\n                        ans[jij] = l[loc]\n                        break\n            elif b == c:\n                ans[-3] = l[-2]\n                ans[-2] = l[-3]\n                loc = -1\n                for jij in range(0, 5):\n                    if l[jij] != l[loc] and ans[jij] != l[loc]:\n                        ans[loc] = ans[jij]\n                        ans[jij] = l[loc]\n                        break\n            elif a == c:\n                ans[-3] = l[-2]\n                ans[-2] = l[-3]\n                loc = -1\n                for jij in range(0, 5):\n                    if l[jij] != l[loc] and ans[jij] != l[loc]:\n                        ans[loc] = ans[jij]\n                        ans[jij] = l[loc]\n                        break\n            else:\n                ans[-1] = a\n                ans[-2] = c\n                ans[-3] = b\n        for i in range(2):\n            if l[i] == ans[i]:\n                (ans[i + 2], ans[i]) = (ans[i], ans[i + 2])\n        for i in range(2, n):\n            if l[i] == ans[i]:\n                (ans[i - 2], ans[i]) = (ans[i], ans[i - 2])\n        for i in range(n):\n            print(ans[i], end=' ')\n        print()", "for sadadsads in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x), input().split()))\n    b = [i for i in a]\n    c = []\n    d = {}\n    for i in a:\n        d[i] = i\n    if len(d) == n:\n        (a[n // 2], a[-1]) = (a[-1], a[n // 2])\n        a = a[::-1]\n    else:\n        i = 0\n        while i < len(a) - 3:\n            if a[i + 1] == a[i]:\n                (a[i + 2], a[i]) = (a[i], a[i + 2])\n                (a[i + 3], a[i + 2]) = (a[i + 2], a[i + 3])\n            else:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n            i += 2\n        if len(a) > 1:\n            if len(a) == 2:\n                a = a[::-1]\n            else:\n                if a[-1] == a[-2]:\n                    (a[-2], a[-3]) = (a[-3], a[-2])\n                elif a[-2] == a[-3]:\n                    (a[-1], a[-3]) = (a[-3], a[-1])\n                for i in range(len(a)):\n                    if a[i] != a[-3] and a[-3] != b[i]:\n                        (a[i], a[-3]) = (a[-3], a[i])\n    dist = 0\n    if n > 3 and n < 500:\n        for i in range(n):\n            if b[i] != a[i]:\n                dist += 1\n    if n < 500 and dist != n:\n        a = [i for i in b]\n        b = sorted(a)\n        c = []\n        for i in range(len(a)):\n            if b[0] == a[i]:\n                c.append(b[-1])\n                del b[-1]\n            else:\n                c.append(b[0])\n                del b[0]\n        if len(a) == 1:\n            print(0)\n        elif len(a) == 2:\n            if a[0] == a[1]:\n                print(0)\n            else:\n                print(2)\n        elif len(a) == 3:\n            if a[0] == a[1] or a[1] == a[2] or a[0] == a[2]:\n                print(2)\n            else:\n                print(3)\n        else:\n            print(len(a))\n        for i in c:\n            print(i, end=' ')\n        print()\n    else:\n        if len(a) == 1:\n            print(0)\n        elif len(a) == 2:\n            if a[0] == a[1]:\n                print(0)\n            else:\n                print(2)\n        elif len(a) == 3:\n            if a[0] == a[1] or a[1] == a[2] or a[0] == a[2]:\n                print(2)\n            else:\n                print(3)\n        else:\n            print(len(a))\n        for i in a:\n            print(i, end=' ')\n        print()", "T = int(input())\nfor P in range(T):\n    n = int(input())\n    x = input().split()\n    y = list(reversed(x))\n    z = y.copy()\n    for j in range(n):\n        if x[j] == y[j]:\n            for i in range(n):\n                if y[i] != y[j]:\n                    if x[i] != y[j]:\n                        b = y[i]\n                        y[i] = y[j]\n                        y[j] = b\n                        break\n    m = 0\n    for i in range(n):\n        if x[i] != y[i]:\n            m += 1\n    print(m)\n    N = ''\n    for i in y:\n        N += str(i) + ' '\n    N = N[0:-1]\n    print(N)", "T = int(input())\nfor P in range(T):\n    n = int(input())\n    x = input().split()\n    y = list(reversed(x))\n    z = y.copy()\n    for j in range(n):\n        if x[j] == y[j]:\n            for i in range(n):\n                if y[i] != y[j]:\n                    if x[i] != y[j]:\n                        b = y[i]\n                        y[i] = y[j]\n                        y[j] = b\n                        break\n    m = 0\n    for i in range(n):\n        if x[i] != y[i]:\n            m += 1\n    print(m)\n    N = ''\n    for i in y:\n        N += str(i) + ' '\n    N = N[0:-1]\n    print(N)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 'ncorr'\n    if len(a) == 1:\n        print(0)\n        print(a[0])\n        continue\n    if n == len(set(a)):\n        print(n)\n        print(' '.join([str(a[n - 1])] + [str(a[i]) for i in range(n - 1)]))\n        continue\n    if n == 2:\n        print(0)\n        print(a[0], a[0])\n        continue\n    if n == 3:\n        print(2)\n        print(a[1], a[2], a[0])\n        continue\n    ans = [a[n - 2], a[n - 1]] + [a[i] for i in range(n - 2)]\n    while f == 'ncorr':\n        f = 'corr'\n        if ans[n - 1] == a[n - 1]:\n            (ans[0], ans[n - 1]) = (ans[n - 1], ans[0])\n            f = 'ncorr'\n        for i in range(n - 1):\n            if a[i] == ans[i]:\n                (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n                f = 'ncorr'\n    ans = list(map(str, ans))\n    print(n)\n    print(' '.join(ans))", "t = int(input())\nwhile t:\n    n = int(input())\n    ct = 0\n    has = []\n    has1 = []\n    has2 = []\n    has3 = []\n    b = []\n    a = list(map(int, input().split()))\n    for i in range(0, n):\n        b.append(a[i])\n    for i in range(0, 100010):\n        has.append(0)\n        has3.append(0)\n    for i in range(0, n):\n        has[a[i]] += 1\n    s = set(a)\n    sz = len(s)\n    s = list(s)\n    for i in range(0, sz):\n        if has[s[i]] == 2:\n            has2.append(s[i])\n        else:\n            has1.append(s[i])\n    s1 = len(has1)\n    s2 = len(has2)\n    for i in range(0, s2 - 1, 2):\n        has3[has2[i]] = has2[i + 1]\n        has3[has2[i + 1]] = has2[i]\n    for i in range(0, s1 - 1, 2):\n        has3[has1[i]] = has1[i + 1]\n        has3[has1[i + 1]] = has1[i]\n    for i in range(0, n):\n        if has3[b[i]] != 0:\n            b[i] = has3[b[i]]\n    for i in range(0, n, 1):\n        if a[i] == b[i]:\n            if i + 1 < n and b[i] != a[i + 1]:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n            elif i - 1 >= 0 and b[i] != a[i - 1]:\n                (b[i], b[i - 1]) = (b[i - 1], b[i])\n            elif i == 0 or i == n - 1:\n                (b[0], b[n - 1]) = (b[n - 1], b[0])\n    for i in range(0, n):\n        if a[i] != b[i]:\n            ct += 1\n    print(ct)\n    print(*b)\n    t -= 1", "while True:\n    try:\n        t = int(input())\n    except EOFError:\n        break\n    break\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = set(a)\n    hd = 0\n    b = []\n    if n == len(c):\n        if len(a) % 2 == 0:\n            b = a[::-1]\n            hd = len(b)\n        elif len(a) > 1 and len(a) % 2 != 0:\n            b = a[::-1]\n            (b[int(n / 2)], b[int(n / 2) + 1]) = (b[int(n / 2) + 1], b[int(n / 2)])\n            hd = len(b)\n        elif len(a) == 1:\n            b = a\n            hd = 0\n        print(hd)\n        print(' '.join((str(x) for x in b)))\n    else:\n        hd = len(a)\n        b = [x for x in a]\n        for i in range(n - 2):\n            if a[i] != a[i + 2]:\n                (a[i], a[i + 2]) = (a[i + 2], a[i])\n            elif a[i] != a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n        for i in range(n - 1):\n            if a[i] == b[i]:\n                if a[i + 1] != b[i]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n                elif a[i - 1] != b[i] and i != 0:\n                    (a[i], a[i - 1]) = (a[i - 1], a[i])\n        if a[-1] == b[-1]:\n            if a[-2] == b[-1] and len(a) > 3:\n                (a[-3], a[-1]) = (a[-1], a[-3])\n            if a[-2] != b[-1]:\n                (a[-2], a[-1]) = (a[-1], a[-2])\n        if a[0] == b[0] and a[1] == b[0] and (len(a) > 3):\n            (a[0], a[2]) = (a[2], a[0])\n        for i in range(n):\n            if a[i] == b[i]:\n                hd -= 1\n        print(hd)\n        print(' '.join((str(x) for x in a)))", "def swap(a, ind):\n    (a[ind], a[ind - 2]) = (a[ind - 2], a[ind])\n    (a[ind - 1], a[ind - 3]) = (a[ind - 3], a[ind - 1])\nt = int(input())\nfor _ in range(t):\n    hd = 0\n    n = int(input())\n    ar = list(map(int, input().split()))\n    i = n - 1\n    if n == 1:\n        print(0)\n        print(*ar)\n    elif n == 2:\n        if ar[0] == ar[1]:\n            print(0)\n            print(*ar)\n        else:\n            print(2)\n            print(ar[1], ar[0])\n    elif len(ar) == len(set(ar)):\n        print(n)\n        print(*ar[1:n], ar[0])\n    elif n == 3:\n        if ar[2] == ar[1] or ar[0] == ar[2]:\n            (ar[0], ar[1]) = (ar[1], ar[0])\n        elif ar[1] == ar[0]:\n            (ar[1], ar[2]) = (ar[2], ar[1])\n        print(2)\n        print(*ar)\n    else:\n        tmp = ar[0]\n        while i > 0:\n            if ar[i] == ar[i - 1]:\n                if i > 2:\n                    swap(ar, i)\n                    i = i - 4\n                    hd = hd + 4\n                elif i == 2:\n                    (ar[2], ar[n - 1]) = (ar[n - 1], ar[2])\n                    (ar[1], ar[n - 2]) = (ar[n - 2], ar[1])\n                    (ar[0], ar[n - 3]) = (ar[n - 3], ar[0])\n                    hd = hd + 3\n                    i = 0\n                elif i == 1:\n                    (ar[1], ar[n - 1]) = (ar[n - 1], ar[1])\n                    (ar[0], ar[n - 2]) = (ar[n - 2], ar[0])\n                    hd = hd + 2\n                    i = 0\n            elif ar[i] != ar[i - 1]:\n                (ar[i], ar[i - 1]) = (ar[i - 1], ar[i])\n                hd = hd + 2\n                i = i - 2\n        if ar[0] == tmp:\n            (ar[0], ar[n - 1]) = (ar[n - 1], ar[0])\n            hd += 1\n        print(n)\n        print(*ar)", "t = int(input())\nl1 = [0] * 100000\nl2 = [0] * 100000\nc = 0\nfor i in range(0, t):\n    n = int(input())\n    c = 0\n    l = list(map(int, input().split()))\n    l1 = l[:]\n    l2 = l[:]\n    for j in range(0, n):\n        if l[j] == l1[j]:\n            for k in range(0, n):\n                if l[k] != l1[j]:\n                    if l1[k] != l1[j]:\n                        temp = l1[k]\n                        l1[k] = l1[j]\n                        l1[j] = temp\n                        break\n    for j in range(0, n):\n        if l1[j] == l2[j]:\n            c = c + 1\n    print(n - c)\n    for j in range(0, n):\n        if j != n - 1:\n            print(str(l1[j]) + ' ', end='')\n        else:\n            print(str(l1[j]), end='')\n    if not i == t - 1:\n        print()", "def h(l1, l2):\n    x = 0\n    l = len(l1)\n    for i in range(l):\n        if l1[i] == l2[i]:\n            x += 1\n    return l - x\nfor i in range(int(input())):\n    x = int(input())\n    arr = input().split()\n    arr2 = list(arr)\n    for i in range(len(arr)):\n        if arr[i] == arr2[i]:\n            for j in range(0, len(arr)):\n                if arr[i] != arr[j] and arr[i] != arr2[j]:\n                    (arr[i], arr[j]) = (arr[j], arr[i])\n                    break\n    print(h(arr, arr2))\n    print(' '.join(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    s = st.split()\n    a = [0] * n\n    if n == 1:\n        print(0)\n        print(st)\n    elif n == 2:\n        if s[0] == s[1]:\n            print(0)\n            for i in s:\n                print(i, end=' ')\n            print()\n        else:\n            print(2)\n            for i in s[::-1]:\n                print(i, end=' ')\n            print()\n    elif n == 3:\n        if s[0] == s[1] or s[1] == s[2] or s[0] == s[2]:\n            print(2)\n        else:\n            print(3)\n        r = n - 1\n        for _ in range(n):\n            print(s[r], end=' ')\n            if r == n - 1:\n                r = 0\n            else:\n                r += 1\n        print()\n    elif n > 3:\n        print(n)\n        if st[:len(st) // 2] == st[:len(st) // 2:-1]:\n            p = []\n            r = n // 2 + 1\n            for _ in range(n):\n                p.append(s[r])\n                if r == n - 1:\n                    r = 0\n                else:\n                    r += 1\n            m = p[n - 1]\n            p[n - 1] = p[n - 2]\n            p[n - 2] = m\n            for j in p:\n                print(j, end=' ')\n            print()\n        elif s[0] == s[n - 1]:\n            r = n - 2\n            for _ in range(n):\n                print(s[r], end=' ')\n                if r == n - 1:\n                    r = 0\n                else:\n                    r += 1\n            print()\n        else:\n            for i in range(n):\n                r = i + 1\n                for _ in range(n - 1):\n                    if r > n - 1:\n                        r = 0\n                    if s[r] != s[i]:\n                        if a[r] == 0:\n                            a[r] = s[i]\n                            break\n                    r += 1\n            for i in a:\n                print(i, end=' ')\n            print()", "from collections import Counter\nfrom operator import itemgetter\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = Counter(a).most_common(1)[0][1]\n    print(min(n, 2 * (n - m)))\n    b = sorted(enumerate(a), key=itemgetter(1))\n    c = b[m:] + b[:m]\n    d = sorted(((i, v) for ((i, _), (_, v)) in zip(b, c)))\n    print(' '.join((str(x[1]) for x in d)))", "for TestCase in range(int(input())):\n    Size = int(input())\n    L = list(map(int, input().split()))\n    LCopy = list(L)\n    e = []\n    if Size == 1:\n        print(0)\n        print(*L)\n    else:\n        for i in range(Size):\n            L[i] = str(LCopy[i - 1])\n            if str(L[i]) == str(LCopy[i]):\n                e.append(i)\n        f = list(L)\n        if len(e) <= 0:\n            print(Size)\n            print(*L)\n        elif len(e) == 1:\n            if Size == 3:\n                print(2)\n                print(*L)\n            else:\n                (L[e[0]], L[e[0] - 2]) = (L[e[0] - 2], L[e[0]])\n                print(Size)\n                print(*L)\n        elif Size == 2:\n            print(0)\n            print(*LCopy)\n        else:\n            for i in range(len(e)):\n                L[e[i]] = int(f[e[i - 1]])\n            print(Size)\n            print(*L)", "def print_arr(arr):\n    for i in arr:\n        print(i, end=' ')\n    print()\n\ndef repl(order_2, order_1, arr):\n    b = []\n    for i in order_2:\n        b.append(i)\n        b.append(i)\n    for i in order_1:\n        b.append(i)\n    l = b[:]\n    l.extend(b[0:2])\n    l = l[2:]\n    res = []\n    d = {}\n    for i in range(len(b)):\n        if b[i] in d:\n            d[b[i]].append(l[i])\n        else:\n            d[b[i]] = [l[i]]\n    for i in arr:\n        res.append(d[i][0])\n        d[i] = d[i][1:]\n    return res\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    order_2 = []\n    order_1 = []\n    replace = {}\n    for i in d:\n        if d[i] == 2:\n            order_2.append(i)\n        else:\n            order_1.append(i)\n    if len(a) == 1:\n        print(0)\n        print_arr(a)\n        continue\n    elif len(a) == 2:\n        if len(order_2) == 1:\n            print(0)\n            print_arr(a)\n            continue\n        else:\n            print(2)\n            a.reverse()\n            print_arr(a)\n            continue\n    b = repl(order_2, order_1, a)\n    dist = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            dist += 1\n    print(dist)\n    print_arr(b)", "from collections import Counter, defaultdict\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = A[:]\n    B.sort()\n    assign = defaultdict(list)\n    B_len = len(B)\n    if B_len > 2:\n        for i in range(B_len):\n            first = B[i]\n            second = B[(i + 2) % B_len]\n            assign[first].append(second)\n        ans = []\n        count = 0\n        for a in A:\n            val = assign[a].pop()\n            if val != a:\n                count += 1\n            ans.append(str(val))\n        print(count)\n        print(' '.join(ans))\n    elif len(A) == 1:\n        print(0)\n        print(A[0])\n    else:\n        print(2 if A[0] != A[1] else 0)\n        print(A[1], A[0])", "def callme():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print('0')\n        print(arr[0])\n        return\n    newarr = [0] * n\n    if len(arr) == len(set(arr)):\n        for i in range(n):\n            newarr[i - 1] = arr[i]\n        print(n)\n        print(*newarr)\n        return\n    freq = {}\n    for i in arr:\n        if i not in freq.keys():\n            freq[i] = 0\n        freq[i] += 1\n    newarr = [-1] * n\n    x = 0\n    for i in freq.keys():\n        while freq[i] > 0 and x < n:\n            if newarr[x] == -1 and i != arr[x]:\n                newarr[x] = i\n                freq[i] -= 1\n            x += 1\n    y = []\n    for i in freq.keys():\n        if freq[i] > 0:\n            y.append(i)\n    x = 0\n    for i in y:\n        while freq[i] > 0 and x < n:\n            if newarr[x] == -1 and i != arr[x]:\n                newarr[x] = i\n                freq[i] -= 1\n            x += 1\n    y = []\n    for i in freq.keys():\n        if freq[i] > 0:\n            y.append(i)\n    x = 0\n    if len(y) > 0:\n        x = 0\n        for i in y:\n            while freq[i] > 0 and x < n:\n                if newarr[x] == -1:\n                    newarr[x] = i\n                    freq[i] -= 1\n                x += 1\n    cost = 0\n    for i in range(n):\n        if arr[i] != newarr[i]:\n            cost += 1\n    print(cost)\n    print(*newarr)\nfor _ in range(int(input())):\n    callme()", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    d = list(list1)\n    e = []\n    if n == 1:\n        print(0)\n        print(*list1)\n    else:\n        for i in range(n):\n            list1[i] = str(d[i - 1])\n            if str(list1[i]) == str(d[i]):\n                e.append(i)\n        f = list(list1)\n        if len(e) <= 0:\n            print(n)\n            print(*list1)\n        elif len(e) == 1:\n            if n == 3:\n                print(2)\n                print(*list1)\n            else:\n                (list1[e[0]], list1[e[0] - 2]) = (list1[e[0] - 2], list1[e[0]])\n                print(n)\n                print(*list1)\n        elif n == 2:\n            print(0)\n            print(*d)\n        else:\n            for i in range(len(e)):\n                list1[e[i]] = int(f[e[i - 1]])\n            print(n)\n            print(*list1)", "from copy import deepcopy\n\ndef cycleshift(m):\n    m.append(m[0])\n    m = m[1:]\n    return m\n\ndef hd(y, z):\n    hd = 0\n    for i in range(n):\n        if y[i] != z[i]:\n            hd += 1\n    if hd == n:\n        return 1\n    else:\n        return 0\n\ndef allUnique(a):\n    a = cycleshift(a)\n    print(n)\n    print(' '.join(a))\n\ndef others(a):\n    print(n)\n    b = deepcopy(a)\n    x = 0\n    while x == 0:\n        a = cycleshift(a)\n        x = hd(a, b)\n    print(' '.join(a))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [i for i in input().split(' ')]\n    if len(arr) == len(set(arr)) and n != 1:\n        allUnique(arr)\n    elif n == 1:\n        print(0)\n        print(' '.join(arr))\n    elif n == 2:\n        print(0)\n        print(' '.join(arr))\n    elif n == 3:\n        print('2')\n        arr = cycleshift(arr)\n        print(' '.join(arr))\n    else:\n        others(arr)", "for t in range(int(input())):\n    m = int(100000.0)\n    n = int(input())\n    ar = list(map(int, input().split()))\n    freq = [0 for i in range(m)]\n    idxs = [[] for i in range(m)]\n    idx = 0\n    for a in ar:\n        freq[a - 1] += 1\n        idxs[a - 1].append(idx)\n        idx += 1\n    counts = []\n    for i in range(m):\n        if freq[i] > 0:\n            counts.append([freq[i], i])\n    counts.sort(reverse=True)\n    j = 0\n    ans = 0\n    while j < len(counts) and len(counts) > 1:\n        if j == len(counts) - 1:\n            if counts[j][0] == 2:\n                temp = idxs[counts[j][1]][:]\n                idxs[counts[j][1]] = idxs[counts[0][1]]\n                idxs[counts[0][1]] = temp\n                ans += 2\n                j += 1\n                continue\n            else:\n                temp = idxs[counts[j][1]][0]\n                idxs[counts[j][1]][0] = idxs[counts[0][1]][0]\n                idxs[counts[0][1]][0] = temp\n                j += 1\n                ans += 1\n                continue\n        if counts[j][0] == 2 and counts[j + 1][0] == 2:\n            temp = idxs[counts[j][1]][:]\n            idxs[counts[j][1]] = idxs[counts[j + 1][1]]\n            idxs[counts[j + 1][1]] = temp\n            j += 2\n            ans += 4\n            continue\n        if counts[j][0] == 2 and counts[j + 1][0] == 1:\n            if j + 2 < len(counts):\n                temp = idxs[counts[j][1]][:]\n                idxs[counts[j][1]][0] = idxs[counts[j + 1][1]][0]\n                idxs[counts[j][1]][1] = idxs[counts[j + 2][1]][0]\n                idxs[counts[j + 1][1]][0] = temp[0]\n                idxs[counts[j + 2][1]][0] = temp[1]\n                j += 3\n                ans += 4\n                continue\n            else:\n                temp = idxs[counts[j][1]][:]\n                idxs[counts[j][1]][0] = idxs[counts[j + 1][1]][0]\n                idxs[counts[j][1]][1] = idxs[counts[0][1]][0]\n                idxs[counts[j + 1][1]][0] = temp[0]\n                idxs[counts[0][1]][0] = temp[1]\n                j += 2\n                ans += 3\n                continue\n        if counts[j][0] == 1:\n            temp = idxs[counts[j][1]][:]\n            idxs[counts[j][1]] = idxs[counts[j + 1][1]]\n            idxs[counts[j + 1][1]] = temp\n            j += 2\n            ans += 2\n            continue\n    br = [0 for i in range(n)]\n    for i in range(m):\n        idx = idxs[i]\n        if len(idx) == 1:\n            br[idx[0]] = i + 1\n        if len(idx) == 2:\n            br[idx[0]] = i + 1\n            br[idx[1]] = i + 1\n    ans = 0\n    for (a, b) in zip(ar, br):\n        if a != b:\n            ans += 1\n    print(ans)\n    print(' '.join((str(x) for x in br)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = [None] * 100001\n    s = [None, None]\n    l = [None, None]\n    cnt = 0\n    b = 0\n    for (i, x) in enumerate(a):\n        if f[x] is not None:\n            f[x] ^= 1\n        else:\n            cnt += 1\n            if cnt == 3 and n > 3:\n                b = 1\n            f[x] = b\n        j = f[x]\n        if s[j] is None:\n            s[j] = x\n        else:\n            a[l[j]] = x\n        l[j] = i\n    for i in (0, 1):\n        if l[i] is not None:\n            a[l[i]] = s[i]\n    print(0 if cnt == 1 else cnt if n <= 3 else n)\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = [None] * 100001\n    s = [None, None]\n    l = [None, None]\n    cnt = 0\n    for (i, x) in enumerate(a):\n        if f[x] is None:\n            cnt += 1\n            f[x] = 1 if n > 3 and cnt > 2 else 0\n        else:\n            f[x] ^= 1\n        j = f[x]\n        if s[j] is None:\n            s[j] = x\n        else:\n            a[l[j]] = x\n        l[j] = i\n    for i in (0, 1):\n        if l[i] is not None:\n            a[l[i]] = s[i]\n    print(0 if cnt == 1 else cnt if n <= 3 else n)\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = [None] * 100001\n    s = [None, None]\n    l = [None, None]\n    cnt = 0\n    for (i, x) in enumerate(a):\n        if f[x] is None:\n            cnt += 1\n            f[x] = int(n > 3 and cnt > 2)\n        else:\n            f[x] ^= 1\n        j = f[x]\n        if s[j] is None:\n            s[j] = x\n        else:\n            a[l[j]] = x\n        l[j] = i\n    for i in (0, 1):\n        if l[i] is not None:\n            a[l[i]] = s[i]\n    print(0 if cnt == 1 else cnt if n <= 3 else n)\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = [None] * 100001\n    s = [None, None]\n    l = [None, None]\n    cnt = 0\n    b = 0\n    for (i, x) in enumerate(a):\n        if f[x] is not None:\n            f[x] ^= 1\n        else:\n            cnt += 1\n            if cnt == 3 and n > 3:\n                b = 1\n            f[x] = b\n        j = f[x]\n        if s[j] is None:\n            s[j] = x\n        else:\n            a[l[j]] = x\n        l[j] = i\n    for i in (0, 1):\n        if l[i] is not None:\n            a[l[i]] = s[i]\n    print(0 if cnt == 1 else cnt if n <= 3 else n)\n    print(*a)", "def hamdist(str1, str2):\n    diffs = 0\n    for (ch1, ch2) in zip(str1, str2):\n        if ch1 != ch2:\n            diffs += 1\n    return diffs\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    j = 1\n    b = s.copy()\n    s.append(s[0])\n    if n > 2:\n        while j < n:\n            if s[j] != s[j + 1]:\n                (s[j], s[j + 1]) = (s[j + 1], s[j])\n                j += 2\n            elif s[j] != s[j - 1]:\n                (s[j], s[j - 1]) = (s[j - 1], s[j])\n                j += 1\n        if s[0] != s[n]:\n            for i in range(n):\n                if s[n] != s[i] and s[n] != b[i]:\n                    (s[n], s[i]) = (s[i], s[n])\n                    break\n        elif s[0] == b[0]:\n            for i in range(n):\n                if s[0] != s[i] and s[0] != b[i]:\n                    (s[0], s[i]) = (s[i], s[0])\n                    break\n        ss = s[:n]\n        print(hamdist(ss, b))\n        for kk in ss:\n            print(kk, end=' ')\n        print()\n    elif n == 1:\n        print(0)\n        print(s[0])\n    elif n == 2:\n        if s[0] == s[1]:\n            print(0)\n            print(s[0], s[1])\n        else:\n            print(2)\n            print(s[1], s[0])", "for i in range(int(input())):\n    n = int(input())\n    l = [int(s) for s in input().split()]\n    if len(l) == 3:\n        ans1 = 0\n        ans = l[1:] + [l[0]]\n        for w in range(3):\n            if ans[w] != l[w]:\n                ans1 += 1\n        print(ans1)\n        print(ans[0], ans[1], ans[2])\n    elif len(l) == 2:\n        ans = [l[1], l[0]]\n        if ans == l:\n            print(0)\n            print(ans[0], ans[1])\n        else:\n            print(2)\n            print(ans[0], ans[1])\n    elif len(l) == 1:\n        print(0)\n        print(l[0])\n    else:\n        ans = l.copy()\n        r = []\n        s = 0\n        if n % 2 * (n - 1) > 0:\n            s = n % 2 * (n - 1)\n        for j in range(0, n - 1, 2):\n            if ans[j] != ans[j + 1]:\n                a = ans[j + 1]\n                ans[j + 1] = ans[j]\n                ans[j] = a\n            else:\n                r += [j, j + 1]\n        r1 = []\n        for k in range(len(r)):\n            if k % 2 == 0:\n                if r[k] not in r1 and r[k] - 1 not in r1:\n                    b = ans[r[k] - 1]\n                    ans[r[k] - 1] = ans[r[k]]\n                    ans[r[k]] = b\n                    r1 += [r[k], r[k] - 1]\n            elif r[k] not in r1 and (r[k] + 1) % n not in r1:\n                d = ans[(r[k] + 1) % n]\n                ans[(r[k] + 1) % n] = ans[r[k]]\n                ans[r[k]] = d\n                r1 += [r[k], (r[k] + 1) % n]\n        if s != 0:\n            c = ans[s]\n            ans[s] = ans[2]\n            ans[2] = c\n        print(n)\n        for v in ans:\n            print(v, end=' ')\n        print()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    l_copy = l[:]\n    k = 0\n    while k < n:\n        if l[k] != l[(k + 1) % n]:\n            (l[k], l[(k + 1) % n]) = (l[(k + 1) % n], l[k])\n            k = k + 2\n        else:\n            (l[k], l[(k + 2) % n]) = (l[(k + 2) % n], l[k])\n            (l[(k + 1) % n], l[(k + 3) % n]) = (l[(k + 3) % n], l[(k + 1) % n])\n            k = k + 4\n    s = ''\n    count = 0\n    for _ in range(n):\n        if l[_] != l_copy[_]:\n            count = count + 1\n        s = s + str(l[_]) + ' '\n    print(count)\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    l = [int(s) for s in input().split()]\n    if len(l) == 3:\n        ans1 = 0\n        ans = l[1:] + [l[0]]\n        for w in range(3):\n            if ans[w] != l[w]:\n                ans1 += 1\n        print(ans1)\n        print(ans[0], ans[1], ans[2])\n    elif len(l) == 2:\n        ans = [l[1], l[0]]\n        if ans == l:\n            print(0)\n            print(ans[0], ans[1])\n        else:\n            print(2)\n            print(ans[0], ans[1])\n    elif len(l) == 1:\n        print(0)\n        print(l[0])\n    else:\n        ans = l.copy()\n        r = []\n        s = 0\n        if n % 2 * (n - 1) > 0:\n            s = n % 2 * (n - 1)\n        for j in range(0, n - 1, 2):\n            if ans[j] != ans[j + 1]:\n                a = ans[j + 1]\n                ans[j + 1] = ans[j]\n                ans[j] = a\n            else:\n                r += [j, j + 1]\n        r1 = []\n        for k in range(len(r)):\n            if k % 2 == 0:\n                if r[k] not in r1 and r[k] - 1 not in r1:\n                    b = ans[r[k] - 1]\n                    ans[r[k] - 1] = ans[r[k]]\n                    ans[r[k]] = b\n                    r1 += [r[k], r[k] - 1]\n            elif r[k] not in r1 and (r[k] + 1) % n not in r1:\n                d = ans[(r[k] + 1) % n]\n                ans[(r[k] + 1) % n] = ans[r[k]]\n                ans[r[k]] = d\n                r1 += [r[k], (r[k] + 1) % n]\n        if s != 0:\n            c = ans[s]\n            ans[s] = ans[2]\n            ans[2] = c\n        print(n)\n        for v in ans:\n            print(v, end=' ')\n        print()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    inp = input()\n    inp = inp.split(' ')\n    l = list(inp)\n    m = n // 2\n    for i in range(n):\n        j = i + 1\n        while j < n and (inp[i] == l[j] or inp[j] == l[i]):\n            j += 1\n        if j != n:\n            (l[i], l[j]) = (l[j], l[i])\n    if l[n - 1] == inp[n - 1]:\n        for o in range(n - 1):\n            if inp[o] != l[n - 1] and l[o] != inp[n - 1]:\n                (l[o], l[n - 1]) = (l[n - 1], l[o])\n                break\n    p = 0\n    for i in range(n):\n        if inp[i] != l[i]:\n            p += 1\n    print(p)\n    for i in range(n - 1):\n        print(int(l[i]), end=' ')\n    print(l[n - 1])\n    t -= 1", "def shift(seq, n=0):\n    a = n % len(seq)\n    return seq[-a:] + seq[:-a]\nn = int(input())\nwhile n:\n    n = n - 1\n    length = int(input())\n    l = [int(x) for x in input().split()]\n    maxi = 0\n    ival = 0\n    for i in range(1, length):\n        if maxi == length:\n            break\n        dp = shift(l, i)\n        count = 0\n        for j in range(0, length):\n            if dp[j] != l[j]:\n                count = count + 1\n        if count > maxi:\n            maxi = count\n            ival = i\n    print(maxi)\n    ans = str(shift(l, ival))\n    print(ans.replace(',', '').replace('[', '').replace(']', ''))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[::-1]\n    count = 0\n    for (i, val) in enumerate(b):\n        if val == a[i]:\n            j = (i + 1) % n\n            while j != i:\n                if val != b[j] and val != a[j]:\n                    (b[j], b[i]) = (b[i], b[j])\n                    count += 1\n                    break\n                j = (j + 1) % n\n        else:\n            count += 1\n    print(count)\n    for i in b:\n        print(i, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        print(*a)\n    elif n == 2:\n        if a[0] == a[1]:\n            print(0)\n            print(*a)\n        else:\n            print(n)\n            print(*a[::-1])\n    elif n == 3:\n        if a[0] == a[1] or a[0] == a[2] or a[1] == a[2]:\n            print(n - 1)\n            temp = a[n - 1]\n            for i in range(n - 1, 0, -1):\n                a[i] = a[i - 1]\n            a[0] = temp\n            print(*a)\n        else:\n            print(n)\n            temp = a[0]\n            a[0] = a[1]\n            a[1] = a[2]\n            a[2] = temp\n            print(*a)\n    elif n == 4:\n        print(n)\n        b = [-1] * n\n        c = 0\n        if len(set(a)) == 4:\n            print(*a[::-1])\n        else:\n            b = [-1] * n\n            if a[3] == a[2]:\n                b[0] = a[3]\n                b[1] = a[2]\n                b[2] = a[1]\n                b[3] = a[0]\n                print(*b)\n            else:\n                arr2 = [-1] * 4\n                arr2[0] = a[0]\n                arr2[1] = a[1]\n                arr2[2] = a[2]\n                arr2[3] = a[3]\n                c = 0\n                ele = arr2[c]\n                while c != n:\n                    ele = arr2[c]\n                    for i in range(n):\n                        if a[i] != ele and b[i] == -1:\n                            b[i] = ele\n                            c += 1\n                            break\n                print(*b)\n    else:\n        print(n)\n        b = [-1] * n\n        c = 0\n        che = []\n        temp = a[n - 1]\n        for i in range(n - 1):\n            b[i + 1] = a[i]\n            if a[i + 1] == a[i]:\n                che.append(i + 1)\n                c += 1\n        if a[n - 1] == a[0]:\n            che.append(0)\n            c += 1\n        b[0] = temp\n        if c > 0:\n            if c == 1:\n                for u in range(n):\n                    if u != che[0]:\n                        temp = u\n                        break\n                if che[0] == n - 1:\n                    temp += 1\n                (b[che[0]], b[temp]) = (b[temp], b[che[0]])\n            elif c == 2:\n                (b[che[0]], b[che[1]]) = (b[che[1]], b[che[0]])\n            else:\n                for i in range(c - 1):\n                    no = che[i]\n                    no1 = che[i + 1]\n                    (b[no], b[no1]) = (b[no1], b[no])\n        print(*b)", "from collections import Counter\nfor t in range(int(input())):\n    l = int(input())\n    A = [int(x) for x in input().split()]\n    misfit = 0\n    maxitem = Counter(A).most_common()[0][1]\n    count = 0\n    end = 0\n    if maxitem == 1:\n        end = 1\n        if l == 1:\n            print(0)\n            print(*A)\n        else:\n            B = A[1:] + [A[0]]\n            print(l)\n            print(*B)\n    if maxitem == l and l != 1:\n        end = 1\n        print(0)\n        print(*A)\n    if end == 0:\n        if maxitem > l // 2:\n            misfit = l - (l - maxitem) * 2\n        C = 2 * A\n        for i in range(1, l + 1):\n            count = 0\n            for x in range(l):\n                if C[i + x] == A[x]:\n                    count += 1\n                    if misfit < count:\n                        break\n            else:\n                break\n        print(l - misfit)\n        print(*C[i:i + l])", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    indices = []\n    sortArr = []\n    hamDist = 0\n    for i in sorted(enumerate(arr), key=lambda x: x[1]):\n        indices.append(i[0])\n        sortArr.append(i[1])\n    pointer = 0\n    i = 0\n    while pointer < n:\n        if arr[indices[i]] == sortArr[pointer]:\n            pointer += 1\n        else:\n            arr[indices[i]] = sortArr[pointer]\n            hamDist += 1\n            pointer += 1\n            i += 1\n    pointer = 0\n    for j in range(i, n):\n        if arr[indices[j]] != sortArr[pointer]:\n            hamDist += 1\n        arr[indices[j]] = sortArr[pointer]\n        pointer += 1\n    print(hamDist)\n    print(*arr)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    i = 0\n    while i < n:\n        while i < n and a[i] != b[i]:\n            i += 1\n        j = i + 1\n        while j < n and b[j] == b[i]:\n            j += 1\n        if j < n:\n            (b[i], b[j]) = (b[j], b[i])\n        i += 1\n    for i in range(n - 1, -1, -1):\n        if b[i] == a[i]:\n            j = i - 1\n            while j >= 0 and (b[j] == b[i] or b[j] == a[i] or a[j] == b[i]):\n                j -= 1\n            if j >= 0:\n                (b[j], b[i]) = (b[i], b[j])\n        i += 1\n    ans = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            ans += 1\n    print(ans)\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = []\n    if n == 1:\n        print(0)\n        print(a[0])\n    elif n == 2:\n        if a[1] == a[0]:\n            print(0)\n        else:\n            print(2)\n        print(a[1], a[0])\n    elif n == 3:\n        if a[1] == a[0]:\n            print(2)\n            print(a[0], a[2], a[1])\n        elif a[0] == a[2]:\n            print(2)\n            print(a[0], a[2], a[1])\n        elif a[1] == a[2]:\n            print(2)\n            print(a[1], a[0], a[2])\n        else:\n            print(3)\n            print(a[1], a[2], a[0])\n    else:\n        if n % 2 == 0:\n            i = 0\n            ad = 0\n            while i < n:\n                if a[i] == a[i + 1]:\n                    if b != []:\n                        tmp1 = b[-2]\n                        tmp2 = b[-1]\n                        (b[-1], b[-2]) = (a[i], a[i])\n                        b.append(tmp1)\n                        b.append(tmp2)\n                    elif ad == 1:\n                        b.append(a[i])\n                        b.append(a[i])\n                        b.append(a1)\n                        b.append(a1)\n                        ad = 0\n                    else:\n                        ad = 1\n                        a1 = a[i]\n                else:\n                    b.append(a[i + 1])\n                    b.append(a[i])\n                    if ad == 1:\n                        ad = 0\n                        b.append(a1)\n                        b.append(a1)\n                i += 2\n        else:\n            i = 0\n            ad = 0\n            while i < n - 1:\n                if a[i] == a[i + 1]:\n                    if b != []:\n                        tmp1 = b[-2]\n                        tmp2 = b[-1]\n                        (b[-1], b[-2]) = (a[i], a[i])\n                        b.append(tmp1)\n                        b.append(tmp2)\n                    elif ad == 1:\n                        b.append(a[i])\n                        b.append(a[i])\n                        b.append(a1)\n                        b.append(a1)\n                        ad = 0\n                    else:\n                        ad = 1\n                        a1 = a[i]\n                else:\n                    b.append(a[i + 1])\n                    b.append(a[i])\n                    if ad == 1:\n                        ad = 0\n                        b.append(a1)\n                        b.append(a1)\n                i += 2\n            if a[-2] == a[-1]:\n                b.append(a[-1])\n                temp = b[0]\n                b[0] = b[-1]\n                b[-1] = temp\n            else:\n                b.append(a[-1])\n                temp = b[-2]\n                b[-2] = b[-1]\n                b[-1] = temp\n        print(n)\n        print(*b)", "tests = int(input())\nresults = []\nfor i in range(0, tests):\n    n = int(input())\n    numso = input().split(' ')\n    nums = list(numso)\n    n = len(nums)\n    l = 0\n    r = n - 1\n    while l < r:\n        if nums[l] != nums[r]:\n            (nums[l], nums[r]) = (nums[r], nums[l])\n            l += 1\n            r -= 1\n        elif l + 1 < r - 1:\n            (nums[l], nums[l + 1]) = (nums[l + 1], nums[l])\n            (nums[r], nums[r - 1]) = (nums[r - 1], nums[r])\n            l += 2\n            r -= 2\n        elif l - 1 >= 0 and r + 1 <= n - 1:\n            (nums[l], nums[l - 1]) = (nums[l - 1], nums[l])\n            (nums[r], nums[r + 1]) = (nums[r + 1], nums[r])\n            l += 2\n            r -= 2\n        else:\n            break\n    if n % 2 == 1 and n >= 3:\n        m = int(n / 2)\n        mv = nums[m]\n        for p in range(0, n):\n            if mv != nums[p] and mv != numso[p]:\n                (nums[m], nums[p]) = (nums[p], nums[m])\n                break\n    dist = 0\n    for p in range(0, n):\n        if nums[p] != numso[p]:\n            dist += 1\n    results.append(dist)\n    results.append(' '.join(nums))\nfor i in range(0, len(results)):\n    if i % 2 == 1:\n        print(results[i])\n    else:\n        ll = results[i]\n        print(ll)", "import copy\nT = int(input())\n\ndef ham(A, B):\n    count = 0\n    for i in range(0, len(A)):\n        if A[i] != B[i]:\n            count = count + 1\n    return count\nfor i in range(0, T):\n    N = int(input())\n    a = input()\n    a = list(map(int, a.split()))\n    b = list(reversed(a))\n    j = 0\n    i = 0\n    c = []\n    while i < len(a):\n        if b == []:\n            break\n        elif j == len(a) and len(c) < len(a):\n            if len(b) > 1:\n                c.append(b[-2])\n                c.append(b[-1])\n            else:\n                c.append(b[-1])\n            break\n        elif j == len(b) and len(c) < len(a):\n            if len(b) > 1:\n                c.append(b[-2])\n                c.append(b[-1])\n            else:\n                c.append(b[-1])\n            break\n        elif a[i] != b[j]:\n            c.append(b.pop(j))\n            i = i + 1\n            j = 0\n        elif i == len(a) - 1:\n            c.append(b.pop(0))\n        else:\n            j = j + 1\n    if a[-1] == c[-1]:\n        for i in range(0, len(a) - 1):\n            if c[-1] != a[i] and c[-1] != c[i]:\n                (c[-1], c[i]) = (c[i], c[-1])\n                break\n    print(ham(c, a))\n    print(*c)", "import copy\nT = int(input())\n\ndef ham(A, B):\n    count = 0\n    for i in range(0, len(A)):\n        if A[i] != B[i]:\n            count = count + 1\n    return count\nfor i in range(0, T):\n    N = int(input())\n    a = input()\n    a = list(map(int, a.split()))\n    b = list(reversed(a))\n    j = 0\n    i = 0\n    c = []\n    while i < len(a):\n        if b == []:\n            break\n        elif j == len(a) and len(c) < len(a):\n            if len(b) > 1:\n                c.append(b[-2])\n                c.append(b[-1])\n            else:\n                c.append(b[-1])\n            break\n        elif j == len(b) and len(c) < len(a):\n            if len(b) > 1:\n                c.append(b[-2])\n                c.append(b[-1])\n            else:\n                c.append(b[-1])\n            break\n        elif a[i] != b[j]:\n            c.append(b.pop(j))\n            i = i + 1\n            j = 0\n        elif i == len(a) - 1:\n            c.append(b.pop(0))\n        else:\n            j = j + 1\n    if a[-1] == c[-1]:\n        for i in range(0, len(a) - 1):\n            if c[-1] != a[i] and c[-1] != c[i]:\n                (c[-1], c[i]) = (c[i], c[-1])\n                break\n    print(ham(c, a))\n    print(*c)", "for i in range(int(input())):\n    n = int(input())\n    l1 = []\n    flag = 0\n    f = 0\n    l = [int(x) for x in input().split()]\n    if n == 1:\n        print(0)\n        print(*l)\n        flag = 1\n    if n == 2 and n != len(set(l)) and (flag == 0):\n        print(0)\n        print(*l)\n        flag = 1\n    if n == len(set(l)) and flag == 0:\n        print(n)\n        for i in range(n - 1):\n            l1.append(l[i + 1])\n        l1.append(l[0])\n        print(*l1)\n    elif flag == 0:\n        c = 1\n        f = 0\n        for i in range(n - 1):\n            if l[i] == l[i + 1] or l[0] == l[-1]:\n                f = 1\n                break\n            else:\n                continue\n        if f != 1 or (f == 1 and n == 3 and (len(set(l)) == 2)):\n            if n != 3:\n                print(n)\n            else:\n                print(2)\n            for i in range(n - 1):\n                l1.append(l[i + 1])\n            l1.append(l[0])\n            print(*l1)\n        else:\n            print(n)\n            for i in range(n - 2):\n                l1.append(l[i + 2])\n            l1.append(l[0])\n            l1.append(l[1])\n            for i in range(n - 1):\n                if l1[i] == l[i]:\n                    a = l1[i]\n                    l1[i] = l1[i + 1]\n                    l1[i + 1] = a\n            print(*l1)", "def count(a, b, n):\n    c = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            c += 1\n    return c\nt = int(input())\nfor e in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        print(a[0])\n        continue\n    dic = dict()\n    (s, d) = ([], [])\n    for i in range(n):\n        if a[i] in dic:\n            d.append([dic[a[i]], i])\n            del dic[a[i]]\n        else:\n            dic[a[i]] = i\n    for i in dic:\n        s.append(dic[i])\n    if len(d) == 0:\n        print(n)\n        for i in range(1, n):\n            print(a[i], end=' ')\n        print(a[0])\n    else:\n        b = list(a)\n        (x, y) = (d[0][0], d[0][1])\n        for i in range(1, len(d)):\n            (e, f, p, q) = (d[i - 1][0], d[i - 1][1], d[i][0], d[i][1])\n            (b[e], b[f]) = (a[p], a[q])\n        l = len(d) - 1\n        (i, j) = (d[l][0], d[l][1])\n        (b[i], b[j]) = (a[x], a[y])\n        l = len(s)\n        if l == 1 and len(d) > 1:\n            (i, j) = (s[0], d[0][0])\n            (b[i], b[j]) = (b[j], b[i])\n        if l > 1:\n            for i in range(1, l):\n                b[s[i - 1]] = a[s[i]]\n            b[s[l - 1]] = a[s[0]]\n        if len(d) == 1 and l > 0:\n            (i, j) = (d[0][0], s[0])\n            (b[i], b[j]) = (b[j], b[i])\n            if l > 1:\n                (i, j) = (d[0][1], s[1])\n                (b[i], b[j]) = (b[j], b[i])\n        print(count(a, b, n))\n        for i in range(n):\n            print(b[i], end=' ')\n        print()", "import random\n\ndef check(arr, li):\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == li[i]:\n            count += 1\n    return count\n\ndef shuf(li):\n    if len(li) > 3:\n        arr = li[:]\n        random.shuffle(arr)\n        while True:\n            random.shuffle(arr)\n            if check(arr, li) == 0:\n                break\n        return arr\n    elif len(li) == 1:\n        return li\n    elif len(li) == 2:\n        if li[0] != li[1]:\n            return li\n        else:\n            return li[::-1]\n    elif len(li) == 3:\n        if len(set(li)) == 3:\n            return li\n        else:\n            return\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if len(li) > 3:\n        ans = shuf(li)\n        print(len(ans))\n        print(*ans)\n    elif len(li) == 1:\n        print('0')\n        print(*li)\n    elif len(li) == 2:\n        if li[0] != li[1]:\n            print('2')\n            print(li[1], li[0])\n        else:\n            print('0')\n            print(*li)\n    elif len(li) == 3:\n        if li[0] == li[1] or li[1] == li[2]:\n            print('2')\n            print(li[2], li[1], li[0])\n        elif li[0] == li[2]:\n            print('2')\n            print(li[1], li[2], li[0])\n        else:\n            print('3')\n            print(li[2], li[0], li[1])", "test = int(input())\nwhile test > 0:\n    n = int(input())\n    new = [0 for i in range(n)]\n    array = [int(a) for a in input().split()]\n    i = 0\n    if n == 1:\n        print(0)\n        print(array[0])\n        test = test - 1\n        continue\n    while i < n:\n        if array[i] == array[(i + 1) % n]:\n            break\n        else:\n            i = i + 1\n    i = i % n\n    y = i\n    status = 0\n    dist = 0\n    while True:\n        if i >= n:\n            i = i % n\n            status = 1\n        if status and i == y:\n            break\n        if array[i] != array[(i + 1) % n]:\n            if new[(i + 1) % n]:\n                if array[(i + 2) % n] == array[i]:\n                    new[(i + 2) % n] = array[(i + 1) % n]\n                    new[(i + 3) % n] = array[i]\n                    if (i + 3) % n == i:\n                        dist = dist + 1\n                    i = i + 1\n                else:\n                    new[(i + 2) % n] = array[i]\n                if array[i] == array[(i + 2) % n]:\n                    dist = dist + 1\n            else:\n                new[(i + 1) % n] = array[i]\n        else:\n            new[(i + 2) % n] = array[i]\n            if array[i] == array[(i + 2) % n]:\n                dist = dist + 1\n        i = i + 1\n    print(n - dist)\n    for j in new:\n        print(j, end=' ')\n    print('')\n    test = test - 1", "t = int(input().strip())\npos = {}\nd = {}\narr = []\nswap = []\n\ndef swap1(x, y):\n    (arr[pos[x][0]], arr[pos[y][0]]) = (arr[pos[y][0]], arr[pos[x][0]])\n    (arr[pos[x][1]], arr[pos[y][1]]) = (arr[pos[y][1]], arr[pos[x][1]])\n    swap[pos[x][0]] = 1\n    swap[pos[y][0]] = 1\n    swap[pos[x][1]] = 1\n    swap[pos[y][1]] = 1\n\ndef swap2(x, y, z):\n    (arr[pos[x][0]], arr[pos[y][0]]) = (arr[pos[y][0]], arr[pos[x][0]])\n    (arr[pos[x][1]], arr[pos[z][0]]) = (arr[pos[z][0]], arr[pos[x][1]])\n    swap[pos[x][0]] = 1\n    swap[pos[y][0]] = 1\n    swap[pos[x][1]] = 1\n    swap[pos[z][0]] = 1\n\ndef swap3(x, y):\n    (arr[x], arr[y]) = (arr[y], arr[x])\n    swap[x] = 1\n    swap[y] = 1\nfor _ in range(t):\n    length = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    c = 0\n    flag = False\n    pos = {}\n    d = {}\n    swap = [0] * length\n    single = []\n    pair = []\n    reserve = -1\n    for i in arr:\n        try:\n            d[i] += 1\n            pos[i].append(c)\n        except:\n            d[i] = 1\n            pos[i] = [c]\n        c += 1\n    for i in list(set(arr)):\n        if d[i] > 1:\n            pair.append(i)\n        else:\n            single.append(i)\n    l1 = len(pair)\n    i = 0\n    while i < l1 // 2:\n        swap1(pair[2 * i], pair[2 * i + 1])\n        if i == 0:\n            reserve = pair[0]\n        i += 1\n    j = 0\n    l2 = len(single)\n    if l1 % 2 != 0 and l2 >= 2:\n        swap2(pair[2 * i], single[2 * j], single[2 * j + 1])\n        single = single[2:]\n        l2 -= 2\n    elif l1 % 2 != 0 and l2 == 1:\n        swap3(pos[pair[2 * i]][0], pos[single[2 * j]][0])\n        single = single[1:]\n        l2 -= 1\n        if reserve != -1:\n            swap3(pos[pair[2 * i]][1], pos[reserve][0])\n    elif l1 % 2 != 0 and l2 == 0 and (reserve != -1):\n        swap1(pair[2 * i], reserve)\n    while j < l2 // 2:\n        if reserve == -1 and j == 0:\n            reserve = single[0]\n            flag = True\n        swap3(pos[single[2 * j]][0], pos[single[2 * j + 1]][0])\n        j += 1\n    if l2 % 2 != 0 and reserve != -1:\n        if flag:\n            swap3(pos[single[2 * j]][0], pos[reserve][0])\n        else:\n            swap3(pos[single[2 * j]][0], pos[reserve][1])\n    hamd = swap.count(0)\n    print(length - hamd)\n    for i in arr:\n        print(i, end=' ')\n    print()", "t = int(input())\narr_list = []\nhd_list = []\nfor i in range(t):\n    n = int(input())\n    inp_list = input().split()\n    arr = ''\n    hd = 0\n    swap = 0\n    if n == 1:\n        hd_list.append(0)\n        arr = inp_list[0]\n    elif n == 2 and inp_list[0] == inp_list[1]:\n        hd_list.append(0)\n        arr = inp_list[0] + ' ' + inp_list[0]\n    elif n == 2:\n        hd_list.append(2)\n        arr = inp_list[1] + ' ' + inp_list[0]\n    elif n == 3 and inp_list[0] == inp_list[1]:\n        hd_list.append(2)\n        arr = inp_list[0] + ' ' + inp_list[-1] + ' ' + inp_list[0]\n    elif n == 3 and inp_list[1] == inp_list[2]:\n        hd_list.append(2)\n        arr = inp_list[1] + ' ' + inp_list[0] + ' ' + inp_list[2]\n    elif n == 3 and inp_list[0] == inp_list[2]:\n        hd_list.append(2)\n        arr = inp_list[0] + ' ' + inp_list[2] + ' ' + inp_list[1]\n    elif n == 3:\n        hd_list.append(3)\n        arr = inp_list[2] + ' ' + inp_list[0] + ' ' + inp_list[1]\n    else:\n        hd_list.append(n)\n        temp_list = inp_list.copy()\n        j = 0\n        flag = 0\n        ctr = n\n        while flag == 0:\n            ctr -= 1\n            if ctr == -1:\n                temp_list = inp_list.copy()\n                ctr = n\n                (temp_list[1], temp_list[0]) = (temp_list[0], temp_list[1])\n            temp_arr = temp_list[1:n]\n            temp_arr.append(temp_list[0])\n            flag = 1\n            for j in range(n):\n                if temp_arr[j] == inp_list[j]:\n                    temp_list = temp_arr\n                    flag = 0\n                    break\n        for j in range(n - 1):\n            arr = arr + temp_arr[j] + ' '\n        arr += temp_arr[n - 1]\n    arr_list.append(arr)\nfor i in range(t):\n    print(hd_list[i])\n    print(arr_list[i])", "T = int(input())\nfor _testcase_ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    if len(A) <= 3:\n        if len(A) == 1:\n            B = [A[0]]\n            print(0)\n        if len(A) == 2:\n            if A[0] == A[1]:\n                B = [A[1], A[0]]\n                print(0)\n            else:\n                B = [A[1], A[0]]\n                print(2)\n        if len(A) == 3:\n            if len(set(A)) == 3:\n                B = [A[1], A[2], A[0]]\n                print(3)\n            elif len(set(A)) == 2:\n                print(2)\n                single = min(A, key=lambda x: A.count(x))\n                double = max(A, key=lambda x: A.count(x))\n                singleI = A.index(single)\n                if singleI == 0:\n                    B = [double, single, double]\n                else:\n                    B = [single, double, double]\n        print(' '.join((str(x) for x in B)))\n        continue\n    B = [A[-1]] + A[:-1]\n    badValues = []\n    badIndices = []\n    for i in range(N):\n        if A[i] == B[i]:\n            badValues.append(B[i])\n            badIndices.append(i)\n    if len(badValues) > 1:\n        badIndices = [badIndices[-1]] + badIndices[:-1]\n        for i in range(len(badIndices)):\n            badIndex = badIndices[i]\n            badValue = badValues[i]\n            B[badIndex] = badValue\n    elif len(badValues) == 1:\n        for newI in range(N):\n            if A[newI] != badValues[0] and A[badIndices[0]] != B[newI]:\n                (B[newI], B[badIndices[0]]) = (badValues[0], B[newI])\n                break\n    elif len(badValues) < 1:\n        pass\n    print(N)\n    print(' '.join((str(x) for x in B)))\n    continue", "T = int(input())\nfor _testcase_ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    if len(A) <= 3:\n        if len(A) == 1:\n            B = [A[0]]\n            print(0)\n        if len(A) == 2:\n            if A[0] == A[1]:\n                B = [A[1], A[0]]\n                print(0)\n            else:\n                B = [A[1], A[0]]\n                print(2)\n        if len(A) == 3:\n            if len(set(A)) == 3:\n                B = [A[1], A[2], A[0]]\n                print(3)\n            elif len(set(A)) == 2:\n                print(2)\n                single = min(A, key=lambda x: A.count(x))\n                double = max(A, key=lambda x: A.count(x))\n                singleI = A.index(single)\n                if singleI == 0:\n                    B = [double, single, double]\n                else:\n                    B = [single, double, double]\n        if len(A) == 4:\n            print(4)\n            if len(set(A)) == 2:\n                B = []\n                for a in A:\n                    newElements = set(A)\n                    newElements.remove(a)\n                    B.append(max(newElements))\n            if len(set(A)) == 3:\n                singles = [x for x in A if A.count(x) == 1]\n                double = [x for x in A if A.count(x) == 2][0]\n                B = []\n                for a in A:\n                    if a == double:\n                        B.append(singles.pop(0))\n                    else:\n                        B.append(double)\n        print(' '.join((str(x) for x in B)))\n        continue\n    B = [A[-1]] + A[:-1]\n    badValues = []\n    badIndices = []\n    for i in range(N):\n        if A[i] == B[i]:\n            badValues.append(B[i])\n            badIndices.append(i)\n    if len(badValues) > 1:\n        badIndices = [badIndices[-1]] + badIndices[:-1]\n        for i in range(len(badIndices)):\n            badIndex = badIndices[i]\n            badValue = badValues[i]\n            B[badIndex] = badValue\n    elif len(badValues) == 1:\n        for newI in range(N):\n            if A[newI] != badValues[0] and A[badIndices[0]] != B[newI]:\n                (B[newI], B[badIndices[0]]) = (badValues[0], B[newI])\n                break\n    elif len(badValues) < 1:\n        pass\n    print(N)\n    print(' '.join((str(x) for x in B)))\n    continue", "T = int(input())\nfor _testcase_ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    if len(A) <= 3:\n        if len(A) == 1:\n            B = [A[0]]\n            print(0)\n        if len(A) == 2:\n            if A[0] == A[1]:\n                B = [A[1], A[0]]\n                print(0)\n            else:\n                B = [A[1], A[0]]\n                print(2)\n        if len(A) == 3:\n            if len(set(A)) == 3:\n                B = [A[1], A[2], A[0]]\n                print(3)\n            elif len(set(A)) == 2:\n                print(2)\n                single = min(A, key=lambda x: A.count(x))\n                double = max(A, key=lambda x: A.count(x))\n                singleI = A.index(single)\n                if singleI == 0:\n                    B = [double, single, double]\n                else:\n                    B = [single, double, double]\n        print(' '.join((str(x) for x in B)))\n        continue\n    B = [A[-1]] + A[:-1]\n    badValues = []\n    badIndices = []\n    for i in range(N):\n        if A[i] == B[i]:\n            badValues.append(B[i])\n            badIndices.append(i)\n    if len(badValues) > 1:\n        badIndices = [badIndices[-1]] + badIndices[:-1]\n        for i in range(len(badIndices)):\n            badIndex = badIndices[i]\n            badValue = badValues[i]\n            B[badIndex] = badValue\n    elif len(badValues) == 1:\n        for newI in range(N):\n            if A[newI] != badValues[0] and A[badIndices[0]] != B[newI]:\n                (B[newI], B[badIndices[0]]) = (badValues[0], B[newI])\n                break\n    elif len(badValues) < 1:\n        pass\n    print(N)\n    print(' '.join((str(x) for x in B)))\n    continue", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = len(l)\n    l1 = sorted(l)\n    if p == 1:\n        print(0)\n        print(l[0], end=' ')\n    elif p == 2:\n        if l[0] == l[1]:\n            print(0)\n        else:\n            print(2)\n        for k in reversed(l):\n            print(k, end=' ')\n    elif p == 3:\n        l3 = defaultdict(list)\n        l3[l1[p - 2]].append(l1[0])\n        l3[l1[p - 1]].append(l1[1])\n        for j in range(p - 2):\n            l3[l1[j]].append(l1[j + 2])\n        if l[0] == l[1] or l[1] == l[2] or l[2] == l[0]:\n            print(2)\n            for k in l:\n                if l3[k][0] != -1:\n                    print(l3[k][0], end=' ')\n                    l3[k][0] = -1\n                else:\n                    print(l3[k][1], end=' ')\n        else:\n            print(3)\n            for k in l:\n                print(l3[k][0], end=' ')\n    else:\n        l3 = defaultdict(list)\n        l3[l1[p - 2]].append(l1[0])\n        l3[l1[p - 1]].append(l1[1])\n        for j in range(p - 2):\n            l3[l1[j]].append(l1[j + 2])\n        print(p)\n        for j in l:\n            if l3[j][0] == -1:\n                print(l3[j][1], end=' ')\n            else:\n                print(l3[j][0], end=' ')\n                l3[j][0] = -1\n    print()", "test = int(input())\nfor _ in range(test):\n    S = int(input())\n    arr = {}\n    two = {}\n    hd = 0\n    c = 1\n    for i in input().split():\n        i = int(i)\n        if i in arr:\n            temp = arr[i][1]\n            arr.pop(i)\n            two[i] = {2: [temp, c]}\n        else:\n            arr[i] = {1: c}\n        c += 1\n    res = [0] * S\n    hd = 0\n    lastc = lasta = 0\n    lastx = lasty = lastx1 = -1\n    lt = list(two.keys())\n    lent = len(lt)\n    lent_c = 0\n    lentwo = len(two)\n    while two != {} and lentwo > 1:\n        if lent_c < lent - 1:\n            x = two.pop(lt[lent_c])\n            k1 = lt[lent_c]\n            if lastc == 0:\n                (lastx, lasty) = x[2]\n                lastc = 1\n            (indy1, indy2) = two[lt[lent_c + 1]][2]\n            res[indy1 - 1] = k1\n            res[indy2 - 1] = k1\n            hd += 2\n        else:\n            x = two.popitem()\n            res[lastx - 1] = x[0]\n            res[lasty - 1] = x[0]\n            hd += 2\n        lent_c += 1\n    arrl = []\n    lenarr = len(arr)\n    l = list(arr.keys())\n    lenl = len(l)\n    lenl_c = 0\n    while arr != {} and lenarr > 1:\n        hd += 1\n        if lenl_c < lenl - 1:\n            x = arr.pop(l[lenl_c])\n            k1 = l[lenl_c]\n            if lasta == 0:\n                lastx1 = x[1]\n                lasta = 1\n            indy1 = arr[l[lenl_c + 1]][1]\n            res[indy1 - 1] = k1\n            arrl.append(indy1 - 1)\n        else:\n            x = arr.popitem()\n            if lastx1 != -1:\n                res[lastx1 - 1] = x[0]\n                arrl.append(lastx1 - 1)\n        lenl_c += 1\n    if len(two) == 1 and lenarr > 1:\n        t = two.popitem()\n        (indt1, indt2) = t[1][2]\n        valt = t[0]\n        (x, y) = (res[arrl[0]], res[arrl[1]])\n        (res[arrl[0]], res[arrl[1]], res[indt1 - 1], res[indt2 - 1]) = (valt, valt, x, y)\n        hd += 2\n    elif len(two) == 1 and len(arr) == 1:\n        t = two.popitem()\n        (indt1, indt2) = t[1][2]\n        valt = t[0]\n        a = arr.popitem()\n        inda = a[1][1]\n        vala = a[0]\n        (res[indt1 - 1], res[indt2 - 1], res[inda - 1]) = (valt, vala, valt)\n        hd = 2\n    elif len(two) == 1 and lenarr == 0:\n        t = two.popitem()\n        (indt1, indt2) = t[1][2]\n        valt = t[0]\n        res[0] = res[1] = valt\n        hd = 0\n    elif len(arr) == 1 and two == {}:\n        if S == 1:\n            res[0] = arr.popitem()[0]\n            hd = 0\n        elif S > 1:\n            a = arr.popitem()\n            inda = a[1][1]\n            vala = a[0]\n            if inda < S - 1:\n                (res[inda], res[inda - 1]) = (a[0], res[inda])\n            elif inda == S:\n                (res[0], res[inda - 1]) = (a[0], res[0])\n                hd += 1\n    print(hd)\n    print(*res)", "for q in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = list(set(a))\n    c = [a[i] for i in range(n)]\n    lb = len(b)\n    flag = [0 for i in range(n)]\n    count = 0\n    count1 = 0\n    if n == 1:\n        print(0)\n        for k in a:\n            print(k, end=' ')\n        print()\n    elif n == lb:\n        print(n)\n        for k in range(1, n):\n            print(a[k], end=' ')\n        print(a[0])\n    elif n == 2 and lb == 1:\n        print(0)\n        for k in a:\n            print(k, end=' ')\n        print()\n    elif n == 3 and lb == 2:\n        if a[0] == a[1]:\n            print(2)\n            print(a[0], end=' ')\n            print(a[2], end=' ')\n            print(a[1])\n        if a[0] == a[2] or a[1] == a[2]:\n            print(2)\n            print(a[1], end=' ')\n            print(a[0], end=' ')\n            print(a[2])\n    elif n == 4 and lb == 3 and (a[3] == a[2]):\n        print(4)\n        print(a[2], end=' ')\n        print(a[3], end=' ')\n        print(a[0], end=' ')\n        print(a[1])\n    else:\n        print(n)\n        i = 1\n        while i < n:\n            if i == n - 1 and flag[i - 1] == 1:\n                break\n            if i == n - 1 and flag[i - 1] == 0 and (c[i] != c[i - 1]):\n                (c[i], c[i - 1]) = (c[i - 1], c[i])\n                flag[i - 1] = 1\n                flag[i] = 1\n                break\n            if c[i] == c[i - 1]:\n                i += 1\n            else:\n                (c[i], c[i - 1]) = (c[i - 1], c[i])\n                flag[i - 1] = 1\n                flag[i] = 1\n                i += 2\n        for i in range(n):\n            if c[i] != a[i]:\n                count1 += 1\n        if count1 == n:\n            for d in c:\n                print(d, end=' ')\n            print()\n        else:\n            ind = []\n            for i in range(n):\n                if flag[i] == 0:\n                    count += 1\n            if count % 2 == 0 and count > 0:\n                for i in range(n):\n                    if flag[i] == 0:\n                        ind.append(i)\n                l = len(ind)\n                i = 1\n                while i < l:\n                    (c[ind[i]], c[ind[i - 1]]) = (c[ind[i - 1]], c[ind[i]])\n                    flag[ind[i - 1]] = 1\n                    flag[ind[i]] = 1\n                    i += 2\n            else:\n                for i in range(n):\n                    if flag[i] == 0:\n                        ind.append(i)\n                l = len(ind)\n                if l == 1:\n                    for i in range(n):\n                        if c[ind[0]] != a[i] and c[ind[0]] != c[i]:\n                            (c[ind[0]], c[i]) = (c[i], c[ind[0]])\n                            flag[ind[0]] = 1\n                            break\n                else:\n                    i = 1\n                    while i < l - 1:\n                        (c[ind[i]], c[ind[i - 1]]) = (c[ind[i - 1]], c[ind[i]])\n                        flag[ind[i - 1]] = 1\n                        flag[ind[i]] = 1\n                        i += 2\n                    for i in range(n):\n                        if c[ind[l - 1]] != a[i] and c[ind[l - 1]] != c[i]:\n                            (c[ind[l - 1]], c[i]) = (c[i], c[ind[l - 1]])\n                            flag[ind[l - 1]] = 1\n                            break\n            for d in c:\n                print(d, end=' ')\n            print()", "from operator import itemgetter\n\ndef get_tuples(A):\n    d = {}\n    for i in A:\n        d[i] = d.get(i, 0) + 1\n    return d\n\ndef get_bi_from(sorted_tup, ai):\n    res = -1\n    for (i, (k, v)) in enumerate(sorted_tup):\n        if k == ai:\n            continue\n        else:\n            res = k\n            if v == 1:\n                sorted_tup.pop(i)\n            else:\n                sorted_tup[i] = (k, v - 1)\n            break\n    return res\n\ndef find_swap(A, B, ind):\n    n = len(A)\n    t = B[ind]\n    for i in range(n):\n        if A[i] != t and A[ind] != B[i]:\n            tmp = B[i]\n            B[i] = t\n            B[ind] = tmp\n            return 1\n    return 0\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    tup = get_tuples(A)\n    sorted_tup = sorted(tup.items(), key=itemgetter(1), reverse=True)\n    hammer_dist = len(A)\n    B = [-1 for i in range(len(A))]\n    for (i, ai) in enumerate(A):\n        bi = get_bi_from(sorted_tup, ai)\n        if bi == -1:\n            hammer_dist -= 1\n            bi = ai\n        B[i] = bi\n    if N >= 2:\n        if A[-1] == B[-1]:\n            r = find_swap(A, B, N - 1)\n            hammer_dist += r\n        if A[-2] == B[-2]:\n            r = find_swap(A, B, N - 2)\n            hammer_dist += r\n    print(hammer_dist)\n    print(' '.join(list(map(str, B))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    s = [int(x) for x in s]\n    if n == 1:\n        print('0')\n        print(s[0])\n        continue\n    elif n == 2 and s[0] == s[1]:\n        print('0')\n        print(s[0], s[1])\n        continue\n    elif n == 2:\n        print('2')\n        print(s[1], s[0])\n        continue\n    elif n == 3 and s[0] == s[1]:\n        print('2')\n        print(s[0], s[2], s[1])\n        continue\n    elif n == 3 and s[0] == s[2]:\n        print('2')\n        print(s[1], s[0], s[2])\n        continue\n    elif n == 3 and s[1] == s[2]:\n        print('2')\n        print(s[1], s[0], s[2])\n        continue\n    elif n == 3:\n        print('3')\n        print(s[1], s[2], s[0])\n        continue\n    j = 0\n    count = 0\n    temp = 0\n    while j < n:\n        if j + 1 < n:\n            if s[j] != s[j + 1]:\n                temp = s[j]\n                s[j] = s[j + 1]\n                s[j + 1] = temp\n                count += 2\n                j += 2\n            elif j + 3 < n:\n                temp = s[j]\n                s[j] = s[j + 2]\n                s[j + 2] = temp\n                temp = s[j + 1]\n                s[j + 1] = s[j + 3]\n                s[j + 3] = temp\n                count += 4\n                j += 4\n            elif j + 2 < n:\n                temp = s[j]\n                s[j] = s[j + 2]\n                s[j + 2] = temp\n                if s[j + 1] != s[0]:\n                    temp = s[j + 1]\n                    s[j + 1] = s[0]\n                    s[0] = temp\n                else:\n                    temp = s[j + 1]\n                    s[j + 1] = s[1]\n                    s[1] = temp\n                count += 3\n                j += 3\n            else:\n                temp = s[j]\n                s[j] = s[0]\n                s[0] = temp\n                temp = s[j + 1]\n                s[j + 1] = s[1]\n                s[1] = temp\n                count += 2\n                j += 2\n        else:\n            if s[j] != s[0]:\n                temp = s[j]\n                s[j] = s[0]\n                s[0] = temp\n            else:\n                temp = s[j]\n                s[j] = s[1]\n                s[1] = temp\n            count += 1\n            j += 1\n    print(count)\n    for i in range(n):\n        print(s[i], end='')\n        print(' ', end='')\n    print()", "def check(x, y):\n    count = 0\n    for i in range(len(x)):\n        if x[i] != y[i]:\n            count += 1\n    return count\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = [b[i] for i in range(1, n)]\n    a.append(b[0])\n    if n > 2:\n        for i in range(n):\n            if a[i] == b[i]:\n                for j in range(n):\n                    if j != i and a[i] != b[j] and (b[i] != a[j]):\n                        (a[i], a[j]) = (a[j], a[i])\n                        break\n    print(check(a, b))\n    for j in a:\n        print(j, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if len(A) == 1:\n        print(0)\n        print(*A)\n    elif len(A) == 2:\n        if A.count(A[0]) == 2:\n            print(0)\n            print(*A)\n        else:\n            (A[0], A[1]) = (A[1], A[0])\n            print(2)\n            print(*A)\n    elif len(A) == 3:\n        if A.count(A[0]) == 2 or A.count(A[1]) == 2:\n            print(2)\n            if A[0] == A[1]:\n                (A[0], A[2]) = (A[2], A[0])\n            elif A[0] == A[2]:\n                (A[0], A[1]) = (A[1], A[0])\n            elif A[1] == A[2]:\n                (A[0], A[2]) = (A[2], A[0])\n            print(*A)\n        else:\n            print(3)\n            (A[0], A[1], A[2]) = (A[1], A[2], A[0])\n            print(*A)\n    else:\n        print(len(A))\n        ACopy = list(A)\n        for k in range(len(A)):\n            if ACopy[k] == A[k]:\n                for j in range(len(A)):\n                    if j != k and ACopy[j] != A[k] and (ACopy[k] != A[j]):\n                        (ACopy[k], ACopy[j]) = (ACopy[j], ACopy[k])\n        print(*ACopy)", "from collections import Counter\nfor test in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    (l, ans) = (0, n)\n    (re, i) = ([0] * n, 0)\n    for k in b:\n        if b[k] > n / 2:\n            l = 2 * b[k] - n\n            ans = n - l\n        while b[k] != 0:\n            if re[i] == 0:\n                if a[i] == k and l != 0:\n                    re[i] = k\n                    l -= 1\n                    b[k] -= 1\n                elif a[i] != k:\n                    re[i] = k\n                    b[k] -= 1\n            i = (i + 1) % n\n    print(ans)\n    print(*re)", "import itertools\nT = int(input())\n\ndef hamming(A, B):\n    N = 0\n    for (a, b) in zip(A, B):\n        if a != b:\n            N += 1\n    return N\nfor t in range(T):\n    N = int(input())\n    vals = list((int(x) for x in input().split()))\n    i = 0\n    j = len(vals) - 1\n    left = []\n    right = []\n    permut = False\n    while i <= j:\n        left.append(vals[j])\n        if i != j:\n            right.append(vals[i])\n        i = i + 1\n        j = j - 1\n    res = left[::-1] + right\n    h = hamming(res, vals)\n    print(h)\n    print(' '.join((str(x) for x in res)))", "T = int(input())\nfor ai in range(T):\n    N = int(input())\n    inp = input()\n    S = [int(m) for m in inp.split()]\n    T = [int(m) for m in inp.split()]\n    visit = []\n    for i in range(N):\n        if S[i] == T[i] and i < N - 1:\n            try:\n                if S[i] != S[i + 1] and S[i + 1] != T[i] and (S[i] != T[i + 1]):\n                    a = S[i]\n                    S[i] = S[i + 1]\n                    S[i + 1] = a\n                elif S[i] != S[-1] and S[-1] != T[i] and (S[i] != T[-1]):\n                    a = S[i]\n                    S[i] = S[-1]\n                    S[-1] = a\n                elif S[i] != S[i - 1] and S[i - 1] != T[i] and (S[i] != T[i - 1]):\n                    a = S[i]\n                    S[i] = S[i - 1]\n                    S[i - 1] = a\n                elif S[i] != S[i - 2] and S[i - 2] != T[i] and (S[i] != T[i - 2]):\n                    a = S[i]\n                    S[i] = S[i - 2]\n                    S[i - 2] = a\n            except IndexError:\n                pass\n        elif S[i] == T[i]:\n            try:\n                if S[i] != S[-2] and S[-2] != T[i] and (S[i] != T[-2]):\n                    a = S[i]\n                    S[i] = S[-2]\n                    S[-2] = a\n                elif S[i] != S[-3] and S[-3] != T[i] and (S[i] != T[-3]):\n                    a = S[i]\n                    S[i] = S[-3]\n                    S[-3] = a\n                elif S[i] != S[-4] and S[-4] != T[i] and (S[i] != T[-4]):\n                    a = S[i]\n                    S[i] = S[-4]\n                    S[-4] = a\n            except IndexError:\n                pass\n    hd = 0\n    for i in range(N):\n        if S[i] != T[i]:\n            hd += 1\n    print(hd)\n    print(' '.join(map(str, S)))"]