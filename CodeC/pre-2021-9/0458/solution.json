["for _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(x) for x in input().split()]\n    (x3, y3, x4, y4) = [int(x) for x in input().split()]\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    if x4 <= x1 or x3 >= x2 or y4 <= y1 or (y3 >= y2):\n        print(ans)\n    else:\n        x = [x1, x2, x3, x4]\n        x.sort()\n        lx = x[2] - x[1]\n        y = [y1, y2, y3, y4]\n        y.sort()\n        ly = y[2] - y[1]\n        ans -= lx * ly\n        print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(x) for x in input().split()]\n    (x3, y3, x4, y4) = [int(x) for x in input().split()]\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    if x4 <= x1 or x3 >= x2 or y4 <= y1 or (y3 >= y2):\n        print(ans)\n    else:\n        x = [x1, x2, x3, x4]\n        x.sort()\n        lx = x[2] - x[1]\n        y = [y1, y2, y3, y4]\n        y.sort()\n        ly = y[2] - y[1]\n        ans -= lx * ly\n        print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(x) for x in input().split()]\n    (x3, y3, x4, y4) = [int(x) for x in input().split()]\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    if x4 <= x1 or x3 >= x2 or y4 <= y1 or (y3 >= y2):\n        print(ans)\n    else:\n        x = [x1, x2, x3, x4]\n        x.sort()\n        lx = x[2] - x[1]\n        y = [y1, y2, y3, y4]\n        y.sort()\n        ly = y[2] - y[1]\n        ans -= lx * ly\n        print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(x) for x in input().split()]\n    (x3, y3, x4, y4) = [int(x) for x in input().split()]\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    if x4 <= x1 or x3 >= x2 or y4 <= y1 or (y3 >= y2):\n        print(ans)\n    else:\n        x = [x1, x2, x3, x4]\n        x.sort()\n        lx = x[2] - x[1]\n        y = [y1, y2, y3, y4]\n        y.sort()\n        ly = y[2] - y[1]\n        ans -= lx * ly\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    a = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        a -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    a = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        a -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    a = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        a -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(a)", "t = int(input())\nfor i in range(t):\n    x = [int(x) for x in input().split()]\n    y = [int(x) for x in input().split()]\n    a1 = (x[2] - x[0]) * (x[3] - x[1])\n    a2 = (y[2] - y[0]) * (y[3] - y[1])\n    a = 0\n    xd = min(x[2], y[2]) - max(x[0], y[0])\n    yd = min(x[3], y[3]) - max(x[1], y[1])\n    if xd > 0 and yd > 0:\n        a = xd * yd\n    print(a1 + a2 - a)", "t = int(input())\nfor i in range(t):\n    x = [int(x) for x in input().split()]\n    y = [int(x) for x in input().split()]\n    a1 = (x[2] - x[0]) * (x[3] - x[1])\n    a2 = (y[2] - y[0]) * (y[3] - y[1])\n    a = 0\n    xd = min(x[2], y[2]) - max(x[0], y[0])\n    yd = min(x[3], y[3]) - max(x[1], y[1])\n    if xd > 0 and yd > 0:\n        a = xd * yd\n    print(a1 + a2 - a)", "t = int(input())\nfor i in range(t):\n    x = [int(x) for x in input().split()]\n    y = [int(x) for x in input().split()]\n    a1 = (x[2] - x[0]) * (x[3] - x[1])\n    a2 = (y[2] - y[0]) * (y[3] - y[1])\n    a = 0\n    xd = min(x[2], y[2]) - max(x[0], y[0])\n    yd = min(x[3], y[3]) - max(x[1], y[1])\n    if xd > 0 and yd > 0:\n        a = xd * yd\n    print(a1 + a2 - a)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        ans -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        ans -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    xlim1 = max(x1, x3)\n    xlim2 = min(x2, x4)\n    ylim1 = max(y1, y3)\n    ylim2 = min(y2, y4)\n    if xlim1 < xlim2 and ylim1 < ylim2:\n        ans -= (xlim2 - xlim1) * (ylim2 - ylim1)\n    print(ans)", "for i in range(int(input())):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = (l1[2] - l1[0]) * (l1[3] - l1[1]) + (l2[2] - l2[0]) * (l2[3] - l2[1])\n    l = max(l1[0], l2[0])\n    m = max(l1[1], l2[1])\n    o = min(l1[2], l2[2])\n    p = min(l1[3], l2[3])\n    if l < o and m < p:\n        res = res - (o - l) * (p - m)\n    print(res)", "t = int(input())\nwhile t > 0:\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = (l1[2] - l1[0]) * (l1[3] - l1[1]) + (l2[2] - l2[0]) * (l2[3] - l2[1])\n    l = max(l1[0], l2[0])\n    m = max(l1[1], l2[1])\n    o = min(l1[2], l2[2])\n    p = min(l1[3], l2[3])\n    if l < o and m < p:\n        res = res - (o - l) * (p - m)\n    print(res)\n    t -= 1", "for i in range(int(input())):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = (l1[2] - l1[0]) * (l1[3] - l1[1]) + (l2[2] - l2[0]) * (l2[3] - l2[1])\n    l = max(l1[0], l2[0])\n    m = max(l1[1], l2[1])\n    o = min(l1[2], l2[2])\n    p = min(l1[3], l2[3])\n    if l < o and m < p:\n        res = res - (o - l) * (p - m)\n    print(res)", "t = int(input())\nwhile t > 0:\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = (l1[2] - l1[0]) * (l1[3] - l1[1]) + (l2[2] - l2[0]) * (l2[3] - l2[1])\n    l = max(l1[0], l2[0])\n    m = max(l1[1], l2[1])\n    o = min(l1[2], l2[2])\n    p = min(l1[3], l2[3])\n    if l < o and m < p:\n        res = res - (o - l) * (p - m)\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (a1, b1, a2, b2) = map(int, input().split())\n    r1 = (x2 - x1) * (y2 - y1)\n    r2 = (a2 - a1) * (b2 - b1)\n    x = [x1, x2, a1, a2]\n    y = [y1, y2, b1, b2]\n    x.sort()\n    y.sort()\n    com = 0\n    if abs((x1 + x2) / 2 - (a1 + a2) / 2) < (x2 - x1 + a2 - a1) / 2 and abs((y1 + y2) / 2 - (b1 + b2) / 2) < (y2 - y1 + b2 - b1) / 2:\n        com = (x[2] - x[1]) * (y[2] - y[1])\n    print(int(r1 + r2 - com))", "t = int(input())\nwhile t > 0:\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = (l1[2] - l1[0]) * (l1[3] - l1[1]) + (l2[2] - l2[0]) * (l2[3] - l2[1])\n    l = max(l1[0], l2[0])\n    m = max(l1[1], l2[1])\n    o = min(l1[2], l2[2])\n    p = min(l1[3], l2[3])\n    if l < o and m < p:\n        res = res - (o - l) * (p - m)\n    print(res)\n    t -= 1", "case = int(input())\nn = 1002\nfor i in range(case):\n    area = 0\n    (x1, y1, x2, y2) = map(int, input().split(' '))\n    length = x2 - x1\n    breath = y2 - y1\n    area += length * breath\n    (m1, n1, m2, n2) = map(int, input().split(' '))\n    length = m2 - m1\n    breath = n2 - n1\n    area += length * breath\n    if m1 > x2 or n1 > y2 or x1 > m2 or (y1 > n2):\n        print(area)\n        continue\n    l = min(x2, m2) - max(x1, m1)\n    b = min(y2, n2) - max(y1, n1)\n    area -= l * b\n    print(area)", "for _ in range(int(input())):\n    (a1, b1, c1, d1) = map(int, input().split())\n    (a2, b2, c2, d2) = map(int, input().split())\n    res = (c1 - a1) * (d1 - b1) + (c2 - a2) * (d2 - b2)\n    (l, m, n, o) = (max(a1, a2), max(b1, b2), min(c1, c2), min(d1, d2))\n    if l < n and m < o:\n        res -= (n - l) * (o - m)\n    print(res)", "for _ in range(int(input())):\n    (a1, b1, c1, d1) = map(int, input().split())\n    (a2, b2, c2, d2) = map(int, input().split())\n    res = (c1 - a1) * (d1 - b1) + (c2 - a2) * (d2 - b2)\n    (l, m, n, o) = (max(a1, a2), max(b1, b2), min(c1, c2), min(d1, d2))\n    if l < n and m < o:\n        res -= (n - l) * (o - m)\n    print(res)", "for _ in range(int(input())):\n    (a1, b1, c1, d1) = map(int, input().split())\n    (a2, b2, c2, d2) = map(int, input().split())\n    res = (c1 - a1) * (d1 - b1) + (c2 - a2) * (d2 - b2)\n    (l, m, n, o) = (max(a1, a2), max(b1, b2), min(c1, c2), min(d1, d2))\n    if l < n and m < o:\n        res -= (n - l) * (o - m)\n    print(res)", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    x = (c - a) * (d - b)\n    y = (g - e) * (h - f)\n    z = 0\n    p = max(a, e)\n    q = max(b, f)\n    r = min(c, g)\n    s = min(d, h)\n    if p < r and q < s:\n        z = (r - p) * (s - q)\n    print(x + y - z)", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    x = (c - a) * (d - b)\n    y = (g - e) * (h - f)\n    z = 0\n    p = max(a, e)\n    q = max(b, f)\n    r = min(c, g)\n    s = min(d, h)\n    if p < r and q < s:\n        z = (r - p) * (s - q)\n    print(x + y - z)", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    x = (c - a) * (d - b)\n    y = (g - e) * (h - f)\n    z = 0\n    p = max(a, e)\n    q = max(b, f)\n    r = min(c, g)\n    s = min(d, h)\n    if p < r and q < s:\n        z = (r - p) * (s - q)\n    print(x + y - z)", "tests = int(input())\nfor i in range(tests):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    x_diff = 0\n    y_diff = 0\n    if x1 <= x3 < x2 <= x4:\n        x_diff = x2 - x3\n    elif x1 <= x3 < x4 <= x2:\n        x_diff = x4 - x3\n    elif x3 <= x1 < x4 <= x2:\n        x_diff = x4 - x1\n    elif x3 <= x1 < x2 <= x4:\n        x_diff = x2 - x1\n    if y1 <= y3 < y2 <= y4:\n        y_diff = y2 - y3\n    elif y1 <= y3 < y4 <= y2:\n        y_diff = y4 - y3\n    elif y3 <= y1 < y4 <= y2:\n        y_diff = y4 - y1\n    elif y3 <= y1 < y2 <= y4:\n        y_diff = y2 - y1\n    remove = x_diff * y_diff\n    print(ans - remove)", "tests = int(input())\nfor i in range(tests):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    x_diff = 0\n    y_diff = 0\n    if x1 <= x3 < x2 <= x4:\n        x_diff = x2 - x3\n    elif x1 <= x3 < x4 <= x2:\n        x_diff = x4 - x3\n    elif x3 <= x1 < x4 <= x2:\n        x_diff = x4 - x1\n    elif x3 <= x1 < x2 <= x4:\n        x_diff = x2 - x1\n    if y1 <= y3 < y2 <= y4:\n        y_diff = y2 - y3\n    elif y1 <= y3 < y4 <= y2:\n        y_diff = y4 - y3\n    elif y3 <= y1 < y4 <= y2:\n        y_diff = y4 - y1\n    elif y3 <= y1 < y2 <= y4:\n        y_diff = y2 - y1\n    remove = x_diff * y_diff\n    print(ans - remove)", "tests = int(input())\nfor i in range(tests):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    ans = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    x_diff = 0\n    y_diff = 0\n    if x1 <= x3 < x2 <= x4:\n        x_diff = x2 - x3\n    elif x1 <= x3 < x4 <= x2:\n        x_diff = x4 - x3\n    elif x3 <= x1 < x4 <= x2:\n        x_diff = x4 - x1\n    elif x3 <= x1 < x2 <= x4:\n        x_diff = x2 - x1\n    if y1 <= y3 < y2 <= y4:\n        y_diff = y2 - y3\n    elif y1 <= y3 < y4 <= y2:\n        y_diff = y4 - y3\n    elif y3 <= y1 < y4 <= y2:\n        y_diff = y4 - y1\n    elif y3 <= y1 < y2 <= y4:\n        y_diff = y2 - y1\n    remove = x_diff * y_diff\n    print(ans - remove)", "T = int(input())\nwhile T > 0:\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    c_x = min((g, c)) - max((a, e))\n    c_y = min((d, h)) - max((b, f))\n    c_a = 0\n    if c_x >= 0 and c_y >= 0:\n        c_a = c_x * c_y\n    print((c - a) * (d - b) + (g - e) * (h - f) - c_a)\n    T -= 1", "T = int(input())\nwhile T > 0:\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    c_x = min((g, c)) - max((a, e))\n    c_y = min((d, h)) - max((b, f))\n    c_a = 0\n    if c_x >= 0 and c_y >= 0:\n        c_a = c_x * c_y\n    print((c - a) * (d - b) + (g - e) * (h - f) - c_a)\n    T -= 1", "T = int(input())\nwhile T > 0:\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    c_x = min((g, c)) - max((a, e))\n    c_y = min((d, h)) - max((b, f))\n    c_a = 0\n    if c_x >= 0 and c_y >= 0:\n        c_a = c_x * c_y\n    print((c - a) * (d - b) + (g - e) * (h - f) - c_a)\n    T -= 1", "T = int(input())\nwhile T > 0:\n    (a, b, c, d) = map(int, input().split())\n    (e, f, g, h) = map(int, input().split())\n    c_x = min((g, c)) - max((a, e))\n    c_y = min((d, h)) - max((b, f))\n    c_a = 0\n    if c_x >= 0 and c_y >= 0:\n        c_a = c_x * c_y\n    print((c - a) * (d - b) + (g - e) * (h - f) - c_a)\n    T -= 1", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (X1, Y1, X2, Y2) = map(int, input().split())\n    area1 = (x2 - x1) * (y2 - y1)\n    area2 = (X2 - X1) * (Y2 - Y1)\n    area3 = 0\n    b1 = max(x1, X1)\n    b2 = max(y1, Y1)\n    b3 = min(x2, X2)\n    b4 = min(y2, Y2)\n    if b1 < b3 and b2 < b4:\n        area3 = (b3 - b1) * (b4 - b2)\n    print(area1 + area2 - area3)", "t = int(input())\n\ndef intersection_area(rect1, rect2):\n    if rect1[0] > rect2[2] or rect1[2] < rect2[0] or rect1[1] > rect2[3] or (rect1[3] < rect2[1]):\n        return 0\n    else:\n        x = [rect1[0], rect1[2], rect2[0], rect2[2]]\n        y = [rect1[1], rect1[3], rect2[1], rect2[3]]\n        x.sort()\n        y.sort()\n        return abs((x[2] - x[1]) * (y[2] - y[1]))\nfor testcase in range(t):\n    cut1 = [int(x) for x in input().split(' ')]\n    cut2 = [int(x) for x in input().split(' ')]\n    area = (cut1[2] - cut1[0]) * (cut1[3] - cut1[1]) + (cut2[2] - cut2[0]) * (cut2[3] - cut2[1]) - intersection_area(cut1, cut2)\n    print(area)", "t = int(input())\n\ndef intersection_area(rect1, rect2):\n    if rect1[0] > rect2[2] or rect1[2] < rect2[0] or rect1[1] > rect2[3] or (rect1[3] < rect2[1]):\n        return 0\n    else:\n        x = [rect1[0], rect1[2], rect2[0], rect2[2]]\n        y = [rect1[1], rect1[3], rect2[1], rect2[3]]\n        x.sort()\n        y.sort()\n        return abs((x[2] - x[1]) * (y[2] - y[1]))\nfor testcase in range(t):\n    cut1 = [int(x) for x in input().split(' ')]\n    cut2 = [int(x) for x in input().split(' ')]\n    area = (cut1[2] - cut1[0]) * (cut1[3] - cut1[1]) + (cut2[2] - cut2[0]) * (cut2[3] - cut2[1]) - intersection_area(cut1, cut2)\n    print(area)", "t = int(input())\n\ndef intersection_area(rect1, rect2):\n    if rect1[0] > rect2[2] or rect1[2] < rect2[0] or rect1[1] > rect2[3] or (rect1[3] < rect2[1]):\n        return 0\n    else:\n        x = [rect1[0], rect1[2], rect2[0], rect2[2]]\n        y = [rect1[1], rect1[3], rect2[1], rect2[3]]\n        x.sort()\n        y.sort()\n        return abs((x[2] - x[1]) * (y[2] - y[1]))\nfor testcase in range(t):\n    cut1 = [int(x) for x in input().split(' ')]\n    cut2 = [int(x) for x in input().split(' ')]\n    area = (cut1[2] - cut1[0]) * (cut1[3] - cut1[1]) + (cut2[2] - cut2[0]) * (cut2[3] - cut2[1]) - intersection_area(cut1, cut2)\n    print(area)", "t = int(input())\n\ndef intersection_area(rect1, rect2):\n    if rect1[0] > rect2[2] or rect1[2] < rect2[0] or rect1[1] > rect2[3] or (rect1[3] < rect2[1]):\n        return 0\n    else:\n        x = [rect1[0], rect1[2], rect2[0], rect2[2]]\n        y = [rect1[1], rect1[3], rect2[1], rect2[3]]\n        x.sort()\n        y.sort()\n        return abs((x[2] - x[1]) * (y[2] - y[1]))\nfor testcase in range(t):\n    cut1 = [int(x) for x in input().split(' ')]\n    cut2 = [int(x) for x in input().split(' ')]\n    area = (cut1[2] - cut1[0]) * (cut1[3] - cut1[1]) + (cut2[2] - cut2[0]) * (cut2[3] - cut2[1]) - intersection_area(cut1, cut2)\n    print(area)", "for i in range(int(input())):\n    (x1, y1, x2, y2) = list(map(int, input().split()))\n    (x3, y3, x4, y4) = list(map(int, input().split()))\n    a = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        a = a - (b3 - b1) * (b4 - b2)\n    print(a)", "for x in range(int(input())):\n    (x1_1, y1_1, x1_2, y1_2) = map(int, input().split())\n    (x2_1, y2_1, x2_2, y2_2) = map(int, input().split())\n    common_area = 0\n    if x2_1 < x1_2 and x2_2 > x1_1:\n        if y2_1 < y1_2 and y2_2 > y1_1:\n            common_area = 1\n    print((x1_2 - x1_1) * (y1_2 - y1_1) + (x2_2 - x2_1) * (y2_2 - y2_1) - common_area * ((min(x1_2, x2_2) - max(x1_1, x2_1)) * (min(y1_2, y2_2) - max(y1_1, y2_1))))", "for x in range(int(input())):\n    (x1_1, y1_1, x1_2, y1_2) = map(int, input().split())\n    (x2_1, y2_1, x2_2, y2_2) = map(int, input().split())\n    area1 = (x1_2 - x1_1) * (y1_2 - y1_1)\n    area2 = (x2_2 - x2_1) * (y2_2 - y2_1)\n    common_area = 0\n    if x2_1 < x1_2 and x2_2 > x1_1:\n        if y2_1 < y1_2 and y2_2 > y1_1:\n            common_area = (min(x1_2, x2_2) - max(x1_1, x2_1)) * (min(y1_2, y2_2) - max(y1_1, y2_1))\n    print(area1 + area2 - common_area)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    d = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        d -= (b3 - b1) * (b4 - b2)\n    print(d)", "t = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    d = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        d -= (b3 - b1) * (b4 - b2)\n    print(d)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    d = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        d -= (b3 - b1) * (b4 - b2)\n    print(d)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    d = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        d -= (b3 - b1) * (b4 - b2)\n    print(d)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    d = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    b1 = max(x1, x3)\n    b2 = max(y1, y3)\n    b3 = min(x2, x4)\n    b4 = min(y2, y4)\n    if b1 < b3 and b2 < b4:\n        d -= (b3 - b1) * (b4 - b2)\n    print(d)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    p = 0\n    x5 = max(x1, x3)\n    y5 = max(y1, y3)\n    x6 = min(x2, x4)\n    y6 = min(y2, y4)\n    p = (x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3)\n    if x5 < x6 and y5 < y6:\n        p -= (x6 - x5) * (y6 - y5)\n    print(p)", "for _ in range(int(input())):\n    (a1, b1, a2, b2) = map(int, input().split())\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = (a2 - a1) * (b2 - b1)\n    ans += (x2 - x1) * (y2 - y1)\n    bottomX = max(a1, x1)\n    bottomY = max(b1, y1)\n    upperX = min(a2, x2)\n    upperY = min(b2, y2)\n    if bottomX < upperX and bottomY < upperY:\n        ans -= (upperX - bottomX) * (upperY - bottomY)\n    print(ans)", "for _ in range(int(input())):\n    (a1, b1, a2, b2) = map(int, input().split())\n    (x1, y1, x2, y2) = map(int, input().split())\n    ans = (a2 - a1) * (b2 - b1)\n    ans += (x2 - x1) * (y2 - y1)\n    bottomX = max(a1, x1)\n    bottomY = max(b1, y1)\n    upperX = min(a2, x2)\n    upperY = min(b2, y2)\n    if bottomX < upperX and bottomY < upperY:\n        ans -= (upperX - bottomX) * (upperY - bottomY)\n    print(ans)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)", "T = int(input())\nfor i in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    area1 = (x2 - x1) * (y2 - y1)\n    area2 = (x4 - x3) * (y4 - y3)\n    x5 = max(x3, x1)\n    y5 = max(y3, y1)\n    x6 = min(x2, x4)\n    y6 = min(y2, y4)\n    if x5 > x6 or y5 > y6:\n        print(area1 + area2)\n    else:\n        print(area1 + area2 - (x6 - x5) * (y6 - y5))", "t = int(input())\nfor tc in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x3, y3, x4, y4) = map(int, input().split())\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "def trange():\n    return range(int(input()))\n\ndef splitMap():\n    return map(int, input().split())\n\ndef listOfNumbers():\n    return list(map(int, input().split()))\n\ndef number():\n    return int(input())\n\ndef binary(x):\n    return bin(x).replace('0b', '')\nimport math\nfrom collections import Counter\nimport functools\n\ndef doOverlap(rect1, rect2):\n    return rect1[0] < rect2[2] and rect1[2] > rect2[0] and (rect1[1] < rect2[3]) and (rect1[3] > rect2[1])\nrect = [0, 0, 1001, 1001]\n\ndef main():\n    for _ in trange():\n        firstCut = listOfNumbers()\n        secondCut = listOfNumbers()\n        firstPieceArea = abs(firstCut[0] - firstCut[2]) * abs(firstCut[1] - firstCut[3])\n        secondPieceArea = abs(secondCut[0] - secondCut[2]) * abs(secondCut[1] - secondCut[3])\n        totalPieceArea = firstPieceArea + secondPieceArea\n        (bottomLeftX, bottomLeftY) = (max(firstCut[0], secondCut[0]), max(firstCut[1], secondCut[1]))\n        (topRightX, topRightY) = (min(firstCut[2], secondCut[2]), min(firstCut[3], secondCut[3]))\n        if bottomLeftX < topRightX and bottomLeftY < topRightY:\n            emptyPartArea = abs(bottomLeftX - topRightX) * abs(bottomLeftY - topRightY)\n            totalPieceArea -= emptyPartArea\n        print(totalPieceArea)\nmain()\nexit()", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    bottomX = max(x1, x3)\n    bottomY = max(y1, y3)\n    upperX = min(x2, x4)\n    upperY = min(y2, y4)\n    subtract = 0\n    if bottomX < upperX and bottomY < upperY:\n        subtract = (upperX - bottomX) * (upperY - bottomY)\n    print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n    t = t - 1", "try:\n    t = int(input())\n    while t > 0:\n        (x1, y1, x2, y2) = [int(i) for i in input().split()]\n        (x3, y3, x4, y4) = [int(i) for i in input().split()]\n        bottomX = max(x1, x3)\n        bottomY = max(y1, y3)\n        upperX = min(x2, x4)\n        upperY = min(y2, y4)\n        subtract = 0\n        if bottomX < upperX and bottomY < upperY:\n            subtract = (upperX - bottomX) * (upperY - bottomY)\n        print((x2 - x1) * (y2 - y1) + (x4 - x3) * (y4 - y3) - subtract)\n        t = t - 1\nexcept:\n    pass", "def area(A):\n    return (A[2] - A[0]) * (A[3] - A[1])\ntest = int(input())\nfor _ in range(test):\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    ans = area(A) + area(B)\n    (left, bottom, right, top) = (max(A[0], B[0]), max(A[1], B[1]), min(A[2], B[2]), min(A[3], B[3]))\n    if right > left and top > bottom:\n        ans -= area([left, bottom, right, top])\n    print(ans)", "def getAns(R):\n    if R[2] < R[0] or R[3] < R[1]:\n        return 0\n    return (R[2] - R[0]) * (R[3] - R[1])\nfor tc in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    R1 = (x1, y1, x2, y2)\n    (x1, y1, x2, y2) = map(int, input().split())\n    R2 = (x1, y1, x2, y2)\n    ans = getAns(R1)\n    ans += getAns(R2)\n    ans -= getAns((max(R1[0], R2[0]), max(R1[1], R2[1]), min(R1[2], R2[2]), min(R1[3], R2[3])))\n    print(ans)", "t = int(input())\nfor it in range(t):\n    (x1, y1, x2, y2) = [int(word) for word in input().split()]\n    (x3, y3, x4, y4) = [int(word) for word in input().split()]\n    disjoint = x2 <= x3 or x4 <= x1 or y2 <= y3 or (y4 <= y1)\n    area1 = (x2 - x1) * (y2 - y1)\n    area2 = (x4 - x3) * (y4 - y3)\n    areac = 0\n    if not disjoint:\n        (xm1, xm2) = sorted([x1, x2, x3, x4])[1:3]\n        (ym1, ym2) = sorted([y1, y2, y3, y4])[1:3]\n        areac = (xm2 - xm1) * (ym2 - ym1)\n    print(area1 + area2 - areac)", "import sys\nimport math\nfrom time import time\nfrom itertools import permutations, combinations\nimport collections\nimport functools\nfrom fractions import gcd, Fraction\nimport string\nimport operator\nimport bisect\n\nclass timed(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __call__(self, *args):\n        t1 = time()\n        ret = self.func(*args)\n        dif_time = time() - t1\n        print('%s: returned %s in %f seconds' % (self.func.__name__, ret, dif_time))\n        return ret\n\ndef comp(f1, f2, *args):\n    t1 = time()\n    r1 = f1(*args) if f1 is not None else None\n    t2 = time()\n    r2 = f2(*args) if f2 is not None else None\n    t3 = time()\n    res = '%5s: %s in %f\\n%5s: %s in %f' % (f1.__name__ if f1 is not None else None, r1, t2 - t1, f2.__name__ if f2 is not None else None, r2, t3 - t2)\n    if r1 != r2:\n        dr = '!! DIFFERENT RESULTS !!'\n        res = dr + '\\n' + res + '\\n' + dr\n    print(res)\n    return r1 if r1 == r2 else None\n\ndef alg(r1, r2):\n    x1 = 0\n    y1 = 1\n    x2 = 2\n    y2 = 3\n    area1 = (r1[x2] - r1[x1]) * (r1[y2] - r1[y1])\n    collx1 = max(r1[x1], r2[x1])\n    colly1 = max(r1[y1], r2[y1])\n    collx2 = min(r1[x2], r2[x2])\n    colly2 = min(r1[y2], r2[y2])\n    area2 = (r2[x2] - r2[x1]) * (r2[y2] - r2[y1])\n    if collx2 > collx1 and colly2 > colly1:\n        areacoll = (collx2 - collx1) * (colly2 - colly1)\n    else:\n        areacoll = 0\n    return area1 + area2 - areacoll\n\ndef main():\n    data = sys.stdin\n    nb = int(data.readline())\n    for icase in range(nb):\n        r1 = list(map(int, data.readline().split()))\n        r2 = list(map(int, data.readline().split()))\n        res = alg(r1, r2)\n        print(res)\nmain()", "T = int(input())\nfor case in range(T):\n    (x1, y1, x2, y2) = [int(i) for i in input().split()]\n    (x3, y3, x4, y4) = [int(i) for i in input().split()]\n    rect1Area = (x2 - x1) * (y2 - y1)\n    rect2Area = (x4 - x3) * (y4 - y3)\n    x5 = max(x1, x3)\n    y5 = max(y1, y3)\n    x6 = min(x2, x4)\n    y6 = min(y2, y4)\n    totalArea = rect1Area + rect2Area\n    if x5 < x6 and y5 < y6:\n        totalArea -= (x6 - x5) * (y6 - y5)\n    print(totalArea)", "t = int(input())\nfor dummy in range(t):\n    s = input()\n    s = s.split(' ')\n    y = input()\n    y = y.split(' ')\n    if s[0] > y[0]:\n        z = s\n        s = y\n        y = z\n    for i in range(4):\n        s[i] = int(s[i])\n        y[i] = int(y[i])\n\n    def q(s, y):\n        if min(s[3], y[3]) > max(s[1], y[1]) and min(s[2], y[2]) > max(s[0], y[0]):\n            return (min(s[3], y[3]) - max(s[1], y[1])) * (min(s[2], y[2]) - max(s[0], y[0]))\n        return 0\n    print((s[2] - s[0]) * (s[3] - s[1]) + (y[2] - y[0]) * (y[3] - y[1]) - q(s, y))", "x1 = 0\ny1 = 1\nx2 = 2\ny2 = 3\ntests = int(input())\nfor test in range(tests):\n    r1 = list(map(int, input().split()))\n    r2 = list(map(int, input().split()))\n    area = (r1[x2] - r1[x1]) * (r1[y2] - r1[y1]) + (r2[x2] - r2[x1]) * (r2[y2] - r2[y1])\n    x = min(r1[x2], r2[x2]) - max(r1[x1], r2[x1])\n    y = min(r1[y2], r2[y2]) - max(r1[y1], r2[y1])\n    if x > 0 and y > 0:\n        area -= x * y\n    print(area)", "T = int(input())\nfor t in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (a1, b1, a2, b2) = map(int, input().split())\n    h = 0\n    if x2 >= a2 and x1 <= a1:\n        h = a2 - a1\n    elif a2 >= x2 and a1 <= x1:\n        h = x2 - x1\n    elif a1 >= x2 or x1 >= a2:\n        h = 0\n    elif x2 >= a1 and x2 <= a2:\n        h = x2 - a1\n    else:\n        h = a2 - x1\n    v = 0\n    if y2 >= b2 and y1 <= b1:\n        v = b2 - b1\n    elif b2 >= y2 and b1 <= y1:\n        v = y2 - y1\n    elif b1 >= y2 or y1 >= b2:\n        v = 0\n    elif y2 >= b1 and y2 <= b2:\n        v = y2 - b1\n    else:\n        v = b2 - y1\n    print((x2 - x1) * (y2 - y1) + (a2 - a1) * (b2 - b1) - h * v)"]