["T = int(input())\nfor x in range(0, T):\n    s = input()\n    l = len(s)\n    n = 1\n    for i in range(1, l + 1):\n        if i % 2 == 1:\n            if s[i - 1] == 'l':\n                n = n * 2\n            if s[i - 1] == 'r':\n                n = n * 2 + 2\n        elif i % 2 == 0:\n            if s[i - 1] == 'l':\n                n = n * 2 - 1\n            elif s[i - 1] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for _ in range(int(input())):\n    s = input()\n    a = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'r':\n                a = a * 2 + 2\n            elif s[i] == 'l':\n                a = a * 2\n        elif s[i] == 'l':\n            a = a * 2 - 1\n        elif s[i] == 'r':\n            a = a * 2 + 1\n    print(a % (10 ** 9 + 7))", "for _ in range(int(input())):\n    s = input()\n    a = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                a = a * 2\n            elif s[i] == 'r':\n                a = a * 2 + 2\n        elif s[i] == 'l':\n            a = a * 2 - 1\n        elif s[i] == 'r':\n            a = a * 2 + 1\n    print(a % (10 ** 9 + 7))", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = input()\n    a = 1\n    for i in range(len(s)):\n        if i % 2:\n            if s[i] == 'l':\n                a = a * 2 - 1\n            elif s[i] == 'r':\n                a = a * 2 + 1\n        elif s[i] == 'l':\n            a = a * 2\n        elif s[i] == 'r':\n            a = a * 2 + 2\n    print(a % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    a = 1\n    s = input()\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                a = a * 2\n            elif s[i] == 'r':\n                a = a * 2 + 2\n        elif s[i] == 'l':\n            a = a * 2 - 1\n        elif s[i] == 'r':\n            a = a * 2 + 1\n    print(a % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    a = 1\n    s = input()\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                a = a * 2\n            elif s[i] == 'r':\n                a = a * 2 + 2\n        elif s[i] == 'l':\n            a = a * 2 - 1\n        elif s[i] == 'r':\n            a = a * 2 + 1\n    print(a % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    a = 1\n    s = input()\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                a = a * 2\n            elif s[i] == 'r':\n                a = a * 2 + 2\n        elif s[i] == 'l':\n            a = a * 2 - 1\n        elif s[i] == 'r':\n            a = a * 2 + 1\n    a %= 2 * (10 ** 9 + 7)\n    print(a % (10 ** 9 + 7))", "for _ in range(int(input())):\n    s = input()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for t in range(int(input())):\n    s = input()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for i in range(int(input())):\n    mod = 10 ** 9 + 7\n    seq = input()\n    level = 0\n    st = 1\n    for k in seq:\n        level += 1\n        if k == 'l':\n            if level % 2 == 1:\n                st = 2 * st\n            else:\n                st = 2 * st - 1\n        elif k == 'r':\n            if level % 2 == 1:\n                st = 2 * st + 2\n            else:\n                st = 2 * st + 1\n    print(st % mod)", "mod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    S = input()\n    level = 1\n    i = 1\n    for j in range(len(S)):\n        if S[j] == 'l':\n            if level % 2 == 0:\n                i = i * 2 - 1\n            else:\n                i = i * 2\n        if S[j] == 'r':\n            if level % 2 == 0:\n                i = i * 2 + 1\n            else:\n                i = i * 2 + 2\n        level += 1\n        i = i % mod\n    print(i)", "mod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    S = input()\n    level = 1\n    i = 1\n    for j in range(len(S)):\n        if S[j] == 'l':\n            if level % 2 == 0:\n                i = i * 2 - 1\n            else:\n                i = i * 2\n        if S[j] == 'r':\n            if level % 2 == 0:\n                i = i * 2 + 1\n            else:\n                i = i * 2 + 2\n        level += 1\n        i = i % mod\n    print(i)", "for t in range(int(input())):\n    s = input()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for t in range(int(input())):\n    s = input()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for t in range(int(input())):\n    s = input()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "t = int(input())\nfor x in range(t):\n    s = input()\n    s.strip()\n    n = 1\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == 'l':\n                n = n * 2\n            if s[i] == 'r':\n                n = n * 2 + 2\n        else:\n            if s[i] == 'l':\n                n = n * 2 - 1\n            if s[i] == 'r':\n                n = n * 2 + 1\n    print(n % (10 ** 9 + 7))", "for _ in range(int(input())):\n    i = input()\n    num = 1\n    for ind in range(len(i)):\n        if ind % 2 == 0:\n            if i[ind] == 'l':\n                num = 2 * num\n            elif i[ind] == 'r':\n                num = 2 * num + 2\n        elif i[ind] == 'l':\n            num = 2 * num - 1\n        elif i[ind] == 'r':\n            num = 2 * num + 1\n    print(num % (10 ** 9 + 7))", "for _ in range(int(input())):\n    i = input()\n    num = 1\n    for ind in range(len(i)):\n        if ind % 2 == 0:\n            if i[ind] == 'l':\n                num = 2 * num\n            elif i[ind] == 'r':\n                num = 2 * num + 2\n        elif i[ind] == 'l':\n            num = 2 * num - 1\n        elif i[ind] == 'r':\n            num = 2 * num + 1\n    num %= 2 * (10 ** 9 + 7)\n    print(num % (10 ** 9 + 7))", "for _ in range(int(input())):\n    S = input()\n    ans = 1\n    for i in range(len(S)):\n        if i % 2 == 0:\n            if S[i] == 'l':\n                ans = 2 * ans\n            elif S[i] == 'r':\n                ans = 2 * ans + 2\n        elif S[i] == 'l':\n            ans = 2 * ans - 1\n        elif S[i] == 'r':\n            ans = 2 * ans + 1\n        ans %= 2 * (10 ** 9 + 7)\n    print(ans % (10 ** 9 + 7))", "for _ in range(int(input())):\n    a = input()\n    n = len(a) + 1\n    tree = []\n    odd = 1\n    even = 2\n    res = 1\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if a[i] == 'l':\n                res = 2 * res\n            elif a[i] == 'r':\n                res = 2 * res + 2\n        elif a[i] == 'l':\n            res = 2 * res - 1\n        elif a[i] == 'r':\n            res = 2 * res + 1\n        res %= 2 * (10 ** 9 + 7)\n    print(res % (10 ** 9 + 7))", "for _ in range(int(input())):\n    a = input()\n    n = len(a) + 1\n    tree = []\n    odd = 1\n    even = 2\n    res = 1\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if a[i] == 'l':\n                res = 2 * res\n            elif a[i] == 'r':\n                res = 2 * res + 2\n        elif a[i] == 'l':\n            res = 2 * res - 1\n        elif a[i] == 'r':\n            res = 2 * res + 1\n        res %= 2 * (10 ** 9 + 7)\n    print(res % (10 ** 9 + 7))", "t = input()\nfor c in range(0, int(t)):\n    s = input().strip()\n    (n, x) = (1, False)\n    for i in s:\n        n = 2 * n\n        if x:\n            n -= 1\n        if i == 'r':\n            n += 2\n        x = not x\n    mod = 10 ** 9 + 7\n    print(n % mod)", "class Node:\n\n    def __init__(self, label):\n        self._label = label\n\n    def right_child(self):\n        child_label = None\n        if self._label % 2 == 0:\n            child_label = self.get_label() * 2 + 1\n        else:\n            child_label = self.get_label() * 2 + 2\n        return Node(child_label)\n\n    def left_child(self):\n        child_label = None\n        if self._label % 2 == 0:\n            child_label = self.get_label() * 2 - 1\n        else:\n            child_label = self.get_label() * 2\n        return Node(child_label)\n\n    def get_label(self):\n        return self._label\n\nclass PathAnalyzer:\n\n    def analyze_path_with_recursion(self, path: str):\n        root_node = Node(1)\n        target_node = self.find_node_with_recursion(root_node, path)\n        return target_node.get_label()\n\n    def find_node_with_recursion(self, parent_node: Node, remaining_path: str):\n        next_node = remaining_path[0]\n        if next_node == 'l':\n            child_node = parent_node.left_child()\n        elif next_node == 'r':\n            child_node = parent_node.right_child()\n        if len(remaining_path) == 1:\n            return child_node\n        else:\n            return self.find_node_with_recursion(child_node, remaining_path[1:])\n\n    def analyze_path(self, path: str):\n        current_node = Node(1)\n        for next_node in path:\n            if next_node == 'l':\n                child_node = current_node.left_child()\n            elif next_node == 'r':\n                child_node = current_node.right_child()\n            current_node = child_node\n        return current_node.get_label() % (10 ** 9 + 7)\ntest_number = int(input())\npath_analyzer = PathAnalyzer()\n\ndef print_matrix_level(level):\n    levels_info = [{'level': 1, 'max': 1, '#elem': 1}, {'level': 2, 'max': 4, '#elem': 2}]\n    for new_level in range(3, level + 1):\n        new_level_elements = 2 ** (new_level - 1)\n        new_level_max = levels_info[new_level - 3]['max'] + new_level_elements * 2\n        level_info = {'level': new_level, 'max': new_level_max, '#elem': new_level_elements}\n        levels_info.append(level_info)\n    print(levels_info[-1])\nfor test in range(test_number):\n    test_path = input()\n    test_result = path_analyzer.analyze_path(test_path)\n    print(test_result)", "for _ in range(int(input())):\n    s = input().strip()\n    (n, x) = (1, False)\n    for i in s:\n        n = 2 * n\n        if x:\n            n -= 1\n        if i == 'r':\n            n += 2\n        x = not x\n    mod = 10 ** 9 + 7\n    print(n % mod)", "t = int(input())\nfor _ in range(t):\n    l = list(input())\n    x = 1\n    for i in range(len(l)):\n        if i % 2 == 0:\n            if l[i] == 'l':\n                x = x * 2\n            elif l[i] == 'r':\n                x = x * 2 + 2\n        elif l[i] == 'l':\n            x = x * 2 - 1\n        elif l[i] == 'r':\n            x = x * 2 + 1\n    print(x % 1000000007)", "t = int(input())\nfor i in range(t):\n    s = input()\n    j = 0\n    sum = 1\n    for i in s:\n        if j % 2 == 0:\n            if i == 'l':\n                sum = 2 * sum\n            elif i == 'r':\n                sum = 2 * sum + 2\n        elif i == 'l':\n            sum = 2 * sum - 1\n        elif i == 'r':\n            sum = 2 * sum + 1\n        j = j + 1\n    print(sum % 1000000007)", "import math\nfor _ in range(int(input())):\n    root = 1\n    s = str(input())\n    m = int(math.pow(10, 9) + 7)\n    l = 1\n    for i in s:\n        if l % 2 == 0:\n            if i == 'l':\n                root = (2 * root % m - 1) % m\n            elif i == 'r':\n                root = (2 * root % m + 1) % m\n        elif i == 'l':\n            root = 2 * root % m\n        elif i == 'r':\n            root = (2 * root % m + 2) % m\n        l += 1\n    print(root)", "def Chef_ltor(query):\n    if not query:\n        return -1\n    level = 0\n    last_node = 1\n    for direction in query:\n        if level % 2 == 0:\n            if direction == 'l':\n                last_node = last_node * 2 % 1000000007\n            elif direction == 'r':\n                last_node = (last_node * 2 + 2) % 1000000007\n            else:\n                level -= 1\n        elif direction == 'l':\n            last_node = (last_node * 2 - 1) % 1000000007\n        elif direction == 'r':\n            last_node = (last_node * 2 + 1) % 1000000007\n        else:\n            level -= 1\n        level += 1\n    return last_node % 1000000007\nTestCase = int(input())\nwhile TestCase:\n    query = input()\n    print(Chef_ltor(query))\n    TestCase -= 1", "import math\nfor _ in range(int(input())):\n    root = 1\n    s = str(input())\n    m = int(math.pow(10, 9) + 7)\n    l = 1\n    for i in s:\n        if l % 2 == 0:\n            if i == 'l':\n                root = (2 * root % m - 1) % m\n            elif i == 'r':\n                root = (2 * root % m + 1) % m\n        elif i == 'l':\n            root = 2 * root % m\n        elif i == 'r':\n            root = (2 * root % m + 2) % m\n        l += 1\n    print(root)", "import math\nfor _ in range(int(input())):\n    root = 1\n    s = str(input())\n    m = int(math.pow(10, 9) + 7)\n    l = 1\n    for i in s:\n        if l % 2 == 0:\n            if i == 'l':\n                root = (2 * root % m - 1) % m\n            elif i == 'r':\n                root = (2 * root % m + 1) % m\n        elif i == 'l':\n            root = 2 * root % m\n        elif i == 'r':\n            root = (2 * root % m + 2) % m\n        l += 1\n    print(root)", "for _ in range(int(input())):\n    s = input()\n    st = 1\n    lvl = 1\n    m = 1000000007\n    for i in s:\n        if lvl % 2 != 0:\n            if i == 'l':\n                st = st * 2 % m\n            elif i == 'r':\n                st = (st * 2 % m + 2) % m\n        else:\n            if i == 'l':\n                st = (st * 2 % m - 1) % m\n            if i == 'r':\n                st = (st * 2 % m + 1) % m\n        lvl += 1\n    print(st)", "t = int(input())\nfor i in range(t):\n    String = input()\n    lvl = 1\n    child = 1\n    for j in range(len(String)):\n        if String[j] == 'l':\n            if lvl % 2 == 1:\n                child *= 2\n            else:\n                child = child * 2 - 1\n        if String[j] == 'r':\n            if lvl % 2 == 1:\n                child = child * 2 + 2\n            else:\n                child = child * 2 + 1\n        lvl += 1\n        child = child % 1000000007\n    print(child)", "for _ in range(int(input())):\n    l = []\n    s = str(input())\n    mod = 10 ** 9 + 7\n    for i in range(len(s)):\n        l.append(s[i])\n    x = 1\n    count = 1\n    for i in range(len(l)):\n        if l[i] == 'l':\n            if count % 2 != 0:\n                x = 2 * x\n            else:\n                x = 2 * x - 1\n        elif l[i] == 'r':\n            if count % 2 != 0:\n                x = 2 * x + 2\n            else:\n                x = 2 * x + 1\n        count += 1\n        x = x % mod\n    print(x)", "for _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    mod = 10 ** 9 + 7\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind = ind % mod\n    print(ind)", "for _ in range(int(input())):\n    l = input()\n    n = 1\n    count = 1\n    for i in l:\n        if i == 'l':\n            if count % 2 == 1:\n                n = n * 2\n            else:\n                n = n * 2 - 1\n        if i == 'r':\n            if count % 2 == 1:\n                n = n * 2 + 2\n            else:\n                n = n * 2 + 1\n        count += 1\n    print(n % (10 ** 9 + 7))", "for _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    mod = 10 ** 9 + 7\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind = ind % mod\n    print(ind)", "for t in range(int(input())):\n    s = input()\n    count = 1\n    ans = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if count % 2 == 1:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        if s[i] == 'r':\n            if count % 2 == 1:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n        count += 1\n        ans = ans % 1000000007\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    mod = 10 ** 9 + 7\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind = ind % mod\n    print(ind)", "for _ in range(int(input())):\n    s = input()\n    level = 1\n    ans = 1\n    for i in range(len(s)):\n        level += 1\n        if s[i] == 'l':\n            if level % 2 == 0:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        elif s[i] == 'r':\n            if level % 2 == 0:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n    ans = ans % (10 ** 9 + 7)\n    print(int(ans))", "m = 10 ** 9 + 7\nfor _ in range(int(input())):\n    a = input()\n    val = 1\n    level = 1\n    for i in range(len(a)):\n        if a[i] == 'l':\n            if level % 2 == 1:\n                val = val * 2\n            else:\n                val = val * 2 - 1\n        if a[i] == 'r':\n            if level % 2 == 1:\n                val = val * 2 + 2\n            else:\n                val = val * 2 + 1\n        level = level + 1\n        val = val % m\n    print(val)", "n = int(input())\ntestCases = []\nfor i in range(n):\n    testCases.append(input())\nfor case in testCases:\n    ind = 1\n    for j in case:\n        if j == 'l':\n            if ind % 2 == 0:\n                ind = ind * 2 - 1\n            else:\n                ind = ind * 2\n        elif j == 'r':\n            if ind % 2 == 0:\n                ind = ind * 2 + 1\n            else:\n                ind = ind * 2 + 2\n    print(ind % (10 ** 9 + 7))", "m = 10 ** 9 + 7\nfor _ in range(int(input())):\n    a = input()\n    val = 1\n    level = 1\n    for i in range(len(a)):\n        if a[i] == 'l':\n            if level % 2 == 1:\n                val = val * 2\n            else:\n                val = val * 2 - 1\n        if a[i] == 'r':\n            if level % 2 == 1:\n                val = val * 2 + 2\n            else:\n                val = val * 2 + 1\n        level = level + 1\n        val = val % m\n    print(val)", "p = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    n = len(s)\n    ans = 1\n    level = 1\n    for i in range(n):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n        level += 1\n        ans = ans % p\n    print(ans)", "p = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    n = len(s)\n    ans = 1\n    level = 1\n    for i in range(n):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n        level += 1\n        ans = ans % p\n    print(ans)", "p = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    n = len(s)\n    ans = 1\n    level = 1\n    for i in range(n):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n        level += 1\n        ans = ans % p\n    print(ans)", "p = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    n = len(s)\n    ans = 1\n    level = 1\n    for i in range(n):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ans = ans * 2\n            else:\n                ans = ans * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ans = ans * 2 + 2\n            else:\n                ans = ans * 2 + 1\n        level += 1\n        ans = ans % p\n    print(ans)", "w = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    index = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                index = index * 2\n            else:\n                index = index * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                index = index * 2 + 2\n            else:\n                index = index * 2 + 1\n        level += 1\n        index %= w\n    print(index)", "t = int(input())\nfor i in range(t):\n    s = input()\n    mod = 10 ** 9 + 7\n    l = 1\n    c = 1\n    for j in range(len(s)):\n        if s[j] == 'l':\n            if l % 2 == 0:\n                c = c * 2 - 1\n            else:\n                c *= 2\n        if s[j] == 'r':\n            if l % 2 == 0:\n                c = c * 2 + 1\n            else:\n                c = c * 2 + 2\n        l += 1\n        c %= mod\n    print(c)", "for _ in range(int(input())):\n    s = input()\n    mod = 10 ** 9 + 7\n    level = 1\n    count = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 0:\n                count = count * 2 - 1\n            else:\n                count = count * 2\n        if s[i] == 'r':\n            if level % 2 == 0:\n                count = count * 2 + 1\n            else:\n                count = count * 2 + 2\n        level += 1\n        count %= mod\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    mod = 10 ** 9 + 7\n    level = 1\n    count = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 0:\n                count = count * 2 - 1\n            else:\n                count = count * 2\n        if s[i] == 'r':\n            if level % 2 == 0:\n                count = count * 2 + 1\n            else:\n                count = count * 2 + 2\n        level += 1\n        count %= mod\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    mod = 10 ** 9 + 7\n    level = 1\n    count = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 0:\n                count = count * 2 - 1\n            else:\n                count = count * 2\n        if s[i] == 'r':\n            if level % 2 == 0:\n                count = count * 2 + 1\n            else:\n                count = count * 2 + 2\n        level += 1\n        count %= mod\n    print(count)", "T = int(input())\nMOD = 10 ** 9 + 7\nfor i in range(0, T):\n    s = input()\n    node = 1\n    level = 1\n    for j in range(0, len(s)):\n        if s[j] == 'l':\n            if level % 2 == 1:\n                node = node * 2\n            else:\n                node = node * 2 - 1\n        if s[j] == 'r':\n            if level % 2 == 1:\n                node = node * 2 + 2\n            else:\n                node = node * 2 + 1\n        level += 1\n        node %= MOD\n    print(node)", "T = int(input())\nMOD = 10 ** 9 + 7\nfor i in range(0, T):\n    s = input()\n    node = 1\n    level = 1\n    for j in range(0, len(s)):\n        if s[j] == 'l':\n            if level % 2 == 1:\n                node = node * 2\n            else:\n                node = node * 2 - 1\n        if s[j] == 'r':\n            if level % 2 == 1:\n                node = node * 2 + 2\n            else:\n                node = node * 2 + 1\n        level += 1\n        node %= MOD\n    print(node)", "for T in range(int(input())):\n    S = input()\n    node = 1\n    for i in S:\n        if i == 'l':\n            if node % 2 != 0:\n                node = node * 2\n            else:\n                node = node * 2 - 1\n        elif i == 'r':\n            if node % 2 != 0:\n                node = node * 2 + 2\n            else:\n                node = node * 2 + 1\n    node = node % 1000000007\n    print(node)", "for T in range(int(input())):\n    S = input()\n    node = 1\n    for i in S:\n        if i == 'l':\n            if node % 2 != 0:\n                node = node * 2\n            else:\n                node = node * 2 - 1\n        elif i == 'r':\n            if node % 2 != 0:\n                node = node * 2 + 2\n            else:\n                node = node * 2 + 1\n    node = node % 1000000007\n    print(node)", "MOD = 10 ** 9 + 7\nT = int(input())\nfor i in range(T):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nT = int(input())\nfor i in range(T):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nT = int(input())\nfor i in range(T):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = input()\n    ind = 1\n    level = 1\n    for i in range(len(s)):\n        if s[i] == 'l':\n            if level % 2 == 1:\n                ind = ind * 2\n            else:\n                ind = ind * 2 - 1\n        if s[i] == 'r':\n            if level % 2 == 1:\n                ind = ind * 2 + 2\n            else:\n                ind = ind * 2 + 1\n        level += 1\n        ind %= MOD\n    print(ind)", "mod = 1000000007\nfor _ in range(int(input())):\n    string = list(input().strip())\n    idx = 1\n    lev = 1\n    for i in string:\n        if i == 'l':\n            if lev % 2 == 1:\n                idx = idx * 2\n            else:\n                idx = idx * 2 - 1\n        elif lev % 2 == 1:\n            idx = idx * 2 + 2\n        else:\n            idx = idx * 2 + 1\n        lev += 1\n        idx = idx % mod\n    print(idx)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    level = 1\n    ans = 1\n    for i in s:\n        if level % 2 == 0:\n            if i == 'l':\n                ans = 2 * ans - 1\n            else:\n                ans = 2 * ans + 1\n        elif i == 'l':\n            ans = 2 * ans\n        else:\n            ans = 2 * ans + 2\n        ans = ans % 1000000007\n        level += 1\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    s = input().strip()\n    level = 1\n    ans = 1\n    for a in s:\n        if level % 2 != 0:\n            if a == 'l':\n                ans = 2 * ans\n            else:\n                ans = 2 * ans + 2\n        elif a == 'l':\n            ans = 2 * ans - 1\n        else:\n            ans = 2 * ans + 1\n        ans = ans % mod\n        level += 1\n    print(ans)", "mod = 1000000007\nfor _ in range(int(input())):\n    s = input().strip()\n    level = 1\n    ans = 1\n    for a in s:\n        if level % 2 != 0:\n            if a == 'l':\n                ans = 2 * ans\n            else:\n                ans = 2 * ans + 2\n        elif a == 'l':\n            ans = 2 * ans - 1\n        else:\n            ans = 2 * ans + 1\n        ans = ans % mod\n        level += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    s = input().strip()\n    ini = 1\n    for j in range(len(s)):\n        ini *= 2\n        if j % 2 == 0:\n            if s[j] == 'r':\n                ini += 2\n        elif s[j] == 'l':\n            ini -= 1\n        else:\n            ini += 1\n        ini %= 10 ** 9 + 7\n    print(ini % (10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    x = 1\n    a = 1000000007\n    for j in range(len(s)):\n        if s[j] == 'l' and j % 2 == 0:\n            x = x * 2 % a\n        elif s[j] == 'l' and j % 2 != 0:\n            x = (x * 2 - 1) % a\n        elif s[j] == 'r' and j % 2 == 0:\n            x = (x * 2 + 2) % a\n        else:\n            x = (x * 2 + 1) % a\n    print(x % a)", "for i in range(int(input())):\n    current = 1\n    strng = input()\n    for j in range(len(strng)):\n        level = j + 1\n        if strng[j] == 'l':\n            if level % 2 == 0:\n                current = 2 * current - 1\n            else:\n                current = 2 * current\n        if strng[j] == 'r':\n            if level % 2 == 0:\n                current = current * 2 + 1\n            else:\n                current = current * 2 + 2\n    print(current % 1000000007)", "def main():\n    from sys import stdin, stdout\n    for _ in range(int(stdin.readline())):\n        g = 1\n        s = stdin.readline().strip()\n        for i in range(len(s)):\n            if i & 1:\n                if s[i] == 'r':\n                    g = (g << 1) + 1\n                elif s[i] == 'l':\n                    g = (g << 1) - 1\n            elif s[i] == 'r':\n                g = (g << 1) + 2\n            elif s[i] == 'l':\n                g = g << 1\n        stdout.write(str(g % 1000000007) + '\\n')\nmain()", "mod = int(1000000000.0 + 7)\nfor tc in range(int(input())):\n    s = input().strip()\n    node = 1\n    for i in range(len(s)):\n        node = node * 2\n        if i & 1:\n            node += mod - 1\n        if s[i] == 'r':\n            node += 2\n        node %= mod\n    print(node)", "import sys\n\ndef main():\n    b = []\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        ans = 1\n        for i in range(0, len(s)):\n            if i % 2:\n                if s[i] == 'l':\n                    ans = ans * 2 - 1\n                elif s[i] == 'r':\n                    ans = ans * 2 + 1\n            elif s[i] == 'l':\n                ans = ans * 2\n            elif s[i] == 'r':\n                ans = ans * 2 + 2\n        print(ans % 1000000007)\nmain()", "t = int(input())\nfor i in range(t):\n    a = input()\n    pos = 1\n    for j in range(len(a)):\n        if a[j] == 'l' and j % 2 == 0:\n            pos = 2 * pos\n        if a[j] == 'l' and j % 2 == 1:\n            pos = 2 * pos - 1\n        if a[j] == 'r' and j % 2 == 0:\n            pos = 2 * pos + 2\n        if a[j] == 'r' and j % 2 == 1:\n            pos = 2 * pos + 1\n    print(pos % 1000000007)", "import sys\nMOD = 1000000007\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for _ in range(T):\n        S = str(sys.stdin.readline()).strip()\n        node = 1\n        for i in range(len(S)):\n            if i + 1 & 1:\n                if S[i] == 'l':\n                    node = (node << 1) % MOD\n                else:\n                    node = ((node << 1) + 2) % MOD\n            elif S[i] == 'l':\n                node = ((node << 1) - 1) % MOD\n            else:\n                node = ((node << 1) + 1) % MOD\n        print(node)\nmain()", "b = []\ntest = input()\ntest = int(test)\nwhile test > 0:\n    n = 1\n    a = input()\n    for x in range(0, len(a)):\n        if x % 2 == 0:\n            if a[x] == 'l':\n                n = n * 2\n            if a[x] == 'r':\n                n = 2 * n + 2\n        else:\n            if a[x] == 'l':\n                n = 2 * n - 1\n            if a[x] == 'r':\n                n = 2 * n + 1\n        n = n % 1000000007\n        b.append(n)\n    print(b.pop(), end='\\n')\n    b = []\n    test = test - 1", "b = []\ntest = input()\ntest = int(test)\nwhile test > 0:\n    n = 1\n    a = input()\n    for x in range(0, len(a)):\n        if x % 2 == 0:\n            if a[x] == 'l':\n                n = n * 2\n            if a[x] == 'r':\n                n = 2 * n + 2\n        else:\n            if a[x] == 'l':\n                n = 2 * n - 1\n            if a[x] == 'r':\n                n = 2 * n + 1\n        n = n % 1000000007\n        b.append(n)\n    print(b.pop(), end='\\n')\n    b = []\n    test = test - 1", "b = []\ntest = input()\ntest = int(test)\nwhile test > 0:\n    n = 1\n    a = input()\n    for x in range(0, len(a)):\n        if x % 2 == 0:\n            if a[x] == 'l':\n                n = n * 2\n            if a[x] == 'r':\n                n = 2 * n + 2\n        else:\n            if a[x] == 'l':\n                n = 2 * n - 1\n            if a[x] == 'r':\n                n = 2 * n + 1\n        n = n % 1000000007\n        b.append(n)\n    print(b.pop(), end='\\n')\n    b = []\n    test = test - 1", "import sys\na = input('').replace('\\n', '').strip()\nnum_test_cases = 0\ntry:\n    num_test_cases = int(a)\nexcept ValueError:\n    sys.exit()\nfor i in range(0, num_test_cases):\n    a = input('').replace('\\n', '').strip()\n    node_number = 1\n    is_odd_level = False\n    for char in a:\n        if is_odd_level == True:\n            if ord(char) == ord('l'):\n                node_number = node_number * 2 - 1\n            else:\n                node_number = node_number * 2 + 1\n        elif ord(char) == ord('l'):\n            node_number = node_number * 2\n        else:\n            node_number = node_number * 2 + 2\n        is_odd_level = not is_odd_level\n    print(node_number % (10 ** 9 + 7))", "t = int(input())\nmodulo = 1000000000 + 7\nwhile t > 0:\n    string = input().rstrip()\n    level = len(string)\n    ans = 1\n    for i in range(0, level):\n        if i % 2 == 0:\n            if string[i] == 'l':\n                ans = 2 * ans\n            else:\n                ans = 2 * ans + 2\n        elif string[i] == 'l':\n            ans = 2 * ans - 1\n        else:\n            ans = 2 * ans + 1\n        if ans > modulo:\n            ans = ans % modulo\n    print(ans % modulo)\n    t -= 1", "t = input()\nt = int(t)\nwhile t > 0:\n    s = input()\n    e = len(s)\n    e = int(e)\n    n = 1\n    for i in range(0, e):\n        if s[i] == 'l' and i + 1 & 1:\n            n = n * 2\n        elif s[i] == 'l' and (i + 1) % 2 == 0:\n            n = n * 2 - 1\n        elif s[i] == 'r' and i + 1 & 1:\n            n = (n + 1) * 2\n        elif s[i] == 'r' and (i + 1) % 2 == 0:\n            n = (n + 1) * 2 - 1\n        n = n % 1000000007\n    (print(int(n)), '\\n')\n    t = t - 1", "def solve_for(path):\n    odd = True\n    p = pow(10, 9) + 7\n    p = 1\n    for c in path:\n        if odd:\n            odd = False\n            if c == 'l':\n                p = 2 * p\n            elif c == 'r':\n                p = 2 * p + 2\n        else:\n            odd = True\n            if c == 'l':\n                p = 2 * p - 1\n            elif c == 'r':\n                p = 2 * p + 1\n    return p % (pow(10, 9) + 7)\nT = int(input())\nfor i in range(T):\n    ins = input()\n    print(solve_for(ins))", "n = int(input())\nfor i in range(n):\n    a = input()\n    ans = 1\n    for j in range(len(a)):\n        if a[j] == 'l':\n            ans = ans * 2 - j % 2\n        elif a[j] == 'r':\n            ans = ans * 2 + 2 - j % 2\n    ans = ans % (10 ** 9 + 7)\n    print(ans)", "def something():\n    tests = int(input())\n    for test in range(tests):\n        s = input()\n        num = 1\n        level = 1\n        for char in s:\n            if char == 'l':\n                if level == 1:\n                    num *= 2\n                else:\n                    num = num * 2 - 1\n            elif char == 'r':\n                if level == 1:\n                    num = num * 2 + 2\n                else:\n                    num = num * 2 + 1\n            level = 1 - level\n        print(num % (pow(10, 9) + 7))\n    return 0\nsomething()", "tests = int(input())\nfor test in range(tests):\n    s = input()\n    num = 1\n    level = 1\n    for char in s:\n        if char == 'l':\n            if level == 1:\n                num *= 2\n            else:\n                num = num * 2 - 1\n        elif char == 'r':\n            if level == 1:\n                num = num * 2 + 2\n            else:\n                num = num * 2 + 1\n        level = 1 - level\n    print(num % (pow(10, 9) + 7))", "mod = 1000000007\nt = int(input())\nwhile t:\n    s = input()\n    k = len(s)\n    i = 1\n    j = 1\n    while j <= k:\n        if s[j - 1] == 'l' and j & 1:\n            i = i * 2\n        elif s[j - 1] == 'l' and (not j & 1):\n            i = i * 2 - 1\n        if s[j - 1] == 'r' and j & 1:\n            i = (i + 1) * 2\n        elif s[j - 1] == 'r' and (not j & 1):\n            i = (1 + i) * 2 - 1\n        j = j + 1\n    i = i % mod\n    print(i)\n    t = t - 1", "import sys\nT = int(sys.stdin.readline())\nC = 10 ** 9 + 7\n\ndef func(inp):\n    curr = -1\n    if len(inp) == 1:\n        if inp[0] == 'l':\n            print(2)\n        else:\n            print(4)\n    else:\n        if inp[0] == 'l':\n            curr = 2\n        else:\n            curr = 4\n        for (index, item) in enumerate(inp):\n            if index == 0:\n                continue\n            if (index + 1) % 2 == 0:\n                if item == 'l':\n                    curr = 2 * curr - 1\n                else:\n                    curr = 2 * curr - 1 + 2\n            elif item == 'l':\n                curr = 2 * curr\n            else:\n                curr = 2 * curr + 2\n        if curr < C:\n            print(curr)\n        else:\n            print(curr % C)\nfor _ in range(T):\n    inp = str(sys.stdin.readline()).strip()\n    func(inp)", "T = int(input())\nwhile T > 0:\n    T = T - 1\n    l = input()\n    n = 1\n    for j in range(len(l)):\n        if l[j] == 'l':\n            if j % 2 == 0:\n                n = (n << 1) % 1000000007\n            else:\n                n = ((n << 1) - 1) % 1000000007\n        if l[j] == 'r':\n            if j % 2 == 0:\n                n = ((n << 1) + 2) % 1000000007\n            else:\n                n = ((n << 1) + 1) % 1000000007\n    print(n)", "from sys import stdin\nt = int(stdin.readline())\nfor i in range(0, t):\n    s = list(stdin.readline().strip())\n    l = 1\n    r = 1\n    rt = 1\n    c = '\\x00'\n    flg = 1\n    for c in s:\n        if c == 'l':\n            if flg > 0:\n                l = rt * 2\n            else:\n                l = rt * 2 - 1\n            flg = -flg\n            rt = l\n        else:\n            if flg > 0:\n                l = rt * 2\n            else:\n                l = rt * 2 - 1\n            r = l + 2\n            rt = r\n            flg = -flg\n    if c == 'l':\n        print(l % (10 ** 9 + 7))\n    else:\n        print(r % (10 ** 9 + 7))", "import sys\nt = int(input())\nfor i in range(0, t):\n    s = list(input().strip())\n    l = 1\n    r = 1\n    rt = 1\n    c = '\\x00'\n    flg = 1\n    for c in s:\n        if c == 'l':\n            if flg > 0:\n                l = rt * 2\n            else:\n                l = rt * 2 - 1\n            flg = -flg\n            rt = l\n        else:\n            if flg > 0:\n                l = rt * 2\n            else:\n                l = rt * 2 - 1\n            r = l + 2\n            rt = r\n            flg = -flg\n    if c == 'l':\n        print(l % (10 ** 9 + 7))\n    else:\n        print(r % (10 ** 9 + 7))", "modulus = 1000000007\nT = int(input())\nfor i in range(0, T):\n    answer = 1\n    inputStr = input()\n    length = len(inputStr)\n    for j in range(0, length):\n        if (j + 1) % 2 == 1:\n            if inputStr[j] == 'l':\n                answer = answer * 2 % modulus\n            elif inputStr[j] == 'r':\n                answer = (answer * 2 + 2) % modulus\n        if (j + 1) % 2 == 0:\n            if inputStr[j] == 'l':\n                answer = (answer * 2 - 1) % modulus\n            elif inputStr[j] == 'r':\n                answer = (answer * 2 + 1) % modulus\n    print(answer)", "for __ in range(int(input())):\n    a = input()\n    rt = 1\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if a[i] == 'l':\n                rt = 2 * rt\n            elif a[i] == 'r':\n                rt = 2 * rt + 2\n        elif a[i] == 'l':\n            rt = 2 * rt - 1\n        elif a[i] == 'r':\n            rt = 2 * rt + 1\n    print(rt % (10 ** 9 + 7))", "import sys\nimport math\nfrom time import time\nfrom itertools import permutations, combinations\nimport collections\nimport functools\nfrom fractions import gcd, Fraction\nimport string\nimport operator\nimport bisect\n\nclass timed(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __call__(self, *args):\n        t1 = time()\n        ret = self.func(*args)\n        dif_time = time() - t1\n        print('%s: returned %s in %f seconds' % (self.func.__name__, ret, dif_time))\n        return ret\n\ndef comp(f1, f2, *args):\n    t1 = time()\n    r1 = f1(*args) if f1 is not None else None\n    t2 = time()\n    r2 = f2(*args) if f2 is not None else None\n    t3 = time()\n    res = '%5s: %s in %f\\n%5s: %s in %f' % (f1.__name__ if f1 is not None else None, r1, t2 - t1, f2.__name__ if f2 is not None else None, r2, t3 - t2)\n    if r1 != r2:\n        dr = '!! DIFFERENT RESULTS !!'\n        res = dr + '\\n' + res + '\\n' + dr\n    print(res)\n\ndef alg(s):\n    MOD = 10 ** 9 + 7\n    v = 1\n    cur_odd = True\n    for path in s:\n        v = v * 2 % MOD\n        if cur_odd:\n            if path == 'l':\n                pass\n            else:\n                v += 2\n        elif path == 'l':\n            v -= 1\n        else:\n            v += 1\n        cur_odd = not cur_odd\n    return v % MOD\n\ndef main():\n    data = sys.stdin\n    nb = int(data.readline())\n    for icase in range(nb):\n        s = data.readline().strip()\n        res = alg(s)\n        print(res)\nmain()", "for _ in range(int(input())):\n    s = input().strip()\n    (n, x) = (1, False)\n    for i in s:\n        n = 2 * n\n        if x:\n            n -= 1\n        if i == 'r':\n            n += 2\n        x = not x\n    mod = 10 ** 9 + 7\n    print(n % mod)", "t = int(input())\nwhile t > 0:\n    nn = 1\n    ss = str(input()).strip()\n    for i in range(1, len(ss) + 1):\n        if i % 2 == 0:\n            if ss[i - 1] == 'l':\n                nn = nn * 2 - 1\n            else:\n                nn = nn * 2 + 1\n        elif ss[i - 1] == 'l':\n            nn = nn * 2\n        else:\n            nn = nn * 2 + 2\n        nn = nn % 1000000007\n    nn = nn % 1000000007\n    print(str(nn))\n    t = t - 1", "import math\nn = int(input())\nans = True\nfor i in range(n):\n    m = 1\n    st = input()\n    for j in range(1, 1 + len(st)):\n        if j % 2 != 0:\n            if st[j - 1] == 'l':\n                m *= 2\n            elif st[j - 1] == 'r':\n                m = (m + 1) * 2\n            else:\n                ans = False\n        elif st[j - 1] == 'l':\n            m = 2 * m - 1\n        elif st[j - 1] == 'r':\n            m = 2 * m + 1\n        else:\n            ans = False\n    m %= pow(10, 9) + 7\n    print(m)", "x = int(input())\nfor i in range(x):\n    put = input()\n    curr = 1\n    level = 1\n    for z in put:\n        if z == 'l':\n            curr = curr * 2 + (level - 1)\n        if z == 'r':\n            curr = curr * 2 + 1 + level\n        level = ~level + 2\n    print(curr % (10 ** 9 + 7))", "import sys\nt = int(input())\nfor x in range(0, t):\n    data = sys.stdin.readline().strip().split()\n    data = data[0]\n    ans = 1\n    level = 1\n    for i in range(0, data.__len__()):\n        if level % 2 == 1:\n            if data[i] == 'l':\n                ans = ans * 2\n            else:\n                ans = ans * 2 + 2\n        elif data[i] == 'l':\n            ans = ans * 2 - 1\n        else:\n            ans = ans * 2 + 1\n        level = level + 1\n    ans = ans % (10 ** 9 + 7)\n    print(ans)"]