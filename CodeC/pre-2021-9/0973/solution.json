["for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [[int(i)] for i in input().split()]\n    l = input().split()\n    value = 0\n    for i in range(n):\n        arr[i].append(int(l[i]))\n        value += int(l[i])\n    arr.sort()\n    ans = [value]\n    move = list(map(int, input().split()))\n    for i in range(k):\n        if i % 2 == 0:\n            ans.append(ans[-1] - move[i] + 1)\n        else:\n            ans.append(ans[-1] + move[i] - 1)\n    p = 0\n    x = max(ans[-1], ans[-2])\n    y = min(ans[-1], ans[-2])\n    index1 = index2 = None\n    for i in range(len(arr)):\n        p += arr[i][1]\n        if p >= y and index1 == None:\n            index1 = i\n            x1 = p - y + 1\n        if p >= x:\n            index2 = i\n            x2 = x - p + arr[i][1]\n            break\n    if index1 == index2:\n        v = arr[index1][0] * (x - y + 1)\n    else:\n        v = arr[index1][0] * x1 + arr[index2][0] * x2\n        for i in range(index1 + 1, index2):\n            v += arr[i][0] * arr[i][1]\n    print(v)", "for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [[int(i)] for i in input().split()]\n    l = input().split()\n    value = 0\n    for i in range(n):\n        arr[i].append(int(l[i]))\n        value += int(l[i])\n    arr.sort()\n    ans = [value]\n    move = list(map(int, input().split()))\n    for i in range(k):\n        if i % 2 == 0:\n            ans.append(ans[-1] - move[i] + 1)\n        else:\n            ans.append(ans[-1] + move[i] - 1)\n    p = 0\n    x = max(ans[-1], ans[-2])\n    y = min(ans[-1], ans[-2])\n    index1 = index2 = None\n    for i in range(len(arr)):\n        p += arr[i][1]\n        if p >= y and index1 == None:\n            index1 = i\n            x1 = p - y + 1\n        if p >= x:\n            index2 = i\n            x2 = x - p + arr[i][1]\n            break\n    if index1 == index2:\n        v = arr[index1][0] * (x - y + 1)\n    else:\n        v = arr[index1][0] * x1 + arr[index2][0] * x2\n        for i in range(index1 + 1, index2):\n            v += arr[i][0] * arr[i][1]\n    print(v)", "for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [[int(i)] for i in input().split()]\n    l = input().split()\n    value = 0\n    for i in range(n):\n        arr[i].append(int(l[i]))\n        value += int(l[i])\n    arr.sort()\n    ans = [value]\n    move = list(map(int, input().split()))\n    for i in range(k):\n        if i % 2 == 0:\n            ans.append(ans[-1] - move[i] + 1)\n        else:\n            ans.append(ans[-1] + move[i] - 1)\n    p = 0\n    x = max(ans[-1], ans[-2])\n    y = min(ans[-1], ans[-2])\n    index1 = index2 = None\n    for i in range(len(arr)):\n        p += arr[i][1]\n        if p >= y and index1 == None:\n            index1 = i\n            x1 = p - y + 1\n        if p >= x:\n            index2 = i\n            x2 = x - p + arr[i][1]\n            break\n    if index1 == index2:\n        v = arr[index1][0] * (x - y + 1)\n    else:\n        v = arr[index1][0] * x1 + arr[index2][0] * x2\n        for i in range(index1 + 1, index2):\n            v += arr[i][0] * arr[i][1]\n    print(v)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = input().split()\n    a = list(map(int, z[:n]))\n    z = input().split()\n    d = list(map(int, z[:n]))\n    z = input().split()\n    b = list(map(int, z[:k]))\n    dis = [p - c for (c, p) in zip(b, [sum(d)] + b)]\n    lo = sum(dis[::2])\n    hi = sum(dis[1::2])\n    p = [[ai, di] for (ai, di) in zip(a, d)]\n    p.sort()\n    for px in range(n):\n        if p[px][1] >= lo:\n            p[px][1] -= lo\n            lo = 0\n            break\n        else:\n            lo -= p[px][1]\n            p[px][1] = 0\n    for px in range(n - 1, -1, -1):\n        if p[px][1] >= hi:\n            p[px][1] -= hi\n            hi = 0\n            break\n        else:\n            hi -= p[px][1]\n            p[px][1] = 0\n    print(sum((pi[0] * pi[1] for pi in p)))", "T = int(input())\nfor testCase in range(T):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    C = []\n    n = 0\n    for i in range(N):\n        C.append([A[i], D[i]])\n        n += D[i]\n    C.sort()\n    B = list(map(int, input().split()))\n    right = 0\n    left = 0\n    for i in range(K):\n        if i % 2 == 0:\n            left += n - B[i]\n        else:\n            right += n - B[i]\n        n = B[i]\n    i = 0\n    while left > 0:\n        if left <= C[i][1]:\n            C[i][1] -= left\n            left = 0\n        else:\n            left -= C[i][1]\n            C[i][1] = 0\n            i += 1\n    i = N - 1\n    while right > 0:\n        if right <= C[i][1]:\n            C[i][1] -= right\n            right = 0\n        else:\n            right -= C[i][1]\n            C[i][1] = 0\n            i -= 1\n    ans = 0\n    for i in range(N):\n        ans += C[i][0] * C[i][1]\n    print(ans)", "T = int(input())\nfor testCase in range(T):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    C = []\n    n = 0\n    for i in range(N):\n        C.append([A[i], D[i]])\n        n += D[i]\n    C.sort()\n    B = list(map(int, input().split()))\n    right = 0\n    left = 0\n    for i in range(K):\n        if i % 2 == 0:\n            left += n - B[i]\n        else:\n            right += n - B[i]\n        n = B[i]\n    i = 0\n    while left > 0:\n        if left <= C[i][1]:\n            C[i][1] -= left\n            left = 0\n        else:\n            left -= C[i][1]\n            C[i][1] = 0\n            i += 1\n    i = N - 1\n    while right > 0:\n        if right <= C[i][1]:\n            C[i][1] -= right\n            right = 0\n        else:\n            right -= C[i][1]\n            C[i][1] = 0\n            i -= 1\n    ans = 0\n    for i in range(N):\n        ans += C[i][0] * C[i][1]\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = list(map(list, zip(a, d)))\n    l = sorted(l, key=lambda x: x[0])\n    s1 = 0\n    s2 = 0\n    s = 0\n    tot = sum(d)\n    for j in range(k):\n        if j % 2 == 0:\n            s1 += tot - b[j]\n        else:\n            s2 += tot - b[j]\n        tot = b[j]\n    for j in range(n):\n        s += a[j] * d[j]\n    j = 0\n    sj = 0\n    while True:\n        sj += l[j][1]\n        if sj <= s1:\n            s -= l[j][0] * l[j][1]\n        elif sj - l[j][1] <= s1:\n            x = s1 - sj + l[j][1]\n            s -= l[j][0] * x\n            break\n        else:\n            break\n        j += 1\n    j = -1\n    sj = 0\n    while True:\n        sj += l[j][1]\n        if sj <= s2:\n            s -= l[j][0] * l[j][1]\n        elif sj - l[j][1] <= s2:\n            x = s2 - sj + l[j][1]\n            s -= l[j][0] * x\n            break\n        else:\n            break\n        j -= 1\n    print(s)", "outputs = []\nT = int(input())\nfor i in range(0, T):\n    n = input().split()\n    a = input().split()\n    d = input().split()\n    b = input().split()\n    a = list(map(int, a))\n    d = list(map(int, d))\n    (N, K) = (int(n[0]), int(n[1]))\n    b = list(map(int, b))\n    ncards = sum(d)\n    list1 = []\n    z = 0\n    z2 = 0\n    for i in range(0, N):\n        list1.append([a[i], d[i]])\n    list1.sort()\n    chef = ncards - b[0]\n    chefu = 0\n    for i in range(0, K - 1):\n        if i % 2 == 0:\n            chefu += b[i] - b[i + 1]\n        else:\n            chef += b[i] - b[i + 1]\n    z = 0\n    i = 0\n    while z <= ncards:\n        z += list1[i][1]\n        if z == chef:\n            list1 = list1[i + 1:]\n            break\n        elif z > chef:\n            list1[i][1] = z - chef\n            list1 = list1[i:]\n            break\n        i += 1\n    z = 0\n    i = len(list1) - 1\n    while z <= ncards:\n        z += list1[i][1]\n        if z == chefu:\n            list1 = list1[:i]\n            break\n        elif z > chefu:\n            list1[i][1] = z - chefu\n            list1 = list1[:i + 1]\n            break\n        i -= 1\n    ans = 0\n    for i in range(0, len(list1)):\n        ans += list1[i][0] * list1[i][1]\n    outputs.append(ans)\nfor i in range(0, T):\n    print(outputs[i])", "outputs = []\nT = int(input())\nfor i in range(0, T):\n    n = input().split()\n    a = input().split()\n    d = input().split()\n    b = input().split()\n    a = list(map(int, a))\n    d = list(map(int, d))\n    (N, K) = (int(n[0]), int(n[1]))\n    b = list(map(int, b))\n    ncards = sum(d)\n    list1 = []\n    z = 0\n    z2 = 0\n    for i in range(0, N):\n        list1.append([a[i], d[i]])\n    list1.sort()\n    chef = ncards - b[0]\n    chefu = 0\n    for i in range(0, K - 1):\n        if i % 2 == 0:\n            chefu += b[i] - b[i + 1]\n        else:\n            chef += b[i] - b[i + 1]\n    z = 0\n    i = 0\n    while z <= ncards:\n        z += list1[i][1]\n        if z == chef:\n            list1 = list1[i + 1:]\n            break\n        elif z > chef:\n            list1[i][1] = z - chef\n            list1 = list1[i:]\n            break\n        i += 1\n    z = 0\n    i = len(list1) - 1\n    while z <= ncards:\n        z += list1[i][1]\n        if z == chefu:\n            list1 = list1[:i]\n            break\n        elif z > chefu:\n            list1[i][1] = z - chefu\n            list1 = list1[:i + 1]\n            break\n        i -= 1\n    ans = 0\n    for i in range(0, len(list1)):\n        ans += list1[i][0] * list1[i][1]\n    outputs.append(ans)\nfor i in range(0, T):\n    print(outputs[i])", "T = int(input())\nfor i in range(0, T):\n    (N, K) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    D = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    L = sorted(zip(A, D))\n    L = L[::-1]\n    for j in range(0, len(L)):\n        L[j] = list(L[j])\n    if K % 2 != 0:\n        B.append(B[-1])\n    sum = 0\n    for j in range(0, len(B), 2):\n        sum = sum + (B[j] - B[j + 1])\n    sumu = 0\n    for j in range(0, len(L)):\n        sumu = sumu + L[j][1]\n        if sumu >= sum:\n            L[j][1] = sumu - sum\n            L = L[j:]\n            break\n    sumu2 = 0\n    for j in range(0, len(L)):\n        sumu2 = sumu2 + L[j][1]\n        if sumu2 >= B[-1]:\n            L[j][1] = L[j][1] - sumu2 + B[-1]\n            L = L[:j + 1]\n            break\n    sumu3 = 0\n    for j in range(0, len(L)):\n        sumu3 = sumu3 + L[j][0] * L[j][1]\n    print(sumu3)", "T = int(input())\nfor i in range(0, T):\n    (N, K) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    D = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    L = sorted(zip(A, D))\n    L = L[::-1]\n    G = [x for (y, x) in L]\n    F = [y for (y, x) in L]\n    for j in range(0, len(L)):\n        L[j] = list(L[j])\n    if K % 2 != 0:\n        B.append(B[-1])\n    sum = 0\n    for j in range(0, len(B), 2):\n        sum = sum + (B[j] - B[j + 1])\n    sumu = 0\n    for j in range(0, len(L)):\n        sumu = sumu + L[j][1]\n        if sumu >= sum:\n            L[j][1] = sumu - sum\n            L = L[j:]\n            break\n    sumu2 = 0\n    for j in range(0, len(L)):\n        sumu2 = sumu2 + L[j][1]\n        if sumu2 >= B[-1]:\n            L[j][1] = L[j][1] - sumu2 + B[-1]\n            L = L[:j + 1]\n            break\n    sumu3 = 0\n    for j in range(0, len(L)):\n        sumu3 = sumu3 + L[j][0] * L[j][1]\n    print(sumu3)", "t = int(input())\nfor z in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    big = [[a[i], d[i]] for i in range(n)]\n    big.sort()\n    left = 0\n    right = n - 1\n    num_cards = sum(d)\n    for z in range(k):\n        target = b[z]\n        if z % 2 == 0:\n            idx = right\n            while True:\n                if num_cards >= target + big[left][1]:\n                    num_cards -= big[left][1]\n                    left += 1\n                else:\n                    big[left][1] -= num_cards - target\n                    num_cards = target\n                    break\n        else:\n            idx = left\n            while True:\n                if num_cards >= target + big[right][1]:\n                    num_cards -= big[right][1]\n                    right -= 1\n                else:\n                    big[right][1] -= num_cards - target\n                    num_cards = target\n                    break\n    ans = 0\n    for i in range(left, right + 1):\n        ans += big[i][0] * big[i][1]\n    print(ans)", "def length(t1, t2):\n    (a, b) = t1\n    (c, d) = t2\n    return max(0, min(d, b) - max(a, c))\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    C = sum(D)\n    B = list(map(int, input().split()))\n    (evs, ods) = (0, 0)\n    B = [C] + B\n    for i in range(1, len(B)):\n        if i % 2 == 0:\n            evs += B[i - 1] - B[i]\n        else:\n            ods += B[i - 1] - B[i]\n    arr = [(A[i], D[i]) for i in range(N)]\n    arr.sort(key=lambda x: x[0])\n    endpts = [0 for i in range(N)]\n    s = 0\n    for i in range(len(D)):\n        endpts[i] = (s, s + arr[i][1])\n        s += arr[i][1]\n    ans = 0\n    for k in range(N):\n        ans += arr[k][0] * length(endpts[k], (ods, C - evs))\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    crd = 0\n    for i in range(len(a)):\n        arr += [[a[i], d[i]]]\n        crd += d[i]\n    arr.sort(key=lambda x: x[0])\n    for crawl in range(k):\n        todo = crd - b[crawl]\n        if crawl % 2 != 0:\n            init = len(arr) - 1\n            while todo != 0:\n                if arr[init][1] > todo:\n                    arr[init][1] -= todo\n                    todo = 0\n                else:\n                    todo -= arr[init][1]\n                    del arr[init]\n                    init -= 1\n        else:\n            init = 0\n            while todo != 0:\n                if arr[init][1] > todo:\n                    arr[init][1] -= todo\n                    todo = 0\n                else:\n                    todo -= arr[init][1]\n                    del arr[init]\n        crd = b[crawl]\n    flag = 0\n    for walk in range(len(arr)):\n        flag += arr[walk][0] * arr[walk][1]\n    print(flag)", "import sys\n\ndef main(N, K):\n    A = sys.stdin.readline().split()\n    D = sys.stdin.readline().split()\n    AD = [[int(A[y]) if x == 0 else int(D[y]) for x in range(2)] for y in range(len(A))]\n    B = sys.stdin.readline().split()\n    B = [int(x) for x in B]\n    AD = sorted(AD, key=lambda l: l[0])\n    A = [AD[i][0] for i in range(len(A))]\n    D = [AD[i][1] for i in range(len(D))]\n    sumaD = sum(D)\n    B_par = [B[2 * i] for i in range((K + 1) // 2)]\n    B_impar = [B[2 * i + 1] for i in range(K // 2)]\n    limMin = sumaD - sum(B_par) + sum(B_impar[0:len(B_impar) - (K + 1) % 2])\n    limMax = sumaD - sum(B_par[0:len(B_par) - K % 2]) + sum(B_impar[0:len(B_impar)])\n    (A, D) = maximosLista(sumaD - limMin, A, D)\n    (A, D) = minimosLista(limMax - limMin, A, D)\n    suma = sum((i[0] * i[1] for i in zip(A, D)))\n    print(suma)\n\ndef maximosLista(B_i, A, D):\n    eligiendo = True\n    primerIndice = len(A) - 1\n    primerD = 0\n    while eligiendo:\n        if B_i == 0:\n            eligiendo = False\n        elif D[primerIndice] >= B_i:\n            primerD = B_i\n            eligiendo = False\n        elif D[primerIndice] < B_i:\n            B_i += -D[primerIndice]\n            primerIndice += -1\n    if primerD != 0:\n        A = [A[x] for x in range(primerIndice, len(A))]\n        D = [D[x] if x != primerIndice else primerD for x in range(primerIndice, len(D))]\n    else:\n        A = []\n        D = []\n    return (A, D)\n\ndef minimosLista(B_i, A, D):\n    eligiendo = True\n    ultimoIndice = 0\n    ultimoD = 0\n    while eligiendo:\n        if B_i == 0:\n            eligiendo = False\n        elif D[ultimoIndice] >= B_i:\n            ultimoD = B_i\n            eligiendo = False\n        elif D[ultimoIndice] < B_i:\n            B_i += -D[ultimoIndice]\n            ultimoIndice += 1\n    if ultimoD != 0:\n        A = [A[x] for x in range(ultimoIndice + 1)]\n        D = [D[x] if x != ultimoIndice else ultimoD for x in range(0, ultimoIndice + 1)]\n    else:\n        A = []\n        D = []\n    return (A, D)\ncasos = int(sys.stdin.readline())\nfor i in range(casos):\n    listaIn = sys.stdin.readline().split()\n    N = int(listaIn[0])\n    K = int(listaIn[1])\n    main(N, K)", "from operator import itemgetter\nT = int(input())\nfor t in range(T):\n    [n, k] = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = 0\n    for x in d:\n        c += x\n    gg = [[a[i], d[i]] for i in range(n)]\n    gg = sorted(gg, key=itemgetter(0))\n    even = 0\n    odd = 0\n    for (i, x) in enumerate(b):\n        if i % 2 == 0:\n            odd += c - x\n            c = x\n        else:\n            even += c - x\n            c = x\n    l = len(gg)\n    while even > 0 and l > 0:\n        if gg[l - 1][1] < even:\n            even -= gg[l - 1][1]\n            l -= 1\n        else:\n            gg[l - 1][1] -= even\n            gg = gg[:l - len(gg)]\n            even = 0\n    i = 0\n    l = len(gg)\n    while odd > 0 and i < l:\n        if gg[i][1] < odd:\n            odd -= gg[i][1]\n            i += 1\n        else:\n            gg[i][1] -= odd\n            gg = gg[i:]\n            odd = 0\n    res = 0\n    for x in gg:\n        res += x[0] * x[1]\n    print(res)", "t = int(input().strip())\nwhile t > 0:\n    (n, k) = [int(x) for x in input().strip().split(' ')]\n    a = [int(x) for x in input().strip().split(' ')]\n    d = [int(x) for x in input().strip().split(' ')]\n    b = [int(x) for x in input().strip().split(' ')]\n    p = list(map(list, zip(a, d)))\n    tot = sum(d)\n    p.sort(key=lambda x: (x[0], x[1]))\n    j = 0\n    lenb = len(b)\n    lenp = len(p)\n    start = 0\n    end = lenp - 1\n    while j < lenb:\n        k = tot - b[j]\n        tot -= k\n        if j % 2 == 0:\n            while start < lenp:\n                z = k\n                k -= p[start][1]\n                if k == 0:\n                    start += 1\n                    break\n                if k > 0:\n                    start += 1\n                else:\n                    p[start][1] -= z\n                    break\n        else:\n            while end >= 0:\n                z = k\n                k -= p[end][1]\n                if k == 0:\n                    end -= 1\n                    break\n                if k > 0:\n                    end -= 1\n                else:\n                    p[end][1] -= z\n                    break\n        j += 1\n    tsum = 0\n    if start <= end:\n        for i in range(start, end + 1):\n            tsum += p[i][0] * p[i][1]\n    print(tsum)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = []\n    f1 = 0\n    for i in range(n):\n        C.append([A[i], D[i]])\n        f1 += D[i]\n    C.sort()\n    if f1 != n:\n        j = len(C) - 1\n        l = 0\n        for i in range(k):\n            f = f1 - B[i]\n            if (i + 1) % 2 == 0:\n                while f > 0:\n                    if f - C[j][1] >= 0:\n                        f -= C[j][1]\n                        j -= 1\n                    else:\n                        w = C[j][1]\n                        C[j][1] -= f\n                        f -= w\n            else:\n                while f > 0:\n                    if f - C[l][1] >= 0:\n                        f -= C[l][1]\n                        l += 1\n                    else:\n                        w = C[l][1]\n                        C[l][1] -= f\n                        f -= w\n            f1 = B[i]\n        sum = 0\n        if k % 2 == 0:\n            while l <= j and f1 >= 0:\n                if f1 - C[l][1] > 0:\n                    sum += C[l][0] * C[l][1]\n                    f1 -= C[l][1]\n                    l += 1\n                else:\n                    sum += C[l][0] * f1\n                    f1 -= C[l][1]\n            print(sum)\n        else:\n            while l < j and f1 >= 0:\n                if f1 - C[j][1] > 0:\n                    sum += C[j][0] * C[j][1]\n                    f1 -= C[j][1]\n                    j -= 1\n                else:\n                    sum += C[j][0] * f1\n                    f1 -= C[j][1]\n            print(sum)\n    else:\n        A.sort()\n        j = len(A) - 1\n        l = 0\n        f1 = n\n        for i in range(k):\n            f = f1 - B[i]\n            if (i + 1) % 2 == 1:\n                A = A[f:]\n            else:\n                A = A[:len(A) - f]\n            f1 = B[i]\n        sum = 0\n        for j in range(len(A)):\n            sum += A[j]\n        print(sum)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([a[i], d[i]])\n    c = sorted(c)\n    a = []\n    d = []\n    for i in range(n):\n        a.append(c[i][0])\n        d.append(c[i][1])\n    b = list(map(int, input().split()))\n    cardCounts = sum(d)\n    start = 0\n    for i in range(k):\n        temp = b[i]\n        b[i] = cardCounts - b[i]\n        cardCounts = temp\n        if i % 2:\n            while n > 0 and b[i] > 0:\n                if b[i] < d[n - 1]:\n                    d[n - 1] -= b[i]\n                    break\n                b[i] -= d[n - 1]\n                n -= 1\n        else:\n            while start < n - 1 and b[i] > 0:\n                if b[i] < d[start]:\n                    d[start] -= b[i]\n                    break\n                b[i] -= d[start]\n                start += 1\n    ans = 0\n    for i in range(start, n):\n        ans += d[i] * a[i]\n    print(ans)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split(' ', 2)[:2])\n    list1 = list(map(int, input().split(' ', n)[:n]))\n    list2 = list(map(int, input().split(' ', n)[:n]))\n    list3 = list(map(int, input().split(' ', k)[:k]))\n    list4 = []\n    s = sum(list2)\n    for i in range(n):\n        temp = [list1[i], list2[i]]\n        list4.append(temp)\n    qs = 0\n    sum1 = 0\n    qe = 2 * n - 1\n    list4.sort()\n    for i in range(n):\n        sum1 += list4[i][0] * list4[i][1]\n    for i in range(k):\n        if i % 2 == 0:\n            c = s - list3[i]\n            qs += c\n            s = list3[i]\n        elif i % 2 != 0:\n            c = s - list3[i]\n            qe -= c\n            s = list3[i]\n    qe += 1\n    qe = 2 * n - qe\n    for i in range(n):\n        if qs - list4[i][1] > 0:\n            qs -= list4[i][1]\n            sum1 -= list4[i][0] * list4[i][1]\n            continue\n        else:\n            sum1 -= list4[i][0] * qs\n            break\n    for i in range(n - 1, 0, -1):\n        if qe - list4[i][1] > 0:\n            qe -= list4[i][1]\n            sum1 -= list4[i][0] * list4[i][1]\n            continue\n        else:\n            sum1 -= list4[i][0] * qe\n            break\n    print(sum1)", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(y) for y in input().split()]\n    d = [int(u) for u in input().split()]\n    b = [int(l) for l in input().split()]\n    a1 = [0] * 1000000\n    c = 0\n    for i in range(len(a)):\n        a1[a[i]] += d[i]\n        c += d[i]\n    sum = 0\n    ma = max(a)\n    mi = min(a)\n    for i in range(k):\n        l = c - b[i]\n        if i % 2 == 0:\n            for j in range(mi, ma + 1):\n                if a1[j] != 0:\n                    if a1[j] >= l:\n                        a1[j] -= l\n                        l = 0\n                        break\n                    else:\n                        l -= a1[j]\n                        a1[j] = 0\n                        mi = j\n        else:\n            for j in range(ma, mi - 1, -1):\n                if a1[j] != 0:\n                    if a1[j] >= l:\n                        a1[j] -= l\n                        l = 0\n                        break\n                    else:\n                        ma = j\n                        l -= a1[j]\n                        a1[j] = 0\n        c -= c - b[i]\n    for i in range(mi, ma + 1):\n        if a1[i] != 0:\n            sum += i * a1[i]\n    print(sum)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    Alist = list(map(int, input().split()))\n    Dlist = list(map(int, input().split()))\n    Blist = list(map(int, input().split()))\n    (Alist, Dlist) = (list(t) for t in zip(*sorted(zip(Alist, Dlist))))\n    C = 0\n    for j in range(N):\n        C += Dlist[j]\n    end = C\n    for j in range(len(Blist)):\n        if j % 2 == 0:\n            start = end - Blist[j]\n        else:\n            end = start + Blist[j]\n    start += 1\n    j = 0\n    A = Dlist[j]\n    ans = 0\n    while A < start:\n        j += 1\n        A += Dlist[j]\n    if A >= start and A >= end:\n        z = end - start + 1\n        ans += z * Alist[j]\n    elif A >= start and A < end:\n        z = A - start + 1\n        ans += z * Alist[j]\n        while A < end:\n            j += 1\n            Acopy = A\n            A += Dlist[j]\n            if A < end:\n                ans += Dlist[j] * Alist[j]\n            else:\n                z = end - Acopy\n                ans += Alist[j] * z\n    print(ans)", "tc = int(input())\nfor test in range(tc):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    rm = list(map(int, input().split()))\n    k = len(rm)\n    my_arr = []\n    cards = 0\n    for i in range(n):\n        my_arr += [[d[i], a[i]]]\n        cards += d[i]\n    my_arr.sort(key=lambda x: x[1])\n    for i in range(k):\n        to_del = cards - rm[i]\n        if i % 2 != 0:\n            start = len(my_arr) - 1\n            while to_del != 0:\n                if my_arr[start][0] > to_del:\n                    my_arr[start][0] -= to_del\n                    to_del = 0\n                else:\n                    to_del -= my_arr[start][0]\n                    del my_arr[start]\n                    start -= 1\n        else:\n            start = 0\n            while to_del != 0:\n                if my_arr[start][0] > to_del:\n                    my_arr[start][0] -= to_del\n                    to_del = 0\n                else:\n                    to_del -= my_arr[start][0]\n                    del my_arr[start]\n        cards = rm[i]\n    req_sum = 0\n    for i in range(len(my_arr)):\n        req_sum += my_arr[i][0] * my_arr[i][1]\n    print(req_sum)", "t = int(input())\na = []\nb = []\nfor i in range(t):\n    n = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    total = 0\n    for j in range(n[0]):\n        total += b[j]\n        c.append((a[j], b[j]))\n    c.sort()\n    k = list(map(int, input().split()))\n    for j in range(n[1]):\n        x = k[j]\n        x = total - x\n        total -= x\n        if j % 2 == 0:\n            while x > 0:\n                if x >= c[0][1]:\n                    x -= c[0][1]\n                    c.pop(0)\n                elif x < c[0][1]:\n                    c[0] = (c[0][0], c[0][1] - x)\n                    x = 0\n                    break\n        elif j % 2 == 1:\n            while x > 0:\n                if x >= c[-1][1]:\n                    x -= c[-1][1]\n                    c.pop(-1)\n                elif x < c[-1][1]:\n                    c[-1] = (c[-1][0], c[-1][1] - x)\n                    x = 0\n                    break\n    x = 0\n    for i in c:\n        x += i[0] * i[1]\n    print(x)", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('1\\n4 2\\n1 2 3 4\\n2 2 2 2\\n6 3')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            (n, k) = map(int, next(lines).strip().split(' '))\n            a = list(map(int, next(lines).strip().split(' ')[:n]))\n            d = list(map(int, next(lines).strip().split(' ')[:n]))\n            b = list(map(int, next(lines).strip().split(' ')[:k]))\n            yield (n, k, a, d, b)\n\ndef calc(n, k, a, d, b):\n    fr = 1\n    to = sum(d)\n    for (i, num) in enumerate(b):\n        if i % 2 == 0:\n            fr = to - num + 1\n        else:\n            to = fr + num - 1\n    ind = []\n    for i in range(n):\n        ind.append({'a': a[i], 'd': d[i]})\n    ind = sorted(ind, key=lambda i: i['a'])\n    cur = 1\n    for i in range(n):\n        ind[i]['fr'] = cur\n        ind[i]['to'] = cur + ind[i]['d'] - 1\n        if fr >= ind[i]['fr'] and fr <= ind[i]['to']:\n            ind_fr = i\n        if to >= ind[i]['fr'] and to <= ind[i]['to']:\n            ind_to = i\n        cur = ind[i]['to'] + 1\n    total = 0\n    for i in range(ind_fr, ind_to + 1):\n        total += ind[i]['a'] * (min(ind[i]['to'], to) - max(ind[i]['fr'], fr) + 1)\n    return total\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    print(calc(*args))", "c = int(input())\nfor _ in range(c):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [(a[i], d[i]) for i in range(n)]\n    arr.sort()\n    a = [arr[i][0] for i in range(n)]\n    d = [arr[i][1] for i in range(n)]\n    for i in range(k - 1, 0, -1):\n        b[i] = b[i - 1] - b[i]\n    b[0] = sum(d) - b[0]\n    one = 0\n    two = 0\n    for i in range(k):\n        if i % 2:\n            one += b[i]\n        else:\n            two += b[i]\n    i = 0\n    j = n - 1\n    itill = 0\n    jtill = 0\n    while itill + d[i] <= two:\n        itill += d[i]\n        i += 1\n    while jtill + d[j] <= one:\n        jtill += d[j]\n        j -= 1\n    x = y = 0\n    if i == j:\n        print(a[i] * (d[i] - one - two + itill + jtill))\n    else:\n        x = a[i] * (d[i] - (two - itill))\n        y = a[j] * (d[j] - (one - jtill))\n        t = 0\n        i += 1\n        j -= 1\n        for k in range(i, j + 1):\n            t += a[k] * d[k]\n        print(x + y + t)", "for _ in range(int(input())):\n    [n, k] = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    d = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    p = {}\n    for i in range(n):\n        try:\n            p[a[i]] += d[i]\n        except:\n            p[a[i]] = d[i]\n    val = []\n    left = sum(d)\n    for i in p:\n        val.append([i, p[i]])\n    val.sort()\n    (si, en) = (0, len(val) - 1)\n    for i in range(k):\n        if en < si:\n            break\n        dele = left - b[i]\n        left -= dele\n        if i % 2 == 0:\n            while dele:\n                if val[si][1] <= dele:\n                    dele -= val[si][1]\n                    si += 1\n                else:\n                    val[si][1] -= dele\n                    dele = 0\n        else:\n            while dele:\n                if val[en][1] <= dele:\n                    dele -= val[en][1]\n                    en -= 1\n                else:\n                    val[en][1] -= dele\n                    dele = 0\n    ans = 0\n    if si > en:\n        print('0')\n        continue\n    for i in range(si, en + 1):\n        ans += int(val[i][0] * val[i][1])\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    (*A,) = map(int, input().split())\n    (*D,) = map(int, input().split())\n    (*B,) = map(int, input().split())\n    P = sorted(zip(A, D))\n    A = [a for (a, d) in P]\n    D = [d for (a, d) in P]\n    left = 0\n    right = sum(D) - 1\n    for i in range(K):\n        if i % 2 == 0:\n            left = right - B[i] + 1\n        else:\n            right = left + B[i] - 1\n    cur = 0\n    ans = 0\n    for i in range(N):\n        if left <= cur + D[i] - 1 and cur <= right:\n            ans += A[i] * (min(cur + D[i] - 1, right) - max(cur, left) + 1)\n        cur += D[i]\n    print(ans)", "class CardSet(object):\n\n    def __init__(self, cardValue, cardAmount):\n        self.cardValue = cardValue\n        self.cardAmount = cardAmount\nT = int(input())\nfor _ in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    D = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    cardSets = [CardSet(a, d) for (a, d) in zip(A, D)]\n    cardSets.sort(key=lambda x: x.cardValue)\n    totalCardsLeft = sum(D)\n    chefsMove = True\n    for (move, b) in enumerate(B):\n        cardsToRemove = totalCardsLeft - b\n        if chefsMove:\n            while cardsToRemove > 0:\n                currentCardSet = cardSets[0]\n                if currentCardSet.cardAmount <= cardsToRemove:\n                    cardSets.pop(0)\n                    cardsToRemove -= currentCardSet.cardAmount\n                else:\n                    cardSets[0].cardAmount -= cardsToRemove\n                    cardsToRemove = 0\n                    break\n            chefsMove = not chefsMove\n            totalCardsLeft = b\n        elif not chefsMove:\n            while cardsToRemove > 0:\n                currentCardSet = cardSets[-1]\n                if currentCardSet.cardAmount <= cardsToRemove:\n                    cardSets.pop(-1)\n                    cardsToRemove -= currentCardSet.cardAmount\n                else:\n                    cardSets[-1].cardAmount -= cardsToRemove\n                    cardsToRemove = 0\n                    break\n            chefsMove = not chefsMove\n            totalCardsLeft = b\n    totalScore = sum([cardSet.cardValue * cardSet.cardAmount for cardSet in cardSets])\n    print(totalScore)"]