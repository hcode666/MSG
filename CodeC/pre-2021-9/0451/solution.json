["def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "import numpy as np\n\ndef grab_input():\n    (N, a, b) = input().split()\n    N = int(N)\n    a = int(a)\n    b = int(b)\n    numbers_in_string = input().split()\n    for (i, num) in enumerate(numbers_in_string):\n        numbers_in_string[i] = int(num)\n    numbers = numbers_in_string\n    return (numbers, a, b)\nT = int(input())\nfor _ in range(T):\n    (nums, a, b) = grab_input()\n    alice = 0\n    bob = 0\n    d = 0\n    for n in nums:\n        if n % a == 0 and n % b == 0:\n            d += 1\n        elif n % a == 0:\n            bob += 1\n        elif n % b == 0:\n            alice += 1\n    if d > 0:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor j in range(T):\n    (N, a, b) = map(int, input().split(' '))\n    arr: list = list(map(int, input().split(' ')))\n    bob: int = 0\n    alice: int = 0\n    common: int = 0\n    for i in range(N):\n        if arr[i] % a == 0 and arr[i] % b == 0:\n            common += 1\n        elif arr[i] % a == 0:\n            bob += 1\n        elif arr[i] % b == 0:\n            alice += 1\n    if common > 0:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor j in range(T):\n    (N, a, b) = map(int, input().split(' '))\n    arr: list = list(map(int, input().split(' ')))\n    bob: int = 0\n    alice: int = 0\n    common: int = 0\n    for i in range(N):\n        if arr[i] % a == 0 and arr[i] % b == 0:\n            common += 1\n        elif arr[i] % a == 0:\n            bob += 1\n        elif arr[i] % b == 0:\n            alice += 1\n    if common > 0:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor j in range(T):\n    (N, a, b) = map(int, input().split(' '))\n    arr: list = list(map(int, input().split(' ')))\n    bob: int = 0\n    alice: int = 0\n    common: int = 0\n    for i in range(N):\n        if arr[i] % a == 0 and arr[i] % b == 0:\n            common += 1\n        elif arr[i] % a == 0:\n            bob += 1\n        elif arr[i] % b == 0:\n            alice += 1\n    if common > 0:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNoGame(A, n, a, b):\n    bob = 0\n    for i in range(n):\n        if not A[i] % a:\n            bob += 1\n        elif not A[i] % b:\n            bob -= 1\n    return 'BOB' if bob > 0 else 'ALICE'\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(luckyNoGame(A, n, a, b))", "def luckyNoGame(A, n, a, b):\n    bob = 0\n    for i in range(n):\n        if A[i] % a == 0:\n            bob += 1\n        elif A[i] % b == 0:\n            bob -= 1\n    return 'BOB' if bob > 0 else 'ALICE'\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(luckyNoGame(A, n, a, b))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    bob = 0\n    for j in range(n):\n        if lst[j] % a == 0:\n            bob += 1\n        elif lst[j] % b == 0:\n            bob -= 1\n    print('BOB') if bob > 0 else print('ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bmov, almov, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 and lst[j] % b == 0:\n            k = 1\n        elif lst[j] % a == 0:\n            bmov += 1\n        elif lst[j] % b == 0:\n            almov += 1\n    if k:\n        bmov += 1\n    if bmov > almov:\n        print('BOB')\n    else:\n        print('ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    bob = 0\n    for j in range(n):\n        if lst[j] % a == 0 or (lst[j] % a == 0 and lst[j] % b == 0):\n            bob += 1\n        elif lst[j] % b == 0:\n            bob -= 1\n    print('BOB') if bob > 0 else print('ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bob, alice, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 or (lst[j] % a == 0 and lst[j] % b == 0):\n            bob += 1\n        elif lst[j] % b == 0:\n            bob -= 1\n    print('BOB') if bob > 0 else print('ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bob, alice, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 or (lst[j] % a == 0 and lst[j] % b == 0):\n            bob += 1\n        elif lst[j] % b == 0:\n            bob -= 1\n    print('BOB' if bob > 0 else 'ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bob, alice, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 or (lst[j] % a == 0 and lst[j] % b == 0):\n            bob += 1\n        elif lst[j] % b == 0:\n            alice += 1\n    print('BOB' if bob > alice else 'ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bmov, almov, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 and lst[j] % b == 0:\n            k = 1\n        elif lst[j] % a == 0:\n            bmov += 1\n        elif lst[j] % b == 0:\n            almov += 1\n    if k:\n        bmov += 1\n    if bmov > almov:\n        print('BOB')\n    else:\n        print('ALICE')", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bmov, almov, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 and lst[j] % b == 0:\n            k = 1\n        elif lst[j] % a == 0:\n            bmov += 1\n        elif lst[j] % b == 0:\n            almov += 1\n    if k:\n        bmov += 1\n    if bmov > almov:\n        print('BOB')\n    else:\n        print('ALICE')", "from os import path\nimport sys\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = list(map(int, input().split()))\n    com = 0\n    bob = 0\n    alice = 0\n    for i in s:\n        if i % a == i % b == 0:\n            com += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alice += 1\n    if com:\n        bob += 1\n    print(['BOB', 'ALICE'][alice >= bob])", "from os import path\nimport sys\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = list(map(int, input().split()))\n    com = 0\n    bob = 0\n    alice = 0\n    for i in s:\n        if i % a == i % b == 0:\n            com += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alice += 1\n    if com:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (bmov, almov, k) = (0, 0, 0)\n    for j in range(n):\n        if lst[j] % a == 0 and lst[j] % b == 0:\n            k = 1\n        elif lst[j] % a == 0:\n            bmov += 1\n        elif lst[j] % b == 0:\n            almov += 1\n    if k:\n        bmov += 1\n    if bmov > almov:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor i in range(T):\n    (N, a, b) = map(int, input().split())\n    l = map(int, input().split())\n    a1 = 0\n    b1 = 0\n    for item in l:\n        if item % a == 0:\n            a1 += 1\n        elif item % b == 0:\n            b1 += 1\n    if a1 > b1:\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    bob_nums = 0\n    alice_nums = 0\n    shared_nums = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            shared_nums += 1\n        elif num % a == 0:\n            bob_nums += 1\n        elif num % b == 0:\n            alice_nums += 1\n    if bob_nums > alice_nums:\n        print('BOB')\n    elif bob_nums == alice_nums:\n        if shared_nums != 0:\n            print('BOB')\n        else:\n            print('ALICE')\n    elif alice_nums > bob_nums:\n        print('ALICE')", "for i in range(int(input())):\n    [N, a, b] = [int(x) for x in input().split()]\n    A = [int(a) for a in input().split()]\n    if a == b:\n        print('BOB')\n    else:\n        bob = [x for x in A if x % a == 0]\n        alice = [x for x in A if x % b == 0]\n        common = [i for i in bob if i in alice]\n        bob = [x for x in bob if x not in common]\n        alice = [x for x in alice if x not in common]\n        if common:\n            if len(bob) >= len(alice):\n                print('BOB')\n            else:\n                print('ALICE')\n        elif len(bob) > len(alice):\n            print('BOB')\n        else:\n            print('ALICE')", "t = int(input())\nfor ufrsg in range(t):\n    (n, a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    bob = 0\n    alice = 0\n    comm = 0\n    for i in arr:\n        if i % a == 0:\n            bob += 1\n        if i % b == 0:\n            alice += 1\n        d = a * b\n        if i % d == 0:\n            comm += 1\n            bob -= 1\n            alice -= 1\n    if comm > 0:\n        bob += 1\n    if alice >= bob:\n        print('ALICE')\n    else:\n        print('BOB')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    alice = []\n    bob = []\n    common = []\n    for i in arr:\n        if i % a == 0 and i % b == 0:\n            common.append(i)\n        if i % a == 0:\n            bob.append(i)\n        if i % b == 0:\n            alice.append(i)\n    if len(alice) > len(bob) or len(bob) == 0 or len(common) == 0:\n        print('ALICE')\n    else:\n        print('BOB')", "for _ in range(int(input())):\n    (N, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    bob = alc = c = 0\n    for i in A:\n        if i % a == 0 and i % b == 0:\n            c += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alc += 1\n    if c:\n        bob += 1\n    if bob > alc:\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (N, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    bob = alc = c = 0\n    for i in A:\n        if i % a == 0 and i % b == 0:\n            c += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alc += 1\n    if c:\n        bob += 1\n    if bob > alc:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor _ in range(T):\n    (N, a, b) = map(int, input().split())\n    p = 0\n    m = 0\n    n = 0\n    for elem in map(int, input().split()):\n        if elem % a == 0 and elem % b == 0:\n            p += 1\n        elif elem % a == 0:\n            n += 1\n        elif elem % b == 0:\n            m += 1\n    if p == 0:\n        if n > m:\n            winner = 'BOB'\n        else:\n            winner = 'ALICE'\n    elif n >= m:\n        winner = 'BOB'\n    else:\n        winner = 'ALICE'\n    print(winner)", "for i in range(int(input())):\n    (n, b, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    ac = 0\n    bc = 0\n    c = 0\n    for j in l:\n        if j % b == 0:\n            bc += 1\n            c += 1\n        elif j % a == 0:\n            ac += 1\n            c += 1\n    if bc > ac or (bc == ac and c == bc and (c % 2 != 0)):\n        print('BOB')\n    else:\n        print('ALICE')", "for i in range(int(input())):\n    (n, b, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    ac = 0\n    bc = 0\n    c = 0\n    for j in l:\n        if j % b == 0:\n            bc += 1\n            c += 1\n        elif j % a == 0:\n            ac += 1\n            c += 1\n    if bc > ac or (bc == ac and c == bc and (c % 2 != 0)):\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor i in range(T):\n    score = [0, 0]\n    (N, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    empate = False\n    for j in range(N):\n        if A[j] % a == 0 and A[j] % b == 0:\n            empate = True\n        elif A[j] % a == 0:\n            score[0] += 1\n        elif A[j] % b == 0:\n            score[1] += 1\n    if empate:\n        score[0] += 1\n    if score[0] > score[1]:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor x in range(T):\n    score = [0, 0]\n    (N, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    for y in range(N):\n        if A[y] % a == 0 and A[y] % b == 0 or A[y] % a == 0:\n            score[0] += 1\n        elif A[y] % b == 0:\n            score[1] += 1\n    if score[0] > score[1]:\n        print('BOB')\n    else:\n        print('ALICE')", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        if c[i] % a == 0:\n            p += 1\n        elif c[i] % b == 0:\n            q += 1\n    if p > q:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "T = int(input())\nfor i in range(T):\n    (N, a, b) = map(int, input().split())\n    l = map(int, input().split())\n    a1 = 0\n    b1 = 0\n    for item in l:\n        if item % a == 0:\n            a1 += 1\n        elif item % b == 0:\n            b1 += 1\n    if a1 > b1:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor i in range(T):\n    (N, a, b) = map(int, input().split())\n    l = map(int, input().split())\n    a1 = 0\n    b1 = 0\n    for item in l:\n        if item % a == 0:\n            a1 += 1\n        elif item % b == 0:\n            b1 += 1\n    if a1 > b1:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "T = int(input())\nfor _ in range(T):\n    (N, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    flag = False\n    for i in range(N):\n        if A[i] % a == 0:\n            flag = True\n            break\n    if not flag:\n        print('ALICE')\n        continue\n    flag = False\n    for i in range(N):\n        if A[i] % b == 0:\n            flag = True\n            break\n    if not flag:\n        print('BOB')\n        continue\n    if b % a == 0:\n        print('BOB')\n        continue\n    Alice = 0\n    Bob = 0\n    both = 0\n    for i in range(N):\n        if A[i] % b == 0 and A[i] % a == 0:\n            both += 1\n        elif A[i] % b == 0:\n            Alice += 1\n        elif A[i] % a == 0:\n            Bob += 1\n    if Bob > Alice or (Bob == Alice and both > 0):\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    arr = [int(a) for a in input().split()]\n    al = 0\n    bo = 0\n    for i in arr:\n        if i % a == 0:\n            bo += 1\n        elif i % b == 0:\n            al += 1\n        else:\n            continue\n    if al >= bo:\n        print('ALICE')\n    else:\n        print('BOB')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    Bob = []\n    Alice = []\n    both = []\n    for o in l:\n        if o % a == 0 and o % b == 0:\n            both.append(o)\n        elif o % a == 0:\n            Bob.append(o)\n        elif o % b == 0:\n            Alice.append(o)\n    if len(both):\n        Bob.append(1)\n    if len(Bob) > len(Alice):\n        print('BOB')\n    else:\n        print('ALICE')", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ar = input().split()\n    A = [int(i) for i in ar]\n    bob = alice = common = 0\n    for x in A:\n        if x % a == 0 and x % b == 0:\n            common += 1\n        elif x % a == 0:\n            bob += 1\n        elif x % b == 0:\n            alice += 1\n    if common:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "for i in range(int(input())):\n    (n, ai, bi) = map(int, input().split())\n    data = list(map(int, input().split()))\n    a = 0\n    b = 0\n    for d in data:\n        if d % ai == 0:\n            a += 1\n        elif d % bi == 0:\n            b += 1\n    if a - b > 0:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor t in range(T):\n    (N, a, b) = input().split()\n    A = list(map(int, input().split()))\n    no_of_integers = int(N)\n    Bob_lucky_no = int(a)\n    Alice_lucky_no = int(b)\n    bob_moves = 0\n    alice_moves = 0\n    for i in A:\n        if i % Bob_lucky_no == 0:\n            bob_moves = bob_moves + 1\n        elif i % Alice_lucky_no == 0:\n            alice_moves = alice_moves + 1\n    if bob_moves > alice_moves:\n        print('BOB')\n    else:\n        print('ALICE')", "def lucky(list1, a, b):\n    bob = alice = common = 0\n    for i in list1:\n        if i % a == 0 and i % b == 0:\n            common += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alice += 1\n    if common:\n        bob += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')\ntc = int(input())\nfor _ in range(tc):\n    (n, a, b) = [int(i) for i in input().split()]\n    ele = list(map(int, input().split()))\n    lucky(ele, a, b)", "T = int(input())\nfor t in range(T):\n    (N, a, b) = input().split()\n    A = list(map(int, input().split()))\n    no_of_integers = int(N)\n    Bob_lucky_no = int(a)\n    Alice_lucky_no = int(b)\n    bob_moves = 0\n    alice_moves = 0\n    for i in A:\n        if i % Bob_lucky_no == 0:\n            bob_moves = bob_moves + 1\n        elif i % Alice_lucky_no == 0:\n            alice_moves = alice_moves + 1\n    if bob_moves > alice_moves:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor t in range(T):\n    (N, a, b) = input().split()\n    A = list(map(int, input().split()))\n    no_of_integers = int(N)\n    Bob_lucky_no = int(a)\n    Alice_lucky_no = int(b)\n    bob_moves = 0\n    alice_moves = 0\n    for i in A:\n        if i % Bob_lucky_no == 0:\n            bob_moves = bob_moves + 1\n        elif i % Alice_lucky_no == 0:\n            alice_moves = alice_moves + 1\n    if bob_moves > alice_moves:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for _ in range(int(input())):\n    (n, b, a) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (bob, alice, common) = (0, 0, 0)\n    for i in arr:\n        if i % b == 0 and i % a == 0:\n            common += 1\n            continue\n        if i % b == 0:\n            bob += 1\n        if i % a == 0:\n            alice += 1\n    if common > 0 and bob >= alice:\n        print('BOB')\n    elif bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor _ in range(t):\n    params = input().split()\n    values = input().split()\n    a = 0\n    b = 0\n    c = 0\n    for i in values:\n        if int(i) % int(params[1]) == 0 and int(i) % int(params[2]) == 0:\n            c += 1\n        elif int(i) % int(params[1]) == 0:\n            a += 1\n        elif int(i) % int(params[2]) == 0:\n            b += 1\n    if c > 0:\n        a += 1\n    if a > b:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor _ in range(t):\n    params = input().split()\n    values = input().split()\n    a = 0\n    b = 0\n    c = 0\n    for i in values:\n        if int(i) % int(params[1]) == 0 and int(i) % int(params[2]) == 0:\n            c += 1\n        elif int(i) % int(params[1]) == 0:\n            a += 1\n        elif int(i) % int(params[2]) == 0:\n            b += 1\n    if c > 0:\n        a += 1\n    if a > b:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    array = list(map(int, input().split()))\n    both = bob = alice = 0\n    for i in array:\n        if i % a == 0 and i % b == 0:\n            both += 1\n            bob += 1\n            alice += 1\n        elif i % a == 0:\n            bob += 1\n        elif i % b == 0:\n            alice += 1\n        else:\n            pass\n    if both != 0:\n        if bob - both >= alice - both:\n            print('BOB')\n        else:\n            print('ALICE')\n    elif alice >= bob:\n        print('ALICE')\n    else:\n        print('BOB')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c1 = 0\n    c2 = 0\n    c3 = 0\n    for i in l:\n        if i % a == 0:\n            c1 = c1 + 1\n        if i % b == 0:\n            c2 = c2 + 1\n        if i % a == 0 and i % b == 0:\n            c3 = c3 + 1\n    c1 = c1 - c3\n    c2 = c2 - c3\n    if c3 == 0:\n        if c1 > c2:\n            print('BOB')\n        else:\n            print('ALICE')\n    elif c1 >= c2:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (b1, a1, c1) = (0, 0, 0)\n    for i in l:\n        if i % a == 0:\n            b1 += 1\n        if i % b == 0:\n            a1 += 1\n        if i % a == 0 and i % b == 0:\n            c1 += 1\n    if c1 > 0:\n        b1 += 1\n    print('BOB') if b1 > a1 else print('ALICE')\n    t -= 1", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (b1, a1, c1) = (0, 0, 0)\n    for i in l:\n        if i % a == 0:\n            b1 += 1\n        if i % b == 0:\n            a1 += 1\n        if i % a == 0 and i % b == 0:\n            c1 += 1\n    if c1 > 0:\n        b1 += 1\n    print('BOB') if b1 > a1 else print('ALICE')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    A = 0\n    B = 0\n    C = 0\n    (n, a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for j in range(len(arr)):\n        if arr[j] % a == 0 and arr[j] % b == 0:\n            C += 1\n        elif arr[j] % a == 0:\n            B += 1\n        elif arr[j] % b == 0:\n            A += 1\n    if C > 0:\n        B = B + 1\n    if B > A:\n        print('BOB')\n    else:\n        print('ALICE')", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        if c[i] % a == 0:\n            p += 1\n        elif c[i] % b == 0:\n            q += 1\n    if p > q:\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (ele, bob, alice) = list(map(int, input().split()))\n    thingy = list(map(int, input().split()))\n    boths = 0\n    bobs = 0\n    alices = 0\n    for num in range(ele):\n        if thingy[num] % bob == 0 and thingy[num] % alice == 0:\n            boths += 1\n        elif thingy[num] % bob == 0:\n            bobs += 1\n        elif thingy[num] % alice == 0:\n            alices += 1\n    if boths >= 1:\n        bobs += 1\n    if bobs > alices:\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l = [int(k) for k in input().split()]\n    (x, y, z) = [0] * 3\n    for i in l:\n        if i % a == 0:\n            if i % b == 0:\n                z += 1\n            else:\n                x += 1\n        elif i % b == 0:\n            y += 1\n    if z:\n        print(('BOB', 'ALICE')[x + 1 <= y])\n    else:\n        print(('BOB', 'ALICE')[x <= y])", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    c1 = 0\n    c2 = 0\n    for i in l:\n        if i > 0:\n            if i % a == 0:\n                c1 += 1\n            elif i % b == 0:\n                c2 += 1\n    if c1 > c2:\n        print('BOB')\n    else:\n        print('ALICE')", "def gcd(A, B):\n    if A == 0:\n        return B\n    return gcd(B % A, A)\n\ndef lcm(A, B):\n    return A / gcd(A, B) * B\nt = int(input())\nfor _ in range(t):\n    (n, B, A) = [int(x) for x in input().split()]\n    lst = [int(x) for x in input().split()]\n    h = lcm(A, B)\n    lst.sort()\n    a = []\n    b = []\n    hh = []\n    for l in lst:\n        if l % h == 0:\n            hh.append(l)\n        elif l % A == 0:\n            a.append(l)\n        elif l % B == 0:\n            b.append(l)\n    at = len(a)\n    bt = len(b)\n    if len(hh) > 0:\n        bt += 1\n    if at >= bt:\n        print('ALICE')\n    else:\n        print('BOB')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nt = int(input())\nfor _ in range(t):\n    (n, b, a) = [int(x) for x in input().split()]\n    lst = [int(x) for x in input().split()]\n    h = lcm(a, b)\n    lst.sort()\n    aa = []\n    bb = []\n    hh = []\n    for l in lst:\n        if l % h == 0:\n            hh.append(l)\n        elif l % a == 0:\n            aa.append(l)\n        elif l % b == 0:\n            bb.append(l)\n    at = len(aa)\n    bt = len(bb)\n    if len(hh) > 0:\n        bt += 1\n    if at >= bt:\n        print('ALICE')\n    else:\n        print('BOB')", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    c1 = 0\n    c2 = 0\n    for i in l:\n        if i > 0:\n            if i % a == 0:\n                c1 += 1\n            elif i % b == 0:\n                c2 += 1\n    if c1 > c2:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    c1 = 0\n    c2 = 0\n    for i in l:\n        if i > 0:\n            if i % a == 0:\n                c1 += 1\n            elif i % b == 0:\n                c2 += 1\n    if c1 > c2:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    c1 = 0\n    c2 = 0\n    for i in l:\n        if i > 0:\n            if i % a == 0 and i % b == 0:\n                c += 1\n            if i % a == 0:\n                c1 += 1\n            elif i % b == 0:\n                c2 += 1\n    if c1 > c2:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for _ in range(int(input())):\n    (N, a, b) = input().split()\n    N = int(N)\n    a = int(a)\n    b = int(b)\n    A = input().split()\n    (com, na, nb) = (0, 0, 0)\n    for i in range(N):\n        A[i] = int(A[i])\n        if A[i] % a == 0 and A[i] % b == 0:\n            com += 1\n        elif A[i] % a == 0:\n            na += 1\n        elif A[i] % b == 0:\n            nb += 1\n    if a == b:\n        print('BOB')\n    elif na > nb:\n        print('BOB')\n    elif na < nb:\n        print('ALICE')\n    elif com != 0:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor _ in range(t):\n    list1 = []\n    (N, a, b) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    c = 0\n    d = 0\n    e = 0\n    for num in list1:\n        if num % a == 0 and num % b == 0:\n            c += 1\n        elif num % a == 0:\n            d += 1\n        elif num % b == 0:\n            e += 1\n    if c:\n        d += 1\n    if d > e:\n        print('BOB')\n    else:\n        print('ALICE')", "for _ in range(int(input())):\n    (n, b, a) = map(int, input().split())\n    s = list(map(int, input().split()))\n    bm = 0\n    am = 0\n    Lm = 0\n    for i in range(n):\n        if s[i] % b == 0 and s[i] % a == 0:\n            Lm += 1\n        elif s[i] % b == 0:\n            bm += 1\n        elif s[i] % a == 0:\n            am += 1\n    if Lm != 0:\n        bm += 1\n    if bm > am:\n        print('BOB')\n    else:\n        print('ALICE')", "T = int(input())\nfor i in range(T):\n    INP = list(map(int, input().split()))\n    N = INP[0]\n    b = INP[1]\n    a = INP[2]\n    A = list(map(int, input().split()))\n    ALI = 0\n    BOB = 0\n    BLI = False\n    for j in A:\n        if j % b == 0 and j % a == 0:\n            BLI = True\n        elif j % a == 0:\n            ALI += 1\n        elif j % b == 0:\n            BOB += 1\n    ALI -= int(BLI)\n    if BOB <= ALI:\n        print('ALICE')\n    else:\n        print('BOB')", "def bob_winner(A, a, b):\n    both = [x for x in A if x % a == 0 and x % b == 0]\n    if a == b:\n        return len(both) > 0\n    bobs_only = [x for x in A if x not in both and x % a == 0]\n    alices_only = [x for x in A if x not in both and x % b == 0]\n    if len(both) == 0:\n        return len(bobs_only) > len(alices_only)\n    return len(bobs_only) >= len(alices_only)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        (N, a, b) = [int(x) for x in input().split(' ')]\n        A = [int(x) for x in input().split(' ')]\n        if bob_winner(A, a, b):\n            print('BOB')\n        else:\n            print('ALICE')\nmain()", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    alice = []\n    bob = []\n    for i in range(n):\n        if lis[i] % a == 0:\n            bob.append(lis[i])\n        elif lis[i] % b == 0:\n            alice.append(lis[i])\n    if len(bob) > len(alice):\n        print('BOB')\n    elif len(bob) == len(alice):\n        print('ALICE')\n    else:\n        print('ALICE')", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    l = list(map(int, input().strip().split()))[:n]\n    x = y = 0\n    for i in range(n):\n        if l[i] % a == 0:\n            x += 1\n        elif l[i] % b == 0:\n            y += 1\n    if x > y:\n        print('BOB')\n    else:\n        print('ALICE')\n    t -= 1", "for temp in range(int(input())):\n    (n, a, b) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    cm = 0\n    am = 0\n    bm = 0\n    for i in arr:\n        if i % a == 0 and i % b == 0:\n            cm += 1\n        elif i % b == 0:\n            am += 1\n        elif i % a == 0:\n            bm += 1\n    if cm > 0:\n        bm += 1\n    if bm > am:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    alice = []\n    bob = []\n    for i in range(n):\n        if lis[i] % a == 0:\n            bob.append(lis[i])\n        elif lis[i] % b == 0:\n            alice.append(lis[i])\n    if len(bob) > len(alice):\n        print('BOB')\n    elif len(bob) == len(alice):\n        print('ALICE')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def game_of_multiple(n, a, b, A):\n    cnt_a = 0\n    cnt_b = 0\n    same = 0\n    for i in range(n):\n        if A[i] % a == 0:\n            cnt_a += 1\n        if A[i] % b == 0:\n            cnt_b += 1\n        if A[i] % a == 0 and A[i] % b == 0:\n            same += 1\n    if cnt_a > cnt_b - same:\n        return 'BOB'\n    elif cnt_a <= cnt_b - same:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    A = list(map(int, input().split()))\n    result = game_of_multiple(n, a, b, A)\n    print(result)", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    bob = 0\n    alice = 0\n    same = 0\n    for num in arr:\n        if num % a == 0:\n            bob += 1\n        if num % b == 0:\n            alice += 1\n        if num % a == 0 and num % b == 0:\n            same += 1\n    if bob > alice - same:\n        print('BOB')\n    elif bob <= alice - same:\n        print('ALICE')", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    bob = 0\n    alice = 0\n    same = 0\n    for num in arr:\n        if num % a == 0:\n            bob += 1\n        if num % b == 0:\n            alice += 1\n        if num % a == 0 and num % b == 0:\n            same += 1\n    if bob > alice - same:\n        print('BOB')\n    elif bob <= alice - same:\n        print('ALICE')", "def Game(X, a, b):\n    p = q = commonMoves = 0\n    for i in X:\n        if i % a == 0 and i % b == 0:\n            commonMoves += 1\n        elif i % a == 0:\n            p += 1\n        elif i % b == 0:\n            q += 1\n    if commonMoves:\n        p += 1\n    if p > q:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    print(Game(X, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    bob = 0\n    alice = 0\n    for i in range(n):\n        if l[i] % a == 0:\n            bob += 1\n        elif l[i] % b == 0:\n            alice += 1\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    bob = 0\n    alice = 0\n    common = 0\n    l = [int(a) for a in input().split()]\n    for i in l:\n        if i % a == 0 and i % b != 0:\n            bob += 1\n        elif i % b == 0 and i % a != 0:\n            alice += 1\n        elif i % a == 0 and i % b == 0:\n            common = 1\n    bob += common\n    if bob > alice:\n        print('BOB')\n    else:\n        print('ALICE')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "t = int(input())\nfor i in range(t):\n    (N, a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    B = A = 0\n    for i in l:\n        if i % a == 0:\n            B += 1\n        elif i % b == 0:\n            A += 1\n    if B > A:\n        print('BOB')\n    else:\n        print('ALICE')", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    flag_a = 0\n    flag_b = 0\n    for i in range(len(arr)):\n        if arr[i] % a == 0:\n            flag_b += 1\n        elif arr[i] % b == 0:\n            flag_a += 1\n    if flag_b > flag_a:\n        print('BOB')\n    else:\n        print('ALICE')\n    t -= 1", "t = int(input())\nfor tt in range(t):\n    sump = 0\n    sumo = 0\n    (n, a, b) = [int(x) for x in input().split()]\n    cn = [int(x) for x in input().split()]\n    if a == b:\n        print('BOB')\n    elif a == 0:\n        for i in cn:\n            if i != 0 and i % b == 0:\n                print('ALICE')\n                break\n        else:\n            print('BOB')\n    elif b == 0:\n        for i in cn:\n            if i != 0 and i % a == 0:\n                print('BOB')\n                break\n        else:\n            print('ALICE')\n    else:\n        for i in cn:\n            if i != 0 and i % a == 0:\n                sump = sump + 1\n        for i in cn:\n            if i != 0 and i % b == 0 and (i % a != 0):\n                sumo = sumo + 1\n        if sump > 0 and sumo == 0:\n            print('BOB')\n        elif sumo > 0 and sump == 0:\n            print('ALICE')\n        elif sump == 0 and sumo == 0:\n            print('ALICE')\n        elif sumo > sump:\n            print('ALICE')\n        elif sump == sumo:\n            print('ALICE')\n        else:\n            print('BOB')", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))", "def luckyNumberGame(nums, a, b):\n    bobMoves = aliceMoves = commonMoves = 0\n    for num in nums:\n        if num % a == 0 and num % b == 0:\n            commonMoves += 1\n        elif num % a == 0:\n            bobMoves += 1\n        elif num % b == 0:\n            aliceMoves += 1\n    if commonMoves:\n        bobMoves += 1\n    if bobMoves > aliceMoves:\n        return 'BOB'\n    else:\n        return 'ALICE'\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    print(luckyNumberGame(nums, a, b))"]