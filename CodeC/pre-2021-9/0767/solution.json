["def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def split_freq(n, s):\n    freqs = [[0] * 26 for i in range(n + 1)]\n    hash_pos = []\n    for i in range(1, n + 1):\n        c = s[i - 1]\n        for j in range(26):\n            freqs[i][j] = freqs[i - 1][j]\n        if c == '#':\n            hash_pos.append(i)\n        else:\n            freqs[i][ord(c) - ord('a')] += 1\n    return (freqs, hash_pos)\n\ndef solve(s):\n    n = len(s)\n    (freqs, hash_pos) = split_freq(n, s)\n    l = len(hash_pos)\n    res = 0\n    for i in range(l - 2):\n        p1 = max(freqs[hash_pos[i]])\n        if p1 == 0:\n            continue\n        p2 = max((ai - bi for (ai, bi) in zip(freqs[hash_pos[i + 1]], freqs[hash_pos[i]])))\n        if p2 == 0:\n            continue\n        p3 = max((ai - bi for (ai, bi) in zip(freqs[hash_pos[i + 2]], freqs[hash_pos[i + 1]])))\n        if p3 == 0:\n            continue\n        p4 = max((ai - bi for (ai, bi) in zip(freqs[n], freqs[hash_pos[i + 2]])))\n        if p4 == 0:\n            continue\n        res = max(res, p1 + p2 + p3 + p4 + 3)\n    return res\nt = int(input().strip())\nfor _ in range(t):\n    s = input().strip()\n    print(solve(s))", "def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def s(s):\n    n = len(s)\n    (f1, count) = f(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f1[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f1[c][j] - f1[c - 1][j])\n            mid2 = max(mid2, f1[c + 1][j] - f1[c][j])\n            right = max(right, f1[count][j] - f1[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\n\ndef f(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\nfor _ in range(int(input())):\n    s2 = input()\n    ans = s(s2)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)", "def frequency(s, n):\n    f = [[0 for i in range(26)] for j in range(n + 1)]\n    count = 0\n    for i in range(n):\n        if s[i] != '#':\n            f[count][ord(s[i]) - 97] += 1\n        else:\n            count += 1\n            for j in range(26):\n                f[count][j] = f[count - 1][j]\n    return (f, count)\n\ndef solve(s):\n    n = len(s)\n    (f, count) = frequency(s, n)\n    if count < 3:\n        return 0\n    ans = 0\n    index = []\n    for i in range(n - 1, -1, -1):\n        if s[i] == '#':\n            index.append(i)\n    for c in range(1, count - 2 + 1):\n        if index[-2] == index[-1] + 1 or index[-3] == index[-2] + 1:\n            index.pop()\n            continue\n        left = max(f[c - 1])\n        mid1 = 0\n        mid2 = 0\n        right = 0\n        for j in range(26):\n            mid1 = max(mid1, f[c][j] - f[c - 1][j])\n            mid2 = max(mid2, f[c + 1][j] - f[c][j])\n            right = max(right, f[count][j] - f[c + 1][j])\n        if left and mid1 and mid2 and right:\n            ans = max(ans, left + mid1 + mid2 + right)\n        index.pop()\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    if ans:\n        print(ans + 3)\n    else:\n        print(0)"]