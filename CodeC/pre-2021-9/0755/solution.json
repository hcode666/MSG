["from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\n\ndef solve():\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import stdin, stdout\nimport time\nimport bisect\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\nfor _ in range(int(stdin.readline().rstrip())):\n    n = int(stdin.readline().rstrip())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)", "f = [0] * 70\nf[0] = 1\nans = [1]\nfor i in range(1, 70, 1):\n    f[i] = i * f[i - 1]\nfor i in range(2, 70, 1):\n    ans.append(f[i] // (f[i // 2] * f[i - i // 2]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    for j in range(70):\n        if ans[j] >= n:\n            print(j + 1)\n            break", "f = [0] * 70\nf[0] = 1\nans = [1]\nfor i in range(1, 70, 1):\n    f[i] = i * f[i - 1]\nfor i in range(2, 70, 1):\n    ans.append(f[i] // (f[i // 2] * f[i - i // 2]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    for j in range(70):\n        if ans[j] >= n:\n            print(j + 1)\n            break", "import bisect\nimport sys\nimport operator as op\nfrom functools import reduce\ninput = sys.stdin.readline\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\nlist1 = [2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534, 3609714217008132870, 7219428434016265740, 14226520737620288370, 28453041475240576740, 56093138908331422716, 112186277816662845432]\nT = int(input())\nfor j in range(T):\n    n = int(input())\n    index = bisect.bisect(list1, n)\n    if n > list1[index - 1]:\n        print(index + 2)\n    else:\n        print(index + 1)", "fact = [0] * 70\nfact[0] = 1\nans = [1]\nfor i in range(1, 70, 1):\n    fact[i] = i * fact[i - 1]\nfor i in range(2, 70, 1):\n    ans.append(fact[i] // (fact[i // 2] * fact[i - i // 2]))\nfor z in range(int(input())):\n    n = int(input())\n    for i in range(70):\n        if ans[i] >= n:\n            print(i + 1)\n            break", "fact = [0] * 70\nfact[0] = 1\nfor i in range(1, 70, 1):\n    fact[i] = i * fact[i - 1]\nans = [1]\nfor i in range(2, 70, 1):\n    ans.append(fact[i] // (fact[i // 2] * fact[i - i // 2]))\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    for i in range(70):\n        if ans[i] >= n:\n            print(i + 1)\n            break", "dp = {}\n\ndef ncr(n, r):\n    if (n, r) in dp:\n        return dp[n, r]\n    if n == r or r == 0:\n        return 1\n    dp[n, r] = ncr(n - 1, r) + ncr(n - 1, r - 1)\n    return dp[n, r]\ncache = []\nfor i in range(65):\n    cache.append(ncr(i, i // 2))\nfor _ in range(int(input())):\n    n = int(input())\n    for i in range(65):\n        if cache[i] >= n:\n            print(i)\n            break", "dp = {}\n\ndef ncr(n, r):\n    if (n, r) in dp:\n        return dp[n, r]\n    if n == r or r == 0:\n        return 1\n    dp[n, r] = ncr(n - 1, r) + ncr(n - 1, r - 1)\n    return dp[n, r]\ncomb = []\nfor i in range(65):\n    comb.append(ncr(i, i // 2))\nfor _ in range(int(input())):\n    n = int(input())\n    for i in range(65):\n        if comb[i] >= n:\n            print(i)\n            break", "ans = []\n\ndef pre():\n    ans.append(1)\n    ans.append(1)\n    i = 0\n    while True:\n        if i % 2 == 0:\n            x = ans[i] * (i + 1) * (i + 2)\n            x = x // (i // 2 + 1) ** 2\n            ans.append(x)\n        else:\n            x = ans[i] * (i + 1) * (i + 2)\n            x = x // ((i + 1) // 2 * ((i + 3) // 2))\n            ans.append(x)\n        i += 1\n        if x > 10 ** 18:\n            break\n\ndef fin(l, h, s):\n    while l < h:\n        mid = l + (h - l >> 1)\n        x = ans[mid]\n        if x < s:\n            l = mid + 1\n        else:\n            h = mid\n    return h\npre()\nfor _ in range(int(input().strip())):\n    n = int(input().strip())\n    print(fin(0, len(ans) - 1, n))", "def nCr(n):\n    r = int(n / 2)\n    num = 1\n    deno = 1\n    for i in range(r):\n        num *= n - i\n        deno *= r - i\n    frac = num // deno\n    return frac\nli = []\nfor i in range(65):\n    li.append(nCr(i))\nimport sys\n\ndef S(li, k):\n    for i in range(len(li)):\n        if li[i] >= k:\n            return i\ninp = list(map(int, sys.stdin.read().split()))\nfor x in inp[1:]:\n    print(S(li, x))", "def nCr(n):\n    r = int(n / 2)\n    num = 1\n    deno = 1\n    for i in range(r):\n        num *= n - i\n        deno *= r - i\n    frac = num // deno\n    return frac\nli = []\nfor i in range(65):\n    li.append(nCr(i))\nimport sys\n\ndef BS(li, k):\n    st = 0\n    end = len(li)\n    mid = (st + end) // 2\n    while not li[mid - 1] < k <= li[mid]:\n        if k < li[mid]:\n            end = mid\n            mid = (st + end) // 2\n        else:\n            st = mid\n            mid = (st + end) // 2\n    return mid\ninp = list(map(int, sys.stdin.read().split()))\nfor x in inp[1:]:\n    print(BS(li, x))", "import sys\nli = (1, 1, 2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534)\n\ndef BS(li, k):\n    st = 0\n    end = len(li)\n    mid = (st + end) // 2\n    while not li[mid - 1] < k <= li[mid]:\n        if k < li[mid]:\n            end = mid\n            mid = (st + end) // 2\n        else:\n            st = mid\n            mid = (st + end) // 2\n    return mid\ninp = list(map(int, sys.stdin.read().split()))\nfor x in inp[1:]:\n    print(BS(li, x))", "import itertools\nimport sys\n\ndef BS(k):\n    li = (1, 1, 2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534)\n    st = 0\n    end = len(li)\n    mid = (st + end) // 2\n    while not li[mid - 1] < k <= li[mid]:\n        if k < li[mid]:\n            end = mid\n            mid = (st + end) // 2\n        else:\n            st = mid\n            mid = (st + end) // 2\n    return mid\ninp = list(map(int, sys.stdin.read().split()))\nfor x in inp[1:]:\n    print(BS(x))", "import itertools\nimport sys\n\ndef BS(k):\n    li = (1, 1, 2, 3, 6, 10, 20, 35, 70, 126, 252, 462, 924, 1716, 3432, 6435, 12870, 24310, 48620, 92378, 184756, 352716, 705432, 1352078, 2704156, 5200300, 10400600, 20058300, 40116600, 77558760, 155117520, 300540195, 601080390, 1166803110, 2333606220, 4537567650, 9075135300, 17672631900, 35345263800, 68923264410, 137846528820, 269128937220, 538257874440, 1052049481860, 2104098963720, 4116715363800, 8233430727600, 16123801841550, 32247603683100, 63205303218876, 126410606437752, 247959266474052, 495918532948104, 973469712824056, 1946939425648112, 3824345300380220, 7648690600760440, 15033633249770520, 30067266499541040, 59132290782430712, 118264581564861424, 232714176627630544, 465428353255261088, 916312070471295267, 1832624140942590534)\n    st = 0\n    end = len(li)\n    mid = (st + end) // 2\n    while not li[mid - 1] < k <= li[mid]:\n        if k < li[mid]:\n            end = mid\n            mid = (st + end) // 2\n        else:\n            st = mid\n            mid = (st + end) // 2\n    return mid\ninp = list(map(int, sys.stdin.read().split()))\nfor x in itertools.islice(inp, 1, len(inp)):\n    print(BS(x))", "import math\nimport itertools\nimport sys\n\ndef f(x):\n    return math.factorial(x) // math.factorial(x // 2) // math.factorial((x + 1) // 2)\ngen = tuple(itertools.takewhile(lambda x: x < 10 ** 18, map(f, itertools.count(1))))\n\ndef solve(x):\n    l = -1\n    r = len(gen)\n    while l + 1 < r:\n        mid = l + r >> 1\n        if gen[mid] < x:\n            l = mid\n        else:\n            r = mid\n    return r + 1\ninp = list(map(int, sys.stdin.read().split()))\nfor x in itertools.islice(inp, 1, len(inp)):\n    print(solve(x))", "import math\nimport itertools\nimport sys\n\ndef f(x):\n    return math.factorial(x) // math.factorial(x // 2) // math.factorial((x + 1) // 2)\ngen = tuple(itertools.takewhile(lambda x: x < 10 ** 18, map(f, itertools.count(1))))\n\ndef solve(x):\n    l = -1\n    r = len(gen)\n    while l + 1 < r:\n        mid = l + r >> 1\n        if gen[mid] < x:\n            l = mid\n        else:\n            r = mid\n    return r + 1\ninp = list(map(int, sys.stdin.read().split()))\nfor x in inp[1:]:\n    print(solve(x))", "def First_higher(L, x):\n    a = -1\n    b = len(L)\n    while b - a > 1:\n        i = (b + a) // 2\n        if L[i] < x:\n            a = i\n        elif L[i] > x:\n            b = i\n        else:\n            return i\n    return b\nimport math\nimport sys\nL = []\nfor i in range(4, 100):\n    x = i // 2\n    f = math.factorial(i) // (math.factorial(i - x) * math.factorial(x))\n    if f > 10 ** 18:\n        L.append(f)\n        break\n    L.append(f)\nT = int(sys.stdin.readline())\nAns = ''\nfor t in range(T):\n    N = int(sys.stdin.readline())\n    if N == 2:\n        Ans += '2\\n'\n        continue\n    if N == 3:\n        Ans += '3\\n'\n        continue\n    Ans += str(4 + First_higher(L, N)) + '\\n'\nsys.stdout.write(Ans)"]