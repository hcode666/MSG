["mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    seen = set()\n    distinct = True\n    for i in range(N):\n        prev = 0\n        for j in range(i, N):\n            val = prev | A[j]\n            if val in seen:\n                distinct = False\n                break\n            else:\n                seen.add(val)\n            prev = val\n        if not distinct:\n            break\n    print('YES' if distinct else 'NO')\nfor _ in range(int(input())):\n    solve()", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    seen = set()\n    distinct = True\n    for i in range(N):\n        prev = 0\n        for j in range(i, N):\n            val = prev | A[j]\n            if val in seen:\n                distinct = False\n                break\n            else:\n                seen.add(val)\n            prev = val\n        if not distinct:\n            break\n    print('YES' if distinct else 'NO')\nfor _ in range(int(input())):\n    solve()", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    seen = set()\n    distinct = True\n    for i in range(N):\n        prev = 0\n        for j in range(i, N):\n            val = prev | A[j]\n            if val in seen:\n                distinct = False\n                break\n            else:\n                seen.add(val)\n            prev = val\n        if not distinct:\n            break\n    print('YES' if distinct else 'NO')\nfor _ in range(int(input())):\n    solve()", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    seen = set()\n    distinct = True\n    for i in range(N):\n        prev = 0\n        for j in range(i, N):\n            val = prev | A[j]\n            if val in seen:\n                distinct = False\n                break\n            else:\n                seen.add(val)\n            prev = val\n        if not distinct:\n            break\n    print('YES' if distinct else 'NO')\nfor _ in range(int(input())):\n    solve()", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    seen = set()\n    distinct = True\n    for i in range(N):\n        prev = 0\n        for j in range(i, N):\n            val = prev | A[j]\n            if val in seen:\n                distinct = False\n                break\n            else:\n                seen.add(val)\n            prev = val\n        if not distinct:\n            break\n    print('YES' if distinct else 'NO')\nfor _ in range(int(input())):\n    solve()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef main():\n    visited = set()\n    for l in range(n):\n        prev = lst[l]\n        for r in range(l, n):\n            prev = prev | lst[r]\n            if prev not in visited:\n                visited.add(prev)\n            else:\n                print('NO')\n                return\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    main()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    S = set({})\n    if n <= 61:\n        for i in range(n):\n            ans = L[i]\n            for j in range(i, n):\n                ans |= L[j]\n                S.add(ans)\n        if len(S) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    S = set({})\n    if n <= 61:\n        for i in range(n):\n            ans = L[i]\n            for j in range(i, n):\n                ans |= L[j]\n                S.add(ans)\n        if len(S) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import math\nfrom sys import stdin\nt = int(stdin.readline())\nwhile t:\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    if n >= 61:\n        print('NO')\n    else:\n        val_set = set()\n        for i in range(0, n):\n            or_val = 0\n            for j in range(i, n):\n                or_val = or_val | a[j]\n                val_set.add(or_val)\n        if len(val_set) == n * (n + 1) / 2:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 62:\n        s = set()\n        for i in range(n):\n            c = 0\n            for j in range(i, n):\n                c = c | a[j]\n                s.add(c)\n        if len(s) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def snek(a):\n    r = set()\n    p = {0}\n    for i in a:\n        p = {i | j for j in p} | {i}\n        r |= p\n    return len(r)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = snek(a)\n    print('YES' if s == n * (n + 1) // 2 else 'NO')", "t = int(input())\n\ndef Solve(A):\n    res = set()\n    p = {0}\n    for i in A:\n        p = {i | j for j in p} | {i}\n        res |= p\n    return len(res)\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    distinct = Solve(A)\n    if distinct == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef Solve(A):\n    res = set()\n    p = {0}\n    for i in A:\n        p = {i | j for j in p} | {i}\n        res |= p\n    return len(res)\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    distinct = Solve(A)\n    if distinct == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef Solve(A):\n    res = set()\n    p = {0}\n    for i in A:\n        p = {i | j for j in p} | {i}\n        res |= p\n    return len(res)\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    distinct = Solve(A)\n    if distinct == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef Solve(A):\n    res = set()\n    p = {0}\n    for i in A:\n        p = {i | j for j in p} | {i}\n        res |= p\n    return len(res)\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    distinct = Solve(A)\n    if distinct == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n <= 62:\n        ans = set()\n        for i in range(n):\n            cur = 0\n            c = 0\n            for j in range(i, n):\n                cur |= l[j]\n                if cur not in ans:\n                    ans.add(cur)\n                else:\n                    print('NO')\n                    c += 1\n                    break\n            if c > 0:\n                break\n        else:\n            print('YES')\n    else:\n        print('NO')", "def orthodox(a, n):\n    vals = set()\n    for i in range(n):\n        orr = 0\n        for j in range(i, n):\n            orr |= a[j]\n            if orr in vals:\n                print('NO')\n                return\n            vals.add(orr)\n    print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    orthodox(a, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 62:\n        s = set()\n        for i in range(n):\n            c = 0\n            for j in range(i, n):\n                c = c | a[j]\n                s.add(c)\n        if len(s) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def generator(l, n):\n    prev = set()\n    for i in range(n):\n        xor = 0\n        for j in range(i, n):\n            xor |= l[j]\n            if xor in prev:\n                flag = False\n                print('NO')\n                return\n            prev.add(xor)\n    print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())][:n]\n    generator(l, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 62:\n        s = set()\n        for i in range(n):\n            c = 0\n            for j in range(i, n):\n                c = c | a[j]\n                s.add(c)\n        if len(s) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 62:\n        s = set()\n        for i in range(n):\n            c = 0\n            for j in range(i, n):\n                c = c | a[j]\n                s.add(c)\n        if len(s) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n <= 62:\n        st = set()\n        for i in range(n):\n            curr = 0\n            for j in range(i, n):\n                curr = curr | arr[j]\n                st.add(curr)\n        if len(st) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 62:\n        st = set()\n        n1 = n * (n + 1) // 2\n        for i in range(n):\n            m = 0\n            for j in range(i, n):\n                m = m | a[j]\n                st.add(m)\n        if len(st) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = set()\n    mx = n * ((n + 1) / 2)\n    pre = {0}\n    for x in arr:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    if len(res) == mx:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n <= 62:\n        st = set()\n        for i in range(n):\n            curr = 0\n            for j in range(i, n):\n                curr = curr | arr[j]\n                st.add(curr)\n        if len(st) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def ortho(n, m):\n    res = set()\n    tot = n * (n + 1) // 2\n    pre = {0}\n    for x in m:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    if len(res) == tot:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    print(ortho(n, m))", "for _ in range(int(input())):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    if n > 62:\n        print('NO')\n    else:\n        v = []\n        f = 0\n        for i in range(n):\n            x = ar[i]\n            if ar[i] not in v:\n                v.append(ar[i])\n            else:\n                f = 1\n                break\n            for j in range(i + 1, n):\n                x |= ar[j]\n                if x in v:\n                    f = 1\n                    break\n                else:\n                    v.append(x)\n            if f == 1:\n                break\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    if N > 62:\n        ans.append('NO')\n    else:\n        D = {}\n        flag = True\n        for i in range(N):\n            x = 0\n            for j in range(i, N):\n                x |= A[j]\n                if x in D:\n                    flag = False\n                    break\n                D[x] = True\n            if not flag:\n                break\n        if flag:\n            ans.append('YES')\n        else:\n            ans.append('NO')\nfor i in ans:\n    print(i)", "def answer():\n    if n <= 60:\n        all_ = set()\n        for i in range(n):\n            value = 0\n            for j in range(i, n):\n                value |= a[j]\n                all_.add(value)\n        if len(all_) == n * (n + 1) // 2:\n            return 'YES'\n    return 'NO'\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    if n <= 60:\n        all_ = set()\n        for i in range(n):\n            value = 0\n            for j in range(i, n):\n                value |= a[j]\n                all_.add(value)\n        if len(all_) == n * (n + 1) // 2:\n            return 'YES'\n    return 'NO'\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    value = a[0]\n    if n <= 60:\n        all_ = set()\n        for i in range(n):\n            value = 0\n            for j in range(i, n):\n                value |= a[j]\n                all_.add(value)\n        if len(all_) == n * (n + 1) // 2:\n            return 'YES'\n    return 'NO'\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "import math\nfor t in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    check = set()\n    if n > 60:\n        print('NO')\n    else:\n        for i in range(n):\n            check.add(values[i])\n        for i in range(n):\n            st = 0\n            for j in range(i, n):\n                st = st | values[j]\n                check.add(st)\n        d = n * (n + 1) // 2\n        if len(check) == d:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    f = 1\n    for i in range(n):\n        a = l[i]\n        for j in range(i, n):\n            a |= l[j]\n            if a in s:\n                print('NO')\n                f = 0\n                break\n            s.add(a)\n        if f == 0:\n            break\n    if f:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    f = 1\n    for i in range(n):\n        a = l[i]\n        for j in range(i, n):\n            a |= l[j]\n            if a in s:\n                print('NO')\n                f = 0\n                break\n            s.add(a)\n        if f == 0:\n            break\n    if f:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    f = 1\n    for i in range(n):\n        a = l[i]\n        for j in range(i, n):\n            a |= l[j]\n            if a in s:\n                print('NO')\n                f = 0\n                break\n            s.add(a)\n        if f == 0:\n            break\n    if f:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    s = set()\n    if n > 60:\n        print('NO')\n    else:\n        for i in range(n):\n            ordd = 0\n            for j in range(i, n):\n                ordd = ordd | arr[j]\n                s.add(ordd)\n        if len(s) == n * (n + 1) / 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    N = n * (n + 1) // 2\n    d = set()\n    if n > 60:\n        print('NO')\n    else:\n        for i in range(n):\n            ans = 0\n            for j in range(i, n):\n                ans = l[j] | ans\n                d.add(ans)\n        if len(d) == N:\n            print('YES')\n        else:\n            print('NO')", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        ar = list(map(int, input().split()))\n        if n > 62:\n            print('NO')\n            continue\n        lk = set()\n        ok = True\n        for sz in range(1, n + 1):\n            idx = 0\n            while idx + sz - 1 < n:\n                curr = 0\n                for j in range(idx, idx + sz):\n                    curr = curr | ar[j]\n                if curr in lk:\n                    ok = False\n                    break\n                else:\n                    lk.add(curr)\n                idx += 1\n        if ok:\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    p = {0}\n    res = set()\n    for i in ls:\n        p = {i | y for y in p} | {i}\n        res |= p\n    if len(res) == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def subArrayBitWiseOR(A):\n    res = set()\n    pre = {0}\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = subArrayBitWiseOR(a)\n    if d == n * (n + 1) / 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    p = {0}\n    res = set()\n    for i in ls:\n        p = {i | y for y in p} | {i}\n        res |= p\n    if len(res) == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    set1 = []\n    for i in range(n):\n        if arr[i] in set1:\n            f = 1\n            print('NO')\n            break\n        else:\n            f = 0\n            set1.append(arr[i])\n        for j in range(i + 1, n):\n            arr[i] = arr[i] | arr[j]\n            if arr[i] in set1:\n                f = 1\n                print('NO')\n                break\n            else:\n                set1.append(arr[i])\n                f = 0\n        if f == 1:\n            break\n    if f == 0:\n        print('YES')", "T = int(input())\nwhile T:\n    N = int(input())\n    A = list(map(int, input().split()))\n    d = set()\n    n = N * (N + 1) // 2\n    if N > 60:\n        print('NO')\n    else:\n        for i in range(N):\n            ans = 0\n            for j in range(i, N):\n                ans = A[j] | ans\n                d.add(ans)\n        if len(d) == n:\n            print('YES')\n        else:\n            print('NO')\n    T -= 1", "def solve(A):\n    (res, pre) = (set(), {0})\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if solve(arr) != n * (n + 1) // 2:\n        print('NO')\n    else:\n        print('YES')", "def solve(A):\n    (res, pre) = (set(), {0})\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if solve(arr) != n * (n + 1) // 2:\n        print('NO')\n    else:\n        print('YES')", "try:\n    t = int(input())\n    if 1 <= t <= 300:\n        for T in range(t):\n            n = int(input())\n            a = list(map(int, input().split()))\n            a.sort(reverse=True)\n            to_add = a[0]\n            f = 0\n            for i in range(1, n):\n                to_add = to_add | a[i]\n                if to_add in a:\n                    f = 1\n                    break\n                a.append(to_add)\n            if f == 1:\n                print('NO')\n            else:\n                print('YES')\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    to_add = a[0]\n    f = 0\n    for i in range(1, n):\n        to_add = to_add | a[i]\n        if to_add in a:\n            f = 1\n            break\n        a.append(to_add)\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tot = n * (n + 1) // 2\n    ans = a.copy()\n    to_add = 0\n    if n > 62:\n        print('NO')\n        continue\n    for i in range(n - 1):\n        to_add = a[i]\n        for j in range(i + 1, n):\n            to_add = to_add | a[j]\n            ans.append(to_add)\n    if len(set(ans)) == tot:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tot = n * (n + 1) // 2\n    ans = a.copy()\n    to_add = 0\n    if n >= 62:\n        print('NO')\n        continue\n    for i in range(n - 1):\n        to_add = a[i]\n        for j in range(i + 1, n):\n            to_add = to_add | a[j]\n            ans.append(to_add)\n    if len(set(ans)) == tot:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    if n <= 60:\n        for i in range(0, n):\n            ordi = 0\n            for j in range(i, n):\n                ordi = ordi | a[j]\n                l.append(ordi | a[j])\n        if len(set(l)) == len(l):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def check(arr, n):\n    s = set()\n    for i in range(n):\n        a = arr[i]\n        for j in range(i, n):\n            a = a | arr[j]\n            if a in s:\n                return False\n            else:\n                s.add(a)\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if check(arr, n):\n        print('YES')\n    else:\n        print('NO')", "def xor(A):\n    res = set()\n    p = {0}\n    for x in A:\n        p = {x | y for y in p} | {x}\n        res |= p\n    return len(res)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    h = [int(n) for n in input().split()]\n    func = xor(h)\n    res = n * (n + 1)\n    res = int(res / 2)\n    if func == res:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = dict()\n    f = 0\n    d = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s = l[i:j]\n            d += 1\n            r = reduce(lambda x, y: x | y, s)\n            a[r] = a.get(r, 0) + 1\n            if a[r] != 1:\n                f = 1\n                break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    f = 0\n    for i in range(n):\n        k = a[i]\n        for j in range(i, n):\n            k |= a[j]\n            if k in s:\n                f = 1\n                print('NO')\n                break\n            else:\n                s.add(k)\n        if f:\n            break\n    if not f:\n        print('YES')", "def solvor(ar):\n    res = set()\n    pre = {0}\n    for i in ar:\n        pre = {i | y for y in pre} | {i}\n        res |= pre\n    return len(res)\nfor i in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    x = solvor(ar)\n    if x == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "def helper(A):\n    res = set()\n    pre = {0}\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    distinct = helper(l)\n    if distinct == n * (n + 1) / 2:\n        print('YES')\n    else:\n        print('NO')", "import numpy as np\nt = int(input())\nwhile t:\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    if n > 60:\n        print('NO')\n    else:\n        l = [[0 for i in range(n)] for j in range(n)]\n        for i in range(n):\n            l[i][i] = li[i]\n        for i in range(n - 1):\n            j = 0\n            for k in range(i + 1, n):\n                l[j][k] = l[j][k - 1] | l[j + 1][k]\n                li.append(l[j][k])\n                j = j + 1\n        p = np.array(li)\n        if len(np.unique(p)) == len(li):\n            print('YES')\n        else:\n            print('NO')\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    f = 1\n    for i in range(n):\n        a = l[i]\n        for j in range(i, n):\n            a |= l[j]\n            if a in s:\n                print('NO')\n                f = 0\n                break\n            s.add(a)\n        if f == 0:\n            break\n    if f:\n        print('YES')", "from functools import reduce\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = []\n    bk = False\n    l = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            z = reduce(lambda x, y: x | y, l[i:j])\n            if z not in k:\n                k.append(z)\n            else:\n                print('NO')\n                bk = True\n                break\n        if bk:\n            break\n    if bk:\n        continue\n    print('YES')", "def check(n, arr, ans):\n    for i in range(n - 1):\n        c = arr[i]\n        for j in range(i + 1, n):\n            c = c | arr[j]\n            if c in ans:\n                return False\n            else:\n                ans.append(c)\n    return True\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    ans += arr\n    if check(n, arr, ans):\n        print('YES')\n    else:\n        print('NO')", "def orthodox(arr, n):\n    unique = set()\n    for i in range(n):\n        Or = arr[i]\n        for j in range(i, n):\n            Or = Or | arr[j]\n            if Or not in unique:\n                unique.add(Or)\n            else:\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(orthodox(arr, n))", "def subarrayBitwiseOR(A):\n    res = set()\n    pre = {0}\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nfor i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    k = subarrayBitwiseOR(lis)\n    s = len(lis)\n    if k == s * (s + 1) / 2:\n        print('YES')\n    else:\n        print('NO')", "def fun(ar):\n    result = set()\n    previous = {0}\n    for i in ar:\n        previous = {i | j for j in previous} | {i}\n        result |= previous\n    return len(result)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = n * (n + 1) // 2\n    if fun(arr) == k:\n        print('YES')\n    else:\n        print('NO')", "def fun(ar):\n    result = set()\n    previous = {0}\n    for i in ar:\n        previous = {i | j for j in previous} | {i}\n        result |= previous\n    return len(result)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = n * (n + 1) // 2\n    if fun(arr) == k:\n        print('YES')\n    else:\n        print('NO')", "def subarrayBitwiseOR(A):\n    res = set()\n    pre = {0}\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = subarrayBitwiseOR(a)\n    print('YES' if c == n * (n + 1) / 2 else 'NO')", "for i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort(reverse=True)\n    l = [0]\n    for _ in range(n):\n        l.append(l[_] | lis[_])\n    del l[0]\n    if len(list(set(l))) == len(l):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    v1 = [-1]\n    v2 = [-1]\n    temp = 0\n    for i in l:\n        temp = temp | i\n        if temp == v1[-1]:\n            f = 0\n            break\n        v1.append(temp)\n    if f == 0:\n        print('NO')\n        continue\n    temp = 0\n    for i in range(n - 1, -1, -1):\n        temp = temp | l[i]\n        if temp == v2[-1]:\n            f = 0\n            break\n        v2.append(temp)\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    v1 = [-1]\n    v2 = [-1]\n    temp = 0\n    for i in l:\n        temp = temp | i\n        if temp == v1[-1]:\n            f = 0\n            break\n        v1.append(temp)\n    if f == 0:\n        print('NO')\n        continue\n    temp = 0\n    for i in range(n - 1, -1, -1):\n        temp = temp | l[i]\n        if temp == v2[-1]:\n            f = 0\n            break\n        v2.append(temp)\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        v2.append(temp)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    v1 = [-1]\n    v2 = [-1]\n    temp = 0\n    for i in l:\n        temp = temp | i\n        if temp == v1[-1]:\n            f = 0\n            break\n        v1.append(temp)\n    if f == 0:\n        print('NO')\n        continue\n    temp = 0\n    for i in range(n - 1, -1, -1):\n        temp = temp | l[i]\n        if temp == v2[-1]:\n            f = 0\n            break\n        v2.append(temp)\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        v2.append(temp)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    if n == 1:\n        print('YES')\n        continue\n    if m == 0:\n        print('NO')\n        continue\n    nbits = math.ceil(math.log(m + 1, 2))\n    flag = True\n    if n > nbits:\n        flag = False\n    else:\n        se = set()\n        for i in range(n):\n            temp = a[i]\n            if temp not in se:\n                se.add(temp)\n            else:\n                flag = False\n                break\n            for j in range(i + 1, n):\n                temp = temp | a[j]\n                if temp in se:\n                    flag = False\n                    break\n                else:\n                    se.add(temp)\n            if not flag:\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def solution(a):\n    st = set()\n    n = len(a)\n    for i in range(n):\n        cur = 0\n        for j in range(i, n):\n            cur = cur | a[j]\n            if cur in st:\n                print('NO')\n                return\n            st.add(cur)\n    print('YES')\n    return\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solution(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = []\n    if n > 62:\n        print('NO')\n    else:\n        flag = 0\n        for i in range(n):\n            p = arr[i]\n            for j in range(i, n):\n                p = p | arr[j]\n                if p in x:\n                    flag = 1\n                    break\n                x.append(p)\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')", "from functools import *\nfor _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    if n > 60:\n        print('NO')\n    else:\n        b = []\n        a = [L[i:i + j] for i in range(0, len(L)) for j in range(1, len(L) - i + 1)]\n        for m in a:\n            res = reduce(lambda x, y: x | y, m)\n            b.append(res)\n        b1 = set(b)\n        if len(b1) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n > 60:\n        print('NO')\n        continue\n    flag = 1\n    ORset = set()\n    for i in range(n):\n        temp = 0\n        for j in range(i, n):\n            temp |= a[j]\n            if temp not in ORset:\n                ORset.add(temp)\n            else:\n                flag = 0\n                break\n        if flag == 0:\n            break\n    if flag and len(ORset) == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "def ors(l, r, v):\n    temp = 0\n    for i in range(l, r):\n        temp |= v[i]\n    return temp\n\ndef check(arr):\n    hashmap = dict()\n    if n > 70:\n        print('NO')\n        return\n    for l in range(n):\n        for r in range(l + 1, n + 1):\n            ans = ors(l, r, arr)\n            if hashmap.get(ans, 0):\n                print('NO')\n                return\n            else:\n                hashmap[ans] = 1\n    print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    check(arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = l[0]\n    ans = True\n    for i in range(1, n):\n        tmp = o | l[i]\n        if tmp == o:\n            ans = False\n            break\n        o = tmp\n    if ans:\n        o = l[-1]\n        for i in range(n - 2, -1, -1):\n            tmp = o | l[i]\n            if tmp == o:\n                ans = False\n                break\n            o = tmp\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "def orlr(i, j, l):\n    temp = 0\n    for k in range(j, j + i):\n        temp = temp | l[k]\n    return temp\n\ndef check(n, l):\n    d = {}\n    for i in range(n):\n        for j in range(0, n - i):\n            ans = orlr(i + 1, j, l)\n            if d.get(ans, 0) == 0:\n                d[ans] = 1\n            else:\n                print('NO')\n                return\n    print('YES')\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(k) for k in input().split()]\n    check(n, l)", "def frq(a):\n    m = {}\n    for i in a:\n        if i not in m:\n            m[i] = 1\n        else:\n            m[i] = m[i] + 1\n    for (k, v) in m.items():\n        if v > 1:\n            return False\n    return True\n\ndef ans(x):\n    if frq(x) == False:\n        return 'NO'\n    m = []\n    m.extend(x)\n    for i in range(len(x)):\n        for j in range(i + 1, len(x)):\n            x[i] = x[i] | x[j]\n            m.append(x[i])\n    final = {}\n    for i in m:\n        if i not in final:\n            final[i] = 1\n        else:\n            final[i] = final[i] + 1\n    for (k, v) in final.items():\n        if v > 1:\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    x = [int(n) for n in input().split()]\n    if n >= 70:\n        print('NO')\n    else:\n        print(ans(x))", "def do_or(i, j, A):\n    temp = 0\n    for m in range(i, j + 1):\n        temp |= A[m]\n    return temp\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    hsh = {}\n    for i in range(n):\n        if A[i] in hsh.keys():\n            return 'NO'\n        else:\n            hsh[A[i]] = 0\n    or_tlb = [1] * n\n    or_tlb[0] = A[0]\n    for i in range(1, n):\n        or_tlb[i] = or_tlb[i - 1] | A[i]\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = do_or(i, j, A)\n            if ans in hsh.keys():\n                return 'NO'\n            else:\n                hsh[ans] = 0\n    return 'YES'\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "from operator import ior\nimport functools\nfor _ in range(int(input())):\n    r = []\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        for j in range(1, n - i + 1):\n            k = functools.reduce(ior, l[i:i + j])\n            if k in r:\n                print('NO')\n                flag = 1\n                break\n            else:\n                r.append(functools.reduce(ior, l[i:i + j]))\n        if flag == 1:\n            break\n    if flag == 0:\n        print('YES')", "test = int(input())\nfor t in range(test):\n    FLAG = False\n    n = int(input())\n    a = list()\n    a = list(map(int, input().strip().split()))[:n]\n    second = []\n    for i in range(n):\n        orvalue = 0\n        for j in range(i, n):\n            orvalue = orvalue | a[j]\n            if orvalue in second:\n                FLAG = True\n                break\n            else:\n                second.append(orvalue)\n        if FLAG == True:\n            break\n    if FLAG == True:\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfrom functools import reduce\nfrom operator import ior\nfor i in range(int(input())):\n    _ = input()\n    n = [int(i) for i in input().split()]\n    if len(n) > 60:\n        print('NO')\n    else:\n        now = []\n        for i in range(len(n)):\n            for j in range(i, len(n)):\n                res = reduce(ior, n[i:j + 1])\n                now.append(res)\n        p = Counter(now).values()\n        ans = 1\n        for i in p:\n            if i >= 2:\n                ans = 0\n        if ans:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = []\n    l = [int(i) for i in input().split()]\n    if n > 60:\n        print('NO')\n    else:\n        ans = []\n        for i in range(n):\n            ord = 0\n            for j in range(i, n):\n                ord = ord | l[j]\n                if ord not in ans:\n                    ans.append(ord)\n        if len(ans) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = []\n    flag = 0\n    for i in range(n):\n        if a[i] in s:\n            break\n        else:\n            s.append(a[i])\n            p = a[i]\n            for j in range(i + 1, n):\n                p = p | a[j]\n                if p in s:\n                    flag = 1\n                    break\n                else:\n                    s.append(p)\n            if flag == 1:\n                break\n    if len(s) == n * (n + 1) / 2:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def subarrayBitwiseOR(A):\n    res = set()\n    pre = {0}\n    for x in A:\n        pre = {x | y for y in pre} | {x}\n        res |= pre\n    return len(res)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    seq = subarrayBitwiseOR(arr)\n    if seq == n * (n + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lim = n * (n + 1) // 2\n    my_list = []\n    f = 1\n    for i in range(n):\n        if arr[i] in my_list:\n            break\n        else:\n            my_list.append(arr[i])\n            x = arr[i]\n            for j in range(i + 1, n):\n                x = x | arr[j]\n                if x in my_list:\n                    f = 0\n                    break\n                else:\n                    my_list.append(x)\n            if f == 0:\n                break\n    if len(my_list) == lim:\n        print('YES')\n    else:\n        print('NO')", "def ans(A, n):\n    d = {}\n    for i in range(n - 1):\n        d[i] = [A[i]]\n        for j in range(i + 1, n):\n            term = d[i][-1] | A[j]\n            d[i].append(term)\n    d[n - 1] = [A[-1]]\n    num = set()\n    for i in d.keys():\n        for j in d[i]:\n            num.add(j)\n    if len(num) == n * (n + 1) / 2:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    if n >= 63:\n        print('NO')\n    else:\n        print(ans(A, n))", "def sub_lists(list1):\n    sublist = []\n    for i in range(len(list1) + 1):\n        for j in range(i + 1, len(list1) + 1):\n            sub = list1[i:j]\n            sublist.append(sub)\n    return sublist\n\ndef distinctORs(lst):\n    ss = set()\n    for i in range(len(lst)):\n        iLst = lst[i]\n        if len(iLst) == 1:\n            ss.add(iLst[0])\n        else:\n            temOR = 0\n            for j in range(len(iLst)):\n                temOR |= iLst[j]\n            ss.add(temOR)\n    if len(ss) == len(lst):\n        return True\n    else:\n        return False\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    if N > 60:\n        print('NO')\n    else:\n        z = sub_lists(lst)\n        ors = distinctORs(z)\n        if ors == True:\n            print('YES')\n        else:\n            print('NO')", "def sub_lists(list1):\n    sublist = []\n    for i in range(len(list1) + 1):\n        for j in range(i + 1, len(list1) + 1):\n            sub = list1[i:j]\n            sublist.append(sub)\n    return sublist\n\ndef distinctORs(lst):\n    ss = set()\n    for i in range(len(lst)):\n        iLst = lst[i]\n        if len(iLst) == 1:\n            ss.add(iLst[0])\n        else:\n            temOR = 0\n            for j in range(len(iLst)):\n                temOR |= iLst[j]\n            ss.add(temOR)\n    if len(ss) == len(lst):\n        return True\n    else:\n        return False\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    if N > 60:\n        print('NO')\n    else:\n        z = sub_lists(lst)\n        ors = distinctORs(z)\n        if ors == True:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if n > 60:\n        print('NO')\n    else:\n        for i in range(0, n):\n            x = 0\n            for j in range(i, n):\n                x = x | a[j]\n                p.append(x)\n        if len(set(p)) == n * (n + 1) // 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    lst = []\n    if n > 60:\n        print('NO')\n        continue\n    f = 1\n    for i in range(n):\n        t = 0\n        for j in range(i, n):\n            t = t | a[j]\n            if t in lst:\n                f = 0\n                break\n            lst.append(t)\n        if f == 0:\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "from itertools import combinations\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ma = max(l)\n    t = 0\n    if n > 62:\n        t = 1\n    else:\n\n        def xor(l):\n            v = l[0]\n            for i in range(1, len(l)):\n                e = l[i]\n                v = v | e\n            return v\n        li = []\n        fl = []\n        for i in range(len(l)):\n            for j in range(i, len(l)):\n                li.append(l[i:j + 1])\n        for e in li:\n            fl.append(xor(e))\n        s = set(fl)\n        if len(s) == len(fl):\n            pass\n        else:\n            t = 1\n    if t == 0:\n        print('YES')\n    else:\n        print('NO')"]