["import collections\n\ndef solve(u):\n    if u not in vis:\n        vis.add(u)\n        compo.append(u)\n        for v in g[u]:\n            solve(v)\nt = int(input())\nfor _ in range(t):\n    max_t = {}\n    (n, m) = map(int, input().split())\n    elems = list(map(int, input().split()))\n    day_wise = {}\n    for i in range(m):\n        (d, a, b) = list(map(int, input().split()))\n        if d in day_wise:\n            day_wise[d].append([a, b])\n        else:\n            day_wise[d] = [[a, b]]\n    for day in sorted(day_wise.keys(), reverse=1):\n        vis = set()\n        g = {}\n        for (u, v) in day_wise[day]:\n            if u in g:\n                g[u].append(v)\n            else:\n                g[u] = [v]\n            if v in g:\n                g[v].append(u)\n            else:\n                g[v] = [u]\n        for u in g:\n            compo = []\n            solve(u)\n            mx = -float('inf')\n            for i in compo:\n                mx = max(mx, max_t.get(i, i))\n            for i in compo:\n                max_t[i] = mx\n    ans = 0\n    for e in elems:\n        ans += max_t.get(e, e)\n    print(ans)", "import collections\n\ndef solve(u):\n    if u not in vis:\n        vis.add(u)\n        compo.append(u)\n        for v in g[u]:\n            solve(v)\nt = int(input())\nfor _ in range(t):\n    max_t = {}\n    (n, m) = map(int, input().split())\n    elems = list(map(int, input().split()))\n    day_wise = {}\n    for i in range(m):\n        (d, a, b) = list(map(int, input().split()))\n        if d in day_wise:\n            day_wise[d].append([a, b])\n        else:\n            day_wise[d] = [[a, b]]\n    for day in sorted(day_wise.keys(), reverse=1):\n        vis = set()\n        g = {}\n        for (u, v) in day_wise[day]:\n            if u in g:\n                g[u].append(v)\n            else:\n                g[u] = [v]\n            if v in g:\n                g[v].append(u)\n            else:\n                g[v] = [u]\n        for u in g:\n            compo = []\n            solve(u)\n            mx = -float('inf')\n            for i in compo:\n                mx = max(mx, max_t.get(i, i))\n            for i in compo:\n                max_t[i] = mx\n    ans = 0\n    for e in elems:\n        ans += max_t.get(e, e)\n    print(ans)", "T = int(input())\nfor t in range(T):\n    (N, M) = map(int, input().split())\n    cc = list(map(int, input().split()))\n    all = dict()\n    for i in range(M):\n        (T, A, B) = map(int, input().split())\n        if T in all:\n            if A in all[T]:\n                all[T][A].append(B)\n            else:\n                all[T][A] = [B]\n            if B in all[T]:\n                all[T][B].append(A)\n            else:\n                all[T][B] = [A]\n        else:\n            all[T] = {A: [B], B: [A]}\n    days = list(all.keys())\n    days.sort(reverse=True)\n    fmax = dict()\n    for day in days:\n        G = all[day]\n        vis = set()\n        for vertex in G:\n            if vertex in vis:\n                continue\n            viscomp = {vertex}\n            maxcomp = 0\n            stack = [vertex]\n            while stack:\n                u = stack.pop()\n                maxcomp = max(fmax.get(u, u), maxcomp)\n                for v in G[u]:\n                    if v not in viscomp:\n                        viscomp.add(v)\n                        stack.append(v)\n            for v in viscomp:\n                fmax[v] = maxcomp\n            vis = vis.union(viscomp)\n    sum = 0\n    for stamp in cc:\n        sum = sum + fmax.get(stamp, stamp)\n    print(sum)"]