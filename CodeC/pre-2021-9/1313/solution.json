["def swap(a, i):\n    j = n - i - 1\n    tmp = a[i]\n    a[i] = a[j]\n    a[j] = tmp\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    a = [int(t) for t in input().split()]\n    ans = []\n    ans.append([0, 0, 0, 0])\n    mid = n // 2\n    flag = True\n    if n == 2 and a[0] == a[1]:\n        flag = False\n    for k in range(1, mid + 1):\n        tmp = []\n        l = mid - k\n        if n % 2 == 0:\n            r = mid + k - 1\n        else:\n            r = mid + k\n        if k == 1 and n % 2 == 0:\n            if a[l] > a[r]:\n                ans.append([0, -1, -1, 1])\n            elif a[l] < a[r]:\n                ans.append([-1, 1, 0, -1])\n            else:\n                flag = False\n                break\n            continue\n        if n % 2 == 0:\n            curr = -1\n            if a[l] > a[l + 1] and a[r - 1] > a[r] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2]\n            if a[l] > a[r - 1] and a[l + 1] > a[r] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] < curr or curr == -1:\n                    curr = ans[k - 1][3]\n            tmp.append(curr)\n            curr = -1\n            if a[r] > a[l + 1] and a[r - 1] > a[l] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2] + 1\n            if a[r] > a[r - 1] and a[l + 1] > a[l] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][3] + 1\n            tmp.append(curr)\n            curr = -1\n            if a[l] < a[l + 1] and a[r - 1] < a[r] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0]\n            if a[l] < a[r - 1] and a[l + 1] < a[r] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] < curr or curr == -1:\n                    curr = ans[k - 1][1]\n            tmp.append(curr)\n            curr = -1\n            if a[r] < a[l + 1] and a[r - 1] < a[l] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0] + 1\n            if a[r] < a[r - 1] and a[l + 1] < a[l] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][1] + 1\n            tmp.append(curr)\n        if n % 2 == 1:\n            curr = -1\n            if a[l] > a[l + 1] and a[r - 1] < a[r] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2]\n            if a[l] > a[r - 1] and a[l + 1] < a[r] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] < curr or curr == -1:\n                    curr = ans[k - 1][3]\n            tmp.append(curr)\n            curr = -1\n            if a[r] > a[l + 1] and a[r - 1] < a[l] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2] + 1\n            if a[r] > a[r - 1] and a[l + 1] < a[l] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][3] + 1\n            tmp.append(curr)\n            curr = -1\n            if a[l] < a[l + 1] and a[r - 1] > a[r] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0]\n            if a[l] < a[r - 1] and a[l + 1] > a[r] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] < curr or curr == -1:\n                    curr = ans[k - 1][1]\n            tmp.append(curr)\n            curr = -1\n            if a[r] < a[l + 1] and a[r - 1] > a[l] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0] + 1\n            if a[r] < a[r - 1] and a[l + 1] > a[l] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][1] + 1\n            tmp.append(curr)\n        ans.append(tmp)\n    if not flag or max(ans[mid]) == -1:\n        print(-1)\n    else:\n        print(min([x for x in ans[mid] if x >= 0]))", "def swap(a, i):\n    j = n - i - 1\n    tmp = a[i]\n    a[i] = a[j]\n    a[j] = tmp\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    a = [int(t) for t in input().split()]\n    ans = []\n    ans.append([0, 0, 0, 0])\n    mid = n // 2\n    flag = True\n    if n == 2 and a[0] == a[1]:\n        flag = False\n    for k in range(1, mid + 1):\n        tmp = []\n        l = mid - k\n        if n % 2 == 0:\n            r = mid + k - 1\n        else:\n            r = mid + k\n        if k == 1 and n % 2 == 0:\n            if a[l] > a[r]:\n                ans.append([0, -1, -1, 1])\n            elif a[l] < a[r]:\n                ans.append([-1, 1, 0, -1])\n            else:\n                flag = False\n                break\n            continue\n        if n % 2 == 0:\n            curr = -1\n            if a[l] > a[l + 1] and a[r - 1] > a[r] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2]\n            if a[l] > a[r - 1] and a[l + 1] > a[r] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] < curr or curr == -1:\n                    curr = ans[k - 1][3]\n            tmp.append(curr)\n            curr = -1\n            if a[r] > a[l + 1] and a[r - 1] > a[l] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2] + 1\n            if a[r] > a[r - 1] and a[l + 1] > a[l] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][3] + 1\n            tmp.append(curr)\n            curr = -1\n            if a[l] < a[l + 1] and a[r - 1] < a[r] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0]\n            if a[l] < a[r - 1] and a[l + 1] < a[r] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] < curr or curr == -1:\n                    curr = ans[k - 1][1]\n            tmp.append(curr)\n            curr = -1\n            if a[r] < a[l + 1] and a[r - 1] < a[l] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0] + 1\n            if a[r] < a[r - 1] and a[l + 1] < a[l] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][1] + 1\n            tmp.append(curr)\n        if n % 2 == 1:\n            curr = -1\n            if a[l] > a[l + 1] and a[r - 1] < a[r] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2]\n            if a[l] > a[r - 1] and a[l + 1] < a[r] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] < curr or curr == -1:\n                    curr = ans[k - 1][3]\n            tmp.append(curr)\n            curr = -1\n            if a[r] > a[l + 1] and a[r - 1] < a[l] and (ans[k - 1][2] >= 0):\n                curr = ans[k - 1][2] + 1\n            if a[r] > a[r - 1] and a[l + 1] < a[l] and (ans[k - 1][3] >= 0):\n                if ans[k - 1][3] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][3] + 1\n            tmp.append(curr)\n            curr = -1\n            if a[l] < a[l + 1] and a[r - 1] > a[r] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0]\n            if a[l] < a[r - 1] and a[l + 1] > a[r] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] < curr or curr == -1:\n                    curr = ans[k - 1][1]\n            tmp.append(curr)\n            curr = -1\n            if a[r] < a[l + 1] and a[r - 1] > a[l] and (ans[k - 1][0] >= 0):\n                curr = ans[k - 1][0] + 1\n            if a[r] < a[r - 1] and a[l + 1] > a[l] and (ans[k - 1][1] >= 0):\n                if ans[k - 1][1] + 1 < curr or curr == -1:\n                    curr = ans[k - 1][1] + 1\n            tmp.append(curr)\n        ans.append(tmp)\n    if not flag or max(ans[mid]) == -1:\n        print(-1)\n    else:\n        print(min([x for x in ans[mid] if x >= 0]))"]