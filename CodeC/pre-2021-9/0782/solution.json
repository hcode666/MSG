["t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x > 0:\n        xs = list(map(int, input().split()))\n        xs = [0] + xs + [n + 1]\n    else:\n        xs = [0, n + 1]\n    if y > 0:\n        ys = list(map(int, input().split()))\n        ys = [0] + ys + [m + 1]\n    else:\n        ys = [0, m + 1]\n    hors = 0\n    verts = 0\n    for i in range(1, x + 2):\n        space = xs[i] - xs[i - 1]\n        if space > 0:\n            space -= 1\n        verts += space // s\n    for j in range(1, y + 2):\n        space = ys[j] - ys[j - 1]\n        if space > 0:\n            space -= 1\n        hors += space // s\n    print(hors * verts)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x > 0:\n        xs = list(map(int, input().split()))\n        xs = [0] + xs + [n + 1]\n    else:\n        xs = [0, n + 1]\n    if y > 0:\n        ys = list(map(int, input().split()))\n        ys = [0] + ys + [m + 1]\n    else:\n        ys = [0, m + 1]\n    hors = 0\n    verts = 0\n    for i in range(1, x + 2):\n        space = xs[i] - xs[i - 1]\n        if space > 0:\n            space -= 1\n        verts += space // s\n    for j in range(1, y + 2):\n        space = ys[j] - ys[j - 1]\n        if space > 0:\n            space -= 1\n        hors += space // s\n    print(hors * verts)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    XL = list(map(int, input().split())) if X > 0 else []\n    YL = list(map(int, input().split())) if Y > 0 else []\n    (availX, availY) = (0, 0)\n    curr = 0\n    for i in XL:\n        availX += (i - curr - 1) // S\n        curr = i\n    availX += (N - curr) // S\n    curr = 0\n    for i in YL:\n        availY += (i - curr - 1) // S\n        curr = i\n    availY += (M - curr) // S\n    print(availX * availY)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    XL = list(map(int, input().split())) if X > 0 else []\n    YL = list(map(int, input().split())) if Y > 0 else []\n    (availX, availY) = (0, 0)\n    curr = 0\n    for i in XL:\n        availX += (i - curr - 1) // S\n        curr = i\n    availX += (N - curr) // S\n    curr = 0\n    for i in YL:\n        availY += (i - curr - 1) // S\n        curr = i\n    availY += (M - curr) // S\n    print(availX * availY)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x == 0:\n        a = [0, n + 1]\n    else:\n        a = [0] + list(map(int, input().split())) + [n + 1]\n    if y == 0:\n        b = [0, m + 1]\n    else:\n        b = [0] + list(map(int, input().split())) + [m + 1]\n    a = sum([(a[i + 1] - a[i] - 1) // s for i in range(len(a) - 1)])\n    b = sum([(b[i + 1] - b[i] - 1) // s for i in range(len(b) - 1)])\n    print(a * b)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x == 0:\n        a = [0, n + 1]\n    else:\n        a = [0] + list(map(int, input().split())) + [n + 1]\n    if y == 0:\n        b = [0, m + 1]\n    else:\n        b = [0] + list(map(int, input().split())) + [m + 1]\n    a = sum([(a[i + 1] - a[i] - 1) // s for i in range(len(a) - 1)])\n    b = sum([(b[i + 1] - b[i] - 1) // s for i in range(len(b) - 1)])\n    print(a * b)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "T = int(input())\nfor i in range(T):\n    NM = str(input()).split(' ')\n    N = int(NM[0])\n    M = int(NM[1])\n    XYS = str(input()).split(' ')\n    X = int(XYS[0])\n    Y = int(XYS[1])\n    S = int(XYS[2])\n    if X:\n        A = str(input()).split(' ')\n    if Y:\n        B = str(input()).split(' ')\n    total = 0\n    for j in range(X + 1):\n        if j == 0:\n            y1 = 1\n        else:\n            y1 = int(A[j - 1]) + 1\n        if j == X:\n            y2 = N\n        else:\n            y2 = int(A[j]) - 1\n        total = total + (y2 - y1 + 1) // S\n    total2 = 0\n    if True:\n        for k in range(Y + 1):\n            if k == 0:\n                x1 = 1\n            else:\n                x1 = int(B[k - 1]) + 1\n            if k == Y:\n                x2 = M\n            else:\n                x2 = int(B[k]) - 1\n            total2 = total2 + (x2 - x1 + 1) // S\n    print(total * total2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x == 0:\n        a = [0, n + 1]\n    else:\n        a = [0] + list(map(int, input().split())) + [n + 1]\n    if y == 0:\n        b = [0, m + 1]\n    else:\n        b = [0] + list(map(int, input().split())) + [m + 1]\n    a = sum([(a[i + 1] - a[i] - 1) // s for i in range(len(a) - 1)])\n    b = sum([(b[i + 1] - b[i] - 1) // s for i in range(len(b) - 1)])\n    print(a * b)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        tempa = list(map(int, input().split()))\n    else:\n        tempa = []\n    if y != 0:\n        tempb = list(map(int, input().split()))\n    else:\n        tempb = []\n    tempa = [0] + tempa + [n + 1]\n    tempb = [0] + tempb + [m + 1]\n    tempa.sort()\n    tempb.sort()\n    a = 0\n    b = 0\n    for i in range(1, len(tempa)):\n        a += (tempa[i] - tempa[i - 1] - 1) // s\n    for i in range(1, len(tempb)):\n        b += (tempb[i] - tempb[i - 1] - 1) // s\n    ans = a * b\n    print(ans)", "T = int(input())\nfor tc in range(T):\n    (N, M) = map(int, input().split())\n    (H, V, S) = map(int, input().split())\n    X = [0]\n    Y = [0]\n    if H > 0:\n        X = X + list(map(int, input().split()))\n    if V > 0:\n        Y = Y + list(map(int, input().split()))\n    X.append(N + 1)\n    Y.append(M + 1)\n    countx = 0\n    county = 0\n    for i in range(H + 1):\n        a = int((X[i + 1] - X[i] - 1) / S)\n        countx += a\n    for j in range(V + 1):\n        b = int((Y[j + 1] - Y[j] - 1) / S)\n        county += b\n    print(countx * county)", "T = int(input())\nfor tc in range(T):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        xlist = list(map(int, input().split()))\n        for xlist1 in xlist:\n            x.append(xlist1)\n    x.append(N + 1)\n    if Y > 0:\n        ylist = list(map(int, input().split()))\n        for ylist1 in ylist:\n            y.append(ylist1)\n    y.append(M + 1)\n    counter = 0\n    for i in range(len(x) - 1):\n        counter += (x[i + 1] - x[i] - 1) // S\n    counter1 = 0\n    for i in range(len(y) - 1):\n        counter1 += (y[i + 1] - y[i] - 1) // S\n    print(counter * counter1)", "T = int(input())\nfor tc in range(T):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        xx = list(map(int, input().split()))\n        for xx1 in xx:\n            x.append(xx1)\n    x.append(N + 1)\n    if Y > 0:\n        yy = list(map(int, input().split()))\n        for yy1 in yy:\n            y.append(yy1)\n    y.append(M + 1)\n    x1 = 0\n    for i in range(len(x) - 1):\n        x1 += (x[i + 1] - x[i] - 1) // S\n    y1 = 0\n    for i in range(len(y) - 1):\n        y1 += (y[i + 1] - y[i] - 1) // S\n    print(x1 * y1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        a = list(map(int, input().split()))\n    else:\n        a = []\n    if y != 0:\n        b = list(map(int, input().split()))\n    else:\n        b = []\n    a = [0] + a + [n + 1]\n    b = [0] + b + [m + 1]\n    a.sort()\n    b.sort()\n    suma = 0\n    sumb = 0\n    for i in range(1, len(a)):\n        suma += (a[i] - a[i - 1] - 1) // s\n    for i in range(1, len(b)):\n        sumb += (b[i] - b[i - 1] - 1) // s\n    ans = suma * sumb\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        a = list(map(int, input().split()))\n    else:\n        a = []\n    if y != 0:\n        b = list(map(int, input().split()))\n    else:\n        b = []\n    a = [0] + a + [n + 1]\n    b = [0] + b + [m + 1]\n    a.sort()\n    b.sort()\n    suma = 0\n    sumb = 0\n    for i in range(1, len(a)):\n        suma += (a[i] - a[i - 1] - 1) // s\n    for i in range(1, len(b)):\n        sumb += (b[i] - b[i - 1] - 1) // s\n    ans = suma * sumb\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        a = list(map(int, input().split()))\n    else:\n        a = []\n    if y != 0:\n        b = list(map(int, input().split()))\n    else:\n        b = []\n    a = [0] + a + [n + 1]\n    b = [0] + b + [m + 1]\n    a.sort()\n    b.sort()\n    suma = 0\n    sumb = 0\n    for i in range(1, len(a)):\n        suma += (a[i] - a[i - 1] - 1) // s\n    for i in range(1, len(b)):\n        sumb += (b[i] - b[i - 1] - 1) // s\n    ans = suma * sumb\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        a = list(map(int, input().split()))\n    else:\n        a = []\n    if y != 0:\n        b = list(map(int, input().split()))\n    else:\n        b = []\n    a = [0] + a + [n + 1]\n    b = [0] + b + [m + 1]\n    a.sort()\n    b.sort()\n    suma = 0\n    sumb = 0\n    for i in range(1, len(a)):\n        suma += (a[i] - a[i - 1] - 1) // s\n    for i in range(1, len(b)):\n        sumb += (b[i] - b[i - 1] - 1) // s\n    ans = suma * sumb\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        a = list(map(int, input().split()))\n    else:\n        a = []\n    if y != 0:\n        b = list(map(int, input().split()))\n    else:\n        b = []\n    a = [0] + a + [n + 1]\n    b = [0] + b + [m + 1]\n    a.sort()\n    b.sort()\n    suma = 0\n    sumb = 0\n    for i in range(1, len(a)):\n        suma += (a[i] - a[i - 1] - 1) // s\n    for i in range(1, len(b)):\n        sumb += (b[i] - b[i - 1] - 1) // s\n    ans = suma * sumb\n    print(ans)", "def func(l, s):\n    house = 0\n    index = 1\n    for i in l:\n        house += (i - index) // s\n        index = i + 1\n    return house\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    xl = []\n    yl = []\n    if x:\n        xl = list(map(int, input().split()))\n    if y:\n        yl = list(map(int, input().split()))\n    xl += [n + 1]\n    yl += [m + 1]\n    print(func(xl, s) * func(yl, s))", "def func(l, s):\n    house = 0\n    index = 1\n    for i in l:\n        house += (i - index) // s\n        index = i + 1\n    return house\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    xl = []\n    yl = []\n    if x:\n        xl = list(map(int, input().split()))\n    if y:\n        yl = list(map(int, input().split()))\n    xl += [n + 1]\n    yl += [m + 1]\n    print(func(xl, s) * func(yl, s))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x == 0:\n        a = [0, n + 1]\n    else:\n        a = [0] + list(map(int, input().split())) + [n + 1]\n    if y == 0:\n        b = [0, m + 1]\n    else:\n        b = [0] + list(map(int, input().split())) + [m + 1]\n    a = sum([(a[i + 1] - a[i] - 1) // s for i in range(len(a) - 1)])\n    b = sum([(b[i + 1] - b[i] - 1) // s for i in range(len(b) - 1)])\n    print(a * b)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x == 0:\n        a = [0, n + 1]\n    else:\n        a = [0] + list(map(int, input().split())) + [n + 1]\n    if y == 0:\n        b = [0, m + 1]\n    else:\n        b = [0] + list(map(int, input().split())) + [m + 1]\n    a = sum([(a[i + 1] - a[i] - 1) // s for i in range(len(a) - 1)])\n    b = sum([(b[i + 1] - b[i] - 1) // s for i in range(len(b) - 1)])\n    print(a * b)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "def house(l, s):\n    (h, index) = (0, 1)\n    for i in l:\n        h = h + (i - index) // s\n        index = i + 1\n    return h\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    (list1, list2) = ([], [])\n    if x:\n        list1 = list(map(int, input().split()))\n    list1.append(n + 1)\n    if y:\n        list2 = list(map(int, input().split()))\n    list2.append(m + 1)\n    print(house(list1, s) * house(list2, s))", "def func(l, s):\n    house = 0\n    index = 1\n    for i in l:\n        house += (i - index) // s\n        index = i + 1\n    return house\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    xlist = []\n    ylist = []\n    if x:\n        xlist = list(map(int, input().split()))\n    if y:\n        ylist = list(map(int, input().split()))\n    xlist += [n + 1]\n    ylist += [m + 1]\n    print(func(xlist, s) * func(ylist, s))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "t = int(input())\nfor i in range(t):\n    lx = [0]\n    ly = [0]\n    c = 0\n    c1 = 0\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        lx += list(map(int, input().split()))\n    lx.append(n + 1)\n    if y != 0:\n        ly += list(map(int, input().split()))\n    ly.append(m + 1)\n    for i in range(1, len(lx)):\n        if lx[i] - lx[i - 1] - 1 > 0:\n            c += (lx[i] - lx[i - 1] - 1) // s\n    for i in range(1, len(ly)):\n        if ly[i] - ly[i - 1] - 1 > 0:\n            c1 += (ly[i] - ly[i - 1] - 1) // s\n    print(c * c1)\n    lx = []\n    ly = []", "t = int(input())\nfor i in range(t):\n    h = [0]\n    v = [0]\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        h += list(map(int, input().split()))\n    h.append(n + 1)\n    if y != 0:\n        v += list(map(int, input().split()))\n    v.append(m + 1)\n    p = []\n    q = []\n    count = 0\n    count1 = 0\n    for i in range(1, len(h)):\n        if h[i] - h[i - 1] - 1 > 0:\n            count += (h[i] - h[i - 1] - 1) // s\n    for i in range(1, len(v)):\n        if v[i] - v[i - 1] - 1 > 0:\n            count1 += (v[i] - v[i - 1] - 1) // s\n    print(count * count1)\n    h = []\n    v = []", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "def func(l, s):\n    house = 0\n    index = 1\n    for i in l:\n        house += (i - index) // s\n        index = i + 1\n    return house\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    xlist = []\n    ylist = []\n    if x:\n        xlist = list(map(int, input().split()))\n    if y:\n        ylist = list(map(int, input().split()))\n    xlist += [n + 1]\n    ylist += [m + 1]\n    print(func(xlist, s) * func(ylist, s))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(z) for z in input().split()]\n    (x, y, s) = [int(z) for z in input().split()]\n    ax = [0]\n    if x != 0:\n        ax += [int(z) for z in input().split()]\n    ax.append(n + 1)\n    ay = [0]\n    if y != 0:\n        ay += [int(z) for z in input().split()]\n    ay.append(m + 1)\n    sx = 0\n    sy = 0\n    for i in range(x + 1):\n        sx += (ax[i + 1] - ax[i] - 1) // s\n    for i in range(y + 1):\n        sy += (ay[i + 1] - ay[i] - 1) // s\n    print(sx * sy)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = list(map(int, input().split()))\n    (x, y, s) = list(map(int, input().split()))\n    (X, Y) = ([0], [0])\n    if x != 0:\n        X.extend(map(int, input().split()))\n    if y != 0:\n        Y.extend(map(int, input().split()))\n    X.append(n + 1)\n    Y.append(m + 1)\n    x_sum = 0\n    y_sum = 0\n    for i in range(len(X) - 1):\n        x_sum += (X[i + 1] - X[i] - 1) // s\n    for j in range(len(Y) - 1):\n        y_sum += (Y[j + 1] - Y[j] - 1) // s\n    print(x_sum * y_sum)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (p, q, r) = map(int, input().split())\n    if p != 0:\n        h = list(map(int, input().split()))\n    else:\n        h = []\n    if q != 0:\n        v = list(map(int, input().split()))\n    else:\n        v = []\n    h.append(a + 1)\n    v.append(b + 1)\n    a1 = 0\n    a2 = 0\n    b1 = 1\n    c1 = 1\n    for i in range(p + 1):\n        a1 = a1 + (h[i] - b1) // r\n        b1 = h[i] + 1\n    for j in range(q + 1):\n        a2 = a2 + (v[j] - c1) // r\n        c1 = v[j] + 1\n    print(a1 * a2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (p, q, r) = map(int, input().split())\n    if p != 0:\n        h = list(map(int, input().split()))\n    else:\n        h = []\n    if q != 0:\n        v = list(map(int, input().split()))\n    else:\n        v = []\n    h.append(a + 1)\n    v.append(b + 1)\n    a1 = 0\n    a2 = 0\n    b1 = 1\n    c1 = 1\n    for i in range(p + 1):\n        a1 = a1 + (h[i] - b1) // r\n        b1 = h[i] + 1\n    for j in range(q + 1):\n        a2 = a2 + (v[j] - c1) // r\n        c1 = v[j] + 1\n    print(a1 * a2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (p, q, r) = map(int, input().split())\n    if p != 0:\n        h = list(map(int, input().split()))\n    else:\n        h = []\n    if q != 0:\n        v = list(map(int, input().split()))\n    else:\n        v = []\n    h.append(a + 1)\n    v.append(b + 1)\n    a1 = 0\n    a2 = 0\n    b1 = 1\n    c1 = 1\n    for i in range(p + 1):\n        a1 = a1 + (h[i] - b1) // r\n        b1 = h[i] + 1\n    for j in range(q + 1):\n        a2 = a2 + (v[j] - c1) // r\n        c1 = v[j] + 1\n    print(a1 * a2)", "houseList = []\ntestCases = int(input())\n\ndef compute(river_list, house_size, size):\n    space_count = 0\n    prev = 0\n    for i in river_list:\n        space_count += (i - prev - 1) // house_size\n        prev = i\n    space_count += (size - prev) // house_size\n    return space_count\nfor tests in range(0, testCases):\n    houses = 0\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    x1 = [int(x) for x in input().split()] if x > 0 else []\n    y1 = [int(x) for x in input().split()] if y > 0 else []\n    houseList.append(compute(x1, s, n) * compute(y1, s, m))\nfor item in houseList:\n    print(item)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    xi = []\n    yj = []\n    if x > 0:\n        xi = [int(j) for j in input().split()]\n    if y > 0:\n        yj = [int(j) for j in input().split()]\n    xi.append(n + 1)\n    yj.append(m + 1)\n    d1 = 0\n    d2 = 0\n    countx = 0\n    county = 0\n    for k in xi:\n        countx = countx + (k - d1 - 1) // s\n        d1 = k\n    for k in yj:\n        county = county + (k - d2 - 1) // s\n        d2 = k\n    print(countx * county)", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split(' '))\n    (X, Y, S) = map(int, input().split(' '))\n    hor = list(map(int, input().split(' '))) if X > 0 else []\n    ver = list(map(int, input().split(' '))) if Y > 0 else []\n    prev_hor = 0\n    nbh = 0\n    for h in hor:\n        diff = h - prev_hor - 1\n        nbh += diff // S\n        prev_hor = h\n    diff = N - prev_hor\n    nbh += diff // S\n    nbv = 0\n    prev_ver = 0\n    for v in ver:\n        diff = v - prev_ver - 1\n        nbv += diff // S\n        prev_ver = v\n    diff = M - prev_ver\n    nbv += diff // S\n    print(nbv * nbh)", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split(' '))\n    (X, Y, S) = map(int, input().split(' '))\n    hor = list(map(int, input().split(' '))) if X > 0 else []\n    ver = list(map(int, input().split(' '))) if Y > 0 else []\n    prev_hor = 0\n    nbh = 0\n    for h in hor:\n        diff = h - prev_hor - 1\n        nbh += diff // S\n        prev_hor = h\n    diff = N - prev_hor\n    nbh += diff // S\n    nbv = 0\n    prev_ver = 0\n    for v in ver:\n        diff = v - prev_ver - 1\n        nbv += diff // S\n        prev_ver = v\n    diff = M - prev_ver\n    nbv += diff // S\n    print(nbv * nbh)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    XL = list(map(int, input().split())) if X > 0 else []\n    YL = list(map(int, input().split())) if Y > 0 else []\n    (availX, availY) = (0, 0)\n    curr = 0\n    for i in XL:\n        availX += (i - curr - 1) // S\n        curr = i\n    availX += (N - curr) // S\n    curr = 0\n    for i in YL:\n        availY += (i - curr - 1) // S\n        curr = i\n    availY += (M - curr) // S\n    print(availX * availY)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    x = [0]\n    y = [0]\n    if X > 0:\n        x = x + list(map(int, input().split()))\n    if Y > 0:\n        y = y + list(map(int, input().split()))\n    x.append(n + 1)\n    y.append(m + 1)\n    (l1, l2) = ([], [])\n    for j in range(1, X + 2):\n        tempx = x[j] - x[j - 1] - 1\n        l1.append(tempx // s)\n    for j in range(1, Y + 2):\n        tempy = y[j] - y[j - 1] - 1\n        l2.append(tempy // s)\n    print(sum(l1) * sum(l2))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    riverx = [0]\n    rivery = [0]\n    if x > 0:\n        riverx += list(map(int, input().split()))\n    if y > 0:\n        rivery += list(map(int, input().split()))\n    riverx += [n + 1]\n    rivery += [m + 1]\n    landx = []\n    landy = []\n    for i in range(1, x + 2):\n        val = riverx[i] - riverx[i - 1] - 1\n        if val >= s:\n            landx.append(val // s)\n    for i in range(1, y + 2):\n        val = rivery[i] - rivery[i - 1] - 1\n        if val >= s:\n            landy.append(val // s)\n    print(sum(landx) * sum(landy))", "T = int(input())\nfor k in range(T):\n    (N, M) = map(int, input().split())\n    (X, Y, s) = map(int, input().split())\n    if X > 0:\n        X_rivers = list(map(int, input().split()))\n    if Y > 0:\n        Y_rivers = list(map(int, input().split()))\n    X_prev = 0\n    B_sum = 0\n    for i in range(X):\n        B_sum += (X_rivers[i] - X_prev - 1) // s\n        X_prev = X_rivers[i]\n    B_sum += (N - X_prev) // s\n    Y_prev = 0\n    A_sum = 0\n    for j in range(Y):\n        A_sum += (Y_rivers[j] - Y_prev - 1) // s\n        Y_prev = Y_rivers[j]\n    A_sum += (M - Y_prev) // s\n    print(A_sum * B_sum)", "def pieces(Max, b, d):\n    lista = [0] + b + [Max]\n    res = 0\n    for i in range(1, len(b) + 2):\n        res += (lista[i] - lista[i - 1] - 1) // d\n    return res\nfor _ in range(int(input())):\n    (row, col) = map(int, input().split())\n    (hor, ver, dim) = map(int, input().split())\n    if hor != 0:\n        hor_pieces = pieces(row + 1, list(map(int, input().split())), dim)\n    else:\n        hor_pieces = row // dim\n    if ver != 0:\n        ver_pieces = pieces(col + 1, list(map(int, input().split())), dim)\n    else:\n        ver_pieces = col // dim\n    print(hor_pieces * ver_pieces)", "t = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if not x == 0:\n        xl = list(map(int, input().split()))\n    else:\n        xl = []\n    if not y == 0:\n        yl = list(map(int, input().split()))\n    else:\n        yl = []\n    houses = 0\n    X_prev = 0\n    w_sum = 0\n    for i in range(x):\n        w_sum += (xl[i] - X_prev - 1) // s\n        X_prev = xl[i]\n    w_sum += (n - X_prev) // s\n    Y_prev = 0\n    h_sum = 0\n    for j in range(y):\n        h_sum += (yl[j] - Y_prev - 1) // s\n        Y_prev = yl[j]\n    h_sum += (m - Y_prev) // s\n    houses = w_sum * h_sum\n    print(houses)", "import numpy as np\n\ndef create(p, q, t, r):\n    q = q.split()\n    for k in range(len(q) + 1):\n        if k == 0:\n            t += [int(q[k]) - 1]\n        elif k == len(q):\n            t += [p - int(q[k - 1])]\n        else:\n            t += [int(q[k]) - int(q[k - 1]) - 1]\n    t = np.floor_divide(t, r)\n    return t\ni = int(input(''))\nfor i in range(i):\n    (n, m) = map(int, input('').split())\n    (x, y, s) = map(int, input('').split())\n    if x != 0:\n        xi = input('')\n        a = create(n, xi, [], s)\n    else:\n        a = [n // s]\n    if y != 0:\n        yi = input('')\n        b = create(m, yi, [], s)\n    else:\n        b = [m // s]\n    a = np.array(a)\n    b = sum(b)\n    a = a * b\n    print(sum(a))", "MOD = 1000000007\nfrom collections import defaultdict as dd, Counter, deque\n\ndef si():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef mi():\n    return map(int, input().split())\n\ndef out(v):\n    print(v)\n\ndef spout():\n    print(v, end=' ')\n\ndef d2b(n):\n    return bin(n).replace('0b', '')\n\ndef twod(n, m, num):\n    return [[num for x in range(m)] for y in range(n)]\n\ndef vow():\n    return ['a', 'e', 'i', 'o', 'u']\n\ndef let():\n    return [chr(i) for i in range(97, 123)]\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef ispow2(x):\n    return x and (not x & x - 1)\n\ndef prime_factors(n):\n    i = 2\n    factors = {}\n    max_rep = 0\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors[i] = factors.get(i, 0) + 1\n            if max_rep < factors[i]:\n                num = i\n                max_rep = factors[i]\n    if n > 1:\n        factors[n] = factors.get(n, 0) + 1\n        if max_rep < factors[n]:\n            num = n\n            max_rep = factors[n]\n    return (factors, num, max_rep)\nt = ii()\nwhile t:\n    t -= 1\n    (n, m) = mi()\n    (x1, y1, s) = mi()\n    h = v = 0\n    if x1 > 0:\n        x = li()\n        h += (x[0] - 1) // s\n        for i in range(1, len(x)):\n            h += (x[i] - x[i - 1] - 1) // s\n        h += (n - x[-1]) // s\n    else:\n        h += n // s\n    if y1 > 0:\n        y = li()\n        v += (y[0] - 1) // s\n        for i in range(1, len(y)):\n            v += (y[i] - y[i - 1] - 1) // s\n        v += (m - y[-1]) // s\n    else:\n        v += m // s\n    print(h * v)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    riverx = [0]\n    rivery = [0]\n    if x > 0:\n        riverx += list(map(int, input().split()))\n    if y > 0:\n        rivery += list(map(int, input().split()))\n    riverx += [n + 1]\n    rivery += [m + 1]\n    landx = []\n    landy = []\n    for i in range(1, x + 2):\n        val = riverx[i] - riverx[i - 1] - 1\n        if val >= s:\n            landx.append(val // s)\n    for i in range(1, y + 2):\n        val = rivery[i] - rivery[i - 1] - 1\n        if val >= s:\n            landy.append(val // s)\n    print(sum(landx) * sum(landy))", "def land_count(n, m, s, x, y, xI, yI):\n    xI.append(n + 1)\n    yI.append(m + 1)\n    land_X = []\n    land_Y = []\n    for i in range(1, x + 2):\n        val = xI[i] - xI[i - 1] - 1\n        if val >= s:\n            land_X.append(val // s)\n    for i in range(1, y + 2):\n        val = yI[i] - yI[i - 1] - 1\n        if val >= s:\n            land_Y.append(val // s)\n    return sum(land_X) * sum(land_Y)\noutput = []\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    xi = [0]\n    yi = [0]\n    if X != 0:\n        r = input()\n        for i in r.split():\n            xi.append(int(i))\n    if Y != 0:\n        g = input()\n        for i in g.split():\n            yi.append(int(i))\n    output.append(land_count(N, M, S, X, Y, xi, yi))\nfor i in output:\n    print(i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    riverx = [0]\n    rivery = [0]\n    if x > 0:\n        riverx += list(map(int, input().split()))\n    if y > 0:\n        rivery += list(map(int, input().split()))\n    riverx += [n + 1]\n    rivery += [m + 1]\n    landy = []\n    landx = []\n    for i in range(1, x + 2):\n        val = riverx[i] - riverx[i - 1] - 1\n        if val >= s:\n            landx.append(val // s)\n    for i in range(1, y + 2):\n        val = rivery[i] - rivery[i - 1] - 1\n        if val >= s:\n            landy.append(val // s)\n    print(sum(landx) * sum(landy))", "test_cases = int(input())\nfor test_case in range(test_cases):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    if X != 0:\n        Xi = list(map(int, input().split()))\n    else:\n        Xi = []\n    if Y != 0:\n        Yi = list(map(int, input().split()))\n    else:\n        Yi = []\n    Xi = [0] + Xi + [N + 1]\n    Yi = [0] + Yi + [M + 1]\n    n_sum = 0\n    m_sum = 0\n    for i in range(1, len(Xi)):\n        n_sum = n_sum + (Xi[i] - Xi[i - 1] - 1) // S\n    for i in range(1, len(Yi)):\n        m_sum = m_sum + (Yi[i] - Yi[i - 1] - 1) // S\n    print(n_sum * m_sum)", "test_cases = int(input())\nfor test_case in range(test_cases):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    if X != 0:\n        Xi = list(map(int, input().split()))\n    else:\n        Xi = []\n    if Y != 0:\n        Yi = list(map(int, input().split()))\n    else:\n        Yi = []\n    Xi = [0] + Xi + [N + 1]\n    Yi = [0] + Yi + [M + 1]\n    n_sum = 0\n    m_sum = 0\n    for i in range(1, len(Xi)):\n        n_sum = n_sum + (Xi[i] - Xi[i - 1] - 1) // S\n    for i in range(1, len(Yi)):\n        m_sum = m_sum + (Yi[i] - Yi[i - 1] - 1) // S\n    print(n_sum * m_sum)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, k) = map(int, input().split())\n    if X != 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    if Y != 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n    x.sort()\n    y.sort()\n    if X == n or Y == m:\n        print(0)\n        continue\n    (x1, y1) = ([], [])\n    if len(x) > 0 and x[0] != 1:\n        x1.append(x[0] - 1)\n    if len(x) > 0 and x[-1] != n:\n        x1.append(n - x[-1])\n    for j in range(X - 1):\n        val = x[j + 1] - x[j] - 1\n        if val > 0:\n            x1.append(val)\n    if len(y) > 0 and y[0] != 1:\n        y1.append(y[0] - 1)\n    if len(y) > 0 and y[-1] != m:\n        y1.append(m - y[-1])\n    for j in range(Y - 1):\n        val = y[j + 1] - y[j] - 1\n        if val > 0:\n            y1.append(val)\n    c = 0\n    if len(x) == 0:\n        x1.append(n)\n    if len(y) == 0:\n        y1.append(m)\n    ans1 = 0\n    ans2 = 0\n    for u in range(len(x1)):\n        ans1 += x1[u] // k\n    for v in range(len(y1)):\n        ans2 += y1[v] // k\n    print(ans1 * ans2)", "test_cases = int(input())\nfor test_case in range(test_cases):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    if X != 0:\n        Xi = list(map(int, input().split()))\n    else:\n        Xi = []\n    if Y != 0:\n        Yi = list(map(int, input().split()))\n    else:\n        Yi = []\n    Xi = [0] + Xi + [N + 1]\n    Yi = [0] + Yi + [M + 1]\n    n_sum = 0\n    m_sum = 0\n    for i in range(1, len(Xi)):\n        n_sum = n_sum + (Xi[i] - Xi[i - 1] - 1) // S\n    for i in range(1, len(Yi)):\n        m_sum = m_sum + (Yi[i] - Yi[i - 1] - 1) // S\n    print(n_sum * m_sum)", "tests = int(input())\nfor _ in range(tests):\n    (n, m) = [int(j) for j in input().split()]\n    (x, y, s) = [int(j) for j in input().split()]\n    x_rivers = []\n    y_rivers = []\n    if x != 0:\n        x_rivers = [int(j) for j in input().split()]\n    if y != 0:\n        y_rivers = [int(j) for j in input().split()]\n    x_rivers.append(n + 1)\n    x_rivers.insert(0, 0)\n    y_rivers.append(m + 1)\n    y_rivers.insert(0, 0)\n    x_lands = [x_rivers[i + 1] - x_rivers[i] - 1 for i in range(x + 1)]\n    y_lands = [y_rivers[i + 1] - y_rivers[i] - 1 for i in range(y + 1)]\n    x_count = sum([land // s for land in x_lands])\n    y_count = sum([land // s for land in y_lands])\n    print(x_count * y_count)", "t = int(input())\nfor T in range(t):\n    (n, m) = [int(_) for _ in input().split()]\n    (x, y, s) = [int(_) for _ in input().split()]\n    (lx, ly) = ([], [])\n    if x > 0:\n        lx = [int(_) for _ in input().split()]\n    if y > 0:\n        ly = [int(_) for _ in input().split()]\n    (dx, dy) = ([], [])\n    if m not in ly:\n        ly.append(m + 1)\n    if n not in lx:\n        lx.append(n + 1)\n    val = lx[0] - 1\n    dx.append(val)\n    val = ly[0] - 1\n    dy.append(val)\n    for i in range(1, len(lx)):\n        val = lx[i] - lx[i - 1] - 1\n        dx.append(val)\n    for i in range(1, len(ly)):\n        val = ly[i] - ly[i - 1] - 1\n        dy.append(val)\n    total_x = []\n    total_y = []\n    for i in dx:\n        total_x.append(i // s)\n    for i in dy:\n        total_y.append(i // s)\n    sum_x = sum(total_x)\n    sum_y = sum(total_y)\n    print(sum_x * sum_y)", "tests = int(input())\nfor _ in range(tests):\n    (n, m) = [int(j) for j in input().split()]\n    (x, y, s) = [int(j) for j in input().split()]\n    x_rivers = []\n    y_rivers = []\n    if x != 0:\n        x_rivers = [int(j) for j in input().split()]\n    if y != 0:\n        y_rivers = [int(j) for j in input().split()]\n    x_rivers.append(n + 1)\n    x_rivers.insert(0, 0)\n    y_rivers.append(m + 1)\n    y_rivers.insert(0, 0)\n    x_lands = [x_rivers[i + 1] - x_rivers[i] - 1 for i in range(x + 1)]\n    y_lands = [y_rivers[i + 1] - y_rivers[i] - 1 for i in range(y + 1)]\n    x_count = sum([land // s for land in x_lands])\n    y_count = sum([land // s for land in y_lands])\n    print(x_count * y_count)", "def main_():\n    for _ in range(int(input())):\n        (Rows, Cols) = map(int, input().split())\n        (no_rivers_rows, no_rivers_cols, house_side) = [int(x) for x in input().split()]\n        if no_rivers_rows:\n            prev = row_gaps_sum = 0\n            for x in input().split() + [Rows + 1]:\n                x = int(x)\n                row_gaps_sum += (x - prev - 1) // house_side\n                prev = x\n        else:\n            row_gaps_sum = Rows // house_side\n        if no_rivers_cols:\n            prev = col_gaps_sum = 0\n            for x in input().split() + [Cols + 1]:\n                x = int(x)\n                col_gaps_sum += (x - prev - 1) // house_side\n                prev = x\n        else:\n            col_gaps_sum = Cols // house_side\n        print(row_gaps_sum * col_gaps_sum)\n\ndef main():\n    for _ in range(int(input())):\n        (Rows, Cols) = map(int, input().split())\n        (rivers_in_rows, rivers_in_cols, house_side) = map(int, input().split())\n        if rivers_in_rows:\n            rivers_rows = [0] + [int(x) for x in input().split()] + [Rows + 1]\n            row_gaps = [(rivers_rows[i] - rivers_rows[i - 1] - 1) // house_side for i in range(1, len(rivers_rows)) if rivers_rows[i] - rivers_rows[i - 1] > house_side]\n        else:\n            row_gaps = [Rows // house_side]\n        if rivers_in_cols:\n            rivers_cols = [0] + [int(x) for x in input().split()] + [Cols + 1]\n            col_gaps = [(rivers_cols[i] - rivers_cols[i - 1] - 1) // house_side for i in range(1, len(rivers_cols)) if rivers_cols[i] - rivers_cols[i - 1] > house_side]\n        else:\n            col_gaps = [Cols // house_side]\n        print(sum(row_gaps) * sum(col_gaps))\nmain()", "def main_():\n    for _ in range(int(input())):\n        (Rows, Cols) = map(int, input().split())\n        (no_rivers_rows, no_rivers_cols, house_side) = [int(x) for x in input().split()]\n        if no_rivers_rows:\n            prev = row_gaps_sum = 0\n            for x in input().split() + [Rows + 1]:\n                x = int(x)\n                row_gaps_sum += (x - prev - 1) // house_side\n                prev = x\n        else:\n            row_gaps_sum = Rows // house_side\n        if no_rivers_cols:\n            prev = col_gaps_sum = 0\n            for x in input().split() + [Cols + 1]:\n                x = int(x)\n                col_gaps_sum += (x - prev - 1) // house_side\n                prev = x\n        else:\n            col_gaps_sum = Cols // house_side\n        print(row_gaps_sum * col_gaps_sum)\n\ndef main():\n    for _ in range(int(input())):\n        (Rows, Cols) = map(int, input().split())\n        (rivers_in_rows, rivers_in_cols, house_side) = map(int, input().split())\n        if rivers_in_rows:\n            rivers_rows = [0] + [int(x) for x in input().split()] + [Rows + 1]\n            row_gaps = [(rivers_rows[i] - rivers_rows[i - 1] - 1) // house_side for i in range(1, len(rivers_rows)) if rivers_rows[i] - rivers_rows[i - 1] > house_side]\n        else:\n            row_gaps = [Rows // house_side]\n        if rivers_in_cols:\n            rivers_cols = [0] + [int(x) for x in input().split()] + [Cols + 1]\n            col_gaps = [(rivers_cols[i] - rivers_cols[i - 1] - 1) // house_side for i in range(1, len(rivers_cols)) if rivers_cols[i] - rivers_cols[i - 1] > house_side]\n        else:\n            col_gaps = [Cols // house_side]\n        print(sum(row_gaps) * sum(col_gaps))\nmain_()", "t = int(input())\nfor _ in range(t):\n    (m, n) = input().split()\n    n = int(n)\n    m = int(m)\n    (x, y, s) = input().split()\n    x = int(x)\n    y = int(y)\n    s = int(s)\n    if x != 0:\n        X = list(map(int, input().strip().split()))[:x]\n    if y != 0:\n        Y = list(map(int, input().strip().split()))[:y]\n    x1 = 0\n    x2 = 0\n    for i in range(x):\n        x2 += (X[i] - x1 - 1) // s\n        x1 = X[i]\n    x2 += (m - x1) // s\n    y1 = 0\n    y2 = 0\n    for i in range(y):\n        y2 += (Y[i] - y1 - 1) // s\n        y1 = Y[i]\n    y2 += (n - y1) // s\n    print(x2 * y2)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        xl = list(map(int, input().split()))\n    if y:\n        yl = list(map(int, input().split()))\n    x1 = 0\n    x2 = 0\n    for i in range(x):\n        x2 += (xl[i] - x1 - 1) // s\n        x1 = xl[i]\n    x2 += (m - x1) // s\n    y1 = 0\n    y2 = 0\n    for i in range(y):\n        y2 += (yl[i] - y1 - 1) // s\n        y1 = yl[i]\n    y2 += (n - y1) // s\n    print(x2 * y2)", "t = int(input())\nfor _ in range(t):\n    (m, n) = input().split()\n    n = int(n)\n    m = int(m)\n    (x, y, s) = input().split()\n    x = int(x)\n    y = int(y)\n    s = int(s)\n    if x != 0:\n        X = list(map(int, input().strip().split()))[:x]\n    if y != 0:\n        Y = list(map(int, input().strip().split()))[:y]\n    x1 = 0\n    x2 = 0\n    for i in range(x):\n        x2 += (X[i] - x1 - 1) // s\n        x1 = X[i]\n    x2 += (m - x1) // s\n    y1 = 0\n    y2 = 0\n    for i in range(y):\n        y2 += (Y[i] - y1 - 1) // s\n        y1 = Y[i]\n    y2 += (n - y1) // s\n    print(x2 * y2)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        xl = list(map(int, input().split()))\n    if y:\n        yl = list(map(int, input().split()))\n    x1 = 0\n    x2 = 0\n    for i in range(x):\n        x2 += (xl[i] - x1 - 1) // s\n        x1 = xl[i]\n    x2 += (m - x1) // s\n    y1 = 0\n    y2 = 0\n    for i in range(y):\n        y2 += (yl[i] - y1 - 1) // s\n        y1 = yl[i]\n    y2 += (n - y1) // s\n    print(x2 * y2)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        xl = list(map(int, input().split()))\n    if y:\n        yl = list(map(int, input().split()))\n    x1 = 0\n    x2 = 0\n    for i in range(x):\n        x2 += (xl[i] - x1 - 1) // s\n        x1 = xl[i]\n    x2 += (m - x1) // s\n    y1 = 0\n    y2 = 0\n    for i in range(y):\n        y2 += (yl[i] - y1 - 1) // s\n        y1 = yl[i]\n    y2 += (n - y1) // s\n    print(x2 * y2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y:\n        ver = list(map(int, input().split()))\n    else:\n        ver = []\n    hor.append(n + 1)\n    ver.append(m + 1)\n    a = 0\n    b = 0\n    h = 1\n    v = 1\n    for i in range(x + 1):\n        a = a + (hor[i] - h) // s\n        h = hor[i] + 1\n    for j in range(y + 1):\n        b = b + (ver[j] - v) // s\n        v = ver[j] + 1\n    print(a * b)", "def func(numlist, size, n):\n    h_count = 0\n    prev = 0\n    for i in numlist:\n        h_count += (i - prev - 1) // size\n        prev = i\n    h_count += (n - prev) // size\n    return h_count\nfor _ in range(int(input())):\n    [n, m] = list(map(int, input().split(' ')))\n    [h, v, s] = list(map(int, input().split(' ')))\n    h_rivers = v_rivers = []\n    if h:\n        h_rivers = list(map(int, input().split(' ')))\n    if v:\n        v_rivers = list(map(int, input().split(' ')))\n    print(func(h_rivers, s, n) * func(v_rivers, s, m))", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        x_total = list(map(int, input().split()))\n    if y:\n        y_total = list(map(int, input().split()))\n    x_prev = 0\n    x_sum = 0\n    for i in range(x):\n        x_sum += (x_total[i] - x_prev - 1) // s\n        x_prev = x_total[i]\n    x_sum += (m - x_prev) // s\n    y_prev = 0\n    y_sum = 0\n    for i in range(y):\n        y_sum += (y_total[i] - y_prev - 1) // s\n        y_prev = y_total[i]\n    y_sum += (n - y_prev) // s\n    print(x_sum * y_sum)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y:\n        ver = list(map(int, input().split()))\n    else:\n        ver = []\n    hor.append(n + 1)\n    ver.append(m + 1)\n    a = 0\n    b = 0\n    h = 1\n    v = 1\n    for i in range(x + 1):\n        a = a + (hor[i] - h) // s\n        h = hor[i] + 1\n    for j in range(y + 1):\n        b = b + (ver[j] - v) // s\n        v = ver[j] + 1\n    print(a * b)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, k) = map(int, input().split())\n    if X != 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    if Y != 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n    x.sort()\n    y.sort()\n    if X == n or Y == m:\n        print(0)\n        continue\n    (x1, y1) = ([], [])\n    if len(x) > 0 and x[0] != 1:\n        x1.append(x[0] - 1)\n    if len(x) > 0 and x[-1] != n:\n        x1.append(n - x[-1])\n    for j in range(X - 1):\n        val = x[j + 1] - x[j] - 1\n        if val > 0:\n            x1.append(val)\n    if len(y) > 0 and y[0] != 1:\n        y1.append(y[0] - 1)\n    if len(y) > 0 and y[-1] != m:\n        y1.append(m - y[-1])\n    for j in range(Y - 1):\n        val = y[j + 1] - y[j] - 1\n        if val > 0:\n            y1.append(val)\n    c = 0\n    if len(x) == 0:\n        x1.append(n)\n    if len(y) == 0:\n        y1.append(m)\n    ans1 = 0\n    ans2 = 0\n    for u in range(len(x1)):\n        ans1 += x1[u] // k\n    for v in range(len(y1)):\n        ans2 += y1[v] // k\n    print(ans1 * ans2)", "for _ in range(int(input())):\n    (verticle, horizontal) = map(int, input().split())\n    (v_river, h_river, s) = map(int, input().split())\n    cx = cy = sx = sy = 0\n    if v_river:\n        X = [int(i) for i in input().split()] + [verticle + 1]\n    else:\n        X = [verticle + 1]\n    if h_river:\n        Y = [int(i) for i in input().split()] + [horizontal + 1]\n    else:\n        Y = [horizontal + 1]\n    for i in range(v_river + 1):\n        sx = sx + (X[i] - cx - 1) // s\n        cx = X[i]\n    for j in range(h_river + 1):\n        sy = sy + (Y[j] - cy - 1) // s\n        cy = Y[j]\n    print(sx * sy)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    (cx, cy, sx, sy) = (0, 0, 0, 0)\n    if x:\n        X = [int(i) for i in input().split()] + [m + 1]\n    else:\n        X = [m + 1]\n    if y:\n        Y = [int(i) for i in input().split()] + [n + 1]\n    else:\n        Y = [n + 1]\n    for i in range(x + 1):\n        sx += (X[i] - cx - 1) // s\n        cx = X[i]\n    for j in range(y + 1):\n        sy += (Y[j] - cy - 1) // s\n        cy = Y[j]\n    print(sx * sy)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (X, Y, k) = map(int, input().split())\n    if X != 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    if Y != 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n    x.sort()\n    y.sort()\n    if X == n or Y == m:\n        print(0)\n        continue\n    (x1, y1) = ([], [])\n    if len(x) > 0 and x[0] != 1:\n        x1.append(x[0] - 1)\n    if len(x) > 0 and x[-1] != n:\n        x1.append(n - x[-1])\n    for j in range(X - 1):\n        val = x[j + 1] - x[j] - 1\n        if val > 0:\n            x1.append(val)\n    if len(y) > 0 and y[0] != 1:\n        y1.append(y[0] - 1)\n    if len(y) > 0 and y[-1] != m:\n        y1.append(m - y[-1])\n    for j in range(Y - 1):\n        val = y[j + 1] - y[j] - 1\n        if val > 0:\n            y1.append(val)\n    c = 0\n    if len(x) == 0:\n        x1.append(n)\n    if len(y) == 0:\n        y1.append(m)\n    ans1 = 0\n    ans2 = 0\n    for u in range(len(x1)):\n        ans1 += x1[u] // k\n    for v in range(len(y1)):\n        ans2 += y1[v] // k\n    print(ans1 * ans2)", "def func(numlist, size, n):\n    h_count = 0\n    prev = 0\n    for i in numlist:\n        h_count += (i - prev - 1) // size\n        prev = i\n    h_count += (n - prev) // size\n    return h_count\nfor _ in range(int(input())):\n    [n, m] = list(map(int, input().split(' ')))\n    [h, v, s] = list(map(int, input().split(' ')))\n    h_rivers = v_rivers = []\n    if h:\n        h_rivers = list(map(int, input().split(' ')))\n    if v:\n        v_rivers = list(map(int, input().split(' ')))\n    print(func(h_rivers, s, n) * func(v_rivers, s, m))", "try:\n    for _ in range(int(input())):\n        (rows, colums) = map(int, input().split())\n        (x_n, y_n, s) = map(int, input().split())\n        if x_n > 0:\n            x = list(map(int, input().split()))\n        else:\n            x = []\n        x.append(rows + 1)\n        if y_n > 0:\n            y = list(map(int, input().split()))\n        else:\n            y = []\n            y.append(0)\n        y.append(colums + 1)\n        ans = 0\n        prev_x = 0\n        prev_y = 0\n        a = 0\n        b = 0\n        for i in x:\n            if i - prev_x - 1 >= s:\n                x_diff = i - prev_x - 1\n                a += int(x_diff / s)\n            prev_x = i\n        for j in y:\n            if j - prev_y - 1 >= s:\n                y_diff = j - prev_y - 1\n                b += int(y_diff / s)\n            prev_y = j\n        print(a * b)\nexcept:\n    pass", "for _ in range(int(input())):\n    (rows, colums) = map(int, input().split())\n    (x_n, y_n, s) = map(int, input().split())\n    if x_n > 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    x.append(rows + 1)\n    if y_n > 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n        y.append(0)\n    y.append(colums + 1)\n    ans = 0\n    prev_x = 0\n    prev_y = 0\n    a = 0\n    b = 0\n    for i in x:\n        if i - prev_x - 1 >= s:\n            x_diff = i - prev_x - 1\n            a += int(x_diff / s)\n        prev_x = i\n    for j in y:\n        if j - prev_y - 1 >= s:\n            y_diff = j - prev_y - 1\n            b += int(y_diff / s)\n        prev_y = j\n    print(a * b)", "for _ in range(int(input())):\n    (rows, colums) = map(int, input().split())\n    (x_n, y_n, s) = map(int, input().split())\n    if x_n > 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    x.append(rows + 1)\n    if y_n > 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n        y.append(0)\n    y.append(colums + 1)\n    ans = 0\n    prev_x = 0\n    prev_y = 0\n    a = 0\n    b = 0\n    for i in x:\n        if i - prev_x - 1 >= s:\n            x_diff = i - prev_x - 1\n            a += int(x_diff / s)\n        prev_x = i\n    for j in y:\n        if j - prev_y - 1 >= s:\n            y_diff = j - prev_y - 1\n            b += int(y_diff / s)\n        prev_y = j\n    print(a * b)", "for _ in range(int(input())):\n    (rows, colums) = map(int, input().split())\n    (x_n, y_n, s) = map(int, input().split())\n    if x_n > 0:\n        x = list(map(int, input().split()))\n    else:\n        x = []\n    x.append(rows + 1)\n    if y_n > 0:\n        y = list(map(int, input().split()))\n    else:\n        y = []\n        y.append(0)\n    y.append(colums + 1)\n    ans = 0\n    prev_x = 0\n    prev_y = 0\n    a = 0\n    b = 0\n    for i in x:\n        if i - prev_x - 1 >= s:\n            x_diff = i - prev_x - 1\n            a += int(x_diff / s)\n        prev_x = i\n    for j in y:\n        if j - prev_y - 1 >= s:\n            y_diff = j - prev_y - 1\n            b += int(y_diff / s)\n        prev_y = j\n    print(a * b)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x > 0:\n        xRiver = list(map(int, input().split()))\n    else:\n        xRiver = []\n    if y > 0:\n        yRiver = list(map(int, input().split()))\n    else:\n        yRiver = []\n    xRiver.append(n + 1)\n    yRiver.append(m + 1)\n    (r, c, ii, jj) = (0, 0, 1, 1)\n    for i in range(len(xRiver)):\n        r += (xRiver[i] - ii) // s\n        ii = xRiver[i] + 1\n    for j in range(len(yRiver)):\n        c += (yRiver[j] - jj) // s\n        jj = yRiver[j] + 1\n    print(r * c)", "def take():\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y != 0:\n        vert = list(map(int, input().split()))\n    else:\n        vert = []\n    hor.append(n + 1)\n    vert.append(m + 1)\n    return (hor, vert, s)\nfor _ in range(int(input())):\n    (hor, vert, s) = take()\n    (r, c, ii, jj) = (0, 0, 1, 1)\n    for i in range(len(hor)):\n        r += (hor[i] - ii) // s\n        ii = hor[i] + 1\n    for j in range(len(vert)):\n        c += (vert[j] - jj) // s\n        jj = vert[j] + 1\n    print(r * c)", "try:\n    for t in range(int(input())):\n        (n, m) = map(int, input().split())\n        (x, y, s) = map(int, input().split())\n        (xi, yi) = ([0], [0])\n        if x != 0:\n            temp_x = [int(x) for x in input().split()][:x]\n            xi.extend(temp_x)\n        if y != 0:\n            temp_y = [int(y) for y in input().split()][:y]\n            yi.extend(temp_y)\n        ans_x = 0\n        ans_y = 0\n        for i in range(len(xi) - 1):\n            a = xi[i] + 1\n            b = xi[i + 1]\n            c = abs(b - a)\n            temp_x = c // s\n            ans_x = ans_x + temp_x\n        for j in range(len(yi) - 1):\n            a = yi[j] + 1\n            b = yi[j + 1]\n            c = abs(b - a)\n            temp_y = c // s\n            ans_y = ans_y + temp_y\n        if xi[-1] != n:\n            c = n - xi[-1]\n            temp_x = c // s\n            ans_x = ans_x + temp_x\n        if yi[-1] != m:\n            c = m - yi[-1]\n            temp_y = c // s\n            ans_y = ans_y + temp_y\n        print(ans_x * ans_y)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        x1 = list(map(int, input().split()))\n        x1.append(0)\n        x1.append(n + 1)\n        x1.sort()\n    else:\n        x1 = [0, n + 1]\n    if y != 0:\n        y1 = list(map(int, input().split()))\n        y1.append(0)\n        y1.append(m + 1)\n        y1.sort()\n    else:\n        y1 = [0, m + 1]\n    w = 0\n    d = 0\n    t = 0\n    q = 0\n    for i in range(1, len(y1)):\n        w += (y1[i] - t - 1) // s\n        t = y1[i]\n    for i in range(1, len(x1)):\n        d += (x1[i] - q - 1) // s\n        q = x1[i]\n    print(w * d)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y != 0:\n        vert = list(map(int, input().split()))\n    else:\n        vert = []\n    hor.append(n + 1)\n    vert.append(m + 1)\n    c1 = 0\n    c2 = 0\n    i1 = 1\n    j1 = 1\n    for i in range(x + 1):\n        c1 += (hor[i] - i1) // s\n        i1 = hor[i] + 1\n    for j in range(y + 1):\n        c2 += (vert[j] - j1) // s\n        j1 = vert[j] + 1\n    print(c1 * c2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y != 0:\n        vert = list(map(int, input().split()))\n    else:\n        vert = []\n    hor.append(n + 1)\n    vert.append(m + 1)\n    c1 = 0\n    c2 = 0\n    i1 = 1\n    j1 = 1\n    for i in range(x + 1):\n        c1 += (hor[i] - i1) // s\n        i1 = hor[i] + 1\n    for j in range(y + 1):\n        c2 += (vert[j] - j1) // s\n        j1 = vert[j] + 1\n    print(c1 * c2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y != 0:\n        vert = list(map(int, input().split()))\n    else:\n        vert = []\n    hor.append(n + 1)\n    vert.append(m + 1)\n    c1 = 0\n    c2 = 0\n    i1 = 1\n    j1 = 1\n    for i in range(x + 1):\n        c1 += (hor[i] - i1) // s\n        i1 = hor[i] + 1\n    for j in range(y + 1):\n        c2 += (vert[j] - j1) // s\n        j1 = vert[j] + 1\n    print(c1 * c2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, s) = map(int, input().split())\n    if x != 0:\n        hor = list(map(int, input().split()))\n    else:\n        hor = []\n    if y != 0:\n        vert = list(map(int, input().split()))\n    else:\n        vert = []\n    hor.append(n + 1)\n    vert.append(m + 1)\n    c1 = 0\n    c2 = 0\n    i1 = 1\n    j1 = 1\n    for i in range(x + 1):\n        c1 += (hor[i] - i1) // s\n        i1 = hor[i] + 1\n    for j in range(y + 1):\n        c2 += (vert[j] - j1) // s\n        j1 = vert[j] + 1\n    print(c1 * c2)", "T = int(input())\nfrom math import floor\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    (X, Y, S) = map(int, input().split())\n    if X != 0:\n        Lx = list(map(int, input().split()))\n    else:\n        Lx = []\n    if Y != 0:\n        Ly = list(map(int, input().split()))\n    else:\n        Ly = []\n    Lx.insert(0, 0)\n    Lx.append(N + 1)\n    Ly.insert(0, 0)\n    Ly.append(M + 1)\n    (LX, LY) = ([], [])\n    for i in range(len(Lx) - 1):\n        LX.append(Lx[i + 1] - Lx[i] - 1)\n    for i in range(len(Ly) - 1):\n        LY.append(Ly[i + 1] - Ly[i] - 1)\n    (A, B) = (0, 0)\n    for i in LX:\n        A += floor(i / S)\n    for i in LY:\n        B += floor(i / S)\n    print(A * B)"]