["def readValues(f):\n    s = input()\n    return list(map(f, s.split()))\nT = int(input())\nfor k in range(T):\n    (n, k, m) = readValues(int)\n    a = readValues(int)\n    count = [0 for i in range(k + 1)]\n    count[0] = 1\n    for v in a:\n        vmod = v % m\n        for i in range(k - (k % m - vmod) % m, 0, -m):\n            count[i] = (count[i] + count[i - 1]) % 1000000007\n    print(count[k])", "def readValues(f):\n    s = input()\n    return list(map(f, s.split()))\nT = int(input())\nfor k in range(T):\n    (n, k, m) = readValues(int)\n    a = readValues(int)\n    count = [0 for i in range(k + 1)]\n    count[0] = 1\n    for v in a:\n        vmod = v % m\n        for i in range(k - (k % m - vmod) % m, 0, -m):\n            count[i] = (count[i] + count[i - 1]) % 1000000007\n    print(count[k])", "def readValues(f):\n    s = input()\n    return list(map(f, s.split()))\nT = int(input())\nfor k in range(T):\n    (n, k, m) = readValues(int)\n    a = readValues(int)\n    count = [0 for i in range(k + 1)]\n    count[0] = 1\n    for v in a:\n        vmod = v % m\n        for i in range(k - (k % m - vmod) % m, 0, -m):\n            count[i] = (count[i] + count[i - 1]) % 1000000007\n    print(count[k])", "def readValues(f):\n    s = input()\n    return list(map(f, s.split()))\nT = int(input())\nfor k in range(T):\n    (n, k, m) = readValues(int)\n    a = readValues(int)\n    count = [0 for i in range(k + 1)]\n    count[0] = 1\n    for v in a:\n        vmod = v % m\n        for i in range(k - (k % m - vmod) % m, 0, -m):\n            count[i] = (count[i] + count[i - 1]) % 1000000007\n    print(count[k])", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, k, m) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k + 1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n        mod_a = a[i] % m\n        start = curr_ending - (curr_ending % m - mod_a) % m\n        if mod_a == curr_ending % m and curr_ending < k:\n            curr_ending += 1\n        for i in range(start, 0, -m):\n            ans[i] += ans[i - 1]\n            if ans[i] > mod:\n                ans[i] = ans[i] - mod\n    print(ans[k])", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, k, m) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k + 1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n        mod_a = a[i] % m\n        start = curr_ending - (curr_ending % m - mod_a) % m\n        if mod_a == curr_ending % m and curr_ending < k:\n            curr_ending += 1\n        for i in range(start, 0, -m):\n            ans[i] += ans[i - 1]\n            if ans[i] > mod:\n                ans[i] = ans[i] - mod\n    print(ans[k])", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, k, m) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k + 1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n        mod_a = a[i] % m\n        start = curr_ending - (curr_ending % m - mod_a) % m\n        if mod_a == curr_ending % m and curr_ending < k:\n            curr_ending += 1\n        for i in range(start, 0, -m):\n            ans[i] += ans[i - 1]\n            if ans[i] > mod:\n                ans[i] = ans[i] - mod\n    print(ans[k])", "def modinv(v, m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n        (q, a) = divmod(pv, v)\n        (pc, c) = (c, pc - q * c)\n        (pv, v) = (v, a)\n    return pc % m\n\ndef binmod(n, r, m):\n    if 2 * r > n:\n        r = n - r\n    if r < 0:\n        return 0\n    if r == 0:\n        return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r + 1):\n        bm = bm * t % m\n        tp = tp * (n + 1 - t) % m\n    return tp * modinv(bm, m) % m\nMVAL = 1000000007\nfor ti in range(int(input())):\n    (n, k, m) = map(int, input().split())\n    ays = list(map(int, input().split()))\n    if m == 1:\n        print(binmod(n, k, MVAL))\n    else:\n        clen = [1] + [0] * k\n        hwm = 1\n        mhwm = 1\n        for ai in ays:\n            v = (ai - 1) % m + 1\n            for llen in range(v, hwm + 1, m):\n                clen[llen] = (clen[llen] + clen[llen - 1]) % MVAL\n            if hwm < k and mhwm == v:\n                hwm += 1\n                mhwm += 1\n                if mhwm > m:\n                    mhwm = 1\n        print(clen[k])", "def modinv(v, m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n        (q, a) = divmod(pv, v)\n        (pc, c) = (c, pc - q * c)\n        (pv, v) = (v, a)\n    return pc % m\n\ndef binmod(n, r, m):\n    if 2 * r > n:\n        r = n - r\n    if r < 0:\n        return 0\n    if r == 0:\n        return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r + 1):\n        bm = bm * t % m\n        tp = tp * (n + 1 - t) % m\n    return tp * modinv(bm, m) % m\nMVAL = 1000000007\nfor ti in range(int(input())):\n    (n, k, m) = map(int, input().split())\n    ays = list(map(int, input().split()))\n    if m == 1:\n        print(binmod(n, k, MVAL))\n    else:\n        clen = [1] + [0] * k\n        for ai in ays:\n            v = (ai - 1) % m + 1\n            for llen in range(v, k + 1, m):\n                clen[llen] = (clen[llen] + clen[llen - 1]) % MVAL\n        print(clen[k])", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, k, m) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k + 1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n        mod_a = a[i] % m\n        start = curr_ending - (curr_ending % m - mod_a) % m\n        if mod_a == curr_ending % m and curr_ending < k:\n            curr_ending += 1\n        for i in range(start, 0, -m):\n            ans[i] += ans[i - 1]\n            if ans[i] > mod:\n                ans[i] = ans[i] - mod\n    print(ans[k])", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k, m) = (int(s) for s in input().split())\n    l = [int(s) % m for s in input().split()]\n    ans = [0] * (k + 1)\n    i = 1\n    for j in range(n):\n        mov = 0\n        just = 0\n        if (i % m + 1) % m == l[j] and i < k:\n            if ans[i] != 0:\n                just = 1\n            mov = 1\n        w = i - (i % m - l[j]) % m\n        while w >= 1:\n            if w == 1:\n                ans[w] += 1\n            else:\n                ans[w] += ans[w - 1]\n            w -= m\n        if mov:\n            i += 1\n            if just:\n                ans[i] = ans[i - 1]\n    print(ans[k] % M)", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k, m) = (int(s) for s in input().split())\n    l = [int(s) % m for s in input().split()]\n    ans = [0] * (k + 1)\n    i = 1\n    for j in range(n):\n        mov = 0\n        just = 0\n        if (i % m + 1) % m == l[j] and i < k:\n            if ans[i] != 0:\n                just = 1\n            mov = 1\n        w = i - (i % m - l[j]) % m\n        while w >= 1:\n            if w == 1:\n                ans[w] += 1\n            else:\n                ans[w] += ans[w - 1]\n            w -= m\n        if mov:\n            i += 1\n            if just:\n                ans[i] = ans[i - 1]\n    print(ans[k] % M)", "t = int(input())\nMOD = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k, m) = list(map(int, input().split()))\n    b = [0 for i in range(k)]\n    a = list(map(int, input().split()))\n    if m == 1:\n        for i in range(n):\n            for j in range(k - 1, -1, -1):\n                if j == 0:\n                    b[j] = (b[j] + 1) % MOD\n                else:\n                    b[j] = (b[j - 1] + b[j]) % MOD\n    else:\n        for val in a:\n            mod = val % m\n            if mod == 0:\n                mod = m\n            for j in range(mod - 1, k, m):\n                if j == 0:\n                    b[j] = (b[j] + 1) % MOD\n                else:\n                    b[j] = (b[j - 1] + b[j]) % MOD\n    print(b[-1] % MOD)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k, m) = list(map(int, input().split()))\n    a = list(map(lambda x: (int(x) - 1) % m + 1, input().split()))\n    arr = [0] * k\n    arr.insert(0, 1)\n    for i in range(n):\n        end = a[i] + m * ((k - a[i]) // m)\n        for j in range(end, a[i] - 1, -m):\n            arr[j] = (arr[j] + arr[j - 1]) % mod\n    print(arr[-1])", "def modinv(v, m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n        (q, a) = divmod(pv, v)\n        (pc, c) = (c, pc - q * c)\n        (pv, v) = (v, a)\n    return pc % m\n\ndef binmod(n, r, m):\n    if 2 * r > n:\n        r = n - r\n    if r < 0:\n        return 0\n    if r == 0:\n        return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r + 1):\n        bm = bm * t % m\n        tp = tp * (n + 1 - t) % m\n    return tp * modinv(bm, m) % m\nMVAL = 1000000007\nfor ti in range(int(input())):\n    (n, k, m) = map(int, input().split())\n    ays = list(map(int, input().split()))\n    if m == 1:\n        print(binmod(n, k, MVAL))\n    else:\n        mls = []\n        for ai in ays:\n            v = (ai - 1) % m + 1\n            if v <= k:\n                mls.append(v)\n        n = len(mls)\n        clen = [1] + [0] * k\n        for li in mls:\n            for llen in range(li, k + 1, m):\n                clen[llen] = (clen[llen] + clen[llen - 1]) % MVAL\n        print(clen[k])", "def modinv(v, m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n        (q, a) = divmod(pv, v)\n        (pc, c) = (c, pc - q * c)\n        (pv, v) = (v, a)\n    return pc % m\n\ndef binmod(n, r, m):\n    if 2 * r > n:\n        r = n - r\n    if r < 0:\n        return 0\n    if r == 0:\n        return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r + 1):\n        bm = bm * t % m\n        tp = tp * (n + 1 - t) % m\n    return tp * modinv(bm, m) % m\nMVAL = 1000000007\nfor ti in range(int(input())):\n    (n, k, m) = map(int, input().split())\n    ays = list(map(int, input().split()))\n    if m == 1:\n        print(binmod(n, k, MVAL))\n    else:\n        mls = []\n        for ai in ays:\n            v = (ai - 1) % m + 1\n            if v <= k:\n                mls.append(v)\n        n = len(mls)\n        clen = [1] + [0] * k\n        for li in mls:\n            for llen in range(li, k + 1, m):\n                clen[llen] = (clen[llen] + clen[llen - 1]) % MVAL\n        print(clen[k])", "t = int(input())\nMOD = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k, m) = list(map(int, input().split()))\n    dp = [0 for i in range(k)]\n    arr = list(map(int, input().split()))\n    if m == 1:\n        for i in range(n):\n            for j in range(k - 1, -1, -1 * m):\n                if j == 0:\n                    dp[j] = (dp[j] + 1) % MOD\n                else:\n                    dp[j] = (dp[j - 1] + dp[j]) % MOD\n    else:\n        for val in arr:\n            mod = val % m\n            if mod == 0:\n                mod = m\n            for j in range(mod - 1, k, m):\n                if j == 0:\n                    dp[j] = (dp[j] + 1) % MOD\n                else:\n                    dp[j] = (dp[j - 1] + dp[j]) % MOD\n    print(dp[-1] % MOD)"]