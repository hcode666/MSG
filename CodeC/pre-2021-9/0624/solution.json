["t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    for j in range(1, n // 2 + 1):\n        for k in range(2 * j, n + 1, j):\n            a = n // k\n            b = n % k\n            if b >= j:\n                c += a + 1\n            else:\n                c += a\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    for j in range(1, n // 2 + 1):\n        for k in range(2 * j, n + 1, j):\n            a = n // k\n            b = n % k\n            if b >= j:\n                c += a + 1\n            else:\n                c += a\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    for j in range(1, n // 2 + 1):\n        for k in range(2 * j, n + 1, j):\n            a = n // k\n            b = n % k\n            if b >= j:\n                c += a + 1\n            else:\n                c += a\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    for j in range(1, n // 2 + 1):\n        for k in range(2 * j, n + 1, j):\n            a = n // k\n            b = n % k\n            if b >= j:\n                c += a + 1\n            else:\n                c += a\n    print(c)", "def soln(n: int) -> int:\n    count = 0\n    for c in range(1, n + 1):\n        for b in range(c, n + 1, c):\n            count += (n - c) // b\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    print(soln(n))", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(c, n + 1, c):\n            ans += (n - c) // b\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(c, n + 1, c):\n            ans += (n - c) // b\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(c, n + 1, c):\n            ans += (n - c) // b\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(c, n + 1, c):\n            ans += (n - c) // b\n    print(ans)", "for z in range(int(input())):\n    n = int(input())\n    c = 0\n    c += n - 1\n    i = 2\n    while n >= 2 * i:\n        c += n // i - 1\n        i += 1\n    for x in range(1, n):\n        i = 2\n        while n >= x * (i + 1):\n            c += (n // x - 1) // i\n            i += 1\n    print(c)", "for z in range(int(input())):\n    n = int(input())\n    c = 0\n    c += n - 1\n    i = 2\n    while n >= 2 * i:\n        c += n // i - 1\n        i += 1\n    for x in range(1, n):\n        i = 2\n        while n >= x * (i + 1):\n            c += (n // x - 1) // i\n            i += 1\n    print(c)", "for z in range(int(input())):\n    n = int(input())\n    c = 0\n    c += n - 1\n    i = 2\n    while n >= 2 * i:\n        c += n // i - 1\n        i += 1\n    for x in range(1, n):\n        i = 2\n        while n >= x * (i + 1):\n            c += (n // x - 1) // i\n            i += 1\n    print(c)", "import sys\nfor i in range(int(input())):\n    n = int(sys.stdin.readline())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            ans += int(1 + (n - c) / b)\n    print(ans)", "import sys\nfor i in range(int(input())):\n    n = int(sys.stdin.readline())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            ans += int(1 + (n - c) / b)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(c << 1, n + 1, c):\n            ans += int(1 + (n - c) / b)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            ans += int(1 + (n - c) / b)\n    print(ans)", "import sys\nfrom bisect import bisect_left as lb\nfrom collections import deque\nfrom queue import PriorityQueue as pq\nfrom math import *\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nap = lambda ab, bc, cd: ab[bc].append(cd)\nli = lambda : list(input_())\npr = lambda x: print(x)\nprinT = lambda x: print(x)\nf = lambda : sys.stdout.flush()\ninv = lambda x: pow(x, mod - 2, mod)\nmod = 10 ** 9 + 7\nfor _ in range(ii()):\n    n = ii()\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(2 * i, n + 1, i):\n            a = i\n            d = j\n            x = n\n            y = (x - a) // d + 1\n            ans += y\n    print(ans)", "import sys\nfrom bisect import bisect_left as lb\nfrom collections import deque\nfrom queue import PriorityQueue as pq\nfrom math import *\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nap = lambda ab, bc, cd: ab[bc].append(cd)\nli = lambda : list(input_())\npr = lambda x: print(x)\nprinT = lambda x: print(x)\nf = lambda : sys.stdout.flush()\ninv = lambda x: pow(x, mod - 2, mod)\nmod = 10 ** 9 + 7\nfor _ in range(ii()):\n    n = ii()\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(2 * i, n + 1, i):\n            a = i\n            d = j\n            x = n\n            y = (x - a) // d + 1\n            ans += y\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    sum = 0\n    for j in range(1, n):\n        m = int(n / j)\n        for k in range(1, m):\n            sum = sum + int((m - 1) / k)\n    print(sum)", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    sum = 0\n    for j in range(1, n):\n        m = int(n / j)\n        for k in range(1, m):\n            sum = sum + int((m - 1) / k)\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    for j in range(1, n // 2 + 1):\n        for k in range(2 * j, n + 1, j):\n            a = n // k\n            b = n % k\n            if b >= j:\n                c += a + 1\n            else:\n                c += a\n    print(c)", "testCase = int(input())\nwhile testCase:\n    n = int(input())\n    count = 0\n    for i in range(1, n // 2 + 1):\n        for j in range(2 * i, n + 1, i):\n            a = n // j\n            b = n % j\n            if b >= i:\n                count += a + 1\n            else:\n                count += a\n    print(count)\n    testCase = testCase - 1", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(2 * c, n + 1, c):\n            x = n // b\n            y = n % b\n            if y >= c:\n                count += x + 1\n            else:\n                count += x\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            k += (n - c) // b + 1\n    print(k)", "n = 100000\ncomputed_values = [0] * (n + 1)\nfor p in range(1, n // 2 + 1):\n    for b in range(p, n + 1, p):\n        if b % p == 0:\n            for a in range(p, n + 1, b):\n                if a % b == p:\n                    if a > p:\n                        computed_values[a] += 1\n                    else:\n                        computed_values[b] += 1\nt = int(input())\nfor t in range(t):\n    n = int(input())\n    print(sum(computed_values[:n + 1]))", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    result = 0\n    for i in range(1, num + 1):\n        for j in range(i, num + 1, i):\n            temp = (num - i) // j\n            result += temp\n    print(result)", "for i in range(int(input())):\n    number = int(input())\n    cont = 0\n    for c in range(1, number + 1):\n        for b in range(2 * c, number + 1, c):\n            increase = (number - c) // b + 1\n            cont += increase\n    print(cont)", "num = int(input())\nfor i in range(num):\n    a = int(input())\n    b = 0\n    for j in range(1, a + 1):\n        for k in range(2 * j, a + 1, j):\n            b = b + (a - j) // k + 1\n    print(b)", "for i in range(int(input())):\n    num = int(input())\n    cont = 0\n    for c in range(1, num + 1):\n        for b in range(2 * c, num + 1, c):\n            increase = (num - c) // b + 1\n            cont += increase\n    print(cont)", "for i in range(int(input())):\n    num = int(input())\n    cont = 0\n    for c in range(1, num + 1):\n        for b in range(2 * c, num + 1, c):\n            increase = (num - c) // b + 1\n            cont += increase\n    print(cont)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    for j in range(1, n + 1):\n        for k in range(2 * j, n + 1, j):\n            c += (n - j) // k + 1\n    print(c)", "for i in range(int(input())):\n    num = int(input())\n    cont = 0\n    for c in range(1, num + 1):\n        for b in range(2 * c, num + 1, c):\n            increase = (num - c) // b + 1\n            cont += increase\n    print(cont)", "for i in range(int(input())):\n    num = int(input())\n    cont = 0\n    for c in range(1, num + 1):\n        for b in range(2 * c, num + 1, c):\n            increase = (num - c) // b + 1\n            cont += increase\n    print(cont)", "for i in range(int(input())):\n    num = int(input())\n    cont = 0\n    for c in range(1, num + 1):\n        for b in range(2 * c, num + 1, c):\n            increase = (num - c) // b + 1\n            cont += increase\n    print(cont)", "for i in range(int(input())):\n    numbers = int(input())\n    count = 0\n    for c in range(1, numbers + 1):\n        for b in range(2 * c, numbers + 1, c):\n            increase = (numbers - c) // b + 1\n            count += increase\n    print(count)", "for i in range(int(input())):\n    numbers = int(input())\n    count = 0\n    for c in range(1, numbers + 1):\n        for b in range(c, numbers + 1, c):\n            count += (numbers - c) // b\n    print(count)", "testcases = int(input())\nfor i in range(testcases):\n    N = int(input())\n    count = int(0)\n    for C in range(1, N // 2 + 1):\n        for B in range(2 * C, N + 1, C):\n            count += 1 + (N - C) // B\n    print(count)", "testcases = int(input())\nfor testcase in range(testcases):\n    n = int(input())\n    count_ = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(2 * c, n + 1, c):\n            count_ += (n - c) // b + 1\n    print(count_)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1, i):\n            temp = (n - i) // j\n            ans += temp\n    print(ans)", "maxi = 10 ** 5 + 1\ndiv = [[] for i in range(maxi + 1)]\nfor i in range(1, maxi):\n    for j in range(2 * i, maxi, i):\n        div[j].append(i)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    for b in range(2, n + 1):\n        largest = n - n % b\n        num_div = len(div[b])\n        count += largest // b * num_div\n        for j in range(0, num_div):\n            if largest + div[b][j] <= n:\n                count += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    ans = 0\n    for j in range(1, n // 2 + 1):\n        c = j\n        for k in range(2, n // c + 1):\n            b = c * k\n            y = (n - c) // b\n            ans += y + 1\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s1 = 0\n    for x in range(1, n):\n        c = 2\n        a = 1\n        while 1 == 1:\n            a = x * c\n            if a > n:\n                break\n            s1 = s1 + (n - x) // a + 1\n            c += 1\n    print(s1)", "M = 100001\nl = [[] for i in range(M)]\n\ndef fact():\n    for i in range(1, M):\n        for j in range(2 * i, M, i):\n            l[j].append(i)\nfact()\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    s = 0\n    for i in range(2, n + 1):\n        x = n - n % i\n        s += x // i * len(l[i])\n        for j in range(len(l[i])):\n            if l[i][j] + x <= n:\n                s += 1\n    print(s)", "fact = []\nfor i in range(100001):\n    fact.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in fact[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "MAX_N = 100000\ntotient = [1] * (MAX_N + 1)\ndp = [0] * (MAX_N + 1)\nfor i in range(2, MAX_N + 1):\n    for j in range(i, MAX_N + 1, i):\n        totient[j] += 1\nt = int(input())\nfor i in range(2, MAX_N + 1):\n    for j in range(i, MAX_N + 1, i):\n        dp[j] += totient[i - 1]\nfor i in range(2, MAX_N + 1):\n    dp[i] += dp[i - 1]\nwhile t > 0:\n    n = int(input())\n    print(dp[n])\n    t = t - 1", "fact = [[1] for i in range(100001)]\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    print(sum([(n - j) // i + 1 for i in range(2, n + 1) for j in fact[i]]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "f = []\nfor i in range(100001):\n    f.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        f[j].append(i)\n    f[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in f[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "f = []\nfor i in range(100001):\n    f.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        f[j].append(i)\n    f[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in f[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "fact = []\nfor i in range(100001):\n    fact.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in fact[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "fact = []\nfor i in range(100001):\n    fact.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in fact[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "fact = []\nfor i in range(100001):\n    fact.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in fact[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "max_limit = 100000\nanswers = [0] * (max_limit + 1)\nfor c in range(1, max_limit // 2 + 1):\n    for b in range(c, max_limit + 1, c):\n        if b % c == 0:\n            for a in range(c, max_limit + 1, b):\n                if a % b == c:\n                    answers[a if a > b else b] += 1\nno_testcases = int(input())\ntestcases = []\nfor i in range(no_testcases):\n    val = int(input())\n    testcases.append(val)\nfor val in testcases:\n    print(sum(answers[0:val + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\nl = [0] * (n + 1)\nfor c in range(1, n + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        l[a] += 1\n                    else:\n                        l[b] += 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(sum(l[:n + 1]))", "n = 100000\nl = [0] * (n + 1)\nfor c in range(1, n + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        l[a] += 1\n                    else:\n                        l[b] += 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(sum(l[:n + 1]))", "fact = []\nfor i in range(100001):\n    fact.append([1])\nfor i in range(2, 100001):\n    for j in range(i, 100001, i):\n        fact[j].append(i)\n    fact[i].remove(i)\nfor _ in range(int(input())):\n    n = int(input())\n    total = 0\n    for i in range(2, n + 1):\n        for j in fact[i]:\n            x = (n - j) // i + 1\n            total += x\n    print(total)", "n = 100000\ncomputed_values = [0] * (n + 1)\nfor p in range(1, n // 2 + 1):\n    for b in range(p, n + 1, p):\n        if b % p == 0:\n            for a in range(p, n + 1, b):\n                if a % b == p:\n                    if a > p:\n                        computed_values[a] += 1\n                    else:\n                        computed_values[b] += 1\nt = int(input())\nfor t in range(t):\n    n = int(input())\n    print(sum(computed_values[:n + 1]))", "upper_bound = 10 ** 5\naux_array = [0] * (upper_bound + 1)\nfor c in range(1, upper_bound // 2 + 1):\n    for b in range(c, upper_bound + 1, c):\n        if b % c == 0:\n            for a in range(c, upper_bound + 1, b):\n                if a % b == c:\n                    if a > b:\n                        aux_array[a] += 1\n                    else:\n                        aux_array[b] += 1\nfor _ in range(int(input())):\n    n = int(input())\n    print(sum(aux_array[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "for t in range(int(input())):\n    N = int(input())\n    counter = 0\n    for c in range(1, N + 1):\n        for b in range(c, N + 1, c):\n            counter += (N - c) // b\n    print(counter)", "n = 100000\npre = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre[a] += 1\n                    else:\n                        pre[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre[:n + 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    for c in range(1, n // 2 + 1):\n        for b in range(2 * c, n + 1, c):\n            count += (n - c) // b + 1\n    print(count)", "n = 100000\ncomputed_values = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > c:\n                        computed_values[a] = computed_values[a] + 1\n                    else:\n                        computed_values[b] = computed_values[b] + 1\nt = int(input())\nfor t in range(t):\n    n = int(input())\n    print(sum(computed_values[:n + 1]))", "limit = 100000\nl = [0] * (limit + 1)\nfor i in range(1, limit // 2 + 1):\n    for j in range(i, limit + 1, i):\n        if j % i == 0:\n            for k in range(i, limit + 1, j):\n                if k % j == i:\n                    if k > j:\n                        l[k] += 1\n                    else:\n                        l[j] += 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(sum(l[:n + 1]))", "n = 100000\ncompute = [0] * (n + 2)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 2, c):\n        if b % c == 0:\n            for a in range(c, n + 2, b):\n                if a % b == c:\n                    if a > b:\n                        compute[a] += 1\n                    else:\n                        compute[b] += 1\ntestcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    print(sum(compute[:n + 1]))", "t = int(input())\nwhile t:\n    n = int(input())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            ans += int(1 + (n - c) / b)\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    k = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            k += (n - c) // b + 1\n    print(k)", "n = 100000\np = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        p[a] += 1\n                    else:\n                        p[b] += 1\nfor _ in range(int(input())):\n    n = int(input())\n    print(sum(p[:n + 1]))", "N = 100000\npre_comp_values = [0] * (N + 1)\nfor C in range(1, N // 2 + 1):\n    for B in range(C, N + 1, C):\n        if B % C == 0:\n            for A in range(C, N + 1, B):\n                if A % B == C:\n                    if A > B:\n                        pre_comp_values[A] += 1\n                    else:\n                        pre_comp_values[B] += 1\ntestcase = int(input())\nfor t in range(testcase):\n    N = int(input())\n    print(sum(pre_comp_values[:N + 1]))", "t = eval(input())\nfor i in range(0, t):\n    n = eval(input())\n    count = 0\n    m = int(n / 2)\n    for c in range(1, m + 1):\n        for b in range(c * 2, n + 1, c):\n            count += int((n - c) / b) + 1\n    print(count)", "n = 100000\npre_computed_values = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre_computed_values[a] += 1\n                    else:\n                        pre_computed_values[b] += 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(sum(pre_computed_values[:n + 1]))", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    for c in range(1, n + 1):\n        for b in range(2 * c, n + 1, c):\n            rem = n % b\n            if rem < c:\n                ans += n // b\n            else:\n                ans += n // b + 1\n    print(ans)", "n = 100000\npre_computed_values = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre_computed_values[a] += 1\n                    else:\n                        pre_computed_values[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre_computed_values[:n + 1]))", "n = 100000\npre_computed_values = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre_computed_values[a] += 1\n                    else:\n                        pre_computed_values[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre_computed_values[:n + 1]))", "n = 100000\npre_value = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre_value[a] += 1\n                    else:\n                        pre_value[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre_value[:n + 1]))", "n = 100000\npre_computed_values = [0] * (n + 1)\nfor c in range(1, n // 2 + 1):\n    for b in range(c, n + 1, c):\n        if b % c == 0:\n            for a in range(c, n + 1, b):\n                if a % b == c:\n                    if a > b:\n                        pre_computed_values[a] += 1\n                    else:\n                        pre_computed_values[b] += 1\ntestcases = int(input())\nfor t in range(testcases):\n    n = int(input())\n    print(sum(pre_computed_values[:n + 1]))", "n = 100000\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    for j in range(i, n + 1, i):\n        if j % i == 0:\n            for k in range(i, n + 1, j):\n                if k % j == i:\n                    if k > j:\n                        dp[k] += 1\n                    else:\n                        dp[j] += 1\nt = int(input())\nfor zz in range(t):\n    m = int(input())\n    print(sum(dp[:m + 1]))", "n = 100000\ndp = [0] * (n + 1)\nfor i in range(1, n // 2 + 1):\n    for j in range(i, n + 1, i):\n        if j % i == 0:\n            for k in range(i, n + 1, j):\n                if k % j == i:\n                    if k > j:\n                        dp[k] += 1\n                    else:\n                        dp[j] += 1\nt = int(input())\nfor zz in range(t):\n    m = int(input())\n    print(sum(dp[:m + 1]))"]