["s = str(input().strip())\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "import sys\ns = str(input().strip())\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = str(input().strip())\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = str(input())\no = s.count('1')\nz = s.count('0')\nl = o + z\nif o == 1:\n    print(s, 0)\nelse:\n    a = '1'\n    a += l * '0'\n    b = '1' + z * '0'\n    print(a, b)", "s = str(input())\no = s.count('1')\nz = s.count('0')\nl = o + z\nif o == 1:\n    print(s, 0)\nelse:\n    a = '1'\n    a += l * '0'\n    b = '1' + z * '0'\n    print(a, b)", "s = str(input())\nones = s.count('1')\nzeroes = s.count('0')\nl = ones + zeroes\nif ones == 1:\n    print(s, 0)\nelse:\n    big = '1'\n    big += l * '0'\n    small = '1' + zeroes * '0'\n    print(big, small)", "s = input().strip()\none = s.count('1')\nzero = s.count('0')\nif one == 1:\n    print(s, 0)\nelse:\n    print('1' + '0' * len(s), '1' + '0' * zero)", "s = input()\nl = len(s)\nll = s.count('1')\nif ll == 1:\n    print(s, 0)\nelse:\n    a = '1' + '0' * l\n    b = '1' + '0' * (l - ll)\n    print(a, b)", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = input()\nz = 0\no = 0\nfor i in s:\n    if i == str(0):\n        z += 1\n    if i == str(1):\n        o += 1\nif o == 1:\n    print(s, ' 0')\nelse:\n    print(10 ** (z + o), ' ', 10 ** z)", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    n1 = bin(2 ** len(s))\n    n2 = bin(2 ** s.count('0'))\n    print(n1[2:], n2[2:])", "s = str(input())\nones = s.count('1')\nzeroes = s.count('0')\nl = ones + zeroes\nif ones == 1:\n    print(s, 0)\nelse:\n    big = '1'\n    big += l * '0'\n    small = '1' + zeroes * '0'\n    print(big, small)", "s = input()\nc1 = s.count('1')\nc0 = s.count('0')\na = '1' + '0' * len(s)\nb = '1' + '0' * c0\nif c1 == 1:\n    print(s, '0')\nelse:\n    print(a, b)", "s = input()\nif s.count('1') == 1:\n    print(s, 0)\nelse:\n    print('1' + '0' * len(s), '1' + '0' * s.count('0'))", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    n1 = bin(2 ** len(s))\n    n2 = bin(2 ** s.count('0'))\n    print(n1[2:], n2[2:])", "s = input()\nif s[1] == '0':\n    print(s + ' 0')\n    exit(0)\nprint('1' + '0' * len(s), end=' ')\nind = s.find('0')\nprint('1' + (len(s) - ind) * '0')", "def nextPowerOf2(n):\n    p = 1\n    if n and (not n & n - 1):\n        return n\n    while p < n:\n        p <<= 1\n    return p\nst = int(input(), 2)\nn = nextPowerOf2(st)\ndiff = n - st\nprint(bin(n)[2:], bin(diff)[2:])", "s = input()\nk = 0\nu = len(s)\nfor i in range(u):\n    if s[i] == '1':\n        k += 1\n    else:\n        break\nif k == 1:\n    print(s, end=' ')\n    print(0)\nelse:\n    t = pow(2, u)\n    y = bin(t)[2:]\n    print(y, end=' ')\n    pa = pow(2, k)\n    g = t // pa\n    h = bin(g)[2:]\n    print(h)", "s = input()\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    n1 = bin(2 ** len(s))\n    n2 = bin(2 ** s.count('0'))\n    print(n1[2:], n2[2:])", "p = input().strip()\nif p[1] == '0':\n    print(p, 0)\nelse:\n    a = '1'\n    b = '1'\n    flag = False\n    for c in p:\n        if c == '0' and (not flag):\n            flag = True\n        if flag:\n            b += '0'\n        a += '0'\n    print(a, b)", "t = input()\none = t.count('1')\nr = len(t)\nnum1 = int('1' + '0' * r)\nnum2 = int('1' + '0' * (r - one))\nif one == 1:\n    print(int(t), 0)\nelse:\n    print(num1, num2)", "s = input()\nk = 0\nu = len(s)\nfor i in range(u):\n    if s[i] == '1':\n        k += 1\n    else:\n        break\nif k == 1:\n    print(s, end=' ')\n    print(0)\nelse:\n    t = pow(2, u)\n    y = bin(t)[2:]\n    print(y, end=' ')\n    pa = pow(2, k)\n    g = t // pa\n    h = bin(g)[2:]\n    print(h)", "s = str(input())\nones = s.count('1')\nzeroes = s.count('0')\nl = ones + zeroes\nif ones == 1:\n    print(s, 0)\nelse:\n    big = '1'\n    big += l * '0'\n    small = '1' + zeroes * '0'\n    print(big, small)", "def isPower(x):\n    return x and (not x & x - 1)\ns = input()\nval = int(s, 2)\na = len(s)\nb = s.count('0')\nif isPower(val):\n    s1 = s\n    s2 = '0'\n    print(s1 + ' ' + s2)\nelse:\n    s1 = '1' + '0' * a\n    s2 = '1' + '0' * b\n    print(s1 + ' ' + s2)", "s = input()\nk = 0\nfor i in s:\n    if i == '1':\n        k = k + 1\nif k > 1:\n    a = '1' + '0' * len(s)\n    b = '1' + '0' * (len(s) - k)\nelse:\n    a = s\n    b = '0'\nprint(a, b)", "s = input()\ncount = 0\nfor i in range(0, len(s)):\n    if s[i] == '0':\n        break\n    else:\n        count += 1\nb = int('1' + '0' * (len(s) - count), 2)\na = int(s, 2) + b\nif bin(b)[2:] == s:\n    print(bin(b)[2:], 0)\nelse:\n    print(bin(a)[2:], bin(b)[2:])", "s = input()\nlength = len(s)\none = 0\nfor i in range(length):\n    if s[i] == '1':\n        one += 1\n    else:\n        break\nif one == 1:\n    print(s + ' 0')\nelse:\n    first = '1' + '0' * length\n    second = '1' + '0' * (length - one)\n    print(first, ' ', second)", "s = list(input())\nno_of_ones = 0\nfor i in s:\n    if i == '0':\n        break\n    no_of_ones += 1\nif no_of_ones == 1:\n    print(''.join(s), 0)\nelse:\n    print('1', end='')\n    for i in range(0, len(s)):\n        print('0', end='')\n    print(' 1', end='')\n    for i in range(0, len(s) - no_of_ones):\n        print('0', end='')", "T = str(input().strip())\nlenT = len(T)\noneNum = T.count('1')\nzeroCount = lenT - oneNum\nif oneNum == 1:\n    print(T, '0')\nelse:\n    num1 = '1' + lenT * '0'\n    num2 = '1' + zeroCount * '0'\n    print(num1, num2)", "a = input().strip()\nif a.count('1') == 1:\n    print(a + ' ' + '0')\nelse:\n    x = 2 ** len(a)\n    y = 2 ** a.count('0')\n    print(str(bin(x)[2:]) + ' ' + str(bin(y)[2:]))", "n = input()\nl = ''\nf = 0\nj = list(n)\nt = j.index('1')\nif t == 0 and j.count('1') == 1:\n    print(n, '0')\nelse:\n    for i in range(len(n) - 1, -1, -1):\n        if n[i] == '0':\n            l += n[i]\n        elif n[i] == '1':\n            l += n[i]\n            f = 1\n        if f == 1:\n            break\n    k = l[::-1]\n    s = ''\n    for i in range(len(k)):\n        s += k[i]\n    c = int(s, 2)\n    co = c + int(n, 2)\n    k1 = bin(co)\n    print(k1[2:len(k1)], k)", "S = input()\nnz = S.count('0')\nB = '1' + '0' * nz\nif B == S:\n    print(B, '0')\nelse:\n    s = int(S, 2)\n    b = int(B, 2)\n    a = b + s\n    A = str(bin(a))\n    print(A[2:], B)", "n = input()\nl = ''\nf = 0\nj = list(n)\nt = j.index('1')\nif t == 0 and j.count('1') == 1:\n    print(n, '0')\nelse:\n    for i in range(len(n) - 1, -1, -1):\n        if n[i] == '0':\n            l += n[i]\n        elif n[i] == '1':\n            l += n[i]\n            f = 1\n        if f == 1:\n            break\n    k = l[::-1]\n    s = ''\n    for i in range(len(k)):\n        s += k[i]\n    c = int(s, 2)\n    co = c + int(n, 2)\n    k1 = bin(co)\n    print(k1[2:len(k1)], k)", "s = input()\nif s.count('1') <= 2:\n    print(s, 0)\nelse:\n    l = len(s)\n    sss = '1'\n    for i in range(l):\n        sss += '0'\n    ss = '1'\n    p = s.index('0')\n    for i in range(p, l):\n        ss += '0'\n    print(sss, ss)", "s = input()\nx = len(s)\na = pow(10, x)\nsetbits = 0\nfor i in s:\n    if i == '0':\n        break\n    setbits = setbits + 1\nb = pow(10, x - setbits)\nif setbits > 1:\n    print(a, b)\nelse:\n    print(s, 0)", "s = input()\nn = len(s)\nzero = s.count('0')\none = s.count('1')\nif one == 1:\n    print(s, end=' ')\n    print(0)\nelse:\n    print(1, end='')\n    for i in range(n):\n        print(0, end='')\n    print(' ', end='')\n    print(1, end='')\n    for i in range(zero):\n        print(0, end='')", "s = input()\na = 1 << len(s) if int(s[1:]) != 0 else int(s, 2)\nprint('{0:b} {1:b}'.format(a, a - int(s, 2)))", "S = input()\nc0 = S.count('0')\nc1 = S.count('1')\nif c1 == 1:\n    print(S, 0)\nelse:\n    print('1' + '0' * len(S), '1' + '0' * c0)", "N = input()\nif N[0] != N[1]:\n    print(N, end=' ')\n    print('0')\nelse:\n    print('1', end='')\n    j = 0\n    for i in range(len(N)):\n        if N[i] == '1':\n            j = i\n        print('0', end='')\n    print(' 1', end='')\n    for i in range(j + 1, len(N)):\n        print('0', end='')", "def next_power_of_2(x):\n    return 1 if x == 0 else 2 ** (x - 1).bit_length()\na = int(input(), 2)\nb = next_power_of_2(a)\nc = b - a\nprint(bin(b)[2:], ' ', bin(c)[2:])", "N = input()\nif N[0] != N[1]:\n    print(N, end=' ')\n    print('0')\nelse:\n    print('1', end='')\n    j = 0\n    for i in range(len(N)):\n        if N[i] == '1':\n            j = i\n        print('0', end='')\n    print(' 1', end='')\n    for i in range(j + 1, len(N)):\n        print('0', end='')", "s = input()\nfor i in range(len(s) - 1, -1, -1):\n    if s[i] == '1':\n        j = i\n        break\nif j == 0:\n    print(s, '0')\nelse:\n    h = s[j:]\n    re = int(s, 2)\n    rt = int(h, 2)\n    r = bin(re + rt)\n    print(bin(re + rt)[2:], bin(rt)[2:])", "s = input()\nif s[0] == '1' and s[1] == '0':\n    a = s\n    b = '0'\nelse:\n    for i in range(len(s)):\n        if s[i] == '1' and s[i + 1] == '0':\n            b = s[i:]\n    a = '1' + len(s) * '0'\nprint(a + ' ' + b)", "S = input()\nif S.count('1') == 1:\n    print(S, '0')\n    exit()\nprint('1', end='')\nprint('0' * len(S), end=' ')\nprint('1', end='')\nprint('0' * S.count('0'))", "s = input()\nn = int(s, 2)\nl = len(s)\ns1 = '1' + '0' * l\nn1 = int(s1, 2)\np = n1 - n\nb = bin(p)\nb = b[2:]\npp = b.count('1')\nif pp + 1 < s.count('1'):\n    print(s1, b)\nelse:\n    print(s, 0)", "s = input()\nn = len(s)\nif s.count('1') == 1:\n    print(s, 0)\nelse:\n    zero = s.count('0')\n    a = '1' + '0' * n\n    b = '1' + '0' * zero\n    print(a, b)", "s = input()\nl = len(s)\nz = s.count('0')\na = '1' + l * '0'\nb = '1' + z * '0'\nif s.count('1') == 1:\n    print(s, '0')\nelse:\n    print(a, b)"]