["def factorize(m: int) -> list:\n    root = m ** 0.5\n    i = 1\n    factors = []\n    while i < root + 1:\n        if m % i == 0:\n            factors.append((i, m // i))\n            factors.append((m // i, i))\n        i += 1\n    return factors\n\ndef possible_n(factors: list, a: int) -> list:\n    ns = []\n    for (fi, fj) in factors:\n        if fj == 1 or (fj - 1) % a != 0:\n            continue\n        n = fi * ((fj - 1) // a)\n        ns.append(n)\n    return sorted(set(ns))\n\ndef solve(a: int, m: int) -> list:\n    factors = factorize(m)\n    return possible_n(factors, a)\n\ndef main():\n    t = int(input().strip())\n    for _ in range(t):\n        (a, m) = map(int, input().strip().split())\n        ns = solve(a, m)\n        print(len(ns))\n        if ns:\n            print(' '.join(map(str, ns)))\nmain()", "def factorize(m: int) -> list:\n    root = m ** 0.5\n    i = 1\n    factors = []\n    while i < root + 1:\n        if m % i == 0:\n            factors.append((i, m // i))\n            factors.append((m // i, i))\n        i += 1\n    return factors\n\ndef possible_n(factors: list, a: int) -> list:\n    ns = []\n    for (fi, fj) in factors:\n        if fj == 1 or (fj - 1) % a != 0:\n            continue\n        n = fi * ((fj - 1) // a)\n        ns.append(n)\n    return sorted(set(ns))\n\ndef solve(a: int, m: int) -> list:\n    factors = factorize(m)\n    return possible_n(factors, a)\n\ndef main():\n    t = int(input().strip())\n    for _ in range(t):\n        (a, m) = map(int, input().strip().split())\n        ns = solve(a, m)\n        print(len(ns))\n        if ns:\n            print(' '.join(map(str, ns)))\nmain()", "import math\nT = int(input())\nfor i in range(T):\n    (a, m) = list(map(int, input().split()))\n    f = {1}\n    for i in range(2, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            f.add(i)\n            f.add(m // i)\n    total = 0\n    l = []\n    for i in f:\n        p = m - i\n        if p % a == 0:\n            q = p // a\n            if q % i == 0:\n                l.append(q)\n                total += 1\n    print(total)\n    if total > 0:\n        l.sort()\n        print(*l, end=' ')\n        print('')\n    else:\n        print(' ')", "import math\nT = int(input())\nfor i in range(T):\n    (a, m) = list(map(int, input().split()))\n    f = {1}\n    for i in range(2, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            f.add(i)\n            f.add(m // i)\n    total = 0\n    l = []\n    for i in f:\n        p = m - i\n        if p % a == 0:\n            q = p // a\n            if q % i == 0:\n                l.append(q)\n                total += 1\n    print(total)\n    if total > 0:\n        l.sort()\n        print(*l, end=' ')\n        print('')\n    else:\n        print(' ')", "import math\n\ndef divisors(n):\n    arr = []\n    for i in range(1, 1 + int(math.ceil(math.sqrt(n)))):\n        if n % i == 0:\n            arr.append(i)\n            arr.append(n // i)\n    arr = list(sorted(set(arr)))\n    return arr\ntry:\n    t = int(input())\n    while t:\n        t -= 1\n        (a, m) = map(int, input().split())\n        divs = divisors(m)\n        ans = []\n        for d in divs:\n            q = (m // d - 1) / a\n            if q % 1 == 0 and q > 0:\n                ans.append(int(d * q))\n        ans.sort()\n        print(len(ans))\n        for i in ans:\n            print(i, end=' ')\n        print()\nexcept:\n    pass", "import math\n\ndef divisors(n):\n    arr = []\n    for i in range(1, 1 + int(math.ceil(math.sqrt(n)))):\n        if n % i == 0:\n            arr.append(i)\n            arr.append(n // i)\n    arr = list(sorted(set(arr)))\n    return arr\ntry:\n    t = int(input())\n    while t:\n        t -= 1\n        (a, m) = map(int, input().split())\n        divs = divisors(m)\n        ans = []\n        for d in divs:\n            q = (m // d - 1) / a\n            if q % 1 == 0 and q > 0:\n                ans.append(int(d * q))\n        ans.sort()\n        print(len(ans))\n        for i in ans:\n            print(i, end=' ')\n        print()\nexcept:\n    pass", "from math import sqrt\n\ndef solve():\n    (a, m) = map(int, input().split())\n    all_vals = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            if (m - i) % a == 0 and (m - i) // a % i == 0:\n                all_vals.append((m - i) // a)\n            i = m // i\n            if i != m and (m - i) % a == 0 and ((m - i) // a % i == 0):\n                all_vals.append((m - i) // a)\n    print(len(all_vals))\n    if len(all_vals) != 0:\n        all_vals.sort()\n        print(*all_vals)\nfor T in range(int(input())):\n    solve()", "from math import sqrt\n\ndef solve():\n    (a, m) = map(int, input().split())\n    all_vals = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            if (m - i) % a == 0 and (m - i) // a % i == 0:\n                all_vals.append((m - i) // a)\n            i = m // i\n            if i != m and (m - i) % a == 0 and ((m - i) // a % i == 0):\n                all_vals.append((m - i) // a)\n    print(len(all_vals))\n    if len(all_vals) != 0:\n        all_vals.sort()\n        print(*all_vals)\nfor T in range(int(input())):\n    solve()", "import math\nfor _ in range(int(input())):\n    (a, m) = list(map(int, input().split()))\n    f = {1}\n    for i in range(2, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            f.add(i)\n            f.add(m // i)\n    total = 0\n    l = []\n    for i in f:\n        p = m - i\n        if p % a == 0:\n            q = p // a\n            if q % i == 0:\n                l.append(q)\n                total += 1\n    print(total)\n    if total > 0:\n        l.sort()\n        print(*l, end=' ')\n        print('')\n    else:\n        print(' ')", "from math import sqrt\nt = int(input())\nwhile t > 0:\n    (a, m) = [int(x) for x in input().split()]\n    div = []\n    n = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                div.append(i)\n            else:\n                div.append(i)\n                div.append(m // i)\n    div.sort()\n    div = div[:-1]\n    for i in div:\n        if (m // i - 1) % a == 0:\n            n.append(i * ((m // i - 1) // a))\n    s = set(n)\n    n = list(s)\n    n.sort()\n    print(len(n))\n    for i in n:\n        print(i, end=' ')\n    print()\n    t -= 1", "from math import sqrt\nt = int(input())\nwhile t > 0:\n    (a, m) = [int(x) for x in input().split()]\n    div = []\n    n = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                div.append(i)\n            else:\n                div.append(i)\n                div.append(m // i)\n    div.sort()\n    div = div[:-1]\n    for i in div:\n        if (m // i - 1) % a == 0:\n            n.append(i * ((m // i - 1) // a))\n    s = set(n)\n    n = list(s)\n    n.sort()\n    print(len(n))\n    for i in n:\n        print(i, end=' ')\n    print()\n    t -= 1", "def getdiv(m):\n    i = 1\n    res = []\n    while i * i <= m:\n        if m % i == 0:\n            res.append(i)\n            if m // i != i:\n                res.append(m // i)\n        i += 1\n    return res\ntest = int(input())\nfor _ in range(test):\n    (a, m) = map(int, input().split())\n    div = getdiv(m)\n    res = []\n    for i in div:\n        n = (m - i) / a\n        if n >= i and n % 1 == 0 and (n % i == 0):\n            res.append(int(n))\n    res.sort()\n    print(len(res))\n    for i in res:\n        print(i, end=' ')\n    print('')", "def getdiv(m):\n    i = 1\n    res = []\n    while i * i <= m:\n        if m % i == 0:\n            res.append(i)\n            if m // i != i:\n                res.append(m // i)\n        i += 1\n    return res\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    div = getdiv(m)\n    res = []\n    for i in div:\n        n = (m - i) / a\n        if n >= i and n % 1 == 0 and (n % i == 0):\n            res.append(int(n))\n    res.sort()\n    print(len(res))\n    for i in res:\n        print(i, end=' ')\n    print('')", "import math\n\ndef search(l):\n    a = l[0]\n    n = l[1]\n    g = []\n    r = []\n    e = []\n    t = []\n    z = []\n    i = 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                g.append(i)\n            else:\n                g.append(i)\n                g.append(int(n / i))\n        i = i + 1\n    g.sort()\n    for i in g:\n        k = int(n / i) - 1\n        e.append(k)\n    for j in e:\n        if j % a == 0:\n            p = int(j / a)\n            ind = e.index(j)\n            f = g[ind] * p\n            z.append(f)\n            t.append(p)\n    z.sort()\n    if len(z) == 1 and z[0] == 0:\n        print('0')\n    else:\n        z.remove(0)\n        print(len(z))\n        print(*z, sep=' ')\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    search(l)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (a, m) = map(int, input().split())\n    d = 1\n    ans = set()\n    limit = int(math.sqrt(m) + 1)\n    while d < limit + 1:\n        if m % d == 0:\n            num = m // d - 1\n            if num % a == 0:\n                ans.add(num // a * d)\n            d2 = m // d\n            num = m // d2 - 1\n            if num > 0 and num % a == 0:\n                ans.add(num // a * d2)\n        d += 1\n    print(len(ans))\n    print(*sorted(ans))", "import sys\nimport math\nfrom collections import defaultdict, Counter\nt = int(input())\nfor i in range(t):\n    (a, m) = map(int, input().split())\n    r = (m - 1) // a\n    l = []\n    l2 = []\n    for j in range(1, int(math.sqrt(m)) + 1):\n        if m % j == 0:\n            if j % a == 1 and 1 <= j // a <= r or (a == 1 and 2 <= j // a <= r + 1):\n                d = m // j\n                if a != 1:\n                    l.append(d * (j // a))\n                else:\n                    l.append(d * (j // a - 1))\n            if m // j != j and (m // j % a == 1 and 1 <= m // j // a <= r or (a == 1 and 2 <= m // j // a <= r + 1)):\n                d = m // (m // j)\n                if a != 1:\n                    l2 = [d * (m // j // a)] + l2\n                else:\n                    l2 = [d * (m // j // a - 1)] + l2\n    l.extend(l2)\n    print(len(l))\n    print(*l)", "import math\n\ndef Divisors(n):\n    l = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if n / i == i:\n                l.append(i)\n            else:\n                l.append(n // i)\n                l.append(i)\n    return l\nfrom sys import stdin, stdout\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    div = Divisors(m)\n    ans = set()\n    for i in div:\n        if (m // i - 1) % a == 0:\n            ans.add((m // i - 1) // a * i)\n    ans = list(ans)[1:]\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t -= 1\n    (a, m) = map(int, input().split())\n    possible = []\n    for i in range(2, int(m ** 0.5) + 1):\n        if not m % i:\n            d = m // i\n            if not (m - d) % (a * d):\n                possible.append((m - d) // a)\n            d = m // d\n            if not (m - d) % (a * d):\n                possible.append((m - d) // a)\n    if not (m - 1) % a:\n        possible.append((m - 1) // a)\n    possible.sort()\n    print(len(possible))\n    for i in possible:\n        print(i, end=' ')\n    print()", "import functools\nimport math\n\ndef factors(n):\n    step = 2 if n % 2 else 1\n    return set(functools.reduce(list.__add__, ([i, n // i] for i in range(1, int(math.sqrt(n)) + 1, step) if n % i == 0)))\nT = int(input())\nfor t in range(T):\n    (A, M) = [int(i) for i in input().split()]\n    M_factors = factors(M)\n    M_factors.remove(M)\n    N_list = []\n    for d in M_factors:\n        diff = M - d\n        N = diff // A\n        if diff % A == 0 and N % d == 0:\n            N_list.append(N)\n    if len(N_list) == 0:\n        print(0)\n        print('')\n    else:\n        N_list.sort()\n        s = ''\n        for N in N_list:\n            s += str(N) + ' '\n        print(len(N_list))\n        print(s.strip())", "for _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    divisors = []\n    for i in range(1, int(m ** 0.5 + 1)):\n        if m % i == 0:\n            divisors.append(i)\n        if i != m / i:\n            divisors.append(m / i)\n    p = []\n    for h in divisors:\n        if (m - h) / a % 1 == 0 and (m - h) / a != 0:\n            if int((m - h) / a) % h == 0:\n                p.append(int((m - h) / a))\n    print(len(p))\n    p.sort()\n    for j in p:\n        print(j, end=' ')\n    print(' ')", "for _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    d = set()\n    sqm = int(m ** 0.5 + 1)\n    for i in range(1, sqm):\n        if m % i == 0:\n            d.add(i)\n            d.add(int(m / i))\n    n = set()\n    for dd in d:\n        q = (m / dd - 1) / a\n        if int(q) == q:\n            n.add(int(q) * dd)\n    n.remove(0)\n    s = sorted(n)\n    ans = ''\n    print(len(s))\n    for x in s:\n        print(x, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    ans = []\n    (A, m) = map(int, input().split())\n    s = math.ceil(m ** (1 / 2))\n    for i in range(2, s):\n        if m % i == 0:\n            if (i - 1) % A == 0:\n                x = (i - 1) // A\n                ans.append(x * m // i)\n            j = m // i\n            if j != i:\n                if (j - 1) % A == 0:\n                    x = (j - 1) // A\n                    ans.append(x * m // j)\n    i = m\n    if (i - 1) % A == 0:\n        x = (i - 1) // A\n        ans.append(x * m // i)\n    print(len(ans))\n    ans.sort()\n    print(*ans)", "import math\nfor _ in range(int(input())):\n    (a, m) = [int(i) for i in input().split()]\n    (l, d, div) = ([], 1, [])\n    for d in range(1, int(math.sqrt(m)) + 1):\n        if m % d == 0:\n            (div.append(d), div.append(m // d))\n    for d in div:\n        if (m // d - 1) % a == 0:\n            l.append((m // d - 1) // a * d)\n    l = sorted(list(set(l)))\n    l = [str(e) for e in l if e != 0]\n    print(len(l))\n    print(' '.join(l))", "for _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    l = set()\n    ans = 0\n    i = 1\n    ans = set()\n    while i * i <= m:\n        if m % i == 0:\n            l.add(i)\n            l.add(m // i)\n        i += 1\n    for i in l:\n        temp = m // i - 1\n        if temp % a:\n            continue\n        else:\n            ans.add(temp // a * i)\n    ans.discard(0)\n    ans = list(ans)\n    ans.sort()\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\n    print()", "from math import *\nfor _ in range(int(input())):\n    (a, m) = [int(i) for i in input().split()]\n    l = []\n    d = 1\n    div = []\n    while d * d <= m:\n        if m % d == 0:\n            div.append(d)\n            div.append(m // d)\n        d += 1\n    for d in div:\n        f = m // d\n        f -= 1\n        if f % a == 0:\n            p = f // a\n            l.append(p * d)\n    l = set(l)\n    l = list(l)\n    l.sort()\n    l = [str(e) for e in l if e != 0]\n    print(len(l))\n    print(' '.join(l))", "import math\n\ndef fun(a, m):\n    q = int(math.sqrt(m))\n    l = []\n    for i in range(1, q + 1):\n        if i * i != m:\n            if m % i == 0:\n                d = m // i\n                if (d - 1) % a == 0:\n                    k = (d - 1) // a\n                    n = i * k\n                    l.append(n)\n                if (i - 1) % a == 0:\n                    if i == 1:\n                        continue\n                    k = (i - 1) // a\n                    n = d * k\n                    l.append(n)\n        elif (i - 1) % a == 0:\n            k = (i - 1) // a\n            n = d * k\n            l.append(n)\n    if len(l) == 0:\n        print(0)\n    else:\n        l.sort()\n        print(len(l))\n        l = list(map(str, l))\n        s = ' '\n        s = s.join(l)\n        print(s)\nfor _ in range(int(input())):\n    (a, m) = list(map(int, input().split()))\n    fun(a, m)", "from math import sqrt, floor\n\ndef find_factors(n):\n    end = floor(sqrt(n))\n    li = [1]\n    for i in range(end, 1, -1):\n        if m % i == 0:\n            li.append(i)\n            li.append(m // i)\n    return li\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    l = find_factors(m)\n    ans = []\n    for i in l:\n        x = (m - i) / a\n        if x >= i and x % 1 == 0 and (x % i == 0):\n            ans.append(int(x))\n    print(len(ans))\n    print(*sorted(ans))", "import math\n\ndef divisor(M):\n    l1 = []\n    for i in range(1, int(math.sqrt(M)) + 1):\n        if M % i == 0:\n            if M / i == i:\n                l1.append(i)\n            else:\n                l1.append(i)\n                l1.append(M // i)\n    return l1\nfor _ in range(int(input())):\n    (A, M) = map(int, input().split())\n    my_array = []\n    l1 = divisor(M)\n    l1.remove(M)\n    for i in l1:\n        if (M - i) % A == 0 and (M - i) // A % i == 0:\n            my_array.append((M - i) // A)\n    my_array.sort()\n    print(len(my_array))\n    print(*my_array)", "from math import sqrt\n\ndef printDivisors(n):\n    i = 1\n    divisor_list = []\n    while i <= sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                divisor_list.append(i)\n            else:\n                divisor_list.append(i)\n                divisor_list.append(n // i)\n        i += 1\n    return divisor_list\nfor test_case in range(int(input())):\n    (A, M) = map(int, input().split())\n    divisor_list = printDivisors(M)\n    divisor_list.remove(M)\n    result_array = []\n    for i in divisor_list:\n        if (M - i) % A == 0 and (M - i) // A % i == 0:\n            result_array.append((M - i) // A)\n    result_array.sort()\n    print(len(result_array))\n    print(*result_array)", "from math import sqrt\n\ndef printDivisors(n):\n    i = 1\n    divisor_list = []\n    while i <= sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                divisor_list.append(i)\n            else:\n                divisor_list.append(i)\n                divisor_list.append(n // i)\n        i += 1\n    return divisor_list\nfor test_case in range(int(input())):\n    (A, M) = map(int, input().split())\n    divisor_list = printDivisors(M)\n    divisor_list.remove(M)\n    result_array = []\n    for i in divisor_list:\n        if (M - i) % A == 0 and (M - i) // A % i == 0:\n            result_array.append((M - i) // A)\n    result_array.sort()\n    print(len(result_array))\n    print(*result_array)", "import math\nt = int(input())\nfor i in range(t):\n    (a, m) = map(int, input().split())\n    cnt = 0\n    arr = []\n    factors = []\n    for j in range(1, int(math.sqrt(m)) + 1):\n        if m % j == 0:\n            factors.append(j)\n            if m // j != j:\n                factors.append(m // j)\n    for f in factors:\n        if (f - 1) % a == 0 and f != 1:\n            q = (f - 1) // a\n            d = m // f\n            n = q * d\n            arr.append(n)\n            cnt += 1\n    arr.sort()\n    print(cnt)\n    print(' '.join(map(str, arr)))", "for i in range(int(input())):\n    (a, m) = map(int, input().split())\n    x = []\n    d = []\n    j = 1\n    while j <= m ** 0.5:\n        if m % j == 0:\n            if m // j == j:\n                d.append(j)\n            else:\n                d.append(j)\n                d.append(m // j)\n        j += 1\n    d = sorted(d)\n    for i in d:\n        n = (m - i) / a\n        if n >= i and n == int(n) and (int(n) % i == 0):\n            x.append(int(n))\n    print(len(x))\n    x = sorted(x)\n    print(*x)", "from math import sqrt\n\ndef findN(a, m, d, ans):\n    r = m // d - 1\n    if r % a == 0:\n        q = r // a\n        n = q * d\n        if n > 0:\n            ans.add(n)\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split(' '))\n    if m % 2 == 0:\n        step = 1\n    else:\n        step = 2\n    x = int(sqrt(m))\n    ans = set()\n    for d1 in range(1, x + 1, step):\n        if m % d1 == 0:\n            d2 = m // d1\n            findN(a, m, d1, ans)\n            findN(a, m, d2, ans)\n    c = len(ans)\n    ans_sorted = sorted(ans)\n    print(c)\n    print(*ans_sorted)", "ans = []\nfor i in range(int(input())):\n    lst = []\n    l = []\n    (a, m) = map(int, input().split())\n    for d in range(1, int(m ** 0.5) + 1):\n        if m % d == 0:\n            r = m / d - 1\n            if r % a == 0:\n                q = r / a\n                if q != 0:\n                    lst.append(int(d * q))\n            rg = d - 1\n            if rg % a == 0:\n                q = rg / a\n                if q != 0:\n                    lst.append(int(q * m / d))\n    if m % (a + 1) == 0:\n        lst.append(int(m // (a + 1)))\n    for i in lst:\n        if i not in l:\n            l.append(i)\n    ans.append(len(l))\n    ans.append(l)\nfor i in range(0, len(ans), 2):\n    print(ans[i])\n    ans[i + 1].sort()\n    for j in range(0, ans[i]):\n        print(ans[i + 1][j], end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    l = []\n    for i in range(1, int(math.sqrt(m) + 1)):\n        if m % i == 0:\n            l.append(i)\n            if i != m // i:\n                l.append(m // i)\n    l1 = list(set(l))\n    l2 = []\n    for i in range(len(l1)):\n        if m // l1[i] > 1:\n            if (m // l1[i] - 1) % a == 0:\n                l2.append(l1[i] * ((m // l1[i] - 1) // a))\n    l3 = list(set(l2))\n    l3.sort()\n    print(len(l3))\n    for i in l3:\n        print(i, end=' ')\n    print()", "import sys\nfrom math import sqrt\n\ndef get(m, a):\n    d = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            d.append(i)\n            if m // i != i:\n                d.append(m // i)\n    ans = []\n    for i in d:\n        if (m - i) % a == 0 and (m - i) // a != 0 and ((m - i) // a % i == 0):\n            ans.append((m - i) // a)\n    return ans\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (a, m) = map(int, sys.stdin.readline().split())\n    ans = get(m, a)\n    print(len(ans))\n    ans.sort()\n    print(*ans)", "from functools import reduce\nimport math\n\ndef factors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i is 0:\n            if n // i is i:\n                divisors.append(i)\n            else:\n                divisors.append(i)\n                divisors.append(n // i)\n    divisors.append(n)\n    return sorted(list(set(divisors)))\nfor t in range(int(input())):\n    (a, m) = map(int, input().split())\n    s = list(factors(m))\n    count = 0\n    res = []\n    for i in s:\n        k = (m - i) / a\n        z = (m - i) % a\n        if k >= i and k % 1 == 0 and (k % i == 0):\n            count = count + 1\n            res.append(int(k))\n    print(len(res))\n    for i in sorted(res):\n        print(i, end=' ')\n    print()", "import math\nt = int(input())\nwhile t > 0:\n    (a, m) = map(int, input().split(' '))\n    n = int(math.sqrt(m))\n    count = 0\n    v = []\n    for i in range(1, n + 1):\n        if m % i == 0:\n            if m // i == i:\n                d = i\n                s = (m / d - 1) % a\n                r = (m / d - 1) // a\n                if s == 0:\n                    if r != 0:\n                        count += 1\n                        v.append(r * d)\n            else:\n                d = i\n                s = (m // d - 1) % a\n                r = (m // d - 1) // a\n                if s == 0:\n                    if r != 0:\n                        count += 1\n                        v.append(r * d)\n                d = m // i\n                s = (m // d - 1) % a\n                r = (m // d - 1) // a\n                if s == 0:\n                    if r != 0:\n                        count += 1\n                        v.append(r * d)\n    print(count)\n    v.sort()\n    if count == 0:\n        print()\n    else:\n        for i in range(count):\n            print(v[i], end=' ')\n        print()\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    (a, m) = list(map(int, input().split()))\n    factors = []\n    l = int(math.sqrt(m))\n    for i in range(1, l + 1):\n        if m % i == 0:\n            if i == m // i:\n                factors.append(i)\n            else:\n                factors.append(i)\n                factors.append(m // i)\n    potential = set()\n    for i in factors:\n        r = m // i - 1\n        if r % a == 0:\n            q = r // a\n            pot = q * i\n            if pot != 0:\n                if pot not in potential:\n                    potential.add(pot)\n    ans = []\n    for i in potential:\n        ans.append(i)\n    ans.sort()\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\n    print()\n    t -= 1", "import math\n\ndef get_divisiors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i is 0:\n            if n // i is i:\n                divisors.append(i)\n            else:\n                divisors.append(i)\n                divisors.append(n // i)\n    divisors.append(n)\n    return sorted(list(set(divisors)))\n\ndef solve():\n    for _ in range(int(input())):\n        (a, m) = list(map(int, input().split()))\n        divisor_m = get_divisiors(m)\n        n_s = []\n        n = 0\n        for d in divisor_m:\n            n = (m - d) / a\n            if n >= d and n % 1 == 0 and (n % d == 0):\n                n_s.append(int(n))\n        print(len(n_s))\n        for y in sorted(n_s):\n            print(y, end=' ')\n        print()\nsolve()", "t = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    count = 0\n    factors = []\n    list1 = []\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            factors.append(i)\n            if i != m // i:\n                factors.append(m // i)\n    for f in factors:\n        if (f - 1) % a == 0:\n            q = (f - 1) // a\n            d = m // f\n            if q * d != 0:\n                count += 1\n                list1.append(q * d)\n    list1 = sorted(list1)\n    print(count)\n    for i in list1:\n        print(i, end=' ')\n    print()", "T = int(input())\nfor X in range(T):\n    (A, M) = map(int, input().split())\n    S = set()\n    N = set()\n    for D in range(1, int(M ** 0.5) + 1):\n        if M % D == 0:\n            S.add(D)\n            S.add(M // D)\n    for I in S:\n        if (M - I) / A % I == 0:\n            N.add((M - I) // A)\n    N = list(N)\n    N.sort()\n    print(len(N) - 1)\n    for I in N:\n        if I != 0:\n            print(I, end=' ')\n    print()", "T = int(input())\nfor X in range(T):\n    (A, M) = map(int, input().split())\n    S = set()\n    N = set()\n    for D in range(1, int(M ** 0.5) + 1):\n        if M % D == 0:\n            S.add(D)\n            S.add(M // D)\n    for I in S:\n        if (M - I) / A % I == 0:\n            N.add((M - I) // A)\n    N = list(N)\n    N.sort()\n    print(len(N) - 1)\n    for I in N:\n        if I != 0:\n            print(I, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    l = []\n    (a, m) = [int(j) for j in input().split()]\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            l.append(i)\n            l.append(m // i)\n    ans = []\n    for i in l:\n        if (m - i) % a != 0:\n            continue\n        c = (m - i) // a\n        if c % i != 0:\n            continue\n        if i <= c:\n            ans.append(c)\n    print(len(ans))\n    ans.sort()\n    for r in ans:\n        print(r, end=' ')\n    print()", "for i in range(int(input())):\n    (a, m) = [int(i) for i in input().split()]\n    arr = []\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            p = m - i\n            if p % a == 0 and p // a % i == 0:\n                arr.append(p // a)\n        if i < m // i:\n            i = m // i\n            if m % i == 0 and i < m:\n                p = m - i\n                if p % a == 0:\n                    n = p // a\n                    if n % i == 0:\n                        arr.append(p // a)\n    print(len(arr))\n    arr.sort()\n    for i in arr:\n        print(i, '', end='')\n    print()", "import math\n\ndef printDivisors(n):\n    i = 1\n    factor = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                factor.append(i)\n            else:\n                factor.append(i)\n                factor.append(n // i)\n        i = i + 1\n    return factor\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    factor = printDivisors(m)\n    aa = []\n    for i in range(len(factor)):\n        r = m // factor[i] - 1\n        if r % a == 0:\n            aa.append(r // a * factor[i])\n    aa.sort()\n    aa.remove(0)\n    ans = set(aa)\n    ans = list(ans)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "import math\n\ndef printDivisors(n):\n    i = 1\n    factor = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                factor.append(i)\n            else:\n                factor.append(i)\n                factor.append(n // i)\n        i = i + 1\n    return factor\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    factor = printDivisors(m)\n    aa = []\n    for i in range(len(factor)):\n        r = m // factor[i] - 1\n        if r % a == 0:\n            aa.append(r // a * factor[i])\n    aa.sort()\n    aa.remove(0)\n    ans = set(aa)\n    ans = list(ans)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "from math import sqrt\n\ndef div(m):\n    dv = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                dv.append(i)\n            else:\n                dv.append(i)\n                dv.append(m // i)\n    return dv\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    dv = div(m)\n    out = []\n    for d in dv:\n        n = (m - d) / a\n        if d <= n and n % d == 0 and (n % 1 == 0):\n            out.append(int(n))\n    out.sort()\n    print(len(out))\n    out = list((str(j) for j in out))\n    print(' '.join(out))", "t = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    l = []\n    for i in range(1, int(pow(m, 0.5)) + 1):\n        if not m % i:\n            l.append(i)\n            if i != m // i:\n                l.append(m // i)\n    k = []\n    for i in l:\n        x = m - i\n        x = x / a\n        if x == int(x) and x != 0:\n            if not x % i:\n                k.append(int(x))\n    print(len(k))\n    k.sort()\n    print(*k)", "import numbers\nimport math\n\ndef find_factor(n):\n    res = []\n    i = 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                res.append(i)\n            else:\n                res.append(i)\n                res.append(int(n / i))\n        i = i + 1\n    return sorted(res)\nfor _ in range(int(input())):\n    (a, m) = list(map(int, input().split()))\n    factors = []\n    factors = find_factor(m)\n    ans = 0\n    ans_list = []\n    for i in factors:\n        if (i - 1) % a == 0 and i != 1:\n            ans = ans + 1\n            q = int((i - 1) / a)\n            d = int(m / i)\n            ans_list.append(q * d)\n    print(ans)\n    for x in ans_list:\n        print(x, end=' ')\n    print('')", "def factors(m):\n    k = []\n    for i in range(2, int(m ** 0.5) + 1):\n        if m % i == 0:\n            k.append(i)\n            k.append(m // i)\n    k.append(m)\n    return k\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    k = factors(m)\n    c = 0\n    h = []\n    for f in k:\n        if (f - 1) % a == 0:\n            q = (f - 1) // a\n            d = m // f\n            n = q * d\n            h.append(n)\n            c = c + 1\n    h.sort()\n    print(c)\n    print(*h)", "import math\n\ndef printDivisors(n):\n    i = 1\n    f = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                f.append(i)\n            else:\n                f.append(i)\n                f.append(int(n / i))\n        i = i + 1\n    return f\nfor _ in range(int(input())):\n    d = []\n    (a, b) = map(int, input().split())\n    c = printDivisors(b)\n    for i in range(len(c)):\n        if (b // c[i] - 1) % a == 0:\n            d.append(b // a - c[i] // a)\n    d.remove(0)\n    d.sort()\n    print(len(d))\n    print(*d)", "try:\n    num = int(input())\n    from functools import reduce\n\n    def fact(n):\n        return list(set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0))))\n    while num > 0:\n        arr = list(map(int, input().split()))\n        a = arr[0]\n        m = arr[1]\n        factors = fact(m)\n        ans = []\n        for j in factors:\n            if (j - 1) % a == 0:\n                q = (j - 1) / a\n                d = m / j\n                ans.append(q * d)\n        ans.sort()\n        ans = ans[1:]\n        size = len(ans)\n        print(size)\n        i = 0\n        while i < size:\n            print(int(ans[i]), end=' ')\n            i += 1\n        print('\\n', end='')\n        num -= 1\nexcept:\n    pass", "from math import sqrt\nfor _ in range(int(input())):\n    (A, M) = list(map(int, input().split()))\n    divisors = set()\n    for i in range(1, int(sqrt(M)) + 1):\n        if M % i == 0:\n            divisors.add(i)\n            divisors.add(M // i)\n    answers = []\n    for i in divisors:\n        ans = (M - i) / A\n        if ans % i == 0 and ans != 0:\n            answers.append(int(ans))\n    print(len(answers))\n    print(' '.join(list(map(str, sorted(answers)))))", "for _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    ans = []\n    mx = min(int(m ** 0.5), (m - 1) // a)\n    for d in range(1, mx + 1):\n        if (m - d) % a == 0:\n            n = (m - d) // a\n            if n % d == 0:\n                ans.append(n)\n        if m % d == 0 and d != 1:\n            dd = m // d\n            if (m - dd) % a == 0:\n                n = (m - dd) // a\n                if n % dd == 0:\n                    ans.append(n)\n    print(len(ans))\n    print(' '.join(map(str, sorted(ans))))", "t = int(input())\nfor q in range(t):\n    (a, m) = map(int, input().split())\n    l = []\n    i = 1\n    while i < m ** 0.5 + 1:\n        if m % i == 0:\n            if i not in l:\n                l.append(i)\n            if m // i not in l:\n                l.append(m // i)\n        i += 1\n    l.sort()\n    l2 = []\n    for d in range(len(l) - 1):\n        if (m - l[d]) % (a * l[d]) == 0:\n            l2.append((m - l[d]) // a)\n    print(len(l2))\n    for i in range(len(l2) - 1, -1, -1):\n        print(l2[i], end=' ')\n    print()\n    del l\n    del l2", "import math\n\ndef divisors(m):\n    l1 = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                l1.append(i)\n            else:\n                l1.append(i)\n                l1.append(m // i)\n    return l1\n\ndef printDivisors(n):\n    list = []\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                print(i, end=' ')\n            else:\n                print(i, end=' ')\n                list.append(int(n / i))\ns = ''\nfor _ in range(int(input())):\n    l1 = [int(y) for y in input().split()]\n    a = l1[0]\n    m = l1[1]\n    l1 = divisors(m)\n    l2 = []\n    for d in l1:\n        n = (m - d) / a\n        if n >= d and n % 1 == 0 and (n % d == 0):\n            l2.append(int(n))\n    l2.sort()\n    s = s + str(len(l2)) + '\\n'\n    for i in l2:\n        s = s + str(i) + ' '\n    s += '\\n'\nprint(s)", "t = int(input())\nwhile t:\n    t -= 1\n    l = list(map(int, input().split()))\n    a = l[0]\n    m = l[1]\n    d = []\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            if m // i == i:\n                d.append(i)\n            else:\n                d.append(i)\n                d.append(m // i)\n    x = len(d)\n    l1 = []\n    for i in range(x):\n        n = (m - d[i]) / a\n        if n % d[i] == 0 and n != 0:\n            l1.append(int(n))\n    l1.sort()\n    print(len(l1))\n    print(*l1)", "t = int(input())\nfor j in range(t):\n    (a, m) = [int(x) for x in input().split()]\n    count = 0\n    li = []\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            li.append(i)\n            li.append(m // i)\n    l = []\n    for i in li:\n        if (m // i - 1) % a == 0:\n            if (m // i - 1) // a * i == 0:\n                continue\n            l.append((m // i - 1) // a * i)\n            count += 1\n    print(count)\n    for i in sorted(l):\n        print(i, end=' ')\n    print()", "import math\nt = int(input())\nwhile t:\n    (a, m) = map(int, input().split())\n    fac_m = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            fac_m.extend([i, m // i])\n    li_a = []\n    for i in fac_m:\n        r = m / i - 1\n        if r % a == 0:\n            q = r // a\n            li_a.append(q * i)\n    li_a = sorted(set(li_a))\n    if 0 in li_a:\n        li_a.remove(0)\n    print(len(li_a))\n    for i in li_a:\n        print(int(i), end=' ')\n    print()\n    t -= 1", "import math\nfrom itertools import product\n\ndef gen_primes():\n    D = {}\n    q = 2\n    while True:\n        if q not in D:\n            yield q\n            D[q * q] = [q]\n        else:\n            for p in D[q]:\n                D.setdefault(p + q, []).append(p)\n            del D[q]\n        q += 1\n\ndef primes(gen=gen_primes(), mem=[]):\n    for p in mem:\n        yield p\n    for p in gen:\n        mem.append(p)\n        yield p\n\ndef decompose(n):\n    root = math.sqrt(n)\n    for p in primes():\n        if p > root:\n            return\n        (d, m) = divmod(n, p)\n        k = 0\n        while m == 0:\n            k += 1\n            n = d\n            (d, m) = divmod(n, p)\n        if k:\n            yield (p, k)\n            if n == 1:\n                return\n\ndef divisors(n):\n    dn = list(decompose(n))\n    if not dn:\n        return [1]\n    (ps, ks) = zip(*dn)\n    res = set()\n    for u in product(*[range(k + 1) for k in ks]):\n        prod = 1\n        for (p, k) in zip(ps, u):\n            prod *= p ** k\n        res.add(prod)\n        res.add(n // prod)\n    return res\n\ndef sol(a, m):\n    for d in divisors(m):\n        (dd, r) = divmod(m - d, a)\n        if r == 0 and dd > 0 and (dd % d == 0):\n            yield dd\n\ndef main():\n    (t,) = [int(x) for x in input().split()]\n    for _ in range(t):\n        (a, m) = [int(x) for x in input().split()]\n        res = sorted(sol(a, m))\n        print(len(res))\n        print(' '.join((str(x) for x in res)))\nmain()", "def factors(n):\n    f = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            f.append(i)\n            f.append(n // i)\n    return set(f)\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    r = []\n    c = 0\n    f = factors(m)\n    for i in f:\n        if (m / i - 1) % a == 0:\n            c += 1\n            n = (m - i) // a\n            r.append(n)\n    print(c - 1)\n    r.sort()\n    r = r[1:]\n    print(*r)", "def findFactors(N):\n    factors = set()\n    factors.add(1)\n    factors.add(N)\n    factors.add(N)\n    for i in range(2, int((N + 1) ** 0.5)):\n        if N % i == 0:\n            factors.add(i)\n            factors.add(N // i)\n    return factors\n\ndef testcase():\n    (a, m) = [int(i) for i in input().split()]\n    n = []\n    mfactors = findFactors(m)\n    for d in mfactors:\n        qa = m // d - 1\n        if qa % a == 0:\n            q = qa // a\n            if q * d == 0:\n                continue\n            else:\n                n.append(q * d)\n    n.sort()\n    print(len(n))\n    print(' '.join([str(i) for i in n]))\nt = int(input())\nfor test in range(t):\n    testcase()", "from math import sqrt\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    l = []\n    for i in range(1, int(sqrt(m) + 1)):\n        if m % i == 0:\n            if i == m // i:\n                l.append(i)\n            else:\n                l.append(i)\n                l.append(m // i)\n    l1 = []\n    for i in l:\n        if (i - 1) % a == 0 and i > 1:\n            q = (i - 1) // a\n            d = m // i\n            l1.append(q * d)\n    print(len(l1))\n    l1.sort()\n    print(*l1)", "import math\n\ndef printDivisors(a, n):\n    i = 1\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n // i == i:\n                a.append(i)\n            else:\n                a.append(i)\n                a.append(n // i)\n    return a\nx = int(input())\nc = []\no = []\no1 = []\nfor i in range(x):\n    l1 = [int(y) for y in input().split()]\n    a = l1[0]\n    m = l1[1]\n    b = printDivisors(c, m)\n    for d in b:\n        n = (m - d) / a\n        if n >= d and n % 1 == 0 and (n % d == 0):\n            o1.append(int(n))\n    c = []\n    o1 = sorted(o1)\n    o.append(o1)\n    o1 = []\nfor i in range(len(o)):\n    print(len(o[i]))\n    for j in o[i]:\n        print(j, end=' ')\n    print()", "from collections import defaultdict\nfrom heapq import *\nimport itertools, math\n\ndef parse_integer_list():\n    return [int(x) for x in input().split()]\n\ndef handle_input(M, A):\n    res = []\n    high_candidates = []\n    for i in range(1, math.floor(math.sqrt(M) + 1)):\n        if M % i == 0:\n            if (M - i) % A == 0 and (M - i) // A % i == 0:\n                res.append((M - i) // A)\n            if i != 1:\n                high_candidates.append(M // i)\n    for i in reversed(high_candidates):\n        if (M - i) % A == 0 and (M - i) // A % i == 0:\n            res.append((M - i) // A)\n    print(len(res))\n    print(' '.join([str(x) for x in reversed(res)]))\nT = int(input())\nfor i in range(T):\n    (A, M) = parse_integer_list()\n    handle_input(M, A)", "import math\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    i = 2\n    sd = [m]\n    while i <= math.sqrt(m):\n        if m % i == 0:\n            if m // i == i:\n                sd.append(i)\n            else:\n                sd.append(i)\n                sd.append(m // i)\n        i = i + 1\n    ls = []\n    cnt = 0\n    for i in sd:\n        if (i - 1) % a == 0:\n            ls.append(m // i * (i - 1) // a)\n            cnt += 1\n    print(cnt)\n    ls.sort()\n    for i in range(len(ls)):\n        print(ls[i], end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    c = 0\n    l = set()\n    h = []\n    for i in range(2, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            l.add(i)\n            l.add(m // i)\n    l.add(m)\n    for i in l:\n        if (i - 1) % a == 0:\n            h.append(m // i * ((i - 1) // a))\n    h.sort()\n    print(len(h))\n    for i in h:\n        print(i, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    km = m\n    nl = []\n    i = 1\n    fact = []\n    while i <= math.sqrt(m):\n        if m % i == 0:\n            fact.append(i)\n            if m // i != i:\n                fact.append(m // i)\n        i += 1\n    for i in fact:\n        x = i\n        if i > 1 and (x - 1) % a == 0:\n            k = (x - 1) // a\n            d = m // x\n            nl.append(k * d)\n    nl.sort()\n    print(len(nl))\n    for i in nl:\n        print(i, end=' ')\n    print()", "import math\n\ndef divisors(m):\n    l1 = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                l1.append(i)\n            else:\n                l1.append(i)\n                l1.append(m // i)\n    return l1\ns = ''\ntest = int(input())\nwhile test != 0:\n    (a, m) = list(map(int, input().split()))\n    l = divisors(m)\n    ans = []\n    for d in l:\n        n = (m - d) / a\n        if n >= d and n % 1 == 0 and (n % d == 0):\n            ans.append(int(n))\n    ans.sort()\n    s = s + str(len(ans)) + '\\n'\n    for i in ans:\n        s = s + str(i) + ' '\n    s += '\\n'\n    test = test - 1\nprint(s)", "import math\nfor t in range(int(input())):\n    l1 = [int(y) for y in input().split()]\n    a = l1[0]\n    m = l1[1]\n    s = ''\n    l1 = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                l1.append(i)\n            else:\n                l1.append(i)\n                l1.append(m // i)\n    l2 = []\n    for d in l1:\n        n = (m - d) / a\n        if n >= d and n % 1 == 0 and (n % d == 0):\n            l2.append(int(n))\n    l2.sort()\n    s = s + str(len(l2)) + '\\n'\n    for i in l2:\n        s = s + str(i) + ' '\n    print(s)", "import math\n\ndef printDivisors(n):\n    i = 1\n    l = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                l.append(i)\n            else:\n                l += [i, n // i]\n        i = i + 1\n    return l\n\ndef guess(a, m):\n    l1 = printDivisors(m)\n    l2 = []\n    for i in l1:\n        n = (m - i) / a\n        if n < m and n % i == 0 and (n != 0):\n            l2.append(n)\n    print(len(l2))\n    l2.sort()\n    for i in l2:\n        print(int(i), end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    a = l[0]\n    m = l[1]\n    guess(a, m)", "import math\nt = int(input())\nfor _ in range(t):\n    (A, M) = map(int, input().split())\n    i = 2\n    divisors = [M]\n    while i <= int(math.sqrt(M)):\n        if M % i == 0:\n            divisors.append(i)\n            if M // i != i:\n                divisors.append(M // i)\n        i += 1\n    expr = lambda divisor: M // divisor * (divisor - 1) // A\n    res = [expr(divisor) for divisor in divisors if (divisor - 1) % A == 0]\n    res.sort()\n    print(len(res))\n    if res:\n        print(*res)\n    else:\n        print()", "import math\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    l = list()\n    cnt = 0\n    for i in range(1, int(math.sqrt(m)) + 1):\n        x = m % i\n        if x == 0:\n            sh = (i - 1) % a\n            req = (i - 1) // a\n            if sh == 0:\n                cnt += 1\n                if int(m / i) * req != 0:\n                    l.append(int(m / i) * req)\n            re = int(m / i)\n            sh = (re - 1) % a\n            req = (re - 1) // a\n            if sh == 0:\n                cnt += 1\n                if int(m / re) * req != 0:\n                    l.append(int(m / re) * req)\n    l.sort()\n    print(len(l))\n    for i in range(len(l)):\n        print(l[i], end=' ')\n    print(' ')", "from math import sqrt\n\ndef find_factors(m):\n    factors = []\n    for i in range(1, int(sqrt(m)) + 1):\n        if m % i == 0:\n            factors.append(i)\n            if m / i != i:\n                factors.append(m / i)\n    return factors\nfor _ in range(int(input())):\n    (a, m) = [int(x) for x in input().split()]\n    factors = find_factors(m)[1:]\n    sol = []\n    for i in factors:\n        if (i - 1) % a == 0:\n            q = (i - 1) / a\n            d = m / i\n            sol.append(int(q * d))\n    sol.sort()\n    print(len(sol))\n    for i in sol:\n        print(i, end=' ')\n    print()", "def factors(n):\n    List = set()\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            List.add(i)\n            List.add(int(n / i))\n    return list(List)\nfor _ in range(int(input())):\n    (A, M) = [int(x) for x in input().split()]\n    List = factors(M)\n    count = 0\n    Numbers = []\n    for i in List:\n        if (i - 1) % A == 0:\n            q = int((i - 1) / A)\n            d = int(M / i)\n            N = q * d\n            count += 1\n            Numbers.append(N)\n    print(len(Numbers) - 1)\n    Numbers.sort()\n    Numbers.remove(0)\n    print(*Numbers)", "def factors(n):\n    List = set()\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            List.add(i)\n            List.add(int(n / i))\n    return list(List)\nfor _ in range(int(input())):\n    (A, M) = [int(x) for x in input().split()]\n    List = factors(M)\n    count = 0\n    Numbers = []\n    for i in List:\n        if (i - 1) % A == 0:\n            q = int((i - 1) / A)\n            d = int(M / i)\n            N = q * d\n            count += 1\n            Numbers.append(N)\n    print(len(Numbers) - 1)\n    Numbers.sort()\n    Numbers.remove(0)\n    print(*Numbers)", "import math\n\ndef divisors(m):\n    l1 = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                l1.append(i)\n            else:\n                l1.append(i)\n                l1.append(m // i)\n    return l1\nt = int(input())\nwhile t > 0:\n    (a, m) = map(int, input().split())\n    fac = divisors(m)\n    l = []\n    for i in fac:\n        n = (m - i) / a\n        if n >= i and n % i == 0 and (n % 1 == 0):\n            l.append(int(n))\n    l.sort()\n    print(len(l))\n    for i in l:\n        print(i, end=' ')\n    print()\n    t -= 1", "import math\n\ndef divisors(n, l):\n    i = 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                l.append(i)\n            else:\n                l.append(i)\n                l.append(n // i)\n        i = i + 1\n    return l\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    divisors(m, l)\n    l.remove(1)\n    ll = []\n    c = 0\n    for i in l:\n        if (i - 1) % n == 0:\n            q = (i - 1) // n\n            d = m // (q * n + 1)\n            ll.append(q * d)\n            c += 1\n    print(c)\n    print(*sorted(ll))", "import math\nt = int(input())\nfor i in range(t):\n    d = []\n    n = []\n    (a, m) = map(int, input().split())\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            if m // i == i:\n                d.append(i)\n            else:\n                d.append(i)\n                d.append(m // i)\n    for i in d:\n        if (m - i) % a == 0:\n            l = (m - i) // a\n            if l != 0 and l % i == 0:\n                n.append(l)\n    n = sorted(n)\n    if len(n) > 0:\n        print(len(n))\n        for i in n:\n            print(i, end=' ')\n        print()\n    else:\n        print(0)\n        print(' ')\n        print()", "from math import sqrt\nt = int(input())\nfor jack in range(t):\n    (a, m) = map(int, input().split())\n    fac = [1]\n    n = []\n    for i in range(2, int(sqrt(m)) + 1):\n        if m % i == 0:\n            fac.append(i)\n            if i != m // i:\n                fac.append(m // i)\n    fac.sort(reverse=True)\n    for i in range(len(fac)):\n        if (m // fac[i] - 1) % a == 0:\n            x = (m // fac[i] - 1) // a\n            n.append(x * fac[i])\n    print(len(n))\n    for i in n:\n        print(i, end=' ')\n    print()", "import math as ma\nt = int(input())\nfor _ in range(t):\n    fact = []\n    (a, m) = map(int, input().split())\n    for i in range(2, ma.ceil(ma.sqrt(m))):\n        if m % i == 0:\n            fact.append(i)\n            fact.append(m // i)\n    if ma.sqrt(m) == int(ma.sqrt(m)):\n        fact.append(int(ma.sqrt(m)))\n    fact.append(m)\n    fact.sort()\n    ans = []\n    for f in fact:\n        if (f - 1) % a == 0:\n            q = (f - 1) // a\n            d = m // f\n            n = q * d\n            ans.append(n)\n    print(len(ans))\n    if len(ans) == 0:\n        print(' ')\n    else:\n        print(*ans)", "from functools import reduce\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    l = []\n    f = list(factors(m))\n    f.sort()\n    f.pop()\n    for i in f:\n        if (m - i) / a % i == 0:\n            l.append(int((m - i) / a))\n    print(len(l))\n    l.sort()\n    for i in l:\n        print(i, end=' ')\n    print('')", "for i in range(int(input())):\n    (a, m) = map(int, input().split())\n    j = 1\n    l = []\n    while j * j <= m:\n        if m % j == 0:\n            if j != m // j:\n                l.append(j)\n                l.append(m // j)\n            else:\n                l.append(j)\n        j += 1\n    l2 = []\n    j = 0\n    for i in range(len(l)):\n        t = (m - l[i]) / a\n        if t >= l[i] and t % 1 == 0 and (t % l[i] == 0):\n            l2.append(t)\n            j += 1\n    l2.sort()\n    print(j)\n    for i in range(j):\n        print(int(l2[i]), end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (a, m) = map(int, input().split())\n    factors = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            factors.append(i)\n            if i != m // i:\n                factors.append(m // i)\n    N = []\n    count = 0\n    for f in factors:\n        if (f - 1) % a == 0:\n            q = (f - 1) // a\n            d = m // f\n            if q * d != 0:\n                N.append(q * d)\n                count += 1\n    print(count)\n    if count == 0:\n        print()\n    else:\n        N.sort()\n        print(*N)", "T = int(input())\nwhile T:\n    (A, M) = map(int, input().split())\n    ls = []\n    for i in range(1, int(M ** 0.5) + 2):\n        if M % i == 0:\n            d = i\n            if (M - d) % A == 0:\n                N = (M - d) // A\n                if N % d == 0 and N > 0:\n                    ls.append(N)\n            d = M // i\n            if (M - d) % A == 0:\n                N = (M - d) // A\n                if N % d == 0 and N > 0:\n                    ls.append(N)\n    ls = list(set(ls))\n    print(len(ls))\n    ls.sort()\n    print(*ls)\n    T -= 1", "T = int(input())\nimport math\nfor _ in range(T):\n    (a, m) = (int(x) for x in input().split(' '))\n    fac = []\n    N = []\n    count = 0\n    i = 1\n    while i <= math.sqrt(m):\n        if m % i == 0:\n            if m // i == i:\n                fac.append(i)\n            else:\n                fac.append(i)\n                fac.append(m // i)\n        i = i + 1\n    fac.remove(1)\n    for f in fac:\n        if (f - 1) % a == 0:\n            q = (f - 1) // a\n            n = q * (m // f)\n            N.append(n)\n            count += 1\n    N.sort()\n    print(count)\n    print(*N)", "import math\n\ndef getFactors(m):\n    factors = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            factors.append(i)\n            if m / i != i:\n                factors.append(m / i)\n    return factors\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    nValues = []\n    xValues = getFactors(m)\n    for x in xValues:\n        if x > 1 and (x - 1) % a == 0:\n            k = (x - 1) / a\n            d = m / x\n            nValues.append(int(k * d))\n    nValues.sort()\n    print(len(nValues))\n    print(*nValues)", "import math\n\ndef getFactors(m):\n    factors = []\n    for i in range(1, int(math.sqrt(m)) + 1):\n        if m % i == 0:\n            factors.append(i)\n            if m / i != i:\n                factors.append(m / i)\n    return factors\nt = int(input())\nfor _ in range(t):\n    (a, m) = map(int, input().split())\n    nValues = []\n    xValues = getFactors(m)\n    for x in xValues:\n        if x > 1 and (x - 1) % a == 0:\n            k = (x - 1) / a\n            d = m / x\n            nValues.append(int(k * d))\n    nValues.sort()\n    print(len(nValues))\n    print(*nValues)", "t = int(input())\nfor T in range(t):\n    (a, m) = map(int, input().split())\n    ar = []\n    factors = []\n    for i in range(1, int(m ** 0.5) + 1):\n        if m % i == 0:\n            factors.append(i)\n            factors.append(m // i)\n    n = m // a\n    for i in factors:\n        if i != 1 and (i - 1) % a == 0:\n            ar.append((i - 1) * m // (i * a))\n    print(len(ar))\n    ar.sort()\n    for i in range(len(ar)):\n        print(int(ar[i]), end=' ')\n    print()", "import math\n\ndef divisors(n):\n    res = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            res.append(i)\n            if n // i != i:\n                res.append(n // i)\n    return res\nt = int(input())\nfor i in range(0, t):\n    (a, m) = map(int, input().split())\n    res = divisors(m)\n    ans = []\n    for i in res:\n        if (i - 1) % a == 0 and i > 1:\n            q = (i - 1) // a\n            d = m // i\n            n = q * d\n            ans.append(n)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "import math\n\ndef getDivisors(n):\n    i = 1\n    arr = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                arr.append(i)\n            else:\n                arr.append(i)\n                arr.append(n / i)\n        i += 1\n    return arr\nt = int(input())\nfor _ in range(t):\n    (a, m) = list(map(int, input().split()))\n    ans = []\n    counter = 0\n    fac = getDivisors(m)\n    for f in fac:\n        if (f - 1) % a == 0 and f != 1:\n            q = (f - 1) // a\n            d = m // f\n            N = q * d\n            ans.append(int(N))\n            counter += 1\n    ans.sort()\n    print(counter)\n    for i in range(len(ans)):\n        print(ans[i], end=' ')\n    print()"]