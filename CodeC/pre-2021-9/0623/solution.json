["x = int(input(''))\nans = 0\nif x < 13:\n    ans = 0\nif x >= 13:\n    if x % 2 == 0:\n        x = int(x - 2)\n    if x % 2 == 1:\n        x = int(x - 1)\n    x = x // 2\n    ans = x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5) // 720\n    ans = int(ans % 1000000007)\nprint('', ans)", "x = int(input(''))\nans = 0\nif x < 13:\n    ans = 0\nif x >= 13:\n    if x % 2 == 0:\n        x = int(x - 2)\n    if x % 2 == 1:\n        x = int(x - 1)\n    x = x // 2\n    ans = x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5) // 720\n    ans = int(ans % 1000000007)\nprint('', ans)", "import math\nimport sys\nfrom collections import Counter, defaultdict\nfrom bisect import bisect_left\nmod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef main():\n    try:\n        if n < 13:\n            print(0)\n        elif n == 14 or n == 13:\n            print(1)\n        else:\n            objects = (n - 13) // 2\n            reciver = 7\n            ans = 1\n            for i in range(1, 7):\n                ans *= objects + i\n            ans = ans // 720\n            ans %= mod\n            print(ans)\n    except Exception as e:\n        print(e)\nfor _ in range(1):\n    n = int(input())\n    main()", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\n\ndef comb(n, r):\n    r = min(r, n - r)\n    num = 1\n    den = 1\n    for i in range(1, r + 1):\n        den = den * i\n    for i in range(n, n - r, -1):\n        num = num * i\n    return num // den\nans = 0\nmodulo = int(1000000000.0) + 7\nfor i in range(1, n + 1):\n    noOfa7 = i\n    rem = n - noOfa7\n    if rem % 2 == 0:\n        k = rem // 2\n        if k >= 6:\n            ans = (ans % modulo + comb(k - 1, 5) % modulo) % modulo\nprint(ans)", "n = int(input())\nans = 0\nif n % 2 == 1:\n    for i in range(1, n - 11, 2):\n        t = (n - i) // 2\n        t -= 1\n        if t < 5:\n            break\n        ans += t * (t - 1) * (t - 2) * (t - 3) * (t - 4) // 120\nelse:\n    for i in range(2, n - 11, 2):\n        t = (n - i) // 2\n        t -= 1\n        if t < 5:\n            break\n        ans += t * (t - 1) * (t - 2) * (t - 3) * (t - 4) // 120\nans %= 1000000007\nprint(int(ans))", "import sys\n\ndef modInverse(n, MOD):\n    return pow(n, MOD - 2, MOD)\n\ndef choose(n, k, m):\n    N = 1\n    D = 1\n    for i in range(k):\n        N = N * (n - i) % m\n    for i in range(1, k + 1):\n        D = D * i % m\n    return N * modInverse(D, m) % m\nn = int(sys.stdin.readline())\nn = n + 1 >> 1\nprint(choose(n - 1, 6, 10 ** 9 + 7))", "n = int(input())\nif n < 13:\n    print(0)\nelse:\n    n = (n - 13) // 2 + 6\n    r = 7 - 1\n    mod = 10 ** 9 + 7\n    ans = n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) // 720\n    print(ans % mod)", "def combi(n, r):\n    r = min(r, n - r)\n    ans = 1\n    for i in range(1, r + 1):\n        ans *= n\n        n -= 1\n    for i in range(2, r + 1):\n        ans = ans // i\n    ans = ans % 1000000007\n    return ans\nn = int(input())\nif n < 13:\n    print('0')\nelse:\n    n = (n - 13) // 2\n    print(combi(n + 6, 6))", "M = 1000000007\n\ndef factr(n, prod):\n    p = 1\n    st2 = 0\n    st3 = 0\n    st4 = 0\n    st5 = 0\n    st6 = 0\n    for i in range(0, 6):\n        p = n - i\n        if p % 6 == 0 and st6 == 0:\n            p /= 6\n            st6 = 1\n        if p % 5 == 0 and st5 == 0:\n            p /= 5\n            st5 = 1\n        if p % 4 == 0 and st4 == 0:\n            p /= 4\n            st4 = 1\n        if p % 3 == 0 and st3 == 0:\n            p /= 3\n            st3 = 1\n        if p % 2 == 0 and st2 == 0:\n            p /= 2\n            st2 = 1\n        p = p % M\n        prod.append(int(p))\nn = int(input())\nif n < 13:\n    print(0)\nelse:\n    if n % 2 == 1:\n        n += 1\n    n = int(n / 2)\n    k = n - 1\n    prod = []\n    m = 1\n    factr(k, prod)\n    for i in prod:\n        m = m * i % M\n    print(m)", "a = int(input())\na = a - 13\na = a // 2\nif a < 0:\n    print(0)\nelif a == 0:\n    print(1)\nelse:\n    n = a + 6\n    t = 1\n    for i in range(a + 1, n + 1):\n        t = t * i\n    t = t // 720\n    print(t % 1000000007)", "n = int(input())\nn = n - 13\nif n <= 0:\n    if n == 0:\n        print(1)\n    else:\n        print(0)\nelse:\n    n = n // 2\n    f = 1\n    for x in range(1, 7):\n        f *= x\n    ans = 1\n    n = n + 6\n    for x in range(6):\n        ans *= n\n        n -= 1\n    ans = ans // f\n    ans = ans % 1000000007\n    print(ans)", "def ncr(n, r):\n    if r < 0 or r > n:\n        return 0\n    numerator = (n - 4) * (n - 3) * (n - 2) * (n - 1) * n\n    denominator = 120\n    return numerator // denominator\nmodulo = 1000000000 + 7\nN = int(input())\nans = 0\nif N % 2 == 0:\n    a7 = 2\nelse:\n    a7 = 1\nwhile N - a7 > 11:\n    n = (N - a7) // 2\n    n -= 6\n    ans += ncr(6 + n - 1, n)\n    a7 += 2\nprint(ans % modulo)", "i = int(input())\nif i < 13:\n    print(0)\nif i >= 13:\n    i = int((i - 1) / 2)\n    d = 1\n    for k in range(0, 6):\n        d = d * (i - k) % 1000000007\n    d = d * 301388891 % 1000000007\n    print(int(d))", "a = int(input())\na = a - 13\na = a // 2\nif a < 0:\n    print(0)\nelif a == 0:\n    print(1)\nelse:\n    n = a + 6\n    t = 1\n    for i in range(a + 1, n + 1):\n        t = t * i\n    t = t // 720\n    print(t % 1000000007)", "import operator as op\nimport functools\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    if r == 0:\n        return 1\n    numer = functools.reduce(op.mul, range(n, n - r, -1))\n    denom = functools.reduce(op.mul, range(1, r + 1))\n    return numer // denom\nn = int(input())\ndiff = int(n - 13)\nif diff < 0:\n    print('0')\nelse:\n    sum1 = ncr(7 + int(diff / 2) - 1, int(diff / 2))\n    print(sum1 % 1000000007)", "n = int(input())\nif n < 13:\n    print('0')\nelif n == 13 or n == 14:\n    print('1')\nelse:\n    diff = (n - 13) // 2\n    big = diff + 6\n    if diff > 6:\n        val = 6\n        diff = 6\n    else:\n        val = diff\n    (ans, ans1) = (1, 1)\n    for x in range(val):\n        ans = ans * big\n        big = big - 1\n        ans1 = ans1 * diff\n        diff = diff - 1\n    print(ans // ans1 % 1000000007)", "n = int(input())\nif n < 13:\n    print('0')\nelif n == 13 or n == 14:\n    print('1')\nelse:\n    diff = (n - 13) // 2\n    big = diff + 6\n    if diff > 6:\n        val = 6\n        diff = 6\n    else:\n        val = diff\n    (ans, ans1) = (1, 1)\n    for x in range(val):\n        ans = ans * big\n        big = big - 1\n        ans1 = ans1 * diff\n        diff = diff - 1\n    print(ans // ans1 % 1000000007)", "MOD = 10 ** 9 + 7\nn = int(input())\nn = (n - 1) // 2\nwyn = (n ** 6 - 15 * n ** 5 + 85 * n ** 4 - 225 * n ** 3 + 274 * n ** 2 - 120 * n) // 720\nprint(wyn % MOD)", "x = int(input(''))\nans = 0\nif x < 13:\n    ans = 0\nif x >= 13:\n    if x % 2 == 0:\n        x = int(x - 2)\n    if x % 2 == 1:\n        x = int(x - 1)\n    x = x // 2\n    ans = x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5) // 720\n    ans = int(ans % 1000000007)\nprint('', ans)", "x = int(input(''))\nans = 0\nif x < 13:\n    ans = 0\nif x >= 13:\n    if x % 2 == 0:\n        x = int(x - 2)\n    if x % 2 == 1:\n        x = int(x - 1)\n    x = x // 2\n    ans = x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5) // 720\n    ans = int(ans % 1000000007)\nprint('', ans)", "n = int(input())\nm = int(n / 2)\nif n % 2 == 0:\n    w = (m - 6) * (m - 5) * (m - 4) * (m - 3) * (m - 2) * (m - 1)\nelse:\n    w = (m - 5) * (m - 4) * (m - 3) * (m - 2) * (m - 1) * m\nif n < 13:\n    w = 0\nw = w // 720\nw = w % 1000000007\nprint(int(w))", "x = int(input(''))\nans = 0\nif x < 13:\n    ans = 0\nif x >= 13:\n    if x % 2 == 0:\n        x = int(x - 2)\n    if x % 2 == 1:\n        x = int(x - 1)\n    x = x // 2\n    ans = x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5) // 720\n    ans = int(ans % 1000000007)\nprint('', ans)", "n = int(input())\nn = n - 13\nif n <= 0:\n    if n == 0:\n        print(1)\n    else:\n        print(0)\nelse:\n    n = n // 2\n    f = 1\n    for x in range(1, 7):\n        f *= x\n    ans = 1\n    n = n + 6\n    for x in range(6):\n        ans *= n\n        n -= 1\n    ans = ans // f\n    ans = ans % 1000000007\n    print(ans)", "def combi(n, r):\n    r = min(r, n - r)\n    ans = 1\n    for i in range(1, r + 1):\n        ans *= n\n        n -= 1\n    for i in range(2, r + 1):\n        ans = ans // i\n    ans = ans % 1000000007\n    return ans\nn = int(input())\nif n < 13:\n    print('0')\nelse:\n    n = (n - 13) // 2\n    ans = 1\n    for i in range(1, n + 1):\n        ans = (ans + combi(i + 5, 5)) % 1000000007\n    print(ans)", "import sys\nimport math\nfrom time import time\nfrom itertools import permutations, combinations\nimport collections\nimport functools\nfrom fractions import gcd, Fraction\nimport string\nimport operator\nimport bisect\n\nclass timed(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __call__(self, *args):\n        t1 = time()\n        ret = self.func(*args)\n        dif_time = time() - t1\n        print('%s: returned %s in %f seconds' % (self.func.__name__, ret, dif_time))\n        return ret\n\ndef comp(f1, f2, *args):\n    t1 = time()\n    r1 = f1(*args) if f1 is not None else None\n    t2 = time()\n    r2 = f2(*args) if f2 is not None else None\n    t3 = time()\n    res = '%5s: %s in %f\\n%5s: %s in %f' % (f1.__name__ if f1 is not None else None, r1, t2 - t1, f2.__name__ if f2 is not None else None, r2, t3 - t2)\n    if r1 != r2:\n        dr = '!! DIFFERENT RESULTS !!'\n        res = dr + '\\n' + res + '\\n' + dr\n    print(res)\n\ndef alg(N):\n    res = 0\n    B = 6\n    while True:\n        C = N - 2 * B\n        if C >= 1:\n            v = B - 6\n            res += pow(6, v, 1000000007)\n        else:\n            break\n        B += 1\n    return res\n\ndef alg2(N):\n    res = 0\n    B = 6\n    while True:\n        C = N - 2 * B\n        if C >= 1:\n            res += math.factorial(B - 6 + 6 - 1) // (math.factorial(B - 6) * math.factorial(6 - 1))\n            res %= 1000000007\n        else:\n            break\n        B += 1\n    return res\n\ndef alg3(N):\n    res = 0\n    B = 6\n    nominator = math.factorial(5)\n    denom1 = nominator\n    nd = 1\n    while True:\n        C = N - 2 * B\n        if C >= 1:\n            res += nd\n            res %= 1000000007\n        else:\n            break\n        B += 1\n        nd *= B - 1\n        nd //= B - 6\n    return res\n\ndef alg4(N):\n    MOD = 1000000007\n    res = 0\n    B = 6\n    nd = 1\n    C = N - 2 * B\n    while True:\n        if C >= 1:\n            res += nd\n        else:\n            break\n        nd *= B\n        nd //= B - 5\n        B += 1\n        C -= 2\n    return res % MOD\n\ndef main():\n    data = sys.stdin\n    nb = int(data.readline())\n    print(alg3(nb))\nmain()", "def C(n, k):\n    ans = 1\n    for i in range(n, n - k, -1):\n        ans *= i\n    for i in range(1, k + 1):\n        ans //= i\n    return ans % (10 ** 9 + 7)\nn = int(input().split()[0])\nif n % 2:\n    print(C(n // 2, 6))\nelse:\n    print(C(n // 2 - 1, 6))", "def modulo(p, q, r):\n    x = 1\n    y = p\n    while q > 0:\n        if q % 2 == 1:\n            x = y * x % r\n        y = y * y % r\n        q /= 2\n        q = int(q)\n    return x % r\nmod = 1000000007\nn = input()\nn = int(n)\nn = (n - 1) / 2\nn = int(n)\nans = modulo(n, 6, mod) - 15 * modulo(n, 5, mod) + 85 * modulo(n, 4, mod) - 225 * modulo(n, 3, mod) + 274 * modulo(n, 2, mod) - 120 * n\nans = ans % mod\nans = ans * modulo(720, mod - 2, mod)\nans %= mod\nans = int(ans)\nans = ans % 1000000007\nprint(ans)", "__author__ = 'Tanay Jha'\nn = int(input())\nx = int((n - 13) / 2)\nans = int((x + 1) * (x + 2) * (x + 3) * (x + 4) * (x + 5) * (x + 6))\nans //= 720\nprint(ans % 1000000007)", "def cal_coeff(n):\n    coeff = [1]\n    for k in range(7):\n        coeff.append(coeff[k] * (n - k) // (k + 1))\n    return coeff\narr = [1, 6, 15, 20, 15, 6, 1]\nmod = 10 ** 9 + 7\nn = int(input())\nif n % 2 == 0:\n    n -= 1\nif n < 13:\n    ans = 0\nelse:\n    ch = (n - 1) // 2 - 6\n    ans = 0\n    coeff = cal_coeff(ch)\n    r = ch + 1 if ch < 7 else 7\n    for i in range(r):\n        ans += coeff[i] * arr[i] % mod\nprint(ans % mod)", "from math import factorial\n\ndef nbCombinations(n):\n    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) // factorial(5)\nM = 10 ** 9 + 7\n\ndef solve(N):\n    first = 1 if N % 2 == 1 else 2\n    res = 0\n    for a7 in range(first, N - 12 + 1, 2):\n        half = (N - a7) // 2\n        res = (res + nbCombinations(half - 1) % M) % M\n    return res\nN = int(input())\nprint(solve(N))", "def ncr(n, r):\n    k = 1\n    for i in range(r):\n        k = k * (n - i)\n    for i in range(1, r + 1):\n        k = k // i\n    return k\nn = int(input())\nif n < 13:\n    print('0')\nelif n % 2 == 0:\n    n = int(n / 2)\n    ans = int(ncr(n - 1, 6))\n    ans = ans % 1000000007\n    print(str(ans))\nelse:\n    n = int(n / 2)\n    ans = int(ncr(n, 6))\n    ans = ans % 1000000007\n    print(str(ans))", "n = int(input()) - 12\nval = 0\nfor a7 in range(1 if n % 2 == 1 else 2, n + 1, 2):\n    m = (n - a7) // 2\n    val += (m + 5) * (m + 4) * (m + 3) * (m + 2) * (m + 1) // 120\nprint(val % 1000000007)"]