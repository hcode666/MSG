["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = [int(x) for x in input().split()]\n    max1 = max(list1)\n    ans = 0\n    for i in range(n):\n        if list1[i] == max1 and i >= k - 1:\n            ans += 1\n            ans += n - 1 - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = [int(x) for x in input().split()]\n    max1 = max(list1)\n    ans = 0\n    for i in range(n):\n        if list1[i] == max1 and i >= k - 1:\n            ans += 1\n            ans += n - 1 - i\n    print(ans)", "test = int(input())\nfor z in range(test):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    M = max(A)\n    ans = 0\n    for i in range(n):\n        if A[i] == M and i >= k - 1:\n            ans += 1\n            ans += n - 1 - i\n    print(ans)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    mx = max(l)\n    for i in range(k - 1, n):\n        if l[i] == mx:\n            ans += n - i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    mx = max(l)\n    for i in range(k - 1, n):\n        if l[i] == mx:\n            ans += n - i\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = max(l)\n    count = 0\n    for i in range(k - 1, n):\n        if l[i] == x:\n            count = count + (n - i)\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = max(l)\n    count = 0\n    for i in range(k - 1, n):\n        if l[i] == x:\n            count = count + (n - i)\n    print(count)", "import os, sys, io, math\nfrom array import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, k) = map(int, input().split())\n    l = I()\n    (r, s, m) = (0, 0, max(l))\n    for i in range(l.count(m)):\n        t = l.index(m, s)\n        if t >= k - 1:\n            r += n - t\n        s = t + 1\n    print(r)", "def k_subseq(a, n, k):\n    max_n = max(a)\n    final_sub_n = 0\n    prev_n = 0\n    for i in range(a.count(max_n)):\n        cur = a.index(max_n, prev_n)\n        if cur >= k - 1:\n            final_sub_n += n - cur\n        prev_n = cur + 1\n    return final_sub_n\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(k_subseq(a, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = max(x)\n    count = 0\n    for j in range(k - 1, len(x)):\n        if y == x[j]:\n            count += n - j\n    print(count)", "def solution():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (mx, ans, k) = (max(arr), 0, k - 1)\n    for i in range(n):\n        if arr[i] == mx and i >= k:\n            ans += n - i\n    print(ans)\nfor _ in range(int(input())):\n    solution()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    res = max(arr)\n    for i in range(k - 1, n):\n        if arr[i] == res:\n            cnt += n - i\n        else:\n            cnt = cnt\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    ans = 0\n    for j in range(n):\n        if arr[j] == maximum and j >= k - 1:\n            ans += n - j\n    print(ans)", "from bisect import bisect_left, bisect_right\nimport math\nfrom sys import maxsize\nfrom collections import defaultdict\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, k) = il()\n    num = il()\n    ans = 0\n    mx = max(num)\n    for i in range(k - 1, n):\n        if num[i] == mx:\n            ans += n - i\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    maximum = max(l)\n    ans = 0\n    for i in range(len(l)):\n        point = -1\n        if l[i] == maximum:\n            if i - m + 1 > -1:\n                point = i\n        if point == -1:\n            ans += 0\n        else:\n            ans += len(l) - i\n    print(ans)", "from sys import stdin\nip = stdin.readline\nfrom collections import Counter\nfor _ in range(int(ip())):\n    (n, k) = map(int, ip().split())\n    ar = list(map(int, ip().split()))\n    ans = 0\n    mx = max(ar)\n    for (i, x) in enumerate(ar):\n        if x == mx:\n            if i - k + 1 >= 0:\n                ans += n - i\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    maximum = max(l)\n    ans = 0\n    for i in range(len(l)):\n        point = -1\n        if l[i] == maximum:\n            if i - m + 1 > -1:\n                point = i\n        if point == -1:\n            ans += 0\n        else:\n            ans += len(l) - i\n    print(ans)", "def soln(n, k, arr):\n    maxm = max(arr)\n    res = 0\n    for i in range(k - 1, n):\n        if arr[i] == maxm:\n            res += n - i\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(soln(n, k, arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    count = 0\n    for i in range(k - 1, n):\n        if a[i] == m:\n            count += n - i\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    count = 0\n    for i in range(k - 1, n):\n        if a[i] == m:\n            count += n - i\n    print(count)", "for t in range(int(input())):\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    c = 0\n    maxi = max(A)\n    for i in range(K - 1, N):\n        if A[i] == maxi:\n            c += N - i\n        else:\n            c += 0\n    print(c)", "for t in range(int(input())):\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    c = 0\n    maxi = max(A)\n    for i in range(K - 1, N):\n        if A[i] == maxi:\n            c += N - i\n        else:\n            c += 0\n    print(c)", "for t in range(int(input())):\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().split()))\n    c = 0\n    maxi = max(A)\n    for i in range(K - 1, N):\n        if A[i] == maxi:\n            c += N - i\n        else:\n            c += 0\n    print(c)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxv = max(a)\n    ans = 0\n    for i in range(k - 1, n):\n        if a[i] == maxv:\n            ans = ans + n - i\n        else:\n            ans = ans + 0\n    print(ans)", "t = int(input())\nfor testcase in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    ans = 0\n    for i in range(k - 1, n):\n        if a[i] == mx:\n            ans += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    ans = 0\n    maxVal = max(A)\n    indices = [ind for (ind, ele) in enumerate(A) if ele == maxVal]\n    for i in indices:\n        if i >= k - 1:\n            ans += n - i\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    Mx = max(lis)\n    ans = 0\n    for i in range(k - 1, n):\n        if lis[i] == Mx:\n            ans += n - i\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr: enumerate(itr)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef solve(*args, **kwargs):\n    ((n, k), arr) = args\n    (max_, max_idx) = (max(arr), [])\n    for (idx, ele) in enum(arr):\n        if ele != max_:\n            continue\n        max_idx.append(idx)\n    return sum((n - idx for idx in max_idx if idx - k + 1 >= 0))\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg2 = inp_vars(int, SPACE)\n        arg3 = inp_vars(int, SPACE)\n        res = solve(*(arg2, arg3))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    Ai = list(map(int, input().split()))\n    m = max(Ai)\n    sume = 0\n    for i in range(n + 1 - k):\n        if Ai[i - 1 + k] == m:\n            sume += n - (i + k) + 1\n    print(sume)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    j = max(a)\n    ans = 0\n    for i in range(k - 1, n):\n        if a[i] == j:\n            ans += n - i\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    n = max(a)\n    c = 0\n    for i in range(y - 1, len(a)):\n        if a[i] == n:\n            c += len(a) - i\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = max(a)\n    count = 0\n    for j in range(len(a)):\n        if a[j] == d and j >= k - 1:\n            count += n - j\n    print(count)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = max(a)\n    count = 0\n    for j in range(0, len(a)):\n        if a[j] == d and j >= k - 1:\n            count += n - j\n    print(count)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = max(a)\n    count = 0\n    for j in range(0, len(a)):\n        if a[j] == d and j >= k - 1:\n            count += n - j\n    print(count)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = max(a)\n    count = 0\n    for j in range(0, len(a)):\n        if a[j] == d and j >= k - 1:\n            count += n - j\n    print(count)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = max(a)\n    count = 0\n    for j in range(0, len(a)):\n        if a[j] == d and j >= k - 1:\n            count += n - j\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    i = k - 1\n    ans = 0\n    while i < n:\n        if a[i] == mx:\n            ans += n - i\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    i = k - 1\n    ans = 0\n    while i < n:\n        if a[i] == mx:\n            ans += n - i\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    maxi = max(a)\n    for i in range(k - 1, n):\n        if a[i] == maxi:\n            ans += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = max(x)\n    count = 0\n    for j in range(k - 1, len(x)):\n        if y == x[j]:\n            count += n - j\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = max(x)\n    count = 0\n    for j in range(k - 1, len(x)):\n        if y == x[j]:\n            count += n - j\n    print(count)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    max1 = max(li)\n    count = 0\n    for i in range(k - 1, n):\n        if max1 == li[i]:\n            count += n - i\n    print(count)\n    t -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    Mx = max(lis)\n    ans = 0\n    for i in range(k - 1, n):\n        if lis[i] == Mx:\n            ans += n - i\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    Mx = max(lis)\n    ans = 0\n    for i in range(k - 1, n):\n        if lis[i] == Mx:\n            ans += n - i\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = max(l)\n    a = 0\n    for i in range(n):\n        if l[i] == m and i + 1 >= k:\n            a += n - i\n    print(a)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    maxx = max(list1)\n    counter = 0\n    for i in range(n):\n        if list1[i] == maxx:\n            if i >= k - 1:\n                counter += n - i\n    print(counter)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    k = inputs[1]\n    list1 = [int(num) for num in input().split()]\n    maxi = 0\n    max1 = list1[0]\n    for i in range(0, len(list1)):\n        if list1[i] > max1:\n            maxi = i\n            max1 = list1[i]\n    maxindices = []\n    for i in range(0, len(list1)):\n        if list1[i] == max1:\n            maxindices.append(i)\n    no_of_elements_before_max = maxi\n    c = 0\n    for i in range(0, len(maxindices)):\n        maxi = maxindices[i]\n        if maxi >= k - 1:\n            no_of_elements_after_max = n - (maxi + 1)\n            c += no_of_elements_after_max + 1\n    print(c)", "n = int(input())\nfor i in range(n):\n    (N, K) = [int(x) for x in input().split(' ')]\n    arr = [int(x) for x in input().split(' ')]\n    cnt = 0\n    maxele = max(arr)\n    for i in range(K - 1, N):\n        if arr[i] == maxele:\n            cnt += N - i\n    print(cnt)", "n = int(input())\nfor i in range(n):\n    (N, K) = [int(x) for x in input().split(' ')]\n    arr = [int(x) for x in input().split(' ')]\n    cnt = 0\n    maxele = max(arr)\n    for i in range(K - 1, N):\n        if arr[i] == maxele:\n            cnt += N - i\n    print(cnt)", "def function(Input):\n    for _ in range(Input):\n        (N, K) = map(int, input().split())\n        array = list(map(int, input().split()))\n        counter = 0\n        arrgmax = max(array)\n        for i in range(K - 1, N):\n            if array[i] == arrgmax:\n                counter += N - i\n        print(counter)\n    return ' '\nInput = int(input())\na = function(Input)\nprint(a)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    maxEle = max(arr)\n    c = 0\n    for i in range(k - 1, n):\n        if arr[i] == maxEle:\n            c += n - i\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    a = max(arr)\n    sum = 0\n    for i in range(k - 1, n):\n        if arr[i] == a:\n            sum += n - i\n    print(sum)", "t = int(input())\nfor q in range(t):\n    (n, k) = map(int, input().split())\n    N = list(map(int, input().split()))\n    count = 0\n    maxi = max(N)\n    for l in range(k - 1, n):\n        if N[l] == maxi:\n            count += n - l\n    print(count)", "T = int(input())\nfor tc in range(T):\n    (N, K) = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    ans = 0\n    if len(A) == N:\n        mx = max(A)\n        for i in range(K - 1, N):\n            if A[i] == mx:\n                ans = ans + N - i\n        print(ans)\n    else:\n        break", "T = int(input())\nfor tc in range(T):\n    (N, K) = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    ans = 0\n    mx = max(A)\n    for i in range(K - 1, N):\n        if A[i] == mx:\n            ans += N - i\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "try:\n    for i in range(int(input())):\n        (n, k) = map(int, input().split(' '))\n        l = list(map(int, input().split(' ')))\n        count = 0\n        left = 0\n        m = max(l)\n        for i in range(n):\n            if i - left + 1 == k:\n                if l[left + k - 1] == m:\n                    count += n - i\n                left += 1\n        print(count)\nexcept Exception:\n    pass", "from random import randrange\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    maxi = max(a)\n    mxind = [i for (i, x) in enumerate(a) if x == maxi and i >= k - 1]\n    ans = 0\n    for i in range(len(mxind)):\n        if mxind[i] >= k - 1:\n            ans += 1\n            ans += n - (mxind[i] + 1)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    mx = max(nli)\n    mxind = [i for (i, x) in enumerate(nli) if x == mx and i >= k - 1]\n    ans = 0\n    for i in range(len(mxind)):\n        if mxind[i] >= k - 1:\n            ans += 1\n            ans += n - (mxind[i] + 1)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    maxValue = max(arr)\n    maxIndices = []\n    for (i, element) in enumerate(arr):\n        if element == maxValue:\n            maxIndices.append(i)\n    counter = 0\n    for index in maxIndices:\n        if index + 1 < k:\n            continue\n        else:\n            counter += n - index\n    print(counter)", "t = int(input())\nfor z in range(t):\n    c = 0\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(k - 1, n):\n        if a[i] == m:\n            c = c + n - i\n    print(c)", "for _ in range(int(input())):\n    (n, k) = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    maxValue = max(arr)\n    maxIndices = []\n    for (i, element) in enumerate(arr):\n        if element == maxValue:\n            maxIndices.append(i)\n    counter = 0\n    for index in maxIndices:\n        if index + 1 < k:\n            continue\n        else:\n            counter += n - index\n    print(counter)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    maxi = max(l)\n    ans = 0\n    for i in range(n):\n        if l[i] == maxi and i >= k - 1:\n            ans += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    m = max(a)\n    for x in range(n - k + 1):\n        if a[x + k - 1] == m:\n            c += n - (x + k - 1)\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    ans = 0\n    m = max(A)\n    for i in range(k - 1, n):\n        if A[i] == m:\n            ans += n - i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    mx = max(a)\n    c = 0\n    for i in range(n):\n        if a[i] == mx and i + 1 >= k:\n            c += n - i\n    print(c)", "try:\n    for t in range(int(input())):\n        (N, K) = map(int, input().split())\n        A = list(map(int, input().split()))\n        count = 0\n        maximum = max(A)\n        for i in range(K - 1, N):\n            if A[i] == maximum:\n                count += N - i\n        print(count)\nexcept:\n    pass", "def kthmax(n, k, arr):\n    m1 = max(arr)\n    ans = 0\n    for i in range(k - 1, n):\n        if arr[i] == m1:\n            ans += n - i\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(kthmax(n, k, arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    m = max(l)\n    for i in range(n):\n        if l[i] == m:\n            if i - (k - 1) >= 0:\n                ans += n - i\n    print(ans)", "import math\nfor q in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    arr = []\n    max1 = 0\n    sum1 = 0\n    for i in range(n):\n        if max1 < a[i]:\n            max1 = a[i]\n    for i in range(k - 1, n):\n        if a[i] == max1:\n            sum1 += n - (i + 1) + 1\n    print(sum1)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    mx = max(a)\n    for i in range(k - 1, n):\n        if a[i] == mx:\n            count += n - i\n    print(count)", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    ans = 0\n    maxx = max(l)\n    for i in range(b - 1, a):\n        c = 0\n        if l[i] == maxx:\n            c = 1\n            c += a - 1 - i\n        ans += c\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    ele = max(s)\n    a = 0\n    for i in range(n):\n        if s[i] == ele and i + 1 >= k:\n            a += n - i\n    print(a)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = max(A)\n    a = 0\n    for i in range(N):\n        if A[i] == m and i + 1 >= K:\n            a += N - i\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    ans = 0\n    mx = max(num)\n    for i in range(k - 1, n):\n        if num[i] == mx:\n            ans += n - i\n    print(ans)", "def solve(arr, n, k):\n    ans = [0]\n    ind = 0\n    for i in range(1, n):\n        if arr[i] > arr[ind]:\n            ans = [i]\n            ind = i\n        elif arr[i] == arr[ind]:\n            ans.append(i)\n    res = 0\n    for x in ans:\n        if x >= k - 1:\n            res += n - x\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(arr, n, k))", "from collections import *\nfor u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    m = max(l)\n    for i in range(k - 1, n):\n        if l[i] == m:\n            c += n - i\n    print(c)", "for _ in range(int(input())):\n    (n, k) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    max_a = 0\n    for i in a:\n        if i > max_a:\n            max_a = i\n    count = 0\n    for i in range(k - 1, len(a)):\n        if a[i] == max_a:\n            count += n - i\n    print(count)", "test = int(input())\nfor i in range(0, test):\n    (n, k) = map(int, input().split(' '))\n    array = list(map(int, input().split()))\n    answer = 0\n    maax = max(array)\n    for i in range(k - 1, n):\n        if array[i] == maax:\n            answer += n - i\n    print(answer)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    maxi = max(a)\n    for i in range(k - 1, n):\n        if a[i] == maxi:\n            count += n - i\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    m = max(a)\n    c = 0\n    ind = a.index(max(a))\n    for j in range(n):\n        if a[j] == m and j + 1 >= k:\n            c = c + (n - j)\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    maxx = max(l)\n    ans = 0\n    for i in range(k - 1, n):\n        if l[i] == maxx:\n            ans += n - i\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    big = max(list1)\n    count = 0\n    for j in range(K - 1, N):\n        if list1[j] == big:\n            count += N - j\n    print(count)", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maxi = max(arr)\n    ans = 0\n    for i in range(k - 1, len(arr)):\n        if maxi == arr[i]:\n            ans += n - i\n    return ans\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    mx = max(l)\n    for i in range(k - 1, n):\n        if l[i] == mx:\n            ans += n - i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    mx = max(l)\n    for i in range(k - 1, n):\n        if l[i] == mx:\n            ans += n - i\n    print(ans)\n    t -= 1"]