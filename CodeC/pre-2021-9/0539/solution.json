["t = int(input())\nans = 0\nwhile t:\n    t -= 1\n    s = input().split()\n    n = s[-1]\n    l = [0 for i in range(10)]\n    f = 1\n    for i in n:\n        l[int(i)] += 1\n    for i in range(10):\n        if i != 5 and i != 8 and (i != 3) and l[i]:\n            f = 0\n            break\n    if f and l[8] >= l[5] and (l[5] >= l[3]):\n        ans += 1\nprint(ans)", "n = int(input())\nctr = 0\nfor q in range(n):\n    inp = list(input().split())\n    l = []\n    l1 = len(inp[-1])\n    num = int(inp[-1])\n    while num > 0:\n        last_digit = num % 10\n        if last_digit == 3 or last_digit == 5 or last_digit == 8:\n            l.append(last_digit)\n        else:\n            break\n        num = int(num / 10)\n    if l.count(8) >= l.count(5) and l.count(5) >= l.count(3) and (l1 == len(l)):\n        ctr = ctr + 1\nprint(ctr)", "n = int(input())\nctr = 0\nfor q in range(n):\n    inp = list(input().split())\n    l = []\n    l1 = len(inp[-1])\n    num = int(inp[-1])\n    while num > 0:\n        last_digit = num % 10\n        if last_digit == 3 or last_digit == 5 or last_digit == 8:\n            l.append(last_digit)\n        else:\n            break\n        num = int(num / 10)\n    if l.count(8) >= l.count(5) and l.count(5) >= l.count(3) and (l1 == len(l)):\n        ctr = ctr + 1\nprint(ctr)", "n = int(input())\nctr = 0\nfor q in range(n):\n    inp = list(input().split())\n    l = []\n    l1 = len(inp[-1])\n    num = int(inp[-1])\n    while num > 0:\n        last_digit = num % 10\n        if last_digit == 3 or last_digit == 5 or last_digit == 8:\n            l.append(last_digit)\n        else:\n            break\n        num = int(num / 10)\n    if l.count(8) >= l.count(5) and l.count(5) >= l.count(3) and (l1 == len(l)):\n        ctr = ctr + 1\nprint(ctr)", "n = int(input())\nctr = 0\nfor q in range(n):\n    inp = list(input().split())\n    l = []\n    l1 = len(inp[-1])\n    num = int(inp[-1])\n    while num > 0:\n        last_digit = num % 10\n        if last_digit == 3 or last_digit == 5 or last_digit == 8:\n            l.append(last_digit)\n        else:\n            break\n        num = int(num / 10)\n    if l.count(8) >= l.count(5) and l.count(5) >= l.count(3) and (l1 == len(l)):\n        ctr = ctr + 1\nprint(ctr)", "ans = 0\nt = int(input())\nfor i in range(t):\n    d = {'3': 0, '5': 0, '8': 0}\n    n = input()\n    s = n.strip()\n    s = s.split(' ')\n    s = s[-1].strip()\n    for j in s:\n        if j not in '358':\n            break\n        d[j] += 1\n    else:\n        if d['8'] >= d['5'] and d['5'] >= d['3']:\n            ans += 1\nprint(ans)", "ans = 0\nfor _ in range(int(input())):\n    d = {'3': 0, '5': 0, '8': 0}\n    s = input()\n    s = s.strip()\n    s = s.split(' ')\n    s = s[-1].strip()\n    for i in s:\n        if i not in '358':\n            break\n        d[i] += 1\n    else:\n        if d['8'] >= d['5'] and d['5'] >= d['3']:\n            ans += 1\nprint(ans)", "def isCiel(num):\n    D = {}\n    for i in range(10):\n        D[i] = 0\n    for digit in str(num):\n        D[int(digit)] += 1\n    acceptableDigits = [3, 5, 8]\n    for key in D:\n        if key not in acceptableDigits:\n            if D[key] > 0:\n                return False\n        if D[3] > D[5] or D[5] > D[8] or D[3] > D[8]:\n            return False\n    return True\n\ndef scrapeNum(line):\n    line = line.strip()\n    line = line.split(' ')\n    price = int(line[-1].strip())\n    return price\n\ndef solve():\n    count = 0\n    N = int(input())\n    for i in range(N):\n        line = input()\n        num = scrapeNum(line)\n        flag = isCiel(num)\n        if flag:\n            count += 1\n    return count\nans = solve()\nprint(ans)", "n = int(input())\ncount1 = 0\nfor _ in range(n):\n    arr = list(input().split())\n    price = int(arr[-1])\n    c = 0\n    l = []\n    price\n    while price > 0:\n        a = price % 10\n        c = c + 1\n        if a == 3 or a == 5 or a == 8:\n            l.append(a)\n        else:\n            break\n        price = int(price / 10)\n    if c == len(l) and l.count(8) >= l.count(5) and (l.count(5) >= l.count(3)):\n        count1 = count1 + 1\nprint(count1)", "n = int(input())\ncount1 = 0\nfor _ in range(n):\n    arr = list(input().split())\n    price = int(arr[-1])\n    c = 0\n    l = []\n    price\n    while price > 0:\n        a = price % 10\n        c = c + 1\n        if a == 3 or a == 5 or a == 8:\n            l.append(a)\n        else:\n            break\n        price = int(price / 10)\n    if c == len(l) and l.count(8) >= l.count(5) and (l.count(5) >= l.count(3)):\n        count1 = count1 + 1\nprint(count1)", "n = int(input())\ncount1 = 0\nfor _ in range(n):\n    arr = list(input().split())\n    price = int(arr[-1])\n    c = 0\n    l = []\n    price\n    while price > 0:\n        a = price % 10\n        c = c + 1\n        if a == 3 or a == 5 or a == 8:\n            l.append(a)\n        else:\n            break\n        price = int(price / 10)\n    if c == len(l) and l.count(8) >= l.count(5) and (l.count(5) >= l.count(3)):\n        count1 = count1 + 1\nprint(count1)", "n = int(input())\ncount1 = 0\nfor _ in range(n):\n    arr = list(input().split())\n    price = int(arr[-1])\n    c = 0\n    l = []\n    price\n    while price > 0:\n        a = price % 10\n        c = c + 1\n        if a == 3 or a == 5 or a == 8:\n            l.append(a)\n        else:\n            break\n        price = int(price / 10)\n    if c == len(l) and l.count(8) >= l.count(5) and (l.count(5) >= l.count(3)):\n        count1 = count1 + 1\nprint(count1)", "n = int(input())\ncount1 = 0\nfor _ in range(n):\n    arr = list(input().split())\n    price = int(arr[-1])\n    c = 0\n    l = []\n    price\n    while price > 0:\n        a = price % 10\n        c = c + 1\n        if a == 3 or a == 5 or a == 8:\n            l.append(a)\n        else:\n            break\n        price = int(price / 10)\n    if c == len(l) and l.count(8) >= l.count(5) and (l.count(5) >= l.count(3)):\n        count1 = count1 + 1\nprint(count1)", "t = int(input())\nprices = []\nfor _ in range(t):\n    arr = list(input().split())\n    prices.append(arr[-1])\ncount = 0\nfor i in prices:\n    dic = {}\n    for j in i:\n        if j in dic:\n            dic[j] += 1\n        else:\n            dic[j] = 1\n    keys = dic.keys()\n    if '3' not in dic.keys():\n        dic['3'] = 0\n    if '5' not in dic.keys():\n        dic['5'] = 0\n    if '8' not in dic.keys():\n        dic['8'] = 0\n    if '1' in keys or '2' in keys or '4' in keys or ('0' in keys) or ('6' in keys) or ('7' in keys) or ('9' in keys):\n        pass\n    elif dic['8'] >= dic['5'] and dic['5'] >= dic['3']:\n        count += 1\nprint(count)", "def is_ciel(n):\n    n3 = 0\n    n5 = 0\n    n8 = 0\n    while n > 0:\n        k = n % 10\n        if k == 3:\n            n3 += 1\n        elif k == 5:\n            n5 += 1\n        elif k == 8:\n            n8 += 1\n        else:\n            return 0\n        n //= 10\n    if n3 <= n5 and n5 <= n8:\n        return 1\n    return 0\nres = 0\nfor _ in range(int(input())):\n    buf = input()\n    length = len(buf)\n    st = -1\n    for i in range(length - 1, -1, -1):\n        if buf[i] == ' ':\n            st = i\n            break\n    p = int(buf[i + 1:length])\n    if is_ciel(p):\n        res += 1\nprint(res)", "def is_ciel(n):\n    n3 = 0\n    n5 = 0\n    n8 = 0\n    while n > 0:\n        k = n % 10\n        if k == 3:\n            n3 += 1\n        elif k == 5:\n            n5 += 1\n        elif k == 8:\n            n8 += 1\n        else:\n            return 0\n        n //= 10\n    if n3 <= n5 and n5 <= n8:\n        return 1\n    return 0\nres = 0\nfor _ in range(int(input())):\n    buf = input()\n    length = len(buf)\n    st = -1\n    for i in range(length - 1, -1, -1):\n        if buf[i] == ' ':\n            st = i\n            break\n    p = int(buf[i + 1:length])\n    if is_ciel(p):\n        res += 1\nprint(res)", "from audioop import reverse\nfrom itertools import count\nfrom math import *\nfrom operator import index, indexOf\nfrom pickle import TRUE\nfrom re import M, T\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef r2():\n    return map(int, input().split())\n\ndef func(x):\n    l = len(str(x))\n    e = str(x).count('8')\n    f = str(x).count('5')\n    t = str(x).count('3')\n    y = e + f + t\n    return e >= f and f >= t and (y == l)\n\ndef solve(n, arr):\n    m = 0\n    for i in range(n):\n        if func(arr[i]):\n            m += 1\n    return m\nres = []\na = []\nn = int(input())\nfor i in range(n):\n    arr = list(input().split())\n    a.append(arr[-1])\nprint(solve(n, a))", "from audioop import reverse\nfrom itertools import count\nfrom math import *\nfrom operator import index, indexOf\nfrom pickle import TRUE\nfrom re import M, T\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef r2():\n    return map(int, input().split())\n\ndef func(x):\n    l = len(str(x))\n    e = str(x).count('8')\n    f = str(x).count('5')\n    t = str(x).count('3')\n    y = e + f + t\n    return e >= f and f >= t and (y == l)\n\ndef solve(n, arr):\n    m = 0\n    for i in range(n):\n        if func(arr[i]):\n            m += 1\n    return m\nres = []\na = []\nn = int(input())\nfor i in range(n):\n    arr = list(input().split())\n    a.append(arr[-1])\nprint(solve(n, a))", "n = int(input())\ncu = 0\nwhile n:\n    n -= 1\n    s = input().split()\n    k = s[-1]\n    u = len(k)\n    x = k.count('8')\n    y = k.count('5')\n    z = k.count('3')\n    if x >= y and y >= z:\n        if x + y + z == u:\n            cu += 1\nprint(cu)", "n = int(input())\ncu = 0\nwhile n:\n    n -= 1\n    s = input().split()\n    k = s[-1]\n    if k.count('8') >= k.count('5') and k.count('5') >= k.count('3') and (k.count('8') + k.count('5') + k.count('3') == len(k)):\n        cu += 1\nprint(cu)", "def chef(s):\n    l = s.split()\n    num = l[::-1][0]\n    eight = num.count('8')\n    five = num.count('5')\n    three = num.count('3')\n    if eight >= five >= three and eight + five + three == len(num):\n        return 1\n    else:\n        return 0\nn = int(input())\ncount = 0\nfor testcase in range(n):\n    s = input()\n    count = count + chef(s)\nprint(count)", "c = 0\nfor _ in range(int(input())):\n    arr = list(map(str, input().split()))\n    c8 = arr[-1].count('8')\n    c5 = arr[-1].count('5')\n    c3 = arr[-1].count('3')\n    if c8 + c5 + c3 == len(arr[-1]) and c3 <= c5 and (c5 <= c8):\n        c += 1\nprint(c)", "s = ''\nc = 0\nfor _ in range(int(input())):\n    arr = list(map(str, input().split()))\n    s += str(arr[-1]) + '\\n'\n    c8 = arr[-1].count('8')\n    c5 = arr[-1].count('5')\n    c3 = arr[-1].count('3')\n    if c8 + c5 + c3 == len(arr[-1]) and c3 <= c5 and (c5 <= c8):\n        c += 1\nprint(c)", "def is_ciel_number(price):\n    freq_3 = 0\n    freq_5 = 0\n    freq_8 = 0\n    for d in price:\n        if d == '3':\n            freq_3 += 1\n        elif d == '5':\n            freq_5 += 1\n        elif d == '8':\n            freq_8 += 1\n        else:\n            return False\n    return freq_8 >= freq_5 and freq_5 >= freq_3\nN = int(input())\nnum_ciel_numbers = 0\nfor n in range(N):\n    line = input()\n    tokens = line.split()\n    if is_ciel_number(tokens[len(tokens) - 1]):\n        num_ciel_numbers += 1\nprint(num_ciel_numbers)", "def isCielNum(N):\n    cnt3 = 0\n    cnt5 = 0\n    cnt8 = 0\n    if N == 0:\n        return False\n    while N > 0:\n        r = N % 10\n        if r != 3 and r != 5 and (r != 8):\n            return False\n        if r == 3:\n            cnt3 += 1\n        elif r == 5:\n            cnt5 += 1\n        else:\n            cnt8 += 1\n        N //= 10\n    return cnt3 <= cnt5 and cnt5 <= cnt8\nans = 0\nfor tc in range(int(input())):\n    x = input().strip().split()\n    if isCielNum(int(x[len(x) - 1])):\n        ans += 1\nprint(ans)", "t = int(input())\ncount = 0\nfor z in range(t):\n    value = list(map(str, input().split()))\n    c8 = value[-1].count('8')\n    c5 = value[-1].count('5')\n    c3 = value[-1].count('3')\n    if c5 + c8 + c3 == len(value[-1]) and (c8 >= c5 and c5 >= c3):\n        count = count + 1\nprint(count)", "sum = 0\nfor tc in range(int(input())):\n    a = input().strip().split()\n    n = int(a[len(a) - 1])\n    (c8, c5, c3) = (0, 0, 0)\n    flag = 1\n    while n > 0:\n        rem = n % 10\n        n = n // 10\n        if rem != 8 and rem != 5 and (rem != 3):\n            flag = 0\n            break\n        elif rem == 8:\n            c8 += 1\n        elif rem == 5:\n            c5 += 1\n        elif rem == 3:\n            c3 += 1\n    if flag == 1:\n        if c8 >= c5 and c5 >= c3:\n            sum += 1\nprint(sum)", "n = int(input())\ncielnums = 0\nfor i in range(n):\n    price = input().split()[-1]\n    threes = 0\n    fives = 0\n    eights = 0\n    others = 0\n    for ch in price:\n        if ch == '3':\n            threes += 1\n        elif ch == '5':\n            fives += 1\n        elif ch == '8':\n            eights += 1\n        else:\n            others += 1\n            break\n    if others == 0 and eights >= fives and (fives >= threes):\n        cielnums += 1\nprint(cielnums)", "def N():\n    from sys import stdin\n    input()\n    ans = 0\n    for x in stdin:\n        x = x.split()[-1]\n        z = {'8': 0, '5': 0, '3': 0}\n        flag = True\n        for digit in x:\n            if digit in '853':\n                z[digit] += 1\n            else:\n                flag = False\n                break\n        if flag:\n            if z['8'] >= z['5'] >= z['3']:\n                ans += 1\n    print(ans)\nN()", "def main():\n    from sys import stdin\n    input()\n    ans = 0\n    for x in stdin:\n        x = x.split()[-1]\n        eight = 0\n        five = 0\n        three = 0\n        flag = True\n        for digit in x:\n            if digit == '8':\n                eight += 1\n            elif digit == '5':\n                five += 1\n            elif digit == '3':\n                three += 1\n            else:\n                flag = False\n                break\n        if flag:\n            if eight >= five >= three:\n                ans += 1\n    print(ans)\nmain()", "Ciels = []\nnotCiels = []\nfor i in range(int(input())):\n    a = input().strip().split()\n    number = a[len(a) - 1]\n    digits = len(number)\n    count8 = number.count('8')\n    count5 = number.count('5')\n    count3 = number.count('3')\n    if count3 + count5 + count8 == digits and count8 >= count5 and (count5 >= count3):\n        Ciels.append(number)\n    else:\n        notCiels.append(number)\nprint(len(Ciels))", "cases = int(input())\nout = 0\nwhile cases:\n    cases -= 1\n    a = input().split()\n    price = a[len(a) - 1]\n    l8 = price.count('8')\n    l5 = price.count('5')\n    l3 = price.count('3')\n    if l8 >= l5 >= l3 and len(price) - l8 - l5 - l3 == 0:\n        out += 1\nprint(out)", "t = int(input())\ncount = 0\nwhile t > 0:\n    t = t - 1\n    lst = input().split()\n    price = lst[len(lst) - 1]\n    price = int(price)\n    n8 = 0\n    n5 = 0\n    n3 = 0\n    flag = 1\n    while price > 0:\n        dig = price % 10\n        if dig == 8:\n            n8 = n8 + 1\n        elif dig == 5:\n            n5 = n5 + 1\n        elif dig == 3:\n            n3 = n3 + 1\n        else:\n            flag = 0\n            break\n        price = int(price / 10)\n    if n8 >= n5 and n5 >= n3 and flag:\n        count = count + 1\nprint(count)", "def check(s):\n    (a, b, c) = (0, 0, 0)\n    for i in s:\n        if i == '8':\n            a += 1\n        elif i == '5':\n            b += 1\n        elif i == '3':\n            c += 1\n        else:\n            return False\n    return a >= b >= c\nn = int(input())\nres = 0\nfor i in range(n):\n    s = input().strip()\n    s = s.split()[-1]\n    if check(s):\n        res += 1\nprint(res)"]