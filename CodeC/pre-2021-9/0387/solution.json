["li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "import numpy\nfor i in range(int(input())):\n    a = int(input())\n    (d1, d2, c) = (1, 1, 0)\n    while d1 * a > 2 ** d1 - 1:\n        if a <= 2 ** (d1 - 1) and c == 0:\n            (d2, c) = (d1 - 1, c + 1)\n        d1 += 1\n    print(d1 - 1, d2)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "for _ in range(int(input())):\n    n = int(input())\n    (i, m, c, d1) = (0, 0, 0, 0)\n    while c >= 0:\n        c += n - 2 ** i\n        (d1, m) = (i + 1, c) if c > m else (d1, m)\n        i += 1\n    print(i - 1, d1)", "for _ in range(int(input())):\n    n = int(input())\n    (i, m, c) = (0, 0, 0)\n    d1 = 0\n    while c >= 0:\n        c += n - 2 ** i\n        if c > m:\n            d1 = i + 1\n            m = c\n        i += 1\n    print(i - 1, d1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    cs = 0\n    fs = 0\n    i = 0\n    df = []\n    while True:\n        tc = cs + n\n        tf = fs + pow(2, i)\n        if fs > cs:\n            break\n        cs = tc\n        fs = tf\n        df.append(cs - fs)\n        i += 1\n    mx = max(df)\n    print(i - 1, df.index(mx) + 1)", "t = int(input())\nfor t in range(t):\n    a = int(input())\n    m = 0\n    d1 = 0\n    d2 = 1\n    while 2 ** d1 < a:\n        d1 += 1\n    while 2 ** d2 - 1 < d2 * a:\n        d2 += 1\n    print(str(d2 - 1) + ' ' + str(d1))", "for _ in range(int(input(''))):\n    a = int(input())\n    d = 1\n    chef_get = 0\n    chef_give = 0\n    d1 = 0\n    profit = 0\n    profit1 = 0\n    d2 = 0\n    while True:\n        chef_get = a * d\n        chef_give = pow(2, d) - 1\n        profit = chef_get - chef_give\n        profit1 = a * (d - 1) - (pow(2, d - 1) - 1)\n        if chef_get > chef_give:\n            d1 = d\n            if profit > profit1:\n                d2 = d\n            d += 1\n            continue\n        else:\n            break\n    print(d1, d2)", "def two(x, i):\n    if 2 ** i >= x:\n        return i\n    else:\n        i += 1\n        return two(x, i)\nt = int(input(''))\nfor _ in range(t):\n    a = int(input(''))\n    d2 = two(a, 0)\n    for i in range(d2, a + 1):\n        if a * i > 2 ** i - 1:\n            pass\n        else:\n            d1 = i - 1\n            break\n    print(d1, d2)", "for _ in range(int(input())):\n    a = int(input())\n    start = 1\n    (ftotal, cheftotal) = (0, 0)\n    (d1, d2) = (0, 0)\n    if a == 0:\n        print(0, 0)\n        continue\n    while cheftotal + a > ftotal + start or cheftotal == 0:\n        d2 += 1\n        ftotal += start\n        cheftotal += a\n        if start < a:\n            d1 += 1\n        start *= 2\n    print(d2, d1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "for i in range(int(input())):\n    n = int(input())\n    max_profit = 0\n    d = 0\n    m = 0\n    give = 1\n    mult = 1\n    take = n\n    while True:\n        if give > take:\n            break\n        if max_profit < take - give:\n            max_profit = take - give\n            m += 1\n        mult *= 2\n        give += mult\n        take += n\n        d += 1\n    print(d, end=' ')\n    print(m)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "cases = int(input())\nfor case in range(cases):\n    ammount = int(input())\n    day = 1\n    maximum_return = 0\n    best_day = None\n    rupees_recieved = 0\n    rupees_given = 0\n    while rupees_recieved > rupees_given or day == 1:\n        rupees_recieved += ammount\n        rupees_given += 2 ** (day - 1)\n        if rupees_recieved - rupees_given > maximum_return:\n            maximum_return = rupees_recieved - rupees_given\n            best_day = day\n        day += 1\n    print(str(day - 2) + ' ' + str(best_day))", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nt = input()\nfor c in range(0, int(t)):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "for _ in range(int(input())):\n    n = int(input())\n    i = 0\n    while pow(2, i) < n:\n        i = i + 1\n    dtwo = i\n    j = 1\n    while pow(2, j) - 1 < j * n:\n        j = j + 1\n    done = j - 1\n    print(str(done) + ' ' + str(dtwo))", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 40):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    ma1 = 0\n    ma2 = 0\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        ma1 += no\n        ma2 += li[j]\n        j += 1\n    print(j - 1, maxd + 1)", "li = [1]\nfor i in range(1, 50):\n    li.append(li[-1] * 2)\nfor i in range(int(input())):\n    no = int(input())\n    ma1 = 0\n    ma2 = 0\n    p = 0\n    j = 0\n    maxd = 0\n    while True:\n        if p < 0:\n            break\n        else:\n            p += no - li[j]\n        if no > li[j]:\n            maxd = j\n        ma1 += no\n        ma2 += li[j]\n        j += 1\n    print(j - 1, maxd + 1)", "for _ in range(int(input())):\n    a = int(input())\n    total = 0\n    (d1, d2) = (0, 0)\n    for i in range(1, 37):\n        temp = a - 2 ** (i - 1)\n        total += temp\n        if d2 == 0 and temp <= 0:\n            d2 = i - 1\n        if d1 == 0 and total <= 0:\n            d1 = i - 1\n        if d1 != 0 and d2 != 0:\n            break\n    print(d1, d2)", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    d1 = 0\n    d2 = 0\n    n = 0\n    profit = 0\n    while True:\n        n += 1\n        calc = a * n - 2 ** n + 1\n        maximum = max(calc, profit)\n        if maximum > profit:\n            d2 = n\n        profit = calc\n        if profit < 0:\n            d1 = n - 1\n            break\n    print(d1, d2)", "for i in range(int(input())):\n    A = int(input())\n    (MaxP, P) = (0, 0)\n    (Imp, Pp) = (None, None)\n    n = 1\n    Sum = 0\n    while A * n - (2 ** (n - 1) + Sum) > 0:\n        Sum += 2 ** (n - 1)\n        Pp = n\n        Diff = A * n - Sum\n        if Diff > MaxP:\n            MaxP = Diff\n            Imp = n\n        n += 1\n    print(Pp, Imp)", "for i in range(int(input())):\n    A = int(input())\n    (MaxP, P) = (0, 0)\n    (Imp, Pp) = (None, None)\n    n = 1\n    Sum = 0\n    while A * n - (2 ** (n - 1) + Sum) > 0:\n        Sum += 2 ** (n - 1)\n        Pp = n\n        Diff = A * n - Sum\n        if Diff > MaxP:\n            MaxP = Diff\n            Imp = n\n        n += 1\n    print(Pp, Imp)", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    profit = 0\n    donate = 1\n    day = 0\n    counter = 0\n    maxprofit = profit\n    while profit >= 0:\n        counter += 1\n        profit += a - donate\n        donate *= 2\n        if profit > maxprofit:\n            day = counter\n        maxprofit = max(maxprofit, profit)\n    last = counter\n    print(last - 1, day)", "for t in range(int(input())):\n    a = int(input())\n    (b, c, i, j) = (0, 0, 0, 0)\n    while b < a:\n        b = 2 ** i\n        i += 1\n    while c >= 0:\n        c += a - 2 ** j\n        j += 1\n    print(j - 1, i - 1)", "import math\nfor t in range(int(input())):\n    a = int(input())\n    (b, c, i, j) = (0, 0, 0, 0)\n    while b < a:\n        b = 2 ** i\n        i += 1\n    while c >= 0:\n        c += a - 2 ** j\n        j += 1\n    print(j - 1, i - 1)", "for _ in range(int(input())):\n    A = int(input())\n    sumchef = 1\n    sumfriend = A\n    cnt = 0\n    maxi = 0\n    m = 0\n    while sumfriend > sumchef:\n        if maxi < sumfriend - sumchef:\n            m += 1\n            maxi = sumfriend - sumchef\n        sumchef += 2 ** (cnt + 1)\n        sumfriend += A\n        cnt += 1\n    print(cnt, m)", "n = int(input())\nfor i in range(n):\n    A = int(input())\n    x = 0\n    y = 0\n    ans = 0\n    maxval = 0\n    ans2 = 0\n    while y >= x:\n        ans += 1\n        x = x << 1 | (1 << 1) - 1\n        y = A * ans\n        if maxval < y - x:\n            ans2 = ans\n            maxval = y - x\n    ans = ans - 1\n    print(ans, ans2)", "tst = int(input())\nfor i in range(tst):\n    a = int(input())\n    d1 = 0\n    d2 = 0\n    s = 0\n    t = 0\n    for j in range(1, 1000000000):\n        if a > 2 ** (j - 1):\n            d2 = d2 + 1\n        s = s + a\n        t = t + 2 ** (j - 1)\n        if t < s:\n            d1 = d1 + 1\n        else:\n            break\n    print(d1, d2)", "import math\nfor _ in range(int(input())):\n    a = int(input())\n    i = 1\n    while True:\n        if (2 ** i - 1) / i >= a:\n            break\n        i += 1\n    j = 1\n    e = 2.718281828459045\n    while True:\n        if a - 2 ** j <= 0:\n            break\n        j += 1\n    D1 = i - 1\n    D2 = j\n    print(D1, D2)", "for _ in range(int(input())):\n    a = int(input())\n    give_tot = 0\n    (gate, gate1) = (True, True)\n    cnt = 0\n    (d1, d2) = ('', '')\n    while gate1 == True:\n        cnt += 1\n        gross_tot = a * cnt\n        give = 2 ** (cnt - 1)\n        give_tot += give\n        if give_tot >= gross_tot and gate1 == True:\n            d1 = cnt - 1\n            gate1 = False\n        if give >= a and gate == True:\n            d2 = cnt - 1\n            gate = False\n    print(d1, d2)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    i = 1\n    D1 = 0\n    D2 = 0\n    smA = 0\n    smC = 0\n    while i < 40:\n        smA += a\n        smC += 2 ** (i - 1)\n        if 2 ** (i - 1) < a:\n            D1 += 1\n        if smA < smC:\n            D2 = i - 1\n            break\n        i += 1\n    print(D2, D1)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    i = 1\n    D1 = 0\n    D2 = 0\n    smA = 0\n    smC = 0\n    while i > 0:\n        smA += a\n        smC += 2 ** (i - 1)\n        if 2 ** (i - 1) < a:\n            D1 += 1\n        if smA < smC:\n            D2 = i - 1\n            break\n        i += 1\n    print(D2, D1)", "tests = int(input())\nfor i in range(tests):\n    A = int(input())\n    friend = 0\n    chef = 0\n    max_profit = 0\n    d1 = 0\n    d2 = 0\n    temp_profit = 1\n    day = 0\n    while temp_profit > 0:\n        friend += A\n        chef += 1 << day\n        temp_profit = friend - chef\n        if temp_profit > 0:\n            d1 = day + 1\n        if temp_profit > max_profit:\n            d2 = day + 1\n            max_profit = temp_profit\n        day += 1\n    print(d1, d2)", "import math\nbro = int(input())\nfor jyo in range(bro):\n    gum = int(input())\n    m = gum - 1\n    (i, c, k) = (1, 1, 1)\n    oil = m\n    while m > 0:\n        i = i + 1\n        c = c * 2\n        m = m + gum - c\n        if m > oil:\n            oil = m\n            k = i\n    print(i - 1, k)", "from bisect import bisect_left, bisect_right\nimport math\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor x in range(ii()):\n    rup = ii()\n    i = 1\n    summ = 0\n    d2 = 0\n    d1 = 0\n    fri = 0\n    while i > 0:\n        summ = summ + rup\n        fri = fri + 2 ** (i - 1)\n        if 2 ** (i - 1) < rup:\n            d2 = d2 + 1\n        if fri > summ:\n            d1 = i - 1\n            break\n        i = i + 1\n    print(d1, d2)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    d = 1\n    x = a - 1\n    y = 1\n    z = a - 1\n    while z > 0:\n        z = d * a - (2 ** d - 1)\n        if z > x:\n            x = z\n            y = d\n        d += 1\n    print(d - 2, y)", "n = int(input())\nfor i in range(n):\n    q = int(input())\n    a = q\n    c = 0\n    while a >= 1:\n        c += 1\n        a //= 2\n        if 2 ** c == q:\n            a = 0\n    l = c\n    while 2 ** l <= q * l:\n        l += 1\n    print(l - 1, c)", "for _ in range(int(input())):\n    n = int(input())\n    chef = 1\n    frnd = 0\n    i = 0\n    chefs = 0\n    frnds = -1\n    itemp = i\n    while chefs <= frnd:\n        frnd += n\n        chef = 1 << i\n        chefs += chef\n        if frnd - chefs > frnds:\n            frnds = frnd - chefs\n            itemp = i + 1\n        if chefs <= frnd:\n            i += 1\n    print(i, itemp)", "T = int(input())\nfor x in range(T):\n    a = int(input())\n    p = []\n    i = 1\n    v = 0\n    while True:\n        v += a - 2 ** (i - 1)\n        if v >= 0:\n            p.append(v)\n        else:\n            break\n        i += 1\n    print(len(p), p.index(max(p)) + 1)", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    profit = []\n    i = 1\n    value = 0\n    while True:\n        value += a - 2 ** (i - 1)\n        if value >= 0:\n            profit.append(value)\n        else:\n            break\n        i += 1\n    print('{} {}'.format(len(profit), profit.index(max(profit)) + 1))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    sa = n\n    sm = 1\n    i = 2\n    m = 0\n    an = 0\n    while sm <= sa:\n        sm = 2 ** i - 1\n        sa = sa + n\n        i = i + 1\n        d = sa - sm\n        if d > m:\n            m = d\n            an = i\n    print(i - 2, an - 1)", "for _ in range(int(input())):\n    A = int(input())\n    C = 0\n    X = len(f'{A - 1:b}')\n    n = X\n    while (1 << n) - 1 < n * A:\n        n += 1\n    print(n - 1, X)", "import math\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    ans = math.log(a / math.log(2), 2)\n    temp = int(ans)\n    d2 = temp\n    if 2 ** temp < a:\n        d2 = temp + 1\n    i = d2\n    while 2 ** (i + 1) - 1 < a * (i + 1):\n        i = i + 1\n    print(i, d2)\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    f = 0\n    i = 0\n    q = []\n    while c >= f:\n        c += n\n        f += 2 ** i\n        q.append(c - f)\n        i += 1\n    m1 = q.index(max(q))\n    print(i - 1, m1 + 1)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    j = 1\n    ans = []\n    while True:\n        if a * j > 2 ** j - 1:\n            j += 1\n        else:\n            ans.append(j - 1)\n            break\n    profit = 0\n    k = 1\n    while True:\n        if a * k - (2 ** k - 1) > profit:\n            profit = a * k - (2 ** k - 1)\n            k += 1\n        else:\n            ans.append(k - 1)\n            break\n    print(*ans)", "for _ in range(int(input())):\n    A = int(input())\n    sumchef = 1\n    sumfriend = A\n    cnt = 0\n    maxi = 0\n    m = 0\n    while sumfriend > sumchef:\n        if maxi < sumfriend - sumchef:\n            m += 1\n            maxi = sumfriend - sumchef\n        sumchef += 2 ** (cnt + 1)\n        sumfriend += A\n        cnt += 1\n    print(cnt, m)", "for _ in range(int(input())):\n    A = int(input())\n    sumchef = 1\n    sumfriend = A\n    cnt = 0\n    maxi = 0\n    m = 0\n    while sumfriend > sumchef:\n        if maxi < sumfriend - sumchef:\n            m += 1\n            maxi = sumfriend - sumchef\n        sumchef += 2 ** (cnt + 1)\n        sumfriend += A\n        cnt += 1\n    print(cnt, m)", "case = int(input())\nfor i in range(case):\n    A = int(input())\n    x = 0\n    y = 0\n    ans = 0\n    maxval = 0\n    ans2 = 0\n    while y >= x:\n        ans += 1\n        x = x << 1 | (1 << 1) - 1\n        y = A * ans\n        if maxval < y - x:\n            ans2 = ans\n            maxval = y - x\n    ans = ans - 1\n    print(ans, ans2)", "for _ in range(int(input())):\n    x = int(input())\n    d2 = 0\n    i = 0\n    sum = 0\n    while sum + (x - pow(2, i)) > 0:\n        sum += x - pow(2, i)\n        if x - pow(2, i) > 0:\n            d2 += 1\n        i = i + 1\n    print(i, end=' ')\n    print(d2)", "case = int(input())\nfor i in range(case):\n    A = int(input())\n    x = 0\n    y = 0\n    ans = 0\n    maxval = 0\n    ans2 = 0\n    while y >= x:\n        ans += 1\n        x = x << 1 | (1 << 1) - 1\n        y = A * ans\n        if maxval < y - x:\n            ans2 = ans\n            maxval = y - x\n    ans = ans - 1\n    print(ans, ans2)", "for _ in range(int(input())):\n    x = int(input())\n    d2 = 0\n    i = 0\n    sum = 0\n    while sum + (x - pow(2, i)) > 0:\n        sum += x - pow(2, i)\n        if x - pow(2, i) > 0:\n            d2 += 1\n        i = i + 1\n    print(i, end=' ')\n    print(d2)", "for _ in range(int(input())):\n    x = int(input())\n    d2 = 0\n    i = 0\n    sum = 0\n    while sum + (x - pow(2, i)) > 0:\n        sum += x - pow(2, i)\n        if x - pow(2, i) > 0:\n            d2 += 1\n        i = i + 1\n    print(i, end=' ')\n    print(d2)", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "def solution():\n    A = int(input())\n    D = 0\n    D1 = 0\n    D2 = 0\n    max_profit = 0\n    give = 0\n    take = 0\n    while take >= give:\n        if max_profit < take - give:\n            max_profit = take - give\n            D2 = D\n        D1 = D\n        give += 1 << D\n        take += A\n        D += 1\n    print(str(D1) + ' ' + str(D2))\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "import math\nbro = int(input())\nfor jyo in range(bro):\n    gum = int(input())\n    m = gum - 1\n    (i, c, k) = (1, 1, 1)\n    oil = m\n    while m > 0:\n        i = i + 1\n        c = c * 2\n        m = m + gum - c\n        if m > oil:\n            oil = m\n            k = i\n    print(i - 1, k)", "import math\nbro = int(input())\nfor jyo in range(bro):\n    gum = int(input())\n    m = gum - 1\n    (i, c, k) = (1, 1, 1)\n    oil = m\n    while m > 0:\n        i = i + 1\n        c = c * 2\n        m = m + gum - c\n        if m > oil:\n            oil = m\n            k = i\n    print(i - 1, k)", "for _ in range(int(input())):\n    a = int(input())\n    d = 1\n    d2 = []\n    while 2 ** d - 1 <= a * d:\n        d2.append(a * d - 2 ** d)\n        d += 1\n    print(d - 1, d2.index(max(d2)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    d = 1\n    d2 = []\n    while 2 ** d - 1 <= a * d:\n        d2.append(a * d - 2 ** d)\n        d += 1\n    print(d - 1, d2.index(max(d2)) + 1)", "import math\nfor _ in range(int(input())):\n    a = int(input())\n    powerOf2 = math.log2(a)\n    d2 = int(powerOf2 + 1)\n    d2 -= 1 if int(powerOf2) == powerOf2 else 0\n    d1 = d2\n    while True:\n        if d1 * a >= 2 ** d1 - 1:\n            d1 += 1\n        else:\n            d1 -= 1\n            break\n    print(d1, d2)", "from math import log\ntc = int(input())\nfor _ in range(tc):\n    a = int(input())\n    d2 = int(log(a, 2) + 1)\n    if int(log(a, 2)) == log(a, 2):\n        d2 -= 1\n    d1 = d2\n    while True:\n        if d1 * a >= 2 ** d1 - 1:\n            d1 += 1\n        else:\n            d1 -= 1\n            break\n    print(d1, d2)", "for _ in range(int(input())):\n    a = int(input())\n    friendProfit = 0\n    chefProfit = 0\n    count = 0\n    max_pro_day = 0\n    max_prof = -1\n    for i in range(1, 40):\n        friendProfit += 2 ** (i - 1)\n        chefProfit += a\n        prof = chefProfit - friendProfit\n        if prof > max_prof:\n            max_prof = prof\n            max_pro_day = count\n        count += 1\n        if chefProfit < friendProfit:\n            break\n    print(count - 1, max_pro_day + 1)", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef solve(a):\n    (d1, d2) = (1, 1)\n    (chef, friend) = (a, 1)\n    best = chef - friend\n    while chef > friend:\n        d1 += 1\n        chef += a\n        friend += 2 ** (d1 - 1)\n        if chef - friend > best:\n            best = chef - friend\n            d2 += 1\n    return f'{d1 - 1} {d2}'\n\ndef do_codechef():\n    for t in rii():\n        a = ii()\n        print(solve(a))\ndo_codechef()\nexit()", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef solve(a):\n    (d1, d2) = (1, 1)\n    (chef, friend) = (a, 1)\n    best = chef - friend\n    while chef > friend:\n        d1 += 1\n        chef += a\n        friend += 2 ** (d1 - 1)\n        if chef - friend > best:\n            best = chef - friend\n            d2 += 1\n    return f'{d1 - 1} {d2}'\n\ndef do_codechef():\n    for t in rii():\n        a = ii()\n        print(solve(a))\ndo_codechef()\nexit()", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef solve(a):\n    (d1, d2) = (1, 1)\n    (chef, friend) = (a, 1)\n    best = chef - friend\n    while chef > friend:\n        d1 += 1\n        chef += a\n        friend += 2 ** (d1 - 1)\n        if chef - friend > best:\n            best = chef - friend\n            d2 += 1\n    return f'{d1 - 1} {d2}'\n\ndef do_codechef():\n    for t in rii():\n        a = ii()\n        print(solve(a))\ndo_codechef()\nexit()", "for _ in range(int(input())):\n    a = int(input())\n    d = 1\n    d2 = []\n    while 2 ** d - 1 <= a * d:\n        d2.append(a * d - 2 ** d)\n        d += 1\n    print(d - 1, d2.index(max(d2)) + 1)", "for i in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for i in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for i in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    d1 = 1\n    d2 = []\n    while 2 ** d1 - 1 <= a * d1:\n        d2.append(a * d1 - 2 ** d1)\n        d1 += 1\n    print(d1 - 1, d2.index(max(d2)) + 1)", "for i in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for _ in range(int(input())):\n    a = int(input())\n    temp = []\n    i = 1\n    while pow(2, i) - 1 <= a * i:\n        temp.append(a * i - pow(2, i))\n        i += 1\n    print(i - 1, temp.index(max(temp)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    n1 = n\n    m = 1\n    m1 = m\n    ma = 0\n    co = 1\n    c = 1\n    while n1 > m1:\n        n1 += n\n        m *= 2\n        m1 += m\n        if ma < n1 - m1:\n            ma = n1 - m1\n            c = co\n        co += 1\n    print(n1 // n - 1, c + 1)", "for _ in range(int(input())):\n    n = int(input())\n    n1 = n\n    m = 1\n    m1 = m\n    ma = 0\n    co = 1\n    c = 1\n    while n1 > m1:\n        n1 += n\n        m *= 2\n        m1 += m\n        if ma < n1 - m1:\n            ma = n1 - m1\n            c = co\n        co += 1\n    print(n1 // n - 1, c + 1)", "T = int(input())\nfor _ in range(T):\n    A = int(input())\n    f = True\n    i = 1\n    total_profit = 0\n    profits = {}\n    while f:\n        chef_receives = A\n        chef_gives = 2 ** (i - 1)\n        profit = chef_receives - chef_gives\n        total_profit += profit\n        profits[i] = total_profit\n        if total_profit < 0:\n            f = False\n            print(i - 1, end=' ')\n        i += 1\n    profits = sorted(profits.items(), key=lambda x: x[1], reverse=True)\n    minimum = []\n    for j in range(len(profits)):\n        if profits[j][1] == profits[0][1]:\n            minimum.append(profits[j][0])\n        else:\n            break\n    print(min(minimum))", "for _ in range(int(input())):\n    n = int(input())\n    diff = 1\n    gm = 0\n    gmv = 0\n    i = 0\n    while diff > 0:\n        i += 1\n        s = '1' * i\n        su = int(s, 2)\n        diff = n * i - su\n        if diff > gmv:\n            gmv = diff\n            gm = i\n    print('%d %d' % (i - 1, gm))", "for _ in range(int(input())):\n    n = int(input())\n    diff = 1\n    gm = 0\n    gmv = 0\n    i = 0\n    while diff > 0:\n        i += 1\n        s = '1' * i\n        su = int(s, 2)\n        diff = n * i - su\n        if diff > gmv:\n            gmv = diff\n            gm = i\n    print('%d %d' % (i - 1, gm))", "for _ in range(int(input())):\n    n = int(input())\n    diff = 1\n    gm = 0\n    gmv = 0\n    i = 0\n    while diff > 0:\n        i += 1\n        s = '1' * i\n        su = int(s, 2)\n        diff = n * i - su\n        if diff > gmv:\n            gmv = diff\n            gm = i\n    print('%d %d' % (i - 1, gm))", "for _ in range(int(input())):\n    n = int(input())\n    diff = 1\n    gm = 0\n    gmv = 0\n    i = 0\n    while diff > 0:\n        i += 1\n        s = '1' * i\n        su = int(s, 2)\n        diff = n * i - su\n        if diff > gmv:\n            gmv = diff\n            gm = i\n    print('%d %d' % (i - 1, gm))", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    max = 0\n    D = 0\n    i = 1\n    while i * a > 2 ** i - 1:\n        if i * a - (2 ** i - 1) > max:\n            D = i\n        max = i * a - (2 ** i - 1)\n        i = i + 1\n    print(i - 1, D)"]