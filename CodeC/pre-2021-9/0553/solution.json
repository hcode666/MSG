["T = int(input())\nfor t in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    amount_of_liquid = [max(r), max(g), max(b)]\n    for i in range(M):\n        max_amount_of_liquid = max(amount_of_liquid)\n        for i in range(len(amount_of_liquid)):\n            if amount_of_liquid[i] == max_amount_of_liquid:\n                amount_of_liquid[i] = amount_of_liquid[i] // 2\n                break\n    print(max(amount_of_liquid))", "T = int(input())\nfor t in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    amount_of_liquid = [max(r), max(g), max(b)]\n    for i in range(M):\n        max_amount_of_liquid = max(amount_of_liquid)\n        for i in range(len(amount_of_liquid)):\n            if amount_of_liquid[i] == max_amount_of_liquid:\n                amount_of_liquid[i] = amount_of_liquid[i] // 2\n                break\n    print(max(amount_of_liquid))", "cases = int(input())\nfor i in range(0, cases):\n    (R, G, B, M) = input().split()\n    potionsR = list(map(int, input().split()))\n    potionsG = list(map(int, input().split()))\n    potionsB = list(map(int, input().split()))\n    for j in range(0, int(M)):\n        nR = max(potionsR)\n        nG = max(potionsG)\n        nB = max(potionsB)\n        maxN = max([nR, nG, nB])\n        if nR == maxN:\n            potionsR = [int(x / 2) for x in potionsR]\n        elif nG == maxN:\n            potionsG = [int(x / 2) for x in potionsG]\n        elif nB == maxN:\n            potionsB = [int(x / 2) for x in potionsB]\n    print(max([max(potionsR), max(potionsG), max(potionsB)]))", "cases = int(input())\nfor i in range(0, cases):\n    (R, G, B, M) = input().split()\n    potionsR = list(map(int, input().split()))\n    potionsG = list(map(int, input().split()))\n    potionsB = list(map(int, input().split()))\n    for j in range(0, int(M)):\n        nR = max(potionsR)\n        nG = max(potionsG)\n        nB = max(potionsB)\n        maxN = max([nR, nG, nB])\n        if nR == maxN:\n            potionsR = [int(x / 2) for x in potionsR]\n        elif nG == maxN:\n            potionsG = [int(x / 2) for x in potionsG]\n        elif nB == maxN:\n            potionsB = [int(x / 2) for x in potionsB]\n    print(max([max(potionsR), max(potionsG), max(potionsB)]))", "cases = int(input())\nfor i in range(0, cases):\n    (R, G, B, M) = input().split()\n    potionsR = list(map(int, input().split()))\n    potionsG = list(map(int, input().split()))\n    potionsB = list(map(int, input().split()))\n    for j in range(0, int(M)):\n        nR = int(max(potionsR))\n        nG = int(max(potionsG))\n        nB = int(max(potionsB))\n        maxN = int(max([nR, nG, nB]))\n        if nR == maxN:\n            potionsR = [int(int(x) / 2) for x in potionsR]\n        elif nG == maxN:\n            potionsG = [int(int(x) / 2) for x in potionsG]\n        elif nB == maxN:\n            potionsB = [int(int(x) / 2) for x in potionsB]\n    print(max([int(max(potionsR)), int(max(potionsG)), int(max(potionsB))]))", "for _ in range(int(input())):\n    (rr, gg, bb, m) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sr = max(r)\n    sg = max(g)\n    sb = max(b)\n    for i in range(m):\n        h = max(sr, sg, sb)\n        if h == sr:\n            sr = sr // 2\n        elif h == sg:\n            sg = sg // 2\n        else:\n            sb = sb // 2\n    print(max([sr, sg, sb]))", "test = int(input())\nfor z in range(test):\n    (r, g, b, m) = map(int, input().split())\n    R = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    rmax = max(R)\n    gmax = max(G)\n    bmax = max(B)\n    A = [rmax, gmax, bmax]\n    while m > 0:\n        A.sort()\n        A[-1] = A[-1] // 2\n        m -= 1\n    print(max(A))", "t = int(input())\nfor i in range(t):\n    (r, g, b, m) = map(int, input().split())\n    a = max(list(map(int, input().split())))\n    b = max(list(map(int, input().split())))\n    c = max(list(map(int, input().split())))\n    l = [a, b, c]\n    while m:\n        x = max(l)\n        l.append(x // 2)\n        l.remove(x)\n        m -= 1\n    print(max(l))", "mod = 10 ^ 8 + 7\nimport numpy as np\nfor _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    (l1, l2, l3) = (max(a), max(b), max(c))\n    for _ in range(m):\n        high = max([l1, l2, l3])\n        if high == l1:\n            l1 //= 2\n        elif high == l2:\n            l2 //= 2\n        else:\n            l3 //= 2\n    print(max([l1, l2, l3]))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    m1 = max(R)\n    m2 = max(G)\n    m3 = max(B)\n    while m > 0:\n        ma = max(m1, m2, m3)\n        if m1 == ma:\n            m1 = m1 // 2\n        elif m2 == ma:\n            m2 = m2 // 2\n        else:\n            m3 = m3 // 2\n        m -= 1\n    print(max(m1, m2, m3))", "def soln(r, g, b, m, rrr, grr, brr):\n    rmax = max(rrr)\n    gmax = max(grr)\n    bmax = max(brr)\n    for i in range(m):\n        cur = max([rmax, gmax, bmax])\n        if rmax == cur:\n            rmax //= 2\n        elif gmax == cur:\n            gmax //= 2\n        else:\n            bmax //= 2\n    return max([rmax, gmax, bmax])\nfor _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rrr = list(map(int, input().split()))\n    grr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    print(soln(r, g, b, m, rrr, grr, brr))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    R = sorted(list(map(int, input().split())))\n    G = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    for _ in range(m):\n        n = max(R[-1], G[-1], B[-1])\n        if n == 0:\n            print(n)\n            break\n        if n == R[-1]:\n            R[-1] //= 2\n        elif n == G[-1]:\n            G[-1] //= 2\n        else:\n            B[-1] //= 2\n    else:\n        print(max(R[-1], G[-1], B[-1]))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    R = sorted(list(map(int, input().split())))\n    G = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    for _ in range(m):\n        n = max(R[-1], G[-1], B[-1])\n        if n == 0:\n            print(n)\n            break\n        if n == R[-1]:\n            R[-1] //= 2\n        elif n == G[-1]:\n            G[-1] //= 2\n        else:\n            B[-1] //= 2\n    else:\n        print(max(R[-1], G[-1], B[-1]))", "case = int(input())\nfor _ in range(case):\n    (r, g, b, m) = map(int, input().split(' '))\n    rl = list(map(int, input().split(' ')))\n    gl = list(map(int, input().split(' ')))\n    bl = list(map(int, input().split(' ')))\n    mr = max(rl)\n    mg = max(gl)\n    mb = max(bl)\n    while m > 0:\n        if mr >= mg and mr >= mb:\n            mr = mr // 2\n        elif mg >= mr and mg >= mb:\n            mg = mg // 2\n        elif mb >= mr and mb >= mg:\n            mb = mb // 2\n        m -= 1\n    res = max(mr, mg, mb)\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (r, g, b, m) = map(int, input().split())\n    R = max(list(map(int, input().split())))\n    G = max(list(map(int, input().split())))\n    B = max(list(map(int, input().split())))\n    L = [R, G, B]\n    for i in range(m):\n        L.sort()\n        L[-1] //= 2\n    L.sort()\n    print(L[-1])", "tc = int(input())\nwhile tc:\n    rgbm = input().split()\n    R = int(rgbm[0])\n    G = int(rgbm[1])\n    B = int(rgbm[2])\n    M = int(rgbm[3])\n    r_list = list(map(int, input().split()))\n    g_list = list(map(int, input().split()))\n    b_list = list(map(int, input().split()))\n    if R == 0:\n        r_max = float('inf')\n    else:\n        r_max = max(r_list)\n    if G == 0:\n        g_max = float('inf')\n    else:\n        g_max = max(g_list)\n    if B == 0:\n        b_max = float('inf')\n    else:\n        b_max = max(b_list)\n    for i in range(M):\n        if r_max >= g_max and r_max >= b_max:\n            r_max /= 2\n        elif g_max >= r_max and g_max >= b_max:\n            g_max /= 2\n        else:\n            b_max /= 2\n    print(int(max(r_max, g_max, b_max)))\n    tc -= 1", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    ag = list(map(int, input().split()))\n    ab = list(map(int, input().split()))\n    mxr = max(ar)\n    mxg = max(ag)\n    mxb = max(ab)\n    for i in range(m):\n        if mxr >= mxg and mxr >= mxb:\n            mxr //= 2\n        elif mxg >= mxr and mxg >= mxb:\n            mxg //= 2\n        else:\n            mxb //= 2\n    print(max(mxr, mxg, mxb))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    r_lst = list(map(int, input().split()))\n    g_lst = list(map(int, input().split()))\n    b_lst = list(map(int, input().split()))\n    for counter in range(m):\n        maxi = max(max(r_lst), max(g_lst), max(b_lst))\n        if maxi in r_lst:\n            for elem in range(len(r_lst)):\n                r_lst[elem] = r_lst[elem] // 2\n        elif maxi in g_lst:\n            for elem in range(len(g_lst)):\n                g_lst[elem] = g_lst[elem] // 2\n        else:\n            for elem in range(len(b_lst)):\n                b_lst[elem] = b_lst[elem] // 2\n    maxi = max(max(r_lst), max(g_lst), max(b_lst))\n    print(maxi)", "def soln(r, g, b, m, rrr, grr, brr):\n    rmax = max(rrr)\n    gmax = max(grr)\n    bmax = max(brr)\n    for i in range(m):\n        cur = max([rmax, gmax, bmax])\n        if rmax == cur:\n            rmax //= 2\n        elif gmax == cur:\n            gmax //= 2\n        else:\n            bmax //= 2\n    return max([rmax, gmax, bmax])\nfor _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rrr = list(map(int, input().split()))\n    grr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    print(soln(r, g, b, m, rrr, grr, brr))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    R = sorted(list(map(int, input().split())))\n    G = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    for _ in range(m):\n        n = max(R[-1], G[-1], B[-1])\n        if n == 0:\n            print(n)\n            break\n        if n == R[-1]:\n            R[-1] //= 2\n        elif n == G[-1]:\n            G[-1] //= 2\n        else:\n            B[-1] //= 2\n    else:\n        print(max(R[-1], G[-1], B[-1]))", "def soln(r, g, b, m, rrr, grr, brr):\n    rmax = max(rrr)\n    gmax = max(grr)\n    bmax = max(brr)\n    for i in range(m):\n        cur = max([rmax, gmax, bmax])\n        if rmax == cur:\n            rmax //= 2\n        elif gmax == cur:\n            gmax //= 2\n        else:\n            bmax //= 2\n    return max([rmax, gmax, bmax])\nfor _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rrr = list(map(int, input().split()))\n    grr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    print(soln(r, g, b, m, rrr, grr, brr))", "def call(l, lenn):\n    s = 0\n    for i in range(lenn):\n        l[i] = l[i] // 2\n        s += l[i]\n    return s\nfor _ in range(int(input())):\n    (red, green, blue, m) = map(int, input().split())\n    arrRed = list(map(int, input().split()))\n    arrGreen = list(map(int, input().split()))\n    arrBlue = list(map(int, input().split()))\n    maxRed = max(arrRed)\n    maxGreen = max(arrGreen)\n    maxBlue = max(arrBlue)\n    for i in range(m):\n        if maxBlue >= maxGreen and maxBlue >= maxRed:\n            maxBlue = maxBlue // 2\n        elif maxRed >= maxGreen and maxRed >= maxBlue:\n            maxRed = maxRed // 2\n        elif maxGreen >= maxRed and maxGreen >= maxBlue:\n            maxGreen = maxGreen // 2\n        else:\n            pass\n    print(max(maxBlue, maxGreen, maxRed))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    ag = list(map(int, input().split()))\n    ab = list(map(int, input().split()))\n    (k1, k2, k3) = (max(ar), max(ag), max(ab))\n    t1 = 0\n    while t1 < m:\n        if k1 >= k2:\n            if k1 >= k3:\n                for i in range(r):\n                    ar[i] //= 2\n                k1 //= 2\n            else:\n                for i in range(b):\n                    ab[i] //= 2\n                k3 //= 2\n        elif k2 >= k3:\n            for i in range(g):\n                ag[i] //= 2\n            k2 //= 2\n        else:\n            for i in range(b):\n                ab[i] //= 2\n            k3 //= 2\n        t1 += 1\n    if k1 >= k2:\n        if k1 >= k3:\n            print(k1)\n        else:\n            print(k3)\n    elif k2 >= k3:\n        print(k2)\n    else:\n        print(k3)", "t = int(input())\nfor _ in range(t):\n    (R, B, G, M) = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    (r, b, g) = (max(R), max(B), max(G))\n    for _ in range(M):\n        if r >= b and r >= g:\n            r = r // 2\n        elif b >= r and b >= g:\n            b = b // 2\n        elif g >= r and g >= b:\n            g = g // 2\n    print(max(r, b, g))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    r1 = list(map(int, input().split()))\n    g1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    for i in range(m):\n        m_r1 = max(r1)\n        m_g1 = max(g1)\n        m_b1 = max(b1)\n        m_ovr = max(m_r1, m_g1, m_b1)\n        if m_ovr == m_r1:\n            r1 = [x // 2 for x in r1]\n        elif m_ovr == m_g1:\n            g1 = [x // 2 for x in g1]\n        else:\n            b1 = [x // 2 for x in b1]\n    print(max(max(r1), max(g1), max(b1)))", "T = int(input())\nfor _ in range(T):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    potions = {'red': r, 'green': g, 'blue': b}\n    for _ in range(M):\n        color = max(potions.keys(), key=lambda c: max(potions[c]))\n        magic = potions[color]\n        for i in range(len(magic)):\n            magic[i] = magic[i] // 2\n    print(max(max(r), max(g), max(b)))", "t = int(input())\nfor _ in range(t):\n    (R, B, G, M) = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    (r, b, g) = (max(R), max(B), max(G))\n    for _ in range(M):\n        if r >= b and r >= g:\n            r = r // 2\n        elif b >= r and b >= g:\n            b = b // 2\n        elif g >= r and g >= b:\n            g = g // 2\n    print(max(r, b, g))", "for t in range(int(input())):\n    (r, g, b, m) = map(int, input().split(' '))\n    rr = max(list(map(int, input().split(' '))))\n    gg = max(list(map(int, input().split(' '))))\n    bb = max(list(map(int, input().split(' '))))\n    lst = sorted([rr, gg, bb])\n    for i in range(m):\n        lst[-1] = lst[-1] // 2\n        lst = sorted(lst)\n    print(lst[-1])", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = map(int, input().split())\n    rl = list(map(int, input().split()))\n    gl = list(map(int, input().split()))\n    bl = list(map(int, input().split()))\n    maxpots = [max(rl), max(gl), max(bl)]\n    for _ in range(m):\n        mp = max(maxpots)\n        for i in range(3):\n            if maxpots[i] == mp:\n                maxpots[i] = maxpots[i] // 2\n                break\n    print(max(maxpots))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    ag = list(map(int, input().split()))\n    ab = list(map(int, input().split()))\n    mxr = max(ar)\n    mxg = max(ag)\n    mxb = max(ab)\n    for i in range(m):\n        if mxr >= mxg and mxr >= mxb:\n            mxr //= 2\n        elif mxg >= mxr and mxg >= mxb:\n            mxg //= 2\n        else:\n            mxb //= 2\n    print(max(mxr, mxg, mxb))", "t = int(input())\nfor _ in range(t):\n    (r, g, b, m) = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    ag = list(map(int, input().split()))\n    ab = list(map(int, input().split()))\n    mxr = max(ar)\n    mxg = max(ag)\n    mxb = max(ab)\n    for i in range(m):\n        if mxr >= mxg and mxr >= mxb:\n            mxr //= 2\n        elif mxg >= mxr and mxg >= mxb:\n            mxg //= 2\n        else:\n            mxb //= 2\n    print(max(mxr, mxg, mxb))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    red = max(list(map(int, input().split())))\n    blue = max(list(map(int, input().split())))\n    green = max(list(map(int, input().split())))\n    while m:\n        if red >= blue and red >= green:\n            red = red // 2\n        elif blue >= red and blue >= green:\n            blue = blue // 2\n        else:\n            green = green // 2\n        m -= 1\n    print(max(red, blue, green))", "T = int(input())\nfor t in range(T):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r_max = max(r)\n    g_max = max(g)\n    b_max = max(b)\n    v = max(r_max, g_max, b_max)\n    while M > 0:\n        if r_max == v:\n            r_max //= 2\n        elif g_max == v:\n            g_max //= 2\n        else:\n            b_max //= 2\n        M -= 1\n        v = max(r_max, g_max, b_max)\n    print(v)", "import math\nt = int(input())\nfor i in range(t):\n    (r, g, b, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    mx = max(x)\n    my = max(y)\n    mz = max(z)\n    for j in range(m):\n        if mx == max(mx, my, mz):\n            mx = math.floor(mx / 2)\n        elif my == max(mx, my, mz):\n            my = math.floor(my / 2)\n        elif mz == max(mx, my, mz):\n            mz = math.floor(mz / 2)\n    print(max(mx, my, mz))", "from math import floor\ntestCases = int(input())\nfor testCase in range(testCases):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    rMax = max(r)\n    gMax = max(g)\n    bMax = max(b)\n    for _ in range(M):\n        if rMax == max(rMax, gMax, bMax):\n            rMax = floor(rMax / 2)\n        elif gMax == max(rMax, gMax, bMax):\n            gMax = floor(gMax / 2)\n        elif bMax == max(rMax, gMax, bMax):\n            bMax = floor(bMax / 2)\n    print(max(rMax, gMax, bMax))", "from math import floor\ntestCases = int(input())\nfor testCase in range(testCases):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    rMax = max(r)\n    gMax = max(g)\n    bMax = max(b)\n    for _ in range(M):\n        if rMax == max(rMax, gMax, bMax):\n            rMax = floor(rMax / 2)\n        elif gMax == max(rMax, gMax, bMax):\n            gMax = floor(gMax / 2)\n        elif bMax == max(rMax, gMax, bMax):\n            bMax = floor(bMax / 2)\n    print(max(rMax, gMax, bMax))", "from math import floor\ntestCases = int(input())\nfor testCase in range(testCases):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for _ in range(M):\n        rMax = max(r)\n        gMax = max(g)\n        bMax = max(b)\n        if rMax == max(rMax, gMax, bMax):\n            r = list(map(lambda x: floor(x / 2), r))\n        elif gMax == max(rMax, gMax, bMax):\n            g = list(map(lambda x: floor(x / 2), g))\n        elif bMax == max(rMax, gMax, bMax):\n            b = list(map(lambda x: floor(x / 2), b))\n    print(max(max(r), max(g), max(b)))", "for _ in range(int(input())):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [max(r), max(g), max(b)]\n    for i in range(M):\n        arr.sort()\n        arr[-1] //= 2\n    arr.sort()\n    print(arr[-1])", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rp = list(map(int, input().split()))\n    gp = list(map(int, input().split()))\n    bp = list(map(int, input().split()))\n    rp.sort(reverse=True)\n    bp.sort(reverse=True)\n    gp.sort(reverse=True)\n    main = [rp, bp, gp]\n    main.sort(reverse=True)\n    for i in range(m):\n        for j in range(len(main[0])):\n            main[0][j] //= 2\n        main.sort(reverse=True)\n    print(main[0][0])", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rp = list(map(int, input().split()))\n    gp = list(map(int, input().split()))\n    bp = list(map(int, input().split()))\n    rp.sort(reverse=True)\n    bp.sort(reverse=True)\n    gp.sort(reverse=True)\n    main = [rp, bp, gp]\n    main.sort(reverse=True)\n    for i in range(m):\n        for j in range(len(main[0])):\n            main[0][j] //= 2\n        main.sort(reverse=True)\n    print(main[0][0])", "t = int(input())\nwhile t > 0:\n    (r, g, b, m) = [int(x) for x in input().split()]\n    R = [int(x) for x in input().split()]\n    G = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    rr = max(R)\n    gg = max(G)\n    bb = max(B)\n    arr = [rr, gg, bb]\n    while m > 0:\n        arr = sorted(arr)\n        arr[2] = arr[2] // 2\n        m = m - 1\n    t = t - 1\n    arr = sorted(arr)\n    x = arr[2]\n    print(x)", "T = int(input())\n\ndef max_list(a):\n    m = 0\n    for i in a:\n        if i > m:\n            m = i\n    return m\n\ndef half(b):\n    j = []\n    for i in b:\n        j.append(i // 2)\n    return j\nfor i in range(T):\n    (a, b, c, d) = input().split()\n    r = int(a)\n    g = int(b)\n    b = int(c)\n    m = int(d)\n    r_list = list(map(int, input().split()))\n    g_list = list(map(int, input().split()))\n    b_list = list(map(int, input().split()))\n    for j in range(m):\n        r_max = max_list(r_list)\n        g_max = max_list(g_list)\n        b_max = max_list(b_list)\n        if r_max >= g_max and r_max >= b_max:\n            r_list = half(r_list)\n        elif g_max >= r_max and g_max >= b_max:\n            g_list = half(g_list)\n        else:\n            b_list = half(b_list)\n    r_max = max_list(r_list)\n    g_max = max_list(g_list)\n    b_max = max_list(b_list)\n    if r_max >= g_max and r_max >= b_max:\n        print(r_max)\n    elif g_max >= r_max and g_max >= b_max:\n        print(g_max)\n    else:\n        print(b_max)", "t = int(input())\nfor i in range(t):\n    (r, g, b, m) = map(int, input().split())\n    a = max(list(map(int, input().split())))\n    b = max(list(map(int, input().split())))\n    c = max(list(map(int, input().split())))\n    l = [a, b, c]\n    while m:\n        x = max(l)\n        l.append(x // 2)\n        l.remove(x)\n        m -= 1\n    print(max(l))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    a = max(list(map(int, input().split())))\n    b = max(list(map(int, input().split())))\n    c = max(list(map(int, input().split())))\n    l = [a, b, c]\n    while m:\n        temp = max(l)\n        l.append(temp // 2)\n        l.remove(temp)\n        m -= 1\n    print(max(l))", "T = int(input())\nfor t in range(T):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r_max = max(r)\n    g_max = max(g)\n    b_max = max(b)\n    v = max(r_max, g_max, b_max)\n    while M > 0:\n        if r_max == v:\n            r_max //= 2\n        elif g_max == v:\n            g_max //= 2\n        else:\n            b_max //= 2\n        M -= 1\n        v = max(r_max, g_max, b_max)\n    print(v)", "T = int(input())\nfor t in range(T):\n    (R, G, B, M) = map(int, input().split())\n    r = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r_max = max(r)\n    g_max = max(g)\n    b_max = max(b)\n    v = max(r_max, g_max, b_max)\n    while M > 0:\n        if r_max == v:\n            r_max //= 2\n        elif g_max == v:\n            g_max //= 2\n        else:\n            b_max //= 2\n        M -= 1\n        v = max(r_max, g_max, b_max)\n    print(v)", "for i in range(int(input())):\n    (R, G, B, M) = map(int, input().split())\n    RP = list(map(int, input().split()))\n    GP = list(map(int, input().split()))\n    BP = list(map(int, input().split()))\n    for i in range(M):\n        if max(RP) >= max(GP) and max(RP) >= max(BP):\n            RP = [x // 2 for x in RP]\n        elif max(GP) >= max(RP) and max(GP) >= max(BP):\n            GP = [x // 2 for x in GP]\n        else:\n            BP = [x // 2 for x in BP]\n    p = RP + GP + BP\n    print(max(p))", "t = int(input())\nfor i in range(t):\n    (r, g, b, m) = map(int, input().split())\n    rp = list(map(int, input().split()))\n    gp = list(map(int, input().split()))\n    bp = list(map(int, input().split()))\n    for i in range(m):\n        if max(rp) >= max(gp) and max(rp) >= max(bp):\n            rp = [x // 2 for x in rp]\n        elif max(gp) >= max(rp) and max(gp) >= max(bp):\n            gp = [x // 2 for x in gp]\n        else:\n            bp = [x // 2 for x in bp]\n    p = rp + gp + bp\n    print(max(p))", "t = int(input())\nfor tt in range(t):\n    (r, g, b, m) = map(int, input().split())\n    redlist = list(map(int, input().split()))\n    greenlist = list(map(int, input().split()))\n    bluelist = list(map(int, input().split()))\n    while m > 0:\n        if max(redlist) >= max(bluelist) and max(redlist) >= max(greenlist):\n            for i in range(len(redlist)):\n                redlist[i] //= 2\n            m -= 1\n        elif max(bluelist) >= max(redlist) and max(bluelist) >= max(greenlist):\n            for i in range(len(bluelist)):\n                bluelist[i] //= 2\n            m -= 1\n        elif max(greenlist) >= max(redlist) and max(greenlist) >= max(bluelist):\n            for i in range(len(greenlist)):\n                greenlist[i] //= 2\n            m -= 1\n    maxval = []\n    maxval.append(max(redlist))\n    maxval.append(max(bluelist))\n    maxval.append(max(greenlist))\n    print(max(maxval))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\nfor i in range(T):\n    (R, G, B, M) = list(map(int, input().split()))\n    Rarray = list(map(int, input().split()))\n    Garray = list(map(int, input().split()))\n    Barray = list(map(int, input().split()))\n    while M > 0:\n        flag = 0\n        maxR = max(Rarray)\n        maxG = max(Garray)\n        maxB = max(Barray)\n        maximum = []\n        if maxR >= maxG and maxR >= maxB:\n            maximum = Rarray.copy()\n            flag = 1\n        elif maxG >= maxR and maxG >= maxB:\n            maximum = Garray.copy()\n            flag = 2\n        elif maxB >= maxG and maxB >= maxR:\n            maximum = Barray.copy()\n            flag = 3\n        maximum = [num // 2 for num in maximum]\n        if flag == 1:\n            Rarray = maximum.copy()\n        elif flag == 2:\n            Garray = maximum.copy()\n        elif flag == 3:\n            Barray = maximum.copy()\n        M -= 1\n    print(max(max(Rarray), max(Garray), max(Barray)))", "T = int(input())\n\ndef findv(spells, M, R, G, B):\n    r_0 = 0\n    r_i = R\n    g_0 = r_i\n    g_i = g_0 + G\n    b_0 = g_i\n    b_i = b_0 + B\n    for i in range(M):\n        maxSpell = max(spells)\n        index = spells.index(maxSpell)\n        (start, end) = (0, 0)\n        if r_0 <= index < r_i:\n            (start, end) = (r_0, r_i)\n        elif g_0 <= index < g_i:\n            (start, end) = (g_0, g_i)\n        else:\n            (start, end) = (b_0, b_i)\n        for i in range(start, end):\n            spells[i] = maxSpell // 2\n    print(max(spells))\nfor testcase in range(T):\n    (R, G, B, M) = map(int, input().split())\n    spells = []\n    for i in range(3):\n        spells += list(map(int, input().split()))\n    findv(spells, M, R, G, B)", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rli = list(map(int, input().split()))\n    gli = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    while m > 0:\n        rmx = max(rli)\n        gmx = max(gli)\n        bmx = max(bli)\n        mx = max(rmx, gmx, bmx)\n        m -= 1\n        if mx == rmx:\n            rli = [x // 2 for x in rli]\n        elif mx == gmx:\n            gli = [x // 2 for x in gli]\n        elif mx == bmx:\n            bli = [x // 2 for x in bli]\n    rmx = max(rli)\n    gmx = max(gli)\n    bmx = max(bli)\n    print(max(rmx, gmx, bmx))", "for _ in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    rli = list(map(int, input().split()))\n    gli = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    while m > 0:\n        rmx = max(rli)\n        gmx = max(gli)\n        bmx = max(bli)\n        mx = max(rmx, gmx, bmx)\n        m -= 1\n        if mx == rmx:\n            rli = [x // 2 for x in rli]\n        elif mx == gmx:\n            gli = [x // 2 for x in gli]\n        elif mx == bmx:\n            bli = [x // 2 for x in bli]\n    rmx = max(rli)\n    gmx = max(gli)\n    bmx = max(bli)\n    print(max(rmx, gmx, bmx))", "def check(lst1, lst2, lst3):\n    lst1 = list(reversed(lst1))\n    lst2 = list(reversed(lst2))\n    lst3 = list(reversed(lst3))\n    if lst1 >= lst2 and lst1 >= lst3:\n        return 'R'\n    elif lst2 >= lst1 and lst2 >= lst3:\n        return 'G'\n    else:\n        return 'B'\n\ndef devide_by_2(lst):\n    for i in range(len(lst)):\n        lst[i] = lst[i] // 2\n\ndef solve():\n    k = 0\n    while k < M:\n        r = check(dct['R'], dct['G'], dct['B'])\n        devide_by_2(dct[r])\n        k = k + 1\n    ans = max(dct['R'][-1], dct['G'][-1], dct['B'][-1])\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    (R, G, B, M) = list(map(int, input().split()))\n    dct = {}\n    for ele in ['R', 'G', 'B']:\n        dct[ele] = sorted(list(map(int, input().split())))\n    solve()", "def great(r, g, b):\n    if r > g and r > b:\n        return (int(r / 2), g, b)\n    elif g > b:\n        return (r, int(g / 2), b)\n    else:\n        return (r, g, int(b / 2))\nt = int(input())\nwhile t:\n    t -= 1\n    (r, g, b, m) = map(int, input().split())\n    r1 = list(map(int, input().split()))\n    g1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    r = max(r1)\n    g = max(g1)\n    b = max(b1)\n    for i in range(m):\n        (r, g, b) = great(r, g, b)\n    print(max(r, g, b))", "import sys\nt = int(input())\nwhile t:\n    (R, G, B, M) = [int(x) for x in sys.stdin.readline().split()]\n    r = [int(x) for x in sys.stdin.readline().split()]\n    g = [int(x) for x in sys.stdin.readline().split()]\n    b = [int(x) for x in sys.stdin.readline().split()]\n    r.sort(reverse=True)\n    g.sort(reverse=True)\n    b.sort(reverse=True)\n    while M:\n        temp = [r[0], g[0], b[0]]\n        c = 0\n        m = temp[0]\n        for i in range(1, 3):\n            if m < temp[i]:\n                m = temp[i]\n                c = i\n        if c == 0:\n            r = [int(x / 2) for x in r]\n        elif c == 1:\n            g = [int(x / 2) for x in g]\n        else:\n            b = [int(x / 2) for x in b]\n        M = M - 1\n    tmp = [r[0], g[0], b[0]]\n    print(max(tmp))\n    t = t - 1", "T = int(input())\nfor _ in range(T):\n    (r, g, b, m) = map(int, input().split())\n    R = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    while m > 0:\n        m2 = max(G)\n        m1 = max(R)\n        m3 = max(B)\n        m4 = max(m1, m2, m3)\n        if m4 == m1:\n            for i in range(len(R)):\n                R[i] = R[i] // 2\n        elif m4 == m2:\n            for i in range(len(G)):\n                G[i] = G[i] // 2\n        elif m4 == m3:\n            for i in range(len(B)):\n                B[i] = B[i] // 2\n        m -= 1\n    print(max(max(R), max(G), max(B)))", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (r, g, b, m) = sm()\n        portions = []\n        portions.append(max(ln()))\n        portions.append(max(ln()))\n        portions.append(max(ln()))\n        for i in range(m):\n            portions.sort()\n            portions[2] = portions[2] // 2\n        print(max(portions))\nmain()", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "def minimise(r, b, g, m):\n    max1 = max(r)\n    max2 = max(b)\n    max3 = max(g)\n    arr = [max1, max2, max3]\n    while m != 0:\n        to_be_changed = max(arr)\n        itr2 = 0\n        while itr2 != 3:\n            if arr[itr2] == to_be_changed:\n                arr[itr2] = arr[itr2] // 2\n                break\n            else:\n                itr2 += 1\n        m -= 1\n    return max(arr)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d1 = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    d3 = list(map(int, input().split()))\n    d4 = list(map(int, input().split()))\n    print(minimise(d2, d3, d4, d1[3]))\n    test_cases -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    r = list(map(int, input().split()))\n    r2 = list(map(int, input().split()))\n    r1 = max(r2)\n    g2 = list(map(int, input().split()))\n    g1 = max(g2)\n    b2 = list(map(int, input().split()))\n    b1 = max(b2)\n    while r[3] > 0:\n        temp = max(r1, g1, b1)\n        if temp == r1:\n            r1 //= 2\n        elif temp == g1:\n            g1 //= 2\n        else:\n            b1 //= 2\n        r[3] -= 1\n    print(max(r1, g1, b1))", "import math\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = a // 2\n        elif s == b:\n            b = b // 2\n        else:\n            c = c // 2\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "import math\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "import math\nimport heapq\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "import sys\nimport math\nimport heapq\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "for i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    temp = []\n    for _ in range(3):\n        k = max(list(map(int, input().split())))\n        temp.append(k)\n    (x, y, z) = temp\n    while m != 0:\n        maxi = max(x, y, z)\n        if x == maxi:\n            x = x // 2\n        elif y == maxi:\n            y = y // 2\n        else:\n            z = z // 2\n        m -= 1\n    print(max(x, y, z))", "import sys\nimport math\nimport heapq\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "T = int(input())\nfor i in range(T):\n    (r, g, b, m) = list(map(int, input().split()))\n    l = []\n    for i in range(3):\n        l1 = list(map(int, input().split()))\n        l.append(l1)\n    for i in range(m + 1):\n        a = 0\n        b = 0\n        for j in range(3):\n            m = max(l[j])\n            if m > a:\n                a = m\n                b = j\n        for k in range(len(l[b])):\n            l[b][k] = l[b][k] // 2\n    print(a)", "import sys\nimport math\nimport heapq\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "import sys\nimport math\nimport heapq\n\ndef half(n):\n    return n // 2\n\ndef main(arr, m):\n    (a, b, c) = arr\n    while m != 0:\n        s = max(a, b, c)\n        if s == a:\n            a = half(a)\n        elif s == b:\n            b = half(b)\n        else:\n            c = half(c)\n        m -= 1\n    return max(a, b, c)\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = max(list(map(int, input().split())))\n        arr.append(c)\n    print(main(arr, m))", "import sys\nimport math\nimport heapq\n\ndef half(arr):\n    for i in range(len(arr)):\n        arr[i] //= 2\n    return arr\n\ndef main(arr, m):\n    (x, y, z) = arr\n    x.sort()\n    y.sort()\n    z.sort()\n    while m != 0:\n        (a, b, c) = (x[-1], y[-1], z[-1])\n        s = max(a, b, c)\n        if s == a:\n            half(x)\n        elif s == b:\n            half(y)\n        else:\n            half(z)\n        m -= 1\n    return max(x[-1], y[-1], z[-1])\nfor i in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    arr = []\n    for j in range(3):\n        c = list(map(int, input().split()))\n        arr.append(c)\n    print(main(arr, m))", "for _ in range(int(input())):\n    (r, g, b, m) = list(map(int, input().split()))\n    l = []\n    for i in range(3):\n        l1 = list(map(int, input().split()))\n        l.append(l1)\n    for i in range(m + 1):\n        a = 0\n        b = 0\n        for j in range(3):\n            m = max(l[j])\n            if m > a:\n                a = m\n                b = j\n        for k in range(len(l[b])):\n            l[b][k] = l[b][k] // 2\n    print(a)", "def potion(m, l):\n    for _ in range(m):\n        l.sort()\n        l[2] = l[2] // 2\n    return max(l)\ntry:\n    tstc = int(input())\n    for t in range(tstc):\n        (r, g, b, m) = map(int, input().split())\n        red = [int(i) for i in input().split()]\n        green = [int(i) for i in input().split()]\n        blue = [int(i) for i in input().split()]\n        print(potion(m, [max(red), max(green), max(blue)]))\nexcept:\n    pass", "test = int(input())\nfor _ in range(test):\n    (r, b, g, m) = map(int, input().split())\n    red = sorted(map(int, input().split()), reverse=True)\n    blue = sorted(map(int, input().split()), reverse=True)\n    green = sorted(map(int, input().split()), reverse=True)\n    (x, y, z) = (red[0], blue[0], green[0])\n    for _ in range(m):\n        k = max(x, y, z)\n        if k == x:\n            x = x // 2\n        elif k == y:\n            y = y // 2\n        else:\n            z = z // 2\n    print(max(x, y, z))", "for _ in range(int(input())):\n    (r, b, g, m) = map(int, input().split())\n    red = sorted(map(int, input().split()), reverse=True)\n    blue = sorted(map(int, input().split()), reverse=True)\n    green = sorted(map(int, input().split()), reverse=True)\n    (x, y, z) = (red[0], blue[0], green[0])\n    for _ in range(m):\n        k = max(x, y, z)\n        if k == x:\n            x = x // 2\n        elif k == y:\n            y = y // 2\n        else:\n            z = z // 2\n    print(max(x, y, z))", "t = int(input())\nwhile t > 0:\n    (r, g, q, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    for i in range(m):\n        x = max(a)\n        y = max(b)\n        z = max(c)\n        if x >= y and x >= z:\n            for j in range(r):\n                a[j] //= 2\n        elif y >= x and y >= z:\n            for j in range(g):\n                b[j] //= 2\n        else:\n            for j in range(q):\n                c[j] //= 2\n    x = max(a)\n    y = max(b)\n    z = max(c)\n    print(max(x, max(y, z)))\n    t -= 1", "for _ in range(int(input())):\n    (r1, g1, b1, m) = map(int, input().split())\n    r = [int(i) for i in input().split()]\n    g = [int(j) for j in input().split()]\n    b = [int(k) for k in input().split()]\n    while m > 0:\n        if max(max(r), max(g), max(b)) in r:\n            r = [i // 2 for i in r]\n        elif max(max(r), max(g), max(b)) in g:\n            g = [j // 2 for j in g]\n        else:\n            b = [k // 2 for k in b]\n        m -= 1\n    print(max(max(r), max(g), max(b)))", "t = int(input())\nfor i in range(t):\n    line = input()\n    pui = line.split()\n    r = int(pui[0])\n    g = int(pui[1])\n    b = int(pui[2])\n    m = int(pui[3])\n    ar = list()\n    for i in range(3):\n        line = input()\n        pui = line.split()\n        pui = [int(j) for j in pui]\n        ar.append(pui)\n    for i in range(m):\n        R = max(ar[0])\n        G = max(ar[1])\n        B = max(ar[2])\n        if R >= G and R >= B:\n            for j in range(len(ar[0])):\n                ar[0][j] = int(ar[0][j] / 2)\n        elif G >= R and G >= B:\n            for j in range(len(ar[1])):\n                ar[1][j] = int(ar[1][j] / 2)\n        elif B >= G and B >= R:\n            for j in range(len(ar[2])):\n                ar[2][j] = int(ar[2][j] / 2)\n    R = max(ar[0])\n    G = max(ar[1])\n    B = max(ar[2])\n    ans = max(R, G, B)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    line = input()\n    pui = line.split()\n    r = int(pui[0])\n    g = int(pui[1])\n    b = int(pui[2])\n    m = int(pui[3])\n    ar = list()\n    for i in range(3):\n        line = input()\n        pui = line.split()\n        pui = [int(j) for j in pui]\n        ar.append(pui)\n    for i in range(m):\n        R = max(ar[0])\n        G = max(ar[1])\n        B = max(ar[2])\n        if R >= G and R >= B:\n            for j in range(len(ar[0])):\n                ar[0][j] = int(ar[0][j] / 2)\n        elif G >= R and G >= B:\n            for j in range(len(ar[1])):\n                ar[1][j] = int(ar[1][j] / 2)\n        elif B >= G and B >= R:\n            for j in range(len(ar[2])):\n                ar[2][j] = int(ar[2][j] / 2)\n    R = max(ar[0])\n    G = max(ar[1])\n    B = max(ar[2])\n    ans = max(R, G, B)\n    print(ans)", "for _ in range(int(input())):\n    (R, G, B, M) = map(int, input().split())\n    l = []\n    r = list(map(int, input().split()))\n    rm = max(r)\n    g = list(map(int, input().split()))\n    gm = max(g)\n    b = list(map(int, input().split()))\n    bm = max(b)\n    l = [rm, gm, bm]\n    l.sort()\n    for i in range(M):\n        l[-1] //= 2\n        l.sort()\n    print(l[-1])", "for j in range(int(input())):\n    (r, g, b, m) = map(int, input().split())\n    x = []\n    for i in range(3):\n        a = list(map(int, input().split()))\n        x.append(a)\n    while m != 0:\n        c = []\n        for i in x:\n            c.append(max(i))\n        z = c.index(max(c))\n        for i in range(len(x[z])):\n            x[z][i] = x[z][i] // 2\n        m -= 1\n    am = []\n    for i in x:\n        am += i\n    print(max(am))", "T = int(input())\nfor i in range(T):\n    [r, g, b, k] = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    j = sorted([max(s), max(t), max(c)])\n    for i in range(k):\n        j[-1] = int(j[-1] / 2)\n        j = sorted(j)\n    print(j[-1])"]