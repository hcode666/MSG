["kk = 100\na = int(input())\nfor i in range(a):\n    (n, t) = map(int, input().split())\n    len = [int(x) for x in str(n)]\n    i = 0\n    pop = 1\n    while i < t:\n        b = min(len)\n        if b == 9:\n            break\n        else:\n            a = len.index(b)\n            len[a] = b + 1\n            i += 1\n    for j in len:\n        pop *= j\n    print(pop)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    aa = list(str(a))\n    aa = ' '.join(aa)\n    x = list(map(int, aa.split()))\n    x.sort()\n    for i in range(b):\n        k = min(x)\n        if k != 9:\n            x.remove(k)\n            k += 1\n            x.append(k)\n    p = 1\n    for i in x:\n        p *= i\n    print(p)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = []\n    for i in str(n):\n        a.append(int(i))\n    a.sort()\n    ans = 1\n    while k and a[0] != 9:\n        a[0] += 1\n        k -= 1\n        a.sort()\n    for i in a:\n        ans *= i\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = []\n    for i in str(n):\n        a.append(int(i))\n    a.sort()\n    ans = 1\n    while k and a[0] != 9:\n        a[0] += 1\n        k -= 1\n        a.sort()\n    for i in a:\n        ans *= i\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = []\n    for i in str(n):\n        a.append(int(i))\n    a.sort()\n    l = len(a)\n    ans = 1\n    while k and a[0] != 9:\n        a[0] += 1\n        k -= 1\n        a.sort()\n    for i in a:\n        ans *= i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = [int(a) for a in str(n)]\n    x.sort()\n    while k > 0:\n        if x[0] == 9:\n            break\n        x[0] += 1\n        x.sort()\n        k -= 1\n    ans = 1\n    for i in x:\n        ans *= i\n    print(ans)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    l = list(str(n))\n    l = list(map(int, l))\n    while k > 0:\n        m = l.index(min(l))\n        if l[m] >= 9:\n            break\n        l[m] += 1\n        k -= 1\n    s = 1\n    for i in l:\n        s *= i\n    print(s)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    l = list(str(n))\n    l = list(map(int, l))\n    while k > 0:\n        m = l.index(min(l))\n        if l[m] >= 9:\n            break\n        l[m] += 1\n        k -= 1\n    s = 1\n    for i in l:\n        s *= i\n    print(s)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    N = str(n)\n    num = []\n    for i in N:\n        num.append(int(i))\n    num.sort()\n    while k > 0:\n        if num[0] == 9:\n            break\n        num[0] += 1\n        num.sort()\n        k -= 1\n    ans = 1\n    for i in num:\n        ans *= i\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    while a > 0:\n        i = a % 10\n        l.append(i)\n        a //= 10\n    l.sort()\n    c = 1\n    d = len(l)\n    for i in range(b):\n        if l[0] == 9:\n            break\n        if d >= b:\n            l[0] += 1\n        else:\n            l[0] += 1\n        l.sort()\n    for i in range(d):\n        c *= l[i]\n    print(c)", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ns = list(map(int, list(str(n))))\n    ns.sort()\n    s = 0\n    for _ in range(k):\n        if ns[s] < 9:\n            ns[s] += 1\n        if s == len(ns) - 1:\n            s = 0\n        elif ns[s + 1] >= ns[s]:\n            s = 0\n        else:\n            s += 1\n    print(np.prod(ns))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    while n != 0:\n        r = n % 10\n        n = n // 10\n        l.append(r)\n    for i in range(k):\n        m = min(l)\n        if m == 9:\n            break\n        l[l.index(m)] += 1\n    s = 1\n    for j in l:\n        s *= j\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    while n != 0:\n        r = n % 10\n        n = n // 10\n        l.append(r)\n    for i in range(k):\n        m = min(l)\n        if m == 9:\n            break\n        l[l.index(m)] += 1\n    s = 1\n    for j in l:\n        s *= j\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    while n != 0:\n        r = n % 10\n        n = n // 10\n        l.append(r)\n    for i in range(k):\n        m = min(l)\n        if m == 9:\n            break\n        l[l.index(m)] += 1\n    s = 1\n    for j in l:\n        s *= j\n    print(s)", "t = int(input())\nc = 1\nE = []\nfor a in range(t):\n    (A, B) = map(int, input().split())\n    C = list(map(int, str(A)))\n    for i in range(B):\n        minimum = min(C)\n        if minimum == 9:\n            break\n        L = C.index(minimum)\n        J = C[L]\n        J = int(J) + 1\n        C[L] = J\n    for k in C:\n        c *= int(k)\n    print(c)\n    c = 1", "numTest = int(input())\nfor j in range(numTest):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, str(n)))\n    prod = 1\n    for j in range(k):\n        mini = min(arr)\n        if mini == 9:\n            break\n        arr[arr.index(mini)] += 1\n    for j in arr:\n        prod *= j\n    print(prod)", "numTest = int(input())\nfor j in range(numTest):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, str(n)))\n    prod = 1\n    for j in range(k):\n        mini = min(arr)\n        if mini == 9:\n            break\n        arr[arr.index(mini)] += 1\n    for j in arr:\n        prod *= j\n    print(prod)", "numTest = int(input())\nfor _ in range(numTest):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, str(n)))\n    prod = 1\n    curr = None\n    idx = 0\n    for i in range(k):\n        mini = min(arr)\n        if mini == 9:\n            break\n        arr[arr.index(mini)] += 1\n    for i in arr:\n        prod *= i\n    print(prod)", "for i in range(int(input())):\n    (N, K) = input().split()\n    n = list(map(int, list(N)))\n    k = int(K)\n    for _ in range(k):\n        mi = min(n)\n        if mi == 9:\n            break\n        else:\n            n[n.index(mi)] += 1\n    product = 1\n    for m in n:\n        product *= m\n    print(product)", "numTest = int(input())\nfor _ in range(numTest):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, str(n)))\n    prod = 1\n    curr = None\n    idx = 0\n    for i in range(k):\n        mini = min(arr)\n        if mini == 9:\n            break\n        arr[arr.index(mini)] += 1\n    for i in arr:\n        prod *= i\n    print(prod)", "testCases = int(input())\nfor i in range(testCases, 0, -1):\n    (num, k) = map(int, input().split())\n    digits = [int(a) for a in str(num)]\n    for i in range(k):\n        if min(digits) == 9:\n            break\n        else:\n            digits[digits.index(min(digits))] = min(digits) + 1\n    prod = 1\n    for i in digits:\n        prod *= i\n    print(prod)", "testCases = int(input())\nfor i in range(testCases, 0, -1):\n    (num, k) = map(int, input().split())\n    digits = [int(a) for a in str(num)]\n    for i in range(k):\n        if min(digits) == 9:\n            break\n        else:\n            digits[digits.index(min(digits))] = min(digits) + 1\n    prod = 1\n    for i in digits:\n        prod *= i\n    print(prod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = [0 for i in range(10)]\n    sn = str(n)\n    for i in sn:\n        li[int(i)] += 1\n    for i in range(k):\n        for j in range(len(li)):\n            if li[j] > 0 and j != 9:\n                li[j] -= 1\n                li[j + 1] += 1\n                break\n    val = 1\n    for i in range(len(li)):\n        if li[i] != 0:\n            val *= i ** li[i]\n    print(val)", "from heapq import *\n\ndef solve():\n    (s, k) = list(map(int, input().split()))\n    s = str(s)\n    pq = []\n    for i in s:\n        heappush(pq, int(i))\n    for i in range(k):\n        x = heappop(pq)\n        if x == 9:\n            x -= 1\n        x += 1\n        heappush(pq, x)\n    prod = 1\n    for i in pq:\n        prod *= i\n    return prod\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "T = int(input(''))\nfor i in range(T):\n    l1 = [int(c) for c in input('').split()]\n    a = l1[1]\n    num = [int(x) for x in str(l1[0])]\n    mydict = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}\n    for digit in num:\n        mydict[digit] += 1\n    while a > 0:\n        for digit in mydict:\n            if mydict[digit] > 0 and digit != 9:\n                mydict[digit] -= 1\n                mydict[digit + 1] += 1\n                a -= 1\n                break\n            elif digit == 9:\n                a = 0\n                break\n    prod = 1\n    for digit in mydict:\n        if mydict[digit] != 0:\n            k = mydict[digit]\n            while k > 0:\n                prod *= digit\n                k -= 1\n    print(prod)", "T = int(input(''))\nfor i in range(T):\n    l1 = [int(c) for c in input('').split()]\n    a = l1[1]\n    num = [int(x) for x in str(l1[0])]\n    mydict = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}\n    for digit in num:\n        mydict[digit] += 1\n    while a > 0:\n        for digit in mydict:\n            if mydict[digit] > 0 and digit != 9:\n                mydict[digit] -= 1\n                mydict[digit + 1] += 1\n                a -= 1\n                break\n            elif digit == 9:\n                a = 0\n                break\n    prod = 1\n    for digit in mydict:\n        if mydict[digit] != 0:\n            k = mydict[digit]\n            while k > 0:\n                prod *= digit\n                k -= 1\n    print(prod)", "def ans(s, k):\n    k = int(k)\n    arr = list(map(int, s))\n    while k != 0:\n        pos = arr.index(min(arr))\n        if arr[pos] == 9:\n            break\n        else:\n            arr[pos] += 1\n        k -= 1\n    a = 1\n    for y in arr:\n        a *= y\n    return a\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = list(input().split())\n    print(ans(d[0], d[len(d) - 1]))\n    test_cases -= 1", "for tc in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    l = list(str(n))\n    l = list(map(int, l))\n    while k > 0:\n        m = l.index(min(l))\n        if l[m] >= 9:\n            break\n        l[m] += 1\n        k -= 1\n    s = 1\n    for i in l:\n        s *= i\n    print(s)", "from math import ceil\nt = int(input())\nwhile t != 0:\n    t = t - 1\n    (n, k) = input().split()\n    k = int(k)\n    a = list()\n    for i in n:\n        a.append(i)\n    a.sort()\n    if a[0] == '9' or k == 0:\n        m1 = 1\n        for i in a:\n            m1 = m1 * int(i)\n        print(m1)\n    elif len(a) == 1:\n        if int(a[0]) + k > 9:\n            print('9')\n        else:\n            print(int(a[0]) + k)\n    else:\n        ss = 0\n        ind = len(a) - 1\n        for i in range(len(a) - 1):\n            if ss + (int(a[i + 1]) - int(a[i])) * (i + 1) >= k or a[i + 1] == '9':\n                ind = i\n                break\n            else:\n                ss = ss + (int(a[i + 1]) - int(a[i])) * (i + 1)\n        for i in range(ind):\n            k = k + int(a[i]) - int(a[ind])\n            a[i] = int(a[ind])\n        for i in range(ind + 1):\n            if k <= 0:\n                break\n            if int(a[i]) + ceil(k / (ind + 1 - i)) <= 9:\n                a[i] = int(a[i]) + ceil(k / (ind + 1 - i))\n                k = k - ceil(k / (ind + 1 - i))\n            else:\n                k = k - (9 - int(a[i]))\n                a[i] = 9\n        ans = 1\n        for i in a:\n            ans = ans * int(i)\n        print(ans)", "for _ in range(int(input())):\n    (a, n) = map(int, input().split())\n    num = a\n    l = []\n    p = 1\n    while num != 0:\n        l.append(num % 10)\n        num //= 10\n    for i in range(n):\n        l.sort()\n        if l[0] == 9:\n            continue\n        else:\n            ne = l[0] + 1\n            l.pop(0)\n            l.append(ne)\n    for i in l:\n        p *= i\n    print(p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(str(n))\n    arr = [int(arr[i]) for i in range(len(arr))]\n    sm = 0\n    for i in range(len(arr)):\n        sm += 9 - arr[i]\n    if k >= sm:\n        print(9 ** len(arr))\n        continue\n    arr.sort()\n    for i in range(len(arr)):\n        if i == len(arr) - 1:\n            m = i\n            while k > 0:\n                if k == 0:\n                    break\n                arr[m] += 1\n                k -= 1\n                m -= 1\n                if m == -1:\n                    m = i\n            break\n        if arr[i] != arr[i + 1]:\n            m = i\n            while m >= 0 and k > 0 and (arr[m] < arr[i + 1]):\n                if arr[m] + 1 > arr[i + 1]:\n                    break\n                if k == 0:\n                    break\n                arr[m] += 1\n                k -= 1\n                m -= 1\n                if m == -1:\n                    m = i\n    prod = 1\n    for i in range(len(arr)):\n        prod = prod * arr[i]\n    print(prod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = str(n)\n    b = list(a)\n    c = []\n    for i in b:\n        c.append(int(i))\n    for i in range(k):\n        c.sort()\n        if c[0] == 9:\n            pass\n        else:\n            l = c[0] + 1\n            c.pop(0)\n            c.append(l)\n    p = 1\n    for i in range(len(c)):\n        p = p * c[i]\n    print(p)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    d = [int(x) for x in list(str(n))]\n    d.sort()\n    l = {}\n    for j in range(10):\n        l[j] = 0\n    for j in d:\n        l[j] += 1\n    while k > 0:\n        for j in l:\n            if j < 9 and k > 0 and l[j]:\n                if l[j] >= k:\n                    l[j] -= k\n                    l[j + 1] += k\n                    k = 0\n                else:\n                    k -= l[j]\n                    l[j + 1] += l[j]\n                    l[j] = 0\n        k -= 1\n    ans = 1\n    for i in l:\n        ans = ans * i ** l[i]\n    print(ans)", "t = int(input())\nfor test in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    digits = [int(x) for x in list(str(n))]\n    digits.sort()\n    arr = {}\n    for i in range(10):\n        arr[i] = 0\n    for i in digits:\n        arr[i] += 1\n    while k > 0:\n        for i in arr:\n            if i < 9 and k > 0 and arr[i]:\n                if arr[i] >= k:\n                    arr[i] -= k\n                    arr[i + 1] += k\n                    k = 0\n                else:\n                    k = k - arr[i]\n                    arr[i + 1] += arr[i]\n                    arr[i] = 0\n        k -= 1\n    ans = 1\n    for i in arr:\n        ans = ans * i ** arr[i]\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = n\n    arr = []\n    mul = 1\n    while num != 0:\n        arr.append(num % 10)\n        num = num // 10\n    for i in range(k):\n        arr.sort()\n        if arr[0] == 9:\n            pass\n        else:\n            new = arr[0] + 1\n            arr.pop(0)\n            arr.append(new)\n    for i in range(len(arr)):\n        mul = mul * arr[i]\n    print(mul)", "for i in range(int(input())):\n    (n, k) = input().split(' ')\n    n = [int(i) for i in n]\n    k = int(k)\n    for i in range(k):\n        a = min(n)\n        if a == 9:\n            break\n        else:\n            b = n.index(a)\n            n[b] += 1\n    ans = 1\n    for i in n:\n        ans *= i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    s = str(n)\n    for i in range(len(s)):\n        p = int(s[i])\n        l.append(p)\n    while k > 0:\n        l.sort()\n        if l[0] != 9:\n            l[0] += 1\n        k = k - 1\n    ans = 1\n    for i in range(len(l)):\n        ans = ans * l[i]\n    print(ans)", "def ans(n, k):\n    import heapq\n    heap = []\n    while n:\n        heapq.heappush(heap, n % 10)\n        n = n // 10\n    while k and heap[0] != 9:\n        x = heapq.heappop(heap)\n        x += 1\n        k -= 1\n        heapq.heappush(heap, x)\n    ans = 1\n    for i in heap:\n        ans *= i\n    print(ans)\nn = int(input())\nfor i in range(n):\n    z = [int(i) for i in input().split()]\n    ans(z[0], z[1])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = n\n    arr = []\n    mul = 1\n    while num != 0:\n        arr.append(num % 10)\n        num = num // 10\n    for i in range(k):\n        arr.sort()\n        if arr[0] == 9:\n            pass\n        else:\n            new = arr[0] + 1\n            arr.pop(0)\n            arr.append(new)\n    for i in range(len(arr)):\n        mul = mul * arr[i]\n    print(mul)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    pos = 0\n    digits = list((int(j) for j in str(n)))\n    count = 0\n    digits.sort()\n    while count != k:\n        if min(digits) == 9:\n            break\n        m = digits.index(min(digits))\n        digits[m] += 1\n        count += 1\n    product = 1\n    for k in digits:\n        product *= k\n    print(product)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = []\n    while n > 0:\n        x.append(n % 10)\n        n //= 10\n    while k:\n        m = x.index(min(x))\n        if min(x) == 9:\n            break\n        x[m] += 1\n        k -= 1\n    c = 1\n    for i in range(len(x)):\n        c *= x[i]\n    print(c)", "import numpy\nimport heapq\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = [int(i) for i in str(n)]\n    for t in range(k):\n        heapq.heapify(num)\n        min_num = heapq.heappop(num)\n        if min_num is 9:\n            heapq.heappush(num, 9)\n            break\n        else:\n            heapq.heappush(num, min_num + 1)\n            k -= 1\n    print(numpy.prod(list(num)))", "for i in range(int(input())):\n    (n, k) = input().split()\n    k = int(k)\n    n = list((int(i) for i in n))\n    n.sort()\n    c = 1\n    for i in range(k):\n        if n[0] != 9:\n            n[0] += 1\n            n.sort()\n    for i in n:\n        c *= i\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, str(n)))\n    for i in range(k):\n        s.sort()\n        if s[0] == 9:\n            break\n        else:\n            s[0] += 1\n    ans = 1\n    for i in s:\n        ans *= i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, str(n)))\n    for i in range(k):\n        least = min(s)\n        s.sort()\n        if s[0] == 9:\n            break\n        else:\n            s[0] += 1\n    ans = 1\n    for i in s:\n        ans *= i\n    print(ans)", "for i in range(int(input())):\n    N = []\n    K = 0\n    prod = 1\n    (N, K) = map(int, input().strip().split())\n    N = str(N)\n    N = list(map(int, N))\n    if len(N) == 1 and N[0] != 9:\n        if N[0] + K >= 9:\n            prod = 9\n        else:\n            prod = N[0] + K\n        print(prod)\n    else:\n        for x in range(K):\n            N.sort()\n            if N[0] != 9:\n                N[0] = N[0] + 1\n        for j in range(len(N)):\n            prod = prod * N[j]\n        print(prod)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = []\n    while n > 0:\n        x.append(n % 10)\n        n //= 10\n    while k:\n        m = x.index(min(x))\n        if min(x) == 9:\n            break\n        x[m] += 1\n        k -= 1\n    c = 1\n    for i in range(len(x)):\n        c *= x[i]\n    print(c)", "t = int(input())\nfor i in range(t):\n    f = 1\n    (n, k) = map(str, input().split())\n    k = int(k)\n    l = list(n)\n    l = list(map(int, l))\n    for i in range(0, k):\n        l.sort()\n        if l[0] < 9:\n            l[0] = l[0] + 1\n        else:\n            pass\n    for j in l:\n        f = f * j\n    print(f)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    k = int(k)\n    ans = 1\n    list = [int(i) for i in n]\n    while k > 0:\n        list.sort()\n        if list[0] < 9:\n            list[0] += 1\n        else:\n            k = -1\n        k -= 1\n    for i in list:\n        ans *= i\n    print(ans)\n    t -= 1", "from heapq import heapify, heappop, heappush\nfor _ in range(int(input())):\n    (n, k) = map(str, input().split())\n    n = list(n)\n    k = int(k)\n    heapify(n)\n    ans = 1\n    for i in range(k):\n        e = heappop(n)\n        if e == '9':\n            heappush(n, e)\n            break\n        p = str(int(e) + 1)\n        heappush(n, p)\n    for i in range(len(n)):\n        ans *= int(n[i])\n    print(ans)", "from math import ceil\nt = int(input())\nwhile t != 0:\n    t = t - 1\n    (n, k) = input().split()\n    k = int(k)\n    a = list()\n    for i in n:\n        a.append(i)\n    a.sort()\n    if a[0] == '9' or k == 0:\n        m1 = 1\n        for i in a:\n            m1 = m1 * int(i)\n        print(m1)\n    elif len(a) == 1:\n        if int(a[0]) + k > 9:\n            print('9')\n        else:\n            print(int(a[0]) + k)\n    else:\n        ss = 0\n        ind = len(a) - 1\n        for i in range(len(a) - 1):\n            if ss + (int(a[i + 1]) - int(a[i])) * (i + 1) >= k or a[i + 1] == '9':\n                ind = i\n                break\n            else:\n                ss = ss + (int(a[i + 1]) - int(a[i])) * (i + 1)\n        for i in range(ind):\n            k = k + int(a[i]) - int(a[ind])\n            a[i] = int(a[ind])\n        for i in range(ind + 1):\n            if k <= 0:\n                break\n            if int(a[i]) + ceil(k / (ind + 1 - i)) <= 9:\n                a[i] = int(a[i]) + ceil(k / (ind + 1 - i))\n                k = k - ceil(k / (ind + 1 - i))\n            else:\n                k = k - (9 - int(a[i]))\n                a[i] = 9\n        ans = 1\n        for i in a:\n            ans = ans * int(i)\n        print(ans)", "t = int(input())\nfor test in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    digits = [int(x) for x in list(str(n))]\n    digits.sort()\n    arr = {}\n    for i in range(10):\n        arr[i] = 0\n    for i in digits:\n        arr[i] += 1\n    for i in arr:\n        if i < 9 and k > 0 and arr[i]:\n            if arr[i] >= k:\n                arr[i] -= k\n                arr[i + 1] += k\n                k = 0\n            else:\n                k = k - arr[i]\n                arr[i + 1] += arr[i]\n                arr[i] = 0\n    ans = 1\n    for i in arr:\n        ans = ans * i ** arr[i]\n    print(ans)", "from itertools import permutations as per\nfrom math import factorial as fact\nfrom difflib import SequenceMatcher\nt = int(input())\nfor _ in range(t):\n    (a, k) = input().split()\n    d = {}\n    for i in a:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in range(10):\n        if str(i) not in d.keys():\n            d[str(i)] = 0\n    i = 0\n    k = int(k)\n    while i < 9 and k != 0:\n        if d[str(i)] <= k:\n            d[str(i + 1)] += d[str(i)]\n            k -= d[str(i)]\n            d[str(i)] = 0\n        else:\n            d[str(i + 1)] += k\n            d[str(i)] -= k\n            k = 0\n        i += 1\n    ans = 1\n    for (k, v) in d.items():\n        if v > 0:\n            ans *= int(k) ** v\n    print(ans)", "import heapq\nfor _ in range(int(input())):\n    (n, k) = map(str, input().split())\n    n_str = list(n)\n    k = int(k)\n    heapq.heapify(n_str)\n    for i in range(k):\n        num = heapq.heappop(n_str)\n        if num == '9':\n            heapq.heappush(n_str, num)\n            break\n        incr = str(int(num) + 1)\n        heapq.heappush(n_str, incr)\n    ans = 1\n    for i in range(len(n_str)):\n        ans *= int(n_str[i])\n    print(ans)", "import math, os, io, heapq\nfrom sys import stdin, stdout\nfrom collections import Counter, deque, defaultdict\nfrom itertools import product\nimport bisect\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    (n, k) = getList()\n    mp = defaultdict(lambda : 0)\n    while n:\n        mp[n % 10] += 1\n        n //= 10\n    if mp[0] > k:\n        return 0\n    k -= mp[0]\n    mp[1] += mp[0]\n    for i in range(1, 9):\n        v = min(mp[i], k)\n        mp[i] -= v\n        mp[i + 1] += v\n        k -= v\n        if k == 0:\n            break\n    ans = 1\n    for i in range(1, 10):\n        if mp[i] > 0:\n            ans *= pow(i, mp[i])\n    return ans\nfor _ in range(getInt()):\n    print(solve())", "from functools import reduce\nt = int(input())\nfor test_case in range(t):\n    (n, k) = map(int, input().split())\n    digits = sorted([int(i) for i in str(n)])\n    for i in range(k):\n        if digits[0] == 9:\n            pass\n        else:\n            digits[0] += 1\n            digits.sort()\n    mul = lambda x, y: x * y\n    product = reduce(mul, digits)\n    print(product)", "for _ in range(int(input())):\n    (s, k) = input().split()\n    k = int(k)\n    arr = []\n    maxx = 1\n    for i in s:\n        arr.append(int(i))\n    arr.sort()\n    n = len(arr)\n    while k > 0:\n        if arr[0] != 9:\n            arr[0] += 1\n            k -= 1\n            arr.sort()\n        else:\n            break\n    ans = 1\n    for i in arr:\n        ans *= i\n    print(ans)", "t = int(input())\nout_l = []\nfor _ in range(t):\n    (num, k) = tuple(map(str, input().split(' ')))\n    num = list(map(int, list(num)))\n    k = int(k)\n    num.sort()\n    counter = 0\n    while counter < k:\n        index = 0\n        to_break = True\n        if num[index] != 9:\n            num[index] = num[index] + 1\n            counter = counter + 1\n            num.sort()\n            to_break = False\n        if to_break == True:\n            counter = counter + 1\n    mul = 1\n    for ele in num:\n        mul *= ele\n    out_l.append(mul)\nfor ele in out_l:\n    print(ele)", "t = int(input())\nout_l = []\nfor _ in range(t):\n    (num, k) = tuple(map(str, input().split(' ')))\n    num = list(map(int, list(num)))\n    k = int(k)\n    num.sort()\n    counter = 0\n    while counter < k:\n        for index in range(0, len(num)):\n            to_break = True\n            if num[index] != 9:\n                num[index] = num[index] + 1\n                counter = counter + 1\n                num.sort()\n                to_break = False\n                break\n        if to_break == True:\n            counter = counter + 1\n    mul = 1\n    for ele in num:\n        mul *= ele\n    out_l.append(mul)\nfor ele in out_l:\n    print(ele)", "for t in range(int(input())):\n    (n, k) = input().split()\n    n = [int(x) for x in n]\n    k = int(k)\n    while k > 0:\n        n.sort()\n        if n[0] == 9:\n            break\n        n[0] += 1\n        k -= 1\n    ans = 1\n    for x in n:\n        ans *= x\n    print(ans)", "import heapq\nfor _ in range(int(input())):\n    (n, k) = map(str, input().split())\n    n = list(n)\n    k = int(k)\n    heapq.heapify(n)\n    for i in range(k):\n        e = heapq.heappop(n)\n        if e == '9':\n            heapq.heappush(n, e)\n            break\n        p = str(int(e) + 1)\n        heapq.heappush(n, p)\n    ans = 1\n    for i in range(len(n)):\n        ans *= int(n[i])\n    print(ans)", "from sys import stdin\nimport heapq\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = []\n    for s in str(n):\n        a.append(int(s))\n    heapq.heapify(a)\n    for i in range(k):\n        x = heapq.heappop(a)\n        if x == 9:\n            heapq.heappush(a, x)\n            break\n        heapq.heappush(a, x + 1)\n    ans = 1\n    for v in a:\n        ans *= v\n    print(ans)", "def value(n):\n    res = 1\n    for i in n:\n        res *= int(i)\n    return res\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 0:\n        a = list(str(a))\n        print(value(a))\n    else:\n        a = list(str(a))\n        for i in range(b):\n            d = a.index(min(a))\n            if int(a[d]) != 9:\n                a[d] = int(a[d]) + 1\n                a[d] = str(a[d])\n            else:\n                break\n        print(value(a))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = []\n    while n > 0:\n        lis.append(n % 10)\n        n = n // 10\n    for i in range(k):\n        lis.sort()\n        if lis[0] == 9:\n            pass\n        else:\n            val = lis[0] + 1\n            lis.pop(0)\n            lis.append(val)\n    mul = 1\n    for i in lis:\n        mul *= i\n    print(mul)", "import heapq\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    num = n\n    arr = []\n    while num != 0:\n        dig = num % 10\n        num = num // 10\n        arr.append(dig)\n    leni = len(arr)\n    heapq.heapify(arr)\n    while k:\n        num = arr[0]\n        if num == 9:\n            break\n        else:\n            heapq.heappop(arr)\n            num += 1\n            k -= 1\n            heapq.heappush(arr, num)\n    ans = 1\n    for i in range(leni):\n        ans = ans * arr[i]\n    print(ans)", "T = int(input())\nfor t in range(T):\n    (n, k) = [int(i) for i in input().split()]\n    s = list(str(n))\n    n = len(s)\n    for thres in range(1, 10):\n        for j in range(n):\n            if k == 0:\n                break\n            if int(s[j]) < thres:\n                s[j] = str(int(s[j]) + 1)\n                k -= 1\n    ans = 1\n    for i in s:\n        ans *= int(i)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    n = [int(i) for i in str(n)]\n    n.sort()\n    ans = 1\n    for i in range(k):\n        if n[0] != 9:\n            n[0] = n[0] + 1\n            n.sort()\n    for i in n:\n        ans *= i\n    print(ans)", "import numpy\nfor _ in range(int(input())):\n    (n, k) = input().split()\n    n = list(map(int, list(n)))\n    k = int(k)\n    while k != 0:\n        temp = n.index(min(n))\n        if n[temp] != 9:\n            n[temp] += 1\n        k -= 1\n    print(numpy.prod(n))", "def SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            print(p)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    d = []\n    while n:\n        d.append(n % 10)\n        n //= 10\n    d.sort()\n    while k > 0 and d[0] != 9:\n        d[0] += 1\n        k -= 1\n        d.sort()\n    ans = 1\n    for i in range(len(d)):\n        ans *= d[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    le = 0\n    while n != 0:\n        r = n % 10\n        n //= 10\n        l.append(r)\n        le += 1\n    for i in range(9):\n        for j in range(le):\n            if k > 0:\n                if l[j] == i:\n                    l[j] += 1\n                    k -= 1\n            else:\n                break\n    ans = 1\n    for x in l:\n        ans *= x\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    le = 0\n    while n != 0:\n        r = n % 10\n        n //= 10\n        l.append(r)\n        le += 1\n    for i in range(9):\n        for j in range(le):\n            if k > 0:\n                if l[j] == i:\n                    l[j] += 1\n                    k -= 1\n            else:\n                break\n    ans = 1\n    for x in l:\n        ans *= x\n    print(ans)", "import heapq\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    st = str(n)\n    lis = list(map(int, st))\n    num = 1\n    lis1 = []\n    for j in lis:\n        if j == 9:\n            num *= j\n        else:\n            lis1.append(j)\n    heapq.heapify(lis1)\n    j = 0\n    while j < k:\n        if len(lis1) == 0:\n            break\n        temp = heapq.heappop(lis1)\n        j += 1\n        if temp + 1 == 9:\n            num *= 9\n        else:\n            heapq.heappush(lis1, temp + 1)\n    while len(lis1) > 0:\n        num = num * heapq.heappop(lis1)\n    print(num)", "t = int(input())\n\ndef multiplyList(myList):\n    result = 1\n    for x in myList:\n        result = result * x\n    return result\nfor i in range(0, t):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in str(n)]\n    for i in range(0, k):\n        temp = arr\n        m = min(temp)\n        if m == 9:\n            arr = temp\n            break\n        minpos = temp.index(min(temp))\n        temp[minpos] += 1\n        arr = temp\n    print(multiplyList(arr))", "def check(n, k):\n    l = []\n    val = str(n)\n    for i in val:\n        l.append(int(i))\n    j = 0\n    while j != 1:\n        if k == 0:\n            j = 1\n            break\n        l.sort()\n        mn = l[0]\n        if mn == 9:\n            j = 1\n            break\n        l.remove(l[0])\n        l.append(mn + 1)\n        k -= 1\n    data = 1\n    for i in range(len(l)):\n        data = data * l[i]\n    return data\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(check(n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in str(n)]\n    m = 0\n    c = 1\n    for j in range(k):\n        m = min(l)\n        if m == 9:\n            pass\n        else:\n            i = l.index(min(l))\n            l[i] += 1\n            m = l[i]\n    for x in l:\n        c *= x\n    print(c)", "t = int(input())\nfor i in range(t):\n    r = 1\n    (n, k) = map(int, input().split())\n    n = str(n)\n    l = []\n    for i in n:\n        l.append(int(i))\n    while k >= 1:\n        m = min(l)\n        if m != 9:\n            l.remove(m)\n            m += 1\n            l.append(m)\n        k -= 1\n    for i in l:\n        r *= i\n    print(r)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = str(n)\n    l = []\n    for i in range(0, len(a)):\n        l.append(int(a[i]))\n    while k > 0:\n        x = min(l)\n        if x != 9:\n            l.remove(x)\n            x += 1\n            l.append(x)\n        k -= 1\n    prod = 1\n    for j in l:\n        prod = j * prod\n    print(prod)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = str(n)\n    l = []\n    for i in range(0, len(a)):\n        l.append(int(a[i]))\n    while k > 0:\n        x = min(l)\n        if x != 9:\n            l.remove(x)\n            x += 1\n            l.append(x)\n        k -= 1\n    prod = 1\n    for j in l:\n        prod = j * prod\n    print(prod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = n\n    arr = []\n    mul = 1\n    while num != 0:\n        arr.append(num % 10)\n        num = num // 10\n    for i in range(k):\n        arr.sort()\n        if arr[0] == 9:\n            pass\n        else:\n            new = arr[0] + 1\n            arr.pop(0)\n            arr.append(new)\n    for i in range(len(arr)):\n        mul = mul * arr[i]\n    print(mul)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = n\n    arr = []\n    mul = 1\n    while num != 0:\n        arr.append(num % 10)\n        num = num // 10\n    for i in range(k):\n        arr.sort()\n        if arr[0] == 9:\n            pass\n        else:\n            new = arr[0] + 1\n            arr.pop(0)\n            arr.append(new)\n    for i in range(len(arr)):\n        mul = mul * arr[i]\n    print(mul)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = str(n)\n    l = []\n    for i in range(0, len(a)):\n        l.append(int(a[i]))\n    while k > 0:\n        x = min(l)\n        if x != 9:\n            l.remove(x)\n            x += 1\n            l.append(x)\n        k -= 1\n    prod = 1\n    for j in l:\n        prod = j * prod\n    print(prod)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = str(n)\n    l = []\n    for i in range(0, len(a)):\n        l.append(int(a[i]))\n    while k > 0:\n        x = min(l)\n        if x != 9:\n            l.remove(x)\n            x += 1\n            l.append(x)\n        k -= 1\n    prod = 1\n    for j in l:\n        prod = j * prod\n    print(prod)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in str(n)]\n    c = 0\n    s = k\n    for i in range(k):\n        if min(l) == 9:\n            break\n        else:\n            k = min(l)\n            l.remove(k)\n            l.append(k + 1)\n    ans = 1\n    for i in l:\n        ans *= i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(str, input().split())\n    a = list(map(int, n))\n    for i in range(int(k)):\n        j = a.index(min(a))\n        if a[j] != 9:\n            a[j] += 1\n    p = 1\n    for i in a:\n        p *= i\n    print(p)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split(' '))\n    lst = list(map(int, str(n)))\n    for j in range(k):\n        minimum = min(lst)\n        ind = lst.index(minimum)\n        if minimum != 9:\n            lst[ind] = minimum + 1\n    product = 1\n    for x in lst:\n        product = product * x\n    print(product)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    N = []\n    for l in n:\n        N.append(int(l))\n    for j in range(k):\n        m = min(N)\n        N.remove(m)\n        if m != 9:\n            m += 1\n            N.append(m)\n        else:\n            N.append(m)\n    res = 1\n    for w in N:\n        res = res * w\n    print(res)", "import functools\nfor q in range(int(input())):\n    (n, k) = input().split()\n    li = [int(x) for x in n]\n    k = int(k)\n    for i in range(k):\n        if li[li.index(min(li))] < 9:\n            li[li.index(min(li))] += 1\n    sol = functools.reduce(lambda a, b: a * b, li)\n    print(sol)", "import heapq\nfor _ in range(int(input())):\n    (n, k) = input().split()\n    k = int(k)\n    digits = []\n    for i in range(len(n)):\n        digits.append(int(n[i]))\n    heapq.heapify(digits)\n    while k != 0:\n        p = heapq.heappop(digits)\n        if p != 9:\n            heapq.heappush(digits, p + 1)\n            k = k - 1\n        else:\n            heapq.heappush(digits, 9)\n            break\n    s = 1\n    for i in digits:\n        s = s * i\n    print(s)", "for _ in range(int(input())):\n    (N, K) = input().split()\n    K = int(K)\n    N = [int(i) for i in N]\n    for i in range(1, 10):\n        for j in range(len(N)):\n            if N[j] < i:\n                if K == 0:\n                    break\n                N[j] = i\n                K -= 1\n    ans = 1\n    for i in N:\n        ans *= i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = input().split()\n    k = int(k)\n    c = [0] * 10\n    for i in n:\n        c[ord(i) - ord('0')] += 1\n    for i in range(0, 9):\n        s = min(c[i], k)\n        c[i + 1] += s\n        c[i] -= s\n        k -= s\n    ans = 1\n    for i in range(0, 10):\n        ans *= pow(i, c[i])\n    print(ans)", "def ma(n):\n    l = sorted([i for i in str(n)])\n    for i in range(len(l)):\n        if l[i] != '9':\n            l[i] = str(int(l[i]) + 1)\n            return l\n    return l\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    n = str(n)\n    while k > 0:\n        l = ma(n)\n        n = ''\n        for i in range(len(l)):\n            n += l[i]\n        k -= 1\n    ans = 1\n    for i in range(len(n)):\n        ans *= int(n[i])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    k = int(k)\n    p = int('9' * len(n))\n    s = str(p - int(n))\n    N = len(n)\n    su = 0\n    for i in s:\n        su += int(i)\n    d = []\n    for i in n:\n        d.append(int(i))\n    i = 0\n    while i < k and i < su:\n        d[d.index(min(d))] += 1\n        i += 1\n    p = 1\n    for i in d:\n        p *= i\n    print(p)", "test = int(input())\nfor i in range(test):\n    (n, k) = map(int, input().split())\n    temp = n\n    lst = []\n    while temp != 0:\n        dig = temp % 10\n        temp = temp // 10\n        lst.append(dig)\n    while k != 0:\n        mini = min(lst)\n        if mini >= 9:\n            break\n        ind = lst.index(mini)\n        lst.remove(mini)\n        lst.insert(ind, mini + 1)\n        k -= 1\n    pro = 1\n    for i in lst:\n        pro *= i\n    print(pro)", "t = int(input())\nl1 = []\nsum = 1\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    x = n\n    while x > 0:\n        d = x % 10\n        l1.append(d)\n        x = x // 10\n    for i in range(k):\n        y = min(l1)\n        if y == 9:\n            continue\n        l1.remove(y)\n        l1.append(y + 1)\n    for i in l1:\n        sum = sum * i\n    print(sum)\n    l1.clear()\n    sum = 1", "for j in range(int(input())):\n    (n, k) = map(str, input().split())\n    l = []\n    for i in range(len(n)):\n        l.append(int(n[i]))\n    for h in range(int(k)):\n        l.sort()\n        if l[0] != 9:\n            l[0] += 1\n    c = 1\n    for j in range(len(l)):\n        c *= l[j]\n    print(c)", "T = int(input())\nfor _ in range(T):\n    (N, K) = input().split()\n    K = int(K)\n    seq = []\n    ans = 1\n    for i in N:\n        seq.append(int(i))\n    for i in range(K):\n        if min(seq) != 9:\n            seq[seq.index(min(seq))] += 1\n        else:\n            break\n    for i in seq:\n        ans *= i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(str(n)))\n    for i in range(k):\n        if l[0] == '9':\n            break\n        else:\n            l[0] = chr(ord(l[0]) + 1)\n            l.sort()\n    ans = 1\n    for i in l:\n        ans *= int(i)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = []\n    num = n\n    mul = 1\n    while num > 0:\n        rem = num % 10\n        arr.append(rem)\n        num //= 10\n    for i in range(k):\n        arr.sort()\n        if arr[0] != 9:\n            arr[0] += 1\n    for i in range(0, len(arr)):\n        mul = mul * arr[i]\n    print(mul)\n    t = t - 1"]