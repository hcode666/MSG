["import math\nt = int(input())\nfor _ in range(t):\n    (n, a, b, k) = map(int, input().split())\n    na = n // a\n    nb = n // b\n    nt = int(n / (a * b // math.gcd(a, b)))\n    ans = na + nb - 2 * nt\n    if ans >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, x, y, k) = [int(x) for x in input().split()]\n    cx = int(n / x)\n    cy = int(n / y)\n    clcm = int(n / (x * y // math.gcd(x, y)))\n    if cx + cy - 2 * clcm >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = int(input())\nfor iwoi in range(t):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    com = n // lcm\n    appy = n // a - com\n    chef = n // b - com\n    if appy + chef >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = n // lcm\n    c = n // a + n // b - 2 * ld\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = n // lcm\n    c = n // a + n // b - 2 * ld\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = n // lcm\n    c = n // a + n // b - 2 * ld\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (p, a, b, g) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = p // lcm\n    total = p // a + p // b - 2 * ld\n    if total >= g:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = 0\n    c += n // a + n // b - 2 * (n // (a * b // math.gcd(a, b)))\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = 0\n    c += n // a + n // b - 2 * (n // (a * b // math.gcd(a, b)))\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nT = int(input())\nfor _ in range(0, T):\n    (n, a, b, k) = map(int, input().split())\n    q = 0\n    q += n // a\n    q += n // b\n    c = gcd(a, b)\n    l = a * b // c\n    q -= 2 * (n // l)\n    if q >= k:\n        print('Win')\n    else:\n        print('Lose')", "def g(a, b):\n    if b == 0:\n        return abs(a)\n    else:\n        return g(b, a % b)\nfor t in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    x = n // a\n    y = n // b\n    z = n // (a * b / g(a, b))\n    if int(x + y - 2 * z) >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nt = int(input())\nfor i in range(t):\n    (n, a, b, k) = map(int, input().split())\n    q = 0\n    q += n // a\n    q += n // b\n    c = gcd(a, b)\n    l = a * b // c\n    q -= 2 * (n // l)\n    if q >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    s = 0\n\n    def compute_lcm(x, y):\n        lcm = x * y // gcd(x, y)\n        return lcm\n    lc = compute_lcm(l[1], l[2])\n    s = l[0] // l[1] + l[0] // l[2] - 2 * (l[0] // lc)\n    if s >= l[3]:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    s = 0\n\n    def compute_lcm(x, y):\n        lcm = x * y // gcd(x, y)\n        return lcm\n    lc = compute_lcm(l[1], l[2])\n    s = l[0] // l[1] + l[0] // l[2] - 2 * (l[0] // lc)\n    if s >= l[3]:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nT = int(input())\nfor _ in range(0, T):\n    (n, a, b, k) = map(int, input().split())\n    q = 0\n    q += n // a\n    q += n // b\n    c = gcd(a, b)\n    l = a * b // c\n    q -= 2 * (n // l)\n    if q >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nT = int(input())\nfor _ in range(0, T):\n    (n, a, b, k) = map(int, input().split())\n    q = 0\n    q += n // a\n    q += n // b\n    c = gcd(a, b)\n    l = a * b // c\n    q -= 2 * (n // l)\n    if q >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, a, b, k) = map(int, input().split())\n    if a == b:\n        print('Lose')\n    else:\n        ans = n // a\n        ans += n // b\n        lcm = a * b / math.gcd(a, b)\n        ans -= 2 * (n // lcm)\n        if ans >= k:\n            print('Win')\n        else:\n            print('Lose')", "from math import gcd\nfor _ in range(int(input())):\n    (N, A, B, K) = map(int, input().split())\n    a = N // A\n    b = N // B\n    lcm = A * B // gcd(A, B)\n    c = N // lcm\n    solvable = a + b - 2 * c\n    print('Win' if solvable >= K else 'Lose')", "import math\nfor _ in range(int(input())):\n    (n, x, y, k) = [int(x) for x in input().split()]\n    cx = int(n / x)\n    cy = int(n / y)\n    clcm = int(n / (x * y // math.gcd(x, y)))\n    if cx + cy - 2 * clcm >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = n // lcm\n    total = n // a + n // b - 2 * ld\n    if total >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    lcm = a * b // math.gcd(a, b)\n    ld = n // lcm\n    total = n // a + n // b - 2 * ld\n    if total >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nk = input()\nfor q in range(0, int(k)):\n    (S, A, B, K) = map(int, input().split())\n    d = math.gcd(A, B)\n    e = A * B // d\n    q = S // A + S // B - S // e - S // e\n    if q >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nk = input()\nfor q in range(0, int(k)):\n    (S, A, B, K) = map(int, input().split())\n    d = math.gcd(A, B)\n    e = A * B // d\n    q = S // A + S // B - S // e - S // e\n    if q >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nk = input()\nfor q in range(0, int(k)):\n    (S, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    q = S // A + S // B - S // e - S // e\n    if q >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = input()\nfor c in range(0, int(t)):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "def hcf(a, b):\n    if b == 0:\n        return a\n    return hcf(b, a % b)\n\ndef lcm(a, b):\n    if b > a:\n        (a, b) = (b, a)\n    return a * b // hcf(a, b)\nt = int(input())\nfor _ in range(t):\n    (n, a, b, k) = map(int, input().split())\n    x = n // a\n    y = n // b\n    z = n // lcm(a, b)\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = input()\nfor c in range(0, int(t)):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = input()\nfor c in range(0, int(t)):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = input()\nfor c in range(0, int(t)):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nT = int(input())\nfor i in range(T):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nT = int(input())\nfor i in range(T):\n    (N, A, B, K) = map(int, input().split(' '))\n    d = math.gcd(A, B)\n    e = A * B // d\n    c = N // A + N // B - N // e - N // e\n    if c >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = int(input())\nfor i in range(t):\n    (n, a, b, k) = list(map(int, input().split()))\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = [int(a) for a in input().split()]\n    c = n // a\n    d = n // b\n    x = int(n / (a * b // math.gcd(a, b)))\n    if c + d - 2 * x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (x, y, z, w) = map(int, input().split())\n    che = 0\n    app = 0\n    an = x // y\n    an += x // z\n    lcm = y * z / math.gcd(y, z)\n    an -= 2 * (x // lcm)\n    if an >= w:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    chef = 0\n    appy = 0\n    ans = n // a\n    ans += n // b\n    lcm = a * b / math.gcd(a, b)\n    ans -= 2 * (n // lcm)\n    if ans >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, a, b, k) = map(int, input().split())\n    if a == b:\n        print('Lose')\n    else:\n        ans = n // a\n        ans += n // b\n        lcm = a * b / math.gcd(a, b)\n        ans -= 2 * (n // lcm)\n        if ans >= k:\n            print('Win')\n        else:\n            print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, x, y, k) = [int(x) for x in input().split()]\n    cx = int(n / x)\n    cy = int(n / y)\n    clcm = int(n / (x * y // math.gcd(x, y)))\n    if cx + cy - 2 * clcm >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a > b:\n        return gcd(b, a)\n    elif a == 0:\n        return b\n    else:\n        return gcd(b % a, a)\nt = int(input())\nwhile t:\n    (n, a, b, k) = [int(i) for i in input().split()]\n    ano = n // a\n    bno = n // b\n    cno = n // (a * b // gcd(a, b))\n    if ano + bno - 2 * cno >= k:\n        print('Win')\n    else:\n        print('Lose')\n    t -= 1", "import math\nfor i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    e = math.gcd(b, c)\n    lcm = b * c // e\n    f = a // b + a // c - a // lcm - a // lcm\n    if f >= d:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    a1 = n // a\n    b1 = n // b\n    l = a * b // math.gcd(a, b)\n    l = n // l\n    a1 = a1 - l\n    b1 = b1 - l\n    if a1 + b1 >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd as g\n\ndef l(a, b):\n    return a * b / g(a, b)\nfor _ in range(int(input())):\n    (n, a, b, k) = [int(i) for i in input().split()]\n    c = l(a, b)\n    t1 = n // a\n    t2 = n // b\n    t3 = n // c\n    m = t1 + t2 - 2 * t3\n    if m >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = math.gcd(a, b)\n    lcm = a * b // c\n    x = n // a + n // b - n // lcm - n // lcm\n    if x >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, a, b, k) = map(int, input().split())\n    t1 = n // a + n // b\n    lcm = a * b // math.gcd(a, b)\n    t2 = 2 * (n // lcm)\n    t3 = t1 - t2\n    if t3 >= k:\n        print('Win')\n    else:\n        print('Lose')", "T = int(input())\n\ndef gcd(A, B):\n    if A == 0:\n        return B\n    return gcd(B % A, A)\n\ndef lcm(A, B):\n    return A * B / gcd(A, B)\nfor i in range(T):\n    l = list(map(int, input().split()))\n    N = l[0]\n    A = l[1]\n    B = l[2]\n    K = l[3]\n    both = N // lcm(A, B)\n    div_A = N // A\n    div_B = N // B\n    if div_A + div_B - 2 * both >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    ans = n // a + n // b\n    x = a * b / math.gcd(a, b)\n    ans -= n // x * 2\n    if ans >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd as g\n\ndef l(a, b):\n    return a * b / g(a, b)\nfor _ in range(int(input())):\n    (n, a, b, k) = [int(i) for i in input().split()]\n    c = l(a, b)\n    t1 = n // a\n    t2 = n // b\n    t3 = n // c\n    m = t1 + t2 - 2 * t3\n    if m >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\n\ndef lcm(x, y):\n    return x * y / gcd(x, y)\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    c = lcm(a, b)\n    if n // a + n // b - 2 * (n // c) >= k:\n        print('Win')\n    else:\n        print('Lose')", "def boo(a, b):\n    if a == 0:\n        return b\n    else:\n        return boo(b % a, a)\nt = int(input())\nfor i in range(t):\n    (n, a, b, k) = map(int, input().split())\n    x = n // a\n    y = n // b\n    z = n // (a * b // boo(min(a, b), max(a, b)))\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(a, b):\n    if a == 0:\n        return b\n    else:\n        return cal(b % a, a)\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    (x, y) = (n // a, n // b)\n    z = n // (a * b // cal(min(a, b), max(a, b)))\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(a, b):\n    if a == 0:\n        return b\n    else:\n        return cal(b % a, a)\nt = int(input())\nfor i in range(t):\n    (n, a, b, k) = map(int, input().split())\n    x = n // a\n    y = n // b\n    z = n // (a * b // cal(min(a, b), max(a, b)))\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(p, q):\n    if p == 0:\n        return q\n    else:\n        return cal(q % p, p)\nfor i in range(int(input())):\n    (n, p, q, k) = map(int, input().split())\n    (x, y) = (n // p, n // q)\n    z = n // (p * q // cal(min(p, q), max(p, q)))\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor _ in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor q in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(x, y):\n    if x == 0:\n        return y\n    else:\n        return cal(y % x, x)\nfor i in range(int(input())):\n    (n, x, y, k) = map(int, input().split())\n    (a, b) = (n // x, n // y)\n    z = n // (x * y // cal(min(x, y), max(x, y)))\n    if a + b - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def cal(a, b):\n    if a == 0:\n        return b\n    else:\n        return cal(b % a, a)\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    (x, y) = (n // a, n // b)\n    z = n // (a * b // cal(min(a, b), max(a, b)))\n    if x + y - 2 * z >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a == 0:\n        return b\n    else:\n        return gcd(b % a, a)\nfor jj in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    (na, nb) = (n // a, n // b)\n    nc = n // (a * b // gcd(min(a, b), max(a, b)))\n    if na + nb - 2 * nc >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if b > a:\n        return gcd(b, a)\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor i in range(int(input())):\n    (n, a, b, k) = map(int, input().split(' '))\n    if n // b + n // a - 2 * (n // (a * b // gcd(a, b))) >= k:\n        print('Win')\n    else:\n        print('Lose')", "from math import gcd\nfor _ in range(int(input())):\n    (n, a, b, k) = map(int, input().split())\n    if n // a + n // b - 2 * (n // (a * b // gcd(a, b))) >= k:\n        print('Win')\n    else:\n        print('Lose')", "def get_hcf(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\n\ndef get_lcm(a, b):\n    return a * b // get_hcf(a, b)\ntest_case = int(input())\nfor _ in range(test_case):\n    (n, a, b, k) = map(int, input().split())\n    var = get_lcm(a, b)\n    new = n // a + n // b - 2 * (n // var)\n    if new >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nt = int(input())\nfor i in range(t):\n    (n, a, b, k) = map(int, input().split())\n    c = lcm(a, b)\n    (A, B, C) = (0, 0, 0)\n    count = 0\n    A = n // a\n    B = n // b\n    C = n // c\n    count = A + B - 2 * C\n    if count >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nfor _ in range(int(input())):\n    (size, A, B, target) = [int(x) for x in input().split()]\n    LCM = lcm(A, B)\n    (count_A, count_B, count_lcm) = (0, 0, 0)\n    count = 0\n    count_A = size // A\n    count_B = size // B\n    count_lcm = size // LCM\n    count = count_B + count_A - 2 * count_lcm\n    if count >= target:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nfor _ in range(int(input())):\n    (size, A, B, target) = [int(x) for x in input().split()]\n    LCM = lcm(A, B)\n    (count_A, count_B, count_lcm) = (0, 0, 0)\n    count = 0\n    count_A = size // A\n    count_B = size // B\n    count_lcm = size // LCM\n    count = count_B + count_A - 2 * count_lcm\n    if count >= target:\n        print('Win')\n    else:\n        print('Lose')", "t = int(input())\nwhile t > 0:\n    (n, a, b, k) = map(int, input().split())\n    p = 0\n    if a % b != 0 and b % a != 0:\n        p = n // a + n // b + 2 * (n // (a * b))\n    elif a % b == 0:\n        p = n // b - n // a\n    elif b % a == 0:\n        p = n // a - n // b\n    elif a == b:\n        p = 0\n    if p >= k:\n        print('Win')\n    else:\n        print('Lose')\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (n, a, b, k) = map(int, input().split())\n    p = 0\n    if a % b != 0 and b % a != 0:\n        p = n // a + n // b + 2 * (n // (a * b))\n    elif a % b == 0:\n        p = n // b - n // a\n    elif b % a == 0:\n        p = n // a - n // b\n    elif a == b:\n        p = 0\n    if p >= k:\n        print('Win')\n    else:\n        print('Lose')\n    t = t - 1", "from math import gcd\n\ndef run_script():\n    loop_size = int(input())\n    for _ in range(loop_size):\n        (n, a, b, k) = input().split(' ')\n        (n, a, b, k) = (int(n), int(a), int(b), int(k))\n        problem_count = n // a + n // b - 2 * (n // (a * b / gcd(a, b)))\n        if problem_count >= k:\n            print('Win')\n        else:\n            print('Lose')\nrun_script()", "t = int(input())\nwhile t > 0:\n    (n, a, b, k) = map(int, input().split())\n    p = 0\n    if a % b != 0 and b % a != 0:\n        p = n // a + n // b + 2 * (n // (a * b))\n    elif a % b == 0:\n        p = n // b - n // a\n    elif b % a == 0:\n        p = n // a - n // b\n    elif a == b:\n        p = 0\n    if p >= k:\n        print('Win')\n    else:\n        print('Lose')\n    t = t - 1", "for _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    a = min(l[1], l[2])\n    b = max(l[1], l[2])\n    rem = 1\n    s = l[0]\n    s -= l[0] % l[1]\n    i = l[0]\n    i -= l[0] % l[2]\n    while rem != 0:\n        rem = b % a\n        b = a\n        a = rem\n    lcm = l[1] * l[2] // b\n    m = l[0]\n    m -= l[0] % lcm\n    n1 = (s - l[1]) // l[1] + 1\n    n2 = (i - l[2]) // l[2] + 1\n    n = (m - lcm) // lcm + 1\n    k = n1 + n2 - 2 * n\n    if k >= l[3]:\n        print('Win')\n    else:\n        print('Lose')", "n = int(input())\n\ndef compute_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef compute_lcm(x, y):\n    lcm = x * y // compute_gcd(x, y)\n    return lcm\nfor i in range(n):\n    (N, A, B, K) = list(map(int, input().split()))\n    ps = 0\n    ps = N // A + N // B - 2 * (N // compute_lcm(A, B))\n    if ps >= K:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor i in range(int(input())):\n    (n, a, b, k) = list(map(int, input().split()))\n    excluded = n // lcm(a, b)\n    solved_by_appy = n // a - excluded\n    solved_by_chef = n // b - excluded\n    print('Win' if solved_by_appy + solved_by_chef >= k else 'Lose')", "import math\nn = int(input())\nfor i in range(n):\n    c = 0\n    (N, A, B, K) = list(map(int, input().split()))\n    if N // A + N // B - N // (A * B // math.gcd(A, B)) * 2 >= K:\n        print('Win')\n    else:\n        print('Lose')", "import math\nT = int(input())\nfor i in range(T):\n    (n, a, b, k) = map(int, input().split())\n    if n // a + n // b - n // (a * b // math.gcd(a, b)) * 2 >= k:\n        print('Win')\n    else:\n        print('Lose')", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    (n, a, b, k) = input().split()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    k = int(k)\n    if n // a + n // b - n // (a * b // math.gcd(a, b)) * 2 >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    if a == 0:\n        return b\n    else:\n        return gcd(a, b % a)\nt = int(input())\nfor _ in range(t):\n    (n, a, b, k) = map(int, input().split())\n    tt = gcd(a, b)\n    lcm = a * b // tt\n    tab = n // lcm\n    ta = n // a - tab\n    tb = n // b - tab\n    if ta + tb >= k:\n        print('Win')\n    else:\n        print('Lose')", "def gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor _ in range(int(input())):\n    (n, a, b, k) = list(map(int, input().split()))\n    c = n // a\n    c += n // b\n    c -= 2 * (n // (a * b // gcd(a, b)))\n    if c >= k:\n        print('Win')\n    else:\n        print('Lose')"]